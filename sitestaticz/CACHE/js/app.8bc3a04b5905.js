// Generated by CoffeeScript 1.9.3
(function() {
  var app;

  app = angular.module('app', ['ui.sortable', 'ui.bootstrap', 'ngAnimate', 'angularFileUpload', 'monospaced.elastic', 'temba.validation', 'temba.services', 'temba.controllers', 'temba.directives', 'temba.widgets']);

  app.config([
    '$httpProvider', '$sceDelegateProvider', function($httpProvider, $sceDelegateProvider) {
      $httpProvider.defaults.xsrfCookieName = 'csrftoken';
      $httpProvider.defaults.xsrfHeaderName = 'X-CSRFToken';
      return $sceDelegateProvider.resourceUrlWhitelist(['self', 'http://*.s3.amazonaws.com/**', 'https://*.s3.amazonaws.com/**', 'http://textit.ngrok.com/**', 'https://textit.ngrok.com/**', 'http://textit.ngrok.io/**', 'https://textit.ngrok.io/**']);
    }
  ]);

  app.config([
    '$compileProvider', '$interpolateProvider', function($compileProvider, $interpolateProvider) {
      $interpolateProvider.startSymbol("[[");
      return $interpolateProvider.endSymbol("]]");
    }
  ]);

  app.run(function($rootScope, Flow, utils) {
    $rootScope.oxford = function(parts, quotes) {
      var last, part, result;
      if (quotes == null) {
        quotes = false;
      }
      result = "";
      if (parts) {
        parts = utils.clone(parts);
        if (quotes) {
          for (part in parts) {
            parts[part] = '"' + parts[part] + '"';
          }
        }
        last = parts.pop();
        result = parts.join(', ');
        if (parts.length > 1) {
          result += ',';
        }
        if (parts.length > 0) {
          result += ' and ';
        }
        result += last;
      }
      return result;
    };
    return $rootScope.hasInvalidFields = function(inputs) {
      var completion, i, input, len;
      completion = new AutoComplete(Flow.completions);
      for (i = 0, len = inputs.length; i < len; i++) {
        input = inputs[i];
        completion.findInvalidFields(input);
      }
      this.invalidFields = completion.getInvalidFields();
      return this.invalidFields.length > 0;
    };
  });

  angular.module('template/modal/backdrop.html', []).run([
    '$templateCache', function($templateCache) {
      $templateCache.put('template/modal/backdrop.html', '<div class="modal-backdrop"\n' + '     ng-style="{\'z-index\': 1040 + (index && 1 || 0) + index*10}"\n' + '></div>\n' + '');
    }
  ]);

  angular.module('template/modal/window.html', []).run([
    '$templateCache', function($templateCache) {
      $templateCache.put('template/modal/window.html', '<div tabindex="-1" role="dialog" class="modal" ng-style="{\'z-index\': 1050 + index*10, display: \'block\'}" ng-click="close($event)">\n' + '    <div class="modal-dialog" ng-class="{\'modal-sm\': size == \'sm\', \'modal-lg\': size == \'lg\'}"><div class="modal-content" ng-transclude></div></div>\n' + '</div>');
    }
  ]);

}).call(this);
