// Generated by CoffeeScript 1.9.3
(function() {
  var getStartRequest;

  getStartRequest = function() {
    var connection, scope;
    scope = $("#ctlr").data('$scope');
    if (window.ivr) {
      connection = {
        channel: {
          uuid: "440099cf-200c-4d45-a8e7-4a564f4a0e8b",
          name: "Test Channel"
        },
        urn: "tel:+12065551212"
      };
    } else {
      connection = null;
    }
    return {
      trigger: {
        type: "manual",
        contact: {
          uuid: uuid(),
          name: window.contactName,
          urns: ["tel:+12065551212"],
          created_on: new Date()
        },
        flow: {
          uuid: scope.flow.metadata.uuid,
          name: scope.flow.metadata.name
        },
        connection: connection,
        triggered_on: new Date()
      }
    };
  };

  window.simStart = function() {
    var request;
    window.session = null;
    window.resetForm();
    request = getStartRequest();
    return $.post(getSimulateURL(), JSON.stringify(request)).done(function(response) {
      var scope;
      window.session = response.session;
      $(".simulator-body").html("");
      scope = $("#ctlr").data('$scope');
      return window.updateSimResults(response.session, response.events);
    });
  };

  window.sendSimUpdate = function(postData) {
    var msg, request;
    msg = {
      text: postData.new_message || "",
      attachments: [],
      uuid: uuid(),
      urn: "tel:+12065551212",
      created_on: new Date()
    };
    if (postData.new_photo) {
      msg.attachments.push("image/jpg:" + window.staticURL + "images/simulator/capture.jpg");
    } else if (postData.new_audio) {
      msg.attachments.push("audio/m4a:" + window.staticURL + "images/simulator/capture.m4a");
    } else if (postData.new_video) {
      msg.attachments.push("video/mp4:" + window.staticURL + "images/simulator/capture.mp4");
    } else if (postData.new_gps) {
      msg.attachments.push("geo:47.6089533,-122.34177");
    }
    request = {
      'session': window.session,
      'resume': {
        type: "msg",
        msg: msg,
        resumed_on: new Date(),
        contact: window.session.contact
      }
    };
    $.post(getSimulateURL(), JSON.stringify(request)).done(function(response) {
      window.session = response.session;
      window.updateSimResults(response.session, response.events);
      return window.resetForm();
    });
    return msg;
  };

  window.showModal = function(title, body) {
    var modal;
    modal = new ConfirmationModal(title, body);
    modal.show();
    return modal;
  };

  window.trigger = null;

  window.updateSimResults = function(session, events) {
    var activity, event, i, j, k, key, lastExit, len, len1, len2, ref, ref1, run, segment, visited;
    if (window.trigger === null || window.trigger.triggered_on !== session.trigger.triggered_on) {
      if (window.trigger !== null && !window.trigger.exited) {
        window.addSimMessage("log", "Exited the flow \"" + window.trigger.flow.name + "\"");
      }
      window.trigger = session.trigger;
      window.trigger.exited = false;
      window.addSimMessage("log", "Entered the flow \"" + session.trigger.flow.name + "\"");
    }
    if (events) {
      for (i = 0, len = events.length; i < len; i++) {
        event = events[i];
        window.renderSimEvent(event);
      }
    }
    $("#simulator textarea").val("");
    $(".btn.quick-reply").unbind('click').on("click", function(event) {
      var payload;
      payload = event.target.innerText;
      window.appendMessage(payload);
      return window.sendSimMessage(payload);
    });
    if (session) {
      if (session.status === 'completed') {
        if (!window.trigger.exited) {
          window.addSimMessage("log", "Exited the flow \"" + window.trigger.flow.name + "\"");
          window.trigger.exited = true;
        }
        window.handleSimWait(null);
      } else if (session.status === 'waiting') {
        window.handleSimWait(session.wait);
      }
      visited = {};
      lastExit = null;
      ref = session.runs;
      for (j = 0, len1 = ref.length; j < len1; j++) {
        run = ref[j];
        ref1 = run.path;
        for (k = 0, len2 = ref1.length; k < len2; k++) {
          segment = ref1[k];
          if (lastExit) {
            key = lastExit + ':' + segment.node_uuid;
            if (!(key in visited)) {
              visited[key] = 0;
            }
            visited[key] = visited[key] + 1;
          }
          lastExit = segment.exit_uuid;
          activity = {};
          activity[segment.node_uuid] = 1;
        }
      }
      return updateActivity({
        'activity': activity,
        'visited': visited
      });
    }
  };

  window.renderSimEvent = function(event) {
    var address, delim, group, i, j, k, l, label, len, len1, len2, len3, len4, m, msg, ref, ref1, ref2, ref3, ref4, results, slugged, text, urn, webhookEvent;
    switch (event.type) {
      case "broadcast_created":
        return window.addSimMessage("MT", "Broadcast sent with text \"" + event.translations[event.base_language].text + "\"");
      case "contact_field_changed":
        text = '';
        if (event.value) {
          text = event.value.text;
        }
        return window.addSimMessage("log", "Updated " + event.field.name + " to \"" + text + "\"");
      case "contact_groups_changed":
        if (event.groups_added) {
          ref = event.groups_added;
          for (i = 0, len = ref.length; i < len; i++) {
            group = ref[i];
            window.addSimMessage("log", "Added to group \"" + group.name + "\"");
          }
        }
        if (event.groups_removed) {
          ref1 = event.groups_removed;
          results = [];
          for (j = 0, len1 = ref1.length; j < len1; j++) {
            group = ref1[j];
            results.push(window.addSimMessage("log", "Removed from group \"" + group.name + "\""));
          }
          return results;
        }
        break;
      case "contact_language_changed":
        return window.addSimMessage("log", "Updated language to \"" + event.language + "\"");
      case "contact_name_changed":
        return window.addSimMessage("log", "Updated name to \"" + event.name + "\"");
      case "contact_timezone_changed":
        return window.addSimMessage("log", "Updated timezone to \"" + event.timezone + "\"");
      case "contact_urns_changed":
        msg = "Updated contact URNs to:\n";
        ref2 = event.urns;
        for (k = 0, len2 = ref2.length; k < len2; k++) {
          urn = ref2[k];
          msg += urn + "\n";
        }
        return window.addSimMessage("log", msg);
      case "email_created":
        msg = "Email sent to ";
        delim = "";
        ref3 = event.addresses;
        for (l = 0, len3 = ref3.length; l < len3; l++) {
          address = ref3[l];
          msg += delim + address;
          delim = ", ";
        }
        msg += "with subject \"" + event.subject + "\"";
        return window.addSimMessage("log", msg);
      case "error":
        window.addSimMessage("error", event.text);
        if (event.fatal) {
          return $('#simulator').addClass('disabled');
        }
        break;
      case "flow_entered":
      case "flow_triggered":
        return window.addSimMessage("log", "Entering the flow \"" + event.flow.name + "\"");
      case "input_labels_added":
        msg = "Message labeled with ";
        delim = "";
        ref4 = event.labels;
        for (m = 0, len4 = ref4.length; m < len4; m++) {
          label = ref4[m];
          msg += delim + "\"" + label.name + "\"";
          delim = ", ";
        }
        return window.addSimMessage("log", msg);
      case "ivr_created":
      case "msg_created":
        $(".btn.quick-reply").hide();
        window.addSimMessage("MT", event.msg.text, event.msg.attachments);
        if (event.msg.quick_replies != null) {
          return window.setSimQuickReplies(event.msg.quick_replies);
        }
        break;
      case "run_result_changed":
        slugged = event.name.toLowerCase().replace(/([^a-z0-9]+)/g, '_');
        return window.addSimMessage("log", "Saving @flow." + slugged + " as \"" + event.value + "\"");
      case "session_triggered":
        return window.addSimMessage("log", "Started other contacts in " + event.flow.name);
      case "webhook_called":
        webhookEvent = event;
        return window.addSimMessage("log", "Called " + event.url + " which returned " + event.status + " in " + webhookEvent.elapsed_ms + "ms", null, function() {
          var body, modal;
          body = "<pre>" + webhookEvent.request + "</pre>";
          body += "<pre>" + webhookEvent.response + "</pre>";
          modal = showModal("Webhook Result", body);
          modal.setListeners({}, true);
          return modal.hideSecondaryButton();
        });
    }
  };

  window.addSimMessage = function(type, text, attachments, onClick) {
    var attachment, classes, ele, media_type, media_viewer, url;
    if (attachments == null) {
      attachments = null;
    }
    if (onClick == null) {
      onClick = null;
    }
    classes = ["imsg"];
    media_viewer = null;
    if (type === "log" || type === "error") {
      classes = ["ilog"];
    }
    if (type === "MO") {
      classes.push("to");
    } else if (type === "MT") {
      classes.push("from");
    } else if (type === "error") {
      classes.push("ierror");
    }
    if (onClick) {
      classes.push("link");
    }
    if (attachments && attachments.length > 0) {
      attachment = attachments[0];
      media_type = attachment.split(':')[0];
      url = attachment.split(":").slice(1).join(":");
      classes.push("media-msg");
      if (media_type === 'geo') {
        media_viewer = '<div class="media-file">' + url + '</div>';
      } else {
        if (media_type.indexOf('/') > 0) {
          media_type = media_type.split('/')[0];
        }
        if (!url.startsWith("http") && !url.startsWith("/sitestatic/")) {
          url = window.mediaURL + url;
        }
        if (media_type === 'image') {
          media_viewer = '<div class="media-file"><img src="' + url + '"></div>';
        } else if (media_type === 'video') {
          media_viewer = '<div class="media-file"><video controls src="' + url + '" style="width: 150px"></div>';
        } else if (media_type === 'audio') {
          media_viewer = '<div class="media-file"><audio controls src="' + url + '" style="width: 150px"></div>';
        }
      }
    }
    ele = '<div class="' + classes.join(" ") + '">';
    ele += text;
    if (media_viewer) {
      ele += media_viewer;
    }
    ele += '</div>';
    ele = $(ele);
    if (onClick) {
      ele.bind("click", onClick);
    }
    ele = $(".simulator-body").append(ele);
    return $(".simulator-body").scrollTop($(".simulator-body")[0].scrollHeight);
  };

  window.setSimQuickReplies = function(replies) {
    var i, len, quick_replies, reply;
    quick_replies = "<div class=\"quick-replies\">";
    for (i = 0, len = replies.length; i < len; i++) {
      reply = replies[i];
      quick_replies += "<button class=\"btn quick-reply\" data-payload=\"" + reply + "\"> " + reply + "</button>";
    }
    quick_replies += "</div>";
    return $(".simulator-body").append(quick_replies);
  };

  window.handleSimWait = function(wait) {
    if (wait === null) {
      $('.simulator-footer .media-button').hide();
      $('.simulator-footer .imessage').show();
      return;
    }
    window.currentSimWait = wait;
    window.showSimKeypad(false);
    $('.simulator-footer .media-button').hide();
    if (wait.hint != null) {
      switch (wait.hint.type) {
        case "image":
          $('.simulator-footer .imessage').hide();
          return $('.simulator-footer .photo-button').show();
        case "video":
          $('.simulator-footer .imessage').hide();
          return $('.simulator-footer .video-button').show();
        case "audio":
          $('.simulator-footer .imessage').hide();
          return $('.simulator-footer .audio-button').show();
        case "location":
          $('.simulator-footer .imessage').hide();
          return $('.simulator-footer .gps-button').show();
        case "digits":
          $('.simulator-footer .imessage').hide();
          return window.showSimKeypad(true);
      }
    } else {
      return $('.simulator-footer .imessage').show();
    }
  };

  window.showSimKeypad = function(show) {
    var keypadHeight, normalBodyHeight, normalFooterHeight;
    normalBodyHeight = 360;
    normalFooterHeight = 35;
    keypadHeight = 145;
    if (show) {
      $('.simulator-body').height(normalBodyHeight - keypadHeight);
      $('.simulator-footer').height(normalFooterHeight + keypadHeight);
      return $('.simulator-footer .keypad').show();
    } else {
      $('.simulator-body').height(normalBodyHeight);
      $('.simulator-footer').height(normalFooterHeight);
      return $('.simulator-footer .keypad').hide();
    }
  };

  $('#simulator .keypad .btn').on('click', function() {
    var keypadDisplay, submit, wait;
    keypadDisplay = $('.simulator-footer .keypad .display');
    keypadDisplay.text(keypadDisplay.text() + $(this).text());
    if (window.currentSimWait != null) {
      wait = window.currentSimWait;
      submit = false;
      if ((wait.hint.count != null) && keypadDisplay.text().length >= wait.hint.count) {
        submit = true;
      } else if (keypadDisplay.text().endsWith("#")) {
        submit = true;
      }
      if (submit) {
        window.showSimKeypad(false);
        window.appendMessage(keypadDisplay.text());
        window.sendSimMessage(keypadDisplay.text());
        return keypadDisplay.text("");
      }
    }
  });

}).call(this);
