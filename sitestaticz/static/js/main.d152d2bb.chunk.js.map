{"version":3,"sources":["components/simulator/Simulator.module.scss","components/form/textinput/UnicodeList.module.scss","components/flow/actions/addurn/AddURNForm.module.scss","components/form/multichoice/MultiChoice.module.scss","components/flow/actions/saymsg/SayMsg.module.scss","components/flow/actions/transferairtime/TransferAirtime.module.scss","components/form/optionaltext/OptionalTextInput.module.scss","components/form/ValidationFailures.module.scss","components/flow/routers/caselist/CaseList.module.scss","components/flow/routers/field/FieldRouterForm.module.scss","components/canvas/CanvasDraggable.module.scss","components/simulator/LogEvent.module.scss","components/dialog/Dialog.module.scss","static/images/map.jpg","components/nodeeditor/TypeList.module.scss","components/flow/actions/changegroups/removegroups/RemoveGroupsForm.module.scss","components/flow/actions/updatecontact/UpdateContactForm.module.scss","components/flow/routers/airtime/AirtimeRouterForm.module.scss","components/form/textinput/TextInputElement.module.scss","components/flow/routers/digits/DigitsRouterForm.module.scss","components/flow/routers/resthook/ResthookRouterForm.module.scss","components/flow/routers/wait/WaitRouterForm.module.scss","components/loading/Loading.module.scss","components/flow/Flow.module.scss","components/flow/exit/Exit.module.scss","global.module.scss","components/sticky/Sticky.module.scss","components/flow/node/Node.module.scss","components/flow/routers/webhook/WebhookRouterForm.module.scss","components/revisions/RevisionExplorer.module.scss","components/form/FormElement.module.scss","components/flow/actions/action/Action.module.scss","components/flow/routers/case/CaseElement.module.scss","components/flow/actions/sendmsg/SendMsgForm.module.scss","components/poptab/PopTab.module.scss","components/shared.module.scss","components/flow/routers/result/ResultRouterForm.module.scss","flowTypes.ts","services/Localization.ts","components/button/Button.tsx","utils/index.tsx","components/dialog/Dialog.tsx","store/constants.ts","components/fixy/Fixy.tsx","store/flowContext.ts","config/interfaces.ts","components/flow/actions/helpers.tsx","components/flow/props.ts","config/ConfigProvider.tsx","components/flow/actions/addlabels/AddLabels.tsx","components/form/assetselector/helpers.ts","components/form/FormElement.tsx","store/currencies.ts","external/index.ts","utils/completion.ts","utils/reactselect.ts","components/form/assetselector/AssetSelector.tsx","components/form/assetselector/widgets.tsx","config/helpers.ts","components/nodeeditor/TypeList.tsx","store/validators.ts","store/nodeEditor.ts","components/flow/actions/addlabels/helpers.ts","components/flow/actions/addlabels/AddLabelsForm.tsx","components/flow/actions/addurn/helpers.ts","components/form/textinput/constants.ts","components/flow/actions/addurn/AddURN.tsx","components/form/select/SelectElement.tsx","components/form/textinput/UnicodeList.tsx","components/form/textinput/CharCount.tsx","components/form/textinput/TextInputElement.tsx","components/form/textinput/ExcellentParser.ts","components/form/textinput/helpers.ts","components/flow/actions/addurn/AddURNForm.tsx","components/flow/actions/callresthook/CallResthook.tsx","components/flow/actions/callwebhook/CallWebhook.tsx","components/flow/actions/changegroups/helpers.ts","components/flow/actions/changegroups/addgroups/helpers.ts","components/flow/actions/changegroups/addgroups/AddGroupsForm.tsx","components/flow/actions/changegroups/ChangeGroups.tsx","components/form/checkbox/CheckboxElement.tsx","components/flow/actions/changegroups/removegroups/helpers.ts","components/flow/actions/changegroups/removegroups/RemoveGroupsForm.tsx","components/flow/helpers.ts","components/pill/Pill.tsx","components/form/multichoice/MultiChoice.tsx","components/uploadbutton/UploadButton.tsx","components/flow/actions/localization/helpers.ts","components/flow/actions/localization/MsgLocalizationForm.tsx","components/flow/actions/missing/Missing.tsx","components/flow/actions/playaudio/PlayAudio.tsx","components/flow/actions/playaudio/helpers.ts","components/flow/actions/playaudio/PlayAudioForm.tsx","components/mediaplayer/MediaPlayer.tsx","components/flow/actions/saymsg/SayMsg.tsx","components/flow/actions/saymsg/helpers.ts","components/flow/actions/saymsg/SayMsgForm.tsx","components/flow/actions/sendbroadcast/SendBroadcast.tsx","components/flow/actions/sendbroadcast/helpers.ts","components/flow/actions/sendbroadcast/SendBroadcastForm.tsx","components/flow/actions/sendemail/SendEmail.tsx","components/form/select/tags/TaggingElement.tsx","components/flow/actions/sendemail/helpers.ts","components/flow/actions/sendemail/SendEmailForm.tsx","components/flow/actions/sendmsg/SendMsg.tsx","components/flow/actions/sendmsg/helpers.ts","components/flow/actions/sendmsg/SendMsgForm.tsx","components/flow/actions/setrunresult/SetRunResult.tsx","components/flow/actions/setrunresult/helpers.ts","components/flow/actions/setrunresult/SetRunResultForm.tsx","components/flow/actions/startflow/StartFlow.tsx","components/flow/actions/startsession/StartSession.tsx","components/flow/actions/startsession/helpers.ts","components/flow/actions/startsession/StartSessionForm.tsx","components/flow/routers/constants.ts","components/flow/actions/transferairtime/TransferAirtime.tsx","components/flow/actions/updatecontact/UpdateContact.tsx","components/helpers.ts","components/flow/routers/helpers.ts","components/flow/node/helpers.ts","store/mutators.ts","components/flow/actions/updatecontact/UpdateContactForm.tsx","components/flow/routers/airtime/currency/CurrencyElement.tsx","components/form/optionaltext/OptionalTextInput.tsx","components/flow/routers/widgets.tsx","components/form/ValidationFailures.tsx","components/flow/routers/airtime/helpers.ts","components/flow/routers/airtime/AirtimeRouterForm.tsx","config/operatorConfigs.ts","components/flow/routers/case/helpers.ts","components/flow/routers/case/CaseElement.tsx","components/flow/routers/caselist/helpers.ts","components/flow/routers/caselist/CaseList.tsx","components/flow/routers/expression/ExpressionRouterForm.tsx","components/flow/routers/digits/helpers.ts","components/flow/routers/digits/DigitsRouterForm.tsx","components/nodeeditor/constants.ts","components/flow/routers/expression/helpers.ts","components/flow/routers/field/FieldRouterForm.tsx","components/flow/routers/field/helpers.ts","components/flow/routers/groups/helpers.ts","components/flow/routers/localization/helpers.ts","components/flow/routers/groups/GroupsRouterForm.tsx","components/flow/routers/localization/RouterLocalizationForm.tsx","components/flow/routers/menu/helpers.ts","components/flow/routers/menu/MenuRouterForm.tsx","components/flow/routers/random/helpers.ts","components/flow/routers/random/RandomRouterForm.tsx","components/flow/routers/response/helpers.ts","components/flow/routers/response/ResponseRouterForm.tsx","components/form/timeout/TimeoutControl.tsx","components/flow/routers/resthook/helpers.ts","components/flow/routers/resthook/ResthookRouterForm.tsx","components/flow/routers/result/helpers.ts","components/flow/routers/result/ResultRouterForm.tsx","components/flow/routers/subflow/helpers.ts","components/flow/routers/subflow/SubflowRouterForm.tsx","components/flow/routers/wait/helpers.ts","components/flow/routers/webhook/helpers.ts","components/flow/routers/wait/WaitRouterForm.tsx","components/flow/routers/webhook/header/HeaderElement.tsx","components/flow/routers/webhook/WebhookRouterForm.tsx","config/typeConfigs.ts","components/flow/actions/updatecontact/helpers.ts","store/editor.ts","store/thunks.ts","store/helpers.ts","components/canvas/CanvasDraggable.tsx","components/canvas/helpers.ts","components/canvas/Canvas.tsx","components/counter/Counter.tsx","components/titlebar/TitleBar.tsx","components/flow/actions/action/Action.tsx","components/draghelper/DragHelper.tsx","components/flow/exit/helpers.ts","components/loading/Loading.tsx","components/flow/exit/Exit.tsx","components/flow/node/Node.tsx","components/simulator/LogEvent.tsx","components/modal/Modal.tsx","components/nodeeditor/NodeEditor.tsx","components/simulator/helpers.ts","components/simulator/Simulator.tsx","components/sticky/Sticky.tsx","services/Plumber.ts","utils/debug.ts","components/flow/Flow.tsx","components/languageselector/LanguageSelector.tsx","components/poptab/PopTab.tsx","components/revisions/RevisionExplorer.tsx","config/index.ts","store/rootReducer.ts","store/state.ts","store/createStore.ts","components/index.tsx","serviceWorker.js","index.js","components/form/textinput/CharCount.module.scss","components/mediaplayer/MediaPlayer.module.scss","components/flow/routers/localization/RouterLocalizationForm.module.scss","components/titlebar/TitleBar.module.scss","components/draghelper/DragHelper.module.scss","components/index.module.scss","components/form/checkbox/CheckboxElement.module.scss","components/flow/actions/sendmsg/SendMsg.module.scss","components/flow/routers/airtime/currency/CurrencyElement.module.scss","components/button/Button.module.scss","components/form/assetselector/AssetSelector.module.scss","components/pill/Pill.module.scss","components/flow/actions/sendbroadcast/SendBroadcast.module.scss","components/flow/routers/menu/MenuRouterForm.module.scss","components/flow/routers/random/RandomRouterForm.module.scss","components/form/timeout/TimeoutControl.module.scss","components/languageselector/LanguageSelector.module.scss","variables.module.scss","components/flow/actions/sendemail/SendEmailForm.module.scss","components/flow/actions/setrunresult/SetRunResultForm.module.scss","components/flow/actions/startsession/StartSession.module.scss","components/canvas/Canvas.module.scss","components/counter/Counter.module.scss"],"names":["module","exports","grid_size","node_spacing","node_padding","background-size","sim_container","simulator","sim_hidden","screen","header","close","time","battery","wifi","footer","reset","inactive","active","messages","controls","show_attachments_button","attachment_buttons","visible","drawer","drawer_visible","forced","drawer_header","map_thumb","audio_picker","audio_icon","audio_message","keypad","keypad_entry","keys","row","key","drawer_items","drawer_item","simulator_tab","tab_hidden","simulator_tab_icon","simulator_tab_text","detail_webhook_called","quick_replies","quick_reply","unicode_char","unicode_list","scheme_selection","path","chosen","item","text","recording","code","amount","optional_text_input","toggle_link","errors","error","case_list","kase","lead_in","field_select","draggable","selected","evt","fadein","msg_text","ivr_msg","send_msg","msg_received","image_attachment","info","email","webhook","video_attachment","audio_attachment","media_player","audio_text","email_details","to","subject","body","webhook_details","response","event_viewer","has_detail","clickable","dialog","header_overlay","header_icon","title","barber","iconed","title_container","content","gutter","buttons","left_buttons","right_buttons","tabs","tab","tab_icon","__webpack_require__","p","type_list","checkbox","value","result_name","option_list","option_summary","option_signature","option","first_option","fn_marker","function_help","completion_container","options_wrapper","fn_container","option_name","option_examples","fn_signature","wrapper","help","hidden","textinput","loading","pulse","empty_flow","exit","translating","unnamed_exit","endpoint","missing_localization","name","activity","count","confirm_delete","confirm_x","recent_messages","no_recents","message","sent","yellow","color_option","sticky","blue","purple","gray","green","color_chooser_container","color_chooser","sticky_container","removal","title_wrapper","remove_button","confirmation","body_wrapper","node_container","uuid","ghost","nondragged","node","save_as","save_result","cropped","exit_table","exits","add","drag_group","flow_start","flow_start_message","link","method","url","instructions","headers_title","remove_ico","example","header_name","header_value","body_form","req_body","simulating","mask","explorer_wrapper","explorer","revisions","revision","button","current","created_on","ele","border","error_list","arrow_up","send_msg_error","label","invalid","help_text","action","has_router","add_contact_urn","add_input_labels","set_contact_field","set_contact_name","call_webhook","call_resthook","set_contact_language","set_contact_channel","add_contact_groups","remove_contact_groups","play_audio","say_msg","set_run_result","send_email","send_broadcast","transfer_airtime","missing","enter_flow","start_session","not_localizable","overlay","translate_from","translate_to","localized","group","divider","form_group","choice","single_operand","multi_operand","categorize_as","category","remove_icon","dnd_icon","relative_date","empty","quick_reply_summary","type_choice","url_attachment","upload","remove_upload","remove","existing_quick_replies","existing_quick_reply","add_quick_replies","template_text","variable","pop_wrapper","popped","tab_wrapper","icon","header_label","random","wait_for_audio","wait_for_image","wait_for_video","wait_for_location","wait_for_menu","wait_for_digits","wait_for_response","msg","subflow","split_by_random","split_by_expression","split_by_groups","split_by_contact_field","split_by_run_result","breaks","node_asset","node_group","node_label","advanced_title","alert","lead-in-sub","result_select","result-select-delimited","should_delimit","field_number","delimiter","RouterTypes","WaitTypes","HintTypes","ContactProperties","ValueType","StartFlowArgs","StartFlowExitNames","WebhookExitNames","TransferAirtimeExitNames","ButtonTypes","LocalizedObject","object","_ref","id","Object","classCallCheck","this","localizedKeys","localizedObject","iso","language","createClass","assign","Array","isArray","length","Localization","translations","values","forEach","addTranslation","SNAKED_CHARS","GRID_SIZE","parseInt","variables","NODE_SPACING","NODE_PADDING","snapToGrid","left","top","leftAdjust","topAdjust","Math","max","snapPositionToGrid","position","right","bottom","snakify","toLowerCase","trim","replace","titleCase","str","s","charAt","toUpperCase","substr","getSelectClass","hasErrorType","exps","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","exp","match","err","return","createClickHandler","onClick","shouldCancelClick","arguments","onMouseDown","event","onMouseUp","getLocalization","obj","localization","translate","emphasize","react","className","renderIf","predicate","then","otherwise","isRealValue","timeStart","process","set","val","$set","merge","$merge","unset","$unset","push","arr","$push","splice","$splice","createUUID","generateUUID","range","start","end","from","v","k","pluralize","noun","suffix","concat","HeaderStyle","Button","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","bindCallbacks","assertThisInitialized","include","setState","_this$props","onRef","type","disabled","leftSpacing","topSpacing","iconName","ref","style","marginLeft","marginTop","handleMouseDown","handleMouseUp","styles","btn","paddingRight","React","Constants","Dialog","tabFocus","primaryButton","activeTab","index","_this2","window","setTimeout","foundTab","hasErrors","shiftKey","preventDefault","stopPropagation","target","blur","click","focus","console","log","document","addEventListener","handleKey","capture","clearTimeout","removeEventListener","_this3","rightButtons","primary","secondary","tertiary","Button_Button","handlePrimaryButton","leftButtons","_this4","headerClasses","headerClass","shared","headerIcon","headerStyle","BARBER","activeClasses","_this$getButtons","getButtons","join","map","checked","subtitle","noPadding","children","Fixy","_React$PureComponent","fixed","inherits","scrollY","handleScroll","getBoundingClientRect","AssetType","FlowTypes","Types","Operators","REMOVE_VALUE_ASSET","Remove","DEFAULT_LANGUAGE","Language","initialState","definition","dependencies","baseLanguage","contactFields","nodes","assetStore","updateDefinition","UPDATE_DEFINITION","payload","updateNodes","UPDATE_NODES","updateAssets","assets","UPDATE_ASSET_MAP","combineReducers","UPDATE_DEPENDENCIES","UPDATE_BASE_LANGUAGE","UPDATE_CONTACT_FIELDS","require","getActionUUID","nodeSettings","currentType","originalAction","getRecipients","groups","Group","contacts","contact","Contact","legacy_vars","expression","Expression","renderAssetList","endpoints","reduce","elements","asset","idx","renderAsset","Label","Flow","e","href","editor","rel","getAllErrors","entry","validationFailures","persistantFailures","getExpressions","filter","getRecipientsByAsset","NAME_PROPERTY","Name","ContactProperty","CHANNEL_PROPERTY","Channel","LANGUAGE_PROPERTY","HIDDEN","NONE","VOICE","SURVEY","TEXT_TYPES","MESSAGE","ONLINE","fakePropType","isRequired","SINGLE_CHILD_ERROR","VALID_CHILD_ERROR","ConfigProvider","Error","config","only","childContextTypes","assetService","AddLabelsComp","context","labels","contextTypes","sortByName","a","b","localeCompare","cx","classNames","bind","FormElement","showLabel","helpText","getMergedErrors","hideError","failure","_cx","defineProperty","sendMsgError","_cx2","getName","getHelpText","errorsToDisplay","getErrors","__className","currencies","ARS","Currency","AUD","BIF","BRL","CAD","CDF","CLP","COP","DJF","DOP","DZD","EUR","GBP","GHS","GNF","KES","LBP","LKR","LRD","MWK","MXN","NAD","NPR","NZD","PHP","PKR","RUB","RWF","SDG","SGD","SLL","SOS","SRD","SVC","TND","TRY","TZS","UGX","USD","UYU","UZS","VEF","XCD","YER","ZAR","ZMW","ZWL","axios","defaults","headers","post","responseType","TopLevelVariables","getCookie","cookie","split","indexOf","fetchAsset","Promise","resolve","reject","get","data","results","result","resultToAsset","find","catch","getAssetPage","order","getAssets","asyncToGenerator","regenerator_default","mark","_callee","pageUrl","assetPage","wrap","_context","prev","abrupt","stop","_x","_x2","_x3","apply","idKey","isMatch","input","shouldExclude","includes","searchAssetMap","query","additionalOptions","search","matches","createAssetStore","channels","getURL","items","languages","flows","fields","Field","Revision","Result","recipients","URN","resthooks","Resthook","templates","Template","prefetched","fetches","storeId","store","assetListToMap","all","getFlowDefinition","_callee2","revisionToLoad","_context2","endsWith","startsWith","location","protocol","hostname","port","getBaseURL","getCompletionName","signature","getFlowOptions","accessor","prefix","run","summary","getContactOptions","descriptor","RUN_OPTIONS","toConsumableArray","CHILD_OPTIONS","child","PARENT_OPTIONS","parent","COMPLETION_VARIABLES","filterOptions","trigger","urns","options","includeFunctions","rest","COMPLETIONS_WITH_FUNCTIONS","fetchFunctions","functions","getCompletionOptions","autocomplete","getContactFieldOptions","getResultsOptions","large","placeholder","objectSpread","color","singleValue","multiValue","caretColor","marginBottom","boxShadow","control","borderColor","transition","&:hover","messageStyle","borderBottom","borderBottomRightRadius","borderBottomLeftRadius","small","minHeight","maxHeight","fontSize","menuList","indicatorsContainer","height","valueContainer","margin","tagging","lineHeight","backgroundColor","AssetOption","isDisabled","react_default","createElement","innerRef","innerProps","react_select_esm","Option","Scheme","translation","status","getIconForAssetType","AssetSelector","lastCreation","defaultOptions","completionOptions","completion","menuOpen","isLoading","onChange","callback","localMatches","onFilter","sort","sortFunction","encodeURIComponent","remoteAssets","remoteMatches","removalAsset","valueClearable","seen","hasOwnProperty","uniqueBy","existing","createAssetFromInput","createPrefix","inputValue","now","Date","getTime","csrf","X-CSRFToken","postNewAsset","onAssetCreated","baseControl","erroredControl","commonAttributes","selection","components","getStyle","handleChanged","onMenuOpen","handleMenuOpen","onMenuClose","handleMenuClose","onBlur","handleClearMessage","menuShouldBlockScroll","isMulti","multi","isClearable","formClearable","isSearchable","searchable","getOptionValue","getOptionLabel","article","newLanguage","FormElement_FormElement","Creatable_default","toLocaleLowerCase","isValidNewOption","handleCheckValid","formatCreateLabel","handleCreatePrompt","getNewOptionData","handleGetNewOptionData","onCreateOption","handleCreateOption","cacheOptions","loadOptions","handleLoadOptions","noOptionsMessage","nextProps","prevState","Component","filterVisibility","flowType","visibility","findIndex","ft","TypeList","typeConfigs","initialType","handleChangeType","configsToDisplay","description","getTypeConfigs","mergeForm","form","toMerge","toRemove","updated","_i","_Object$keys","_loop","isEntry","existingIdx","mutate","_i3","_Object$keys3","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_loop2","_iterator3","removeKeys","valid","_i2","_Object$keys2","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","typeConfig","userAddingAction","settings","updateNodeEditorSettings","UPDATE_NODE_EDITOR_SETTINGS","updateUserAddingAction","UPDATE_USER_ADDING_ACTION","UPDATE_TYPE_CONFIG","REGEX_URL","RegExp","fromRegex","regex","inputAsString","test","failures","validate","validators","allFailures","validateFunc","validation","Empty","Required","Regex","inputString","MoreThan","checkName","parseFloat","shouldRequireIf","required","MaxOfTenItems","StartIsNonNumeric","ValidURL","HeaderName","Numeric","Alphanumeric","NumOrExp","initializeForm","getAsset","AddLabelsForm","formState","handleLabelsChanged","newAction","updateAction","onClose","submitting","updates","handleSave","addAsset","Dialog_Dialog","TypeList_TypeList","onTypeChange","data-spec","AssetSelector_AssetSelector","handleCreateAssetFromInput","handleLabelCreated","KeyValues","getSchemeObject","scheme","SCHEMES","getSchemeSelectOption","schemeToSelectOption","AddURNComp","SelectElement","UnicodeList","num","unicodeChars","chars","data-testid","char","CharCount","parts","hasUnicode","toolTipTextClasses","tooltip_text","unicode","tooltip","textinput_UnicodeList","fine_print","Count","GSM","0","1","2","3","4","5","6","7","8","9","\n","\f","\r"," ","!","\"","#","$","%","&","'","(",")","*","+",",","-",".","/",":",";","<","=",">","?","@","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","[","\\","]","^","_","c","d","f","g","h","i","j","l","m","n","o","q","r","t","u","w","x","y","z","{","|","}","~","¡","£","¤","¥","§","¿","Ä","Å","Æ","Ç","É","Ñ","Ö","Ø","Ü","ß","à","ä","å","æ","è","é","ì","ñ","ò","ö","ø","ù","ü","Γ","Δ","Θ","Λ","Ξ","Π","Σ","Φ","Ψ","Ω","€","isValidStart","partialExpression","allowedTopLevels","allowIncomplete","substring","topLevel","allowed","isWordChar","ch","isInStringLiteral","numQuotes","ExcellentParser","expressionPrefix","textToCaret","expressions","findExpressions","lastExpression","closed","neededParentheses","fragment","skipChar","inQuotes","prependFlag","pos","pop","identifier","parenthesesLevel","re","exec","currentExpression","nextCh","nextNextCh","getUnicodeChars","getMsgStats","newVal","constructor","stats","characterCount","ReactMarkdown","caretCoordinates","completionVisible","selectedOptionIndex","TextInputElement","_React$Component","selectedEl","textEl","parser","nextCaret","initial","SMS","selectionStart","selectionEnd","checkForMissingFields","focusInput","previous","scrollIntoView","KEY_ENTER","onEnter","KEY_SPACE","ctrlKey","reevaluate","currentTarget","KEY_P","setSelection","KEY_UP","KEY_N","KEY_DOWN","KEY_AT","getCaretCoordinates","KEY_ESC","KEY_TAB","caret","newValue","parens","newCaret","fn","KEY_BACKSPACE","executeQuery","force","_event$currentTarget","KEY_F","KEY_B","KEY_RIGHT","KEY_LEFT","_event$currentTarget2","onFieldFailures","missingFields","getContactFields","field","_this5","expressionContext","functionQuery","functionContext","fns","curr","_ref$currentTarget","_getMsgStats","selectedIdx","showSummary","numExamples","examples","source","slice","template","getCompletionSignature","_this6","optionClasses","selectedElRef","getOption","scrollTop","textElClasses","showInvalid","textarea","textElRef","handleClick","handleChange","handleBlur","onKeyDown","handleKeyDown","onKeyUp","handleKeyUp","maxLength","_cx3","completionClasses","fnClasses","getOptions","charCount","textinput_CharCount","showFn","getTextElement","getScroll","ConnectedTextInputElement","connect","_ref2","flowContext","nodeEditor","withRef","AddURNForm","handlePathChanged","SelectElement_SelectElement","handleSchemeChanged","textinput_TextInputElement","CallResthookComp","resthook","CallWebhookComp","excludeDynamicGroups","mapGroupsToAssets","mapAssetsToGroups","searchResults","AddGroupsForm","handleGroupsChanged","handleGroupAdded","getContentMarkup","specId","getRemoveAllMarkup","ChangeGroupsComp","getChangeGroupsMarkup","CheckboxElement","checkboxIcon","labelClassName","checkboxClassName","description_solo","removeAll","all_groups","RemoveGroupsForm","groupValidators","handleUpdate","CheckboxElement_CheckboxElement","handleRemoveAllUpdate","determineTypeConfig","renderNode","originalNode","getTypeConfig","actions","getType","router","Pill","pillStyles","pill","data-advanced","advanced","MultiChoiceInput","currentInput","onEntryChanged","newItem","onItemAdded","pill_Pill","onRemoved","getChosenItems","handleInputChanged","handleValidateEmpty","handleAddItem","UploadButton","filePicker","onUploadChanged","files","FormData","append","display","handleUploadFile","removeText","handleRemoveUpload","uploadText","initializeLocalizedForm","localizations","isLocalized","getObject","quickReplies","audio","audio_url","MsgLocalizationForm","_this$state","localizeableKeys","handleQuickRepliesUpdate","updateLocalizations","newQuickReply","newReplies","reply","MultiChoice_MultiChoiceInput","handleRemoveQuickReply","handleAddQuickReply","onFieldErrors","handleQuickReplyFieldFailures","audioButton","UploadButton_UploadButton","attachments","handleAudioChanged","handleMessageUpdate","MissingComp","PlayAudioComp","PlayAudioForm","handleAudioUpdate","MediaPlayer","stroke","radius","radiusNormalized","circumference","PI","durationSeconds","currentSeconds","playing","progress","currentTime","duration","ended","floor","triggered","handleTogglePlay","pause","play","prevProps","strokeDashoffset","player","width","handleRef","onTimeUpdate","handleTimeUpdate","src","circles","circle_background","fill","strokeWidth","cy","circle_foreground","strokeDasharray","SayMsgComp","MediaPlayer_MediaPlayer","SayMsgForm","handleUploadChanged","SendBroadcastComp","line","SendBroadcastForm","handleRecipientsChanged","SendEmailComp","TaggingElement","tags","tag","optionsToTags","onCheckValid","tagsToOptions","handleUpdateTags","prompt","addresses","EMAIL_PATTERN","SendEmailForm","TaggingElement_TaggingElement","handleSubjectChanged","handleBodyChanged","SendMsgComp","replies","attachment","templating","whatsapp","templateVariables","attachmentString","splitPoint","uploaded","msgTemplate","quickReplyEntry","sendAll","all_urns","TYPE_OPTIONS","NEW_TYPE_OPTIONS","SendMsgForm","stateToForm","handleTemplateChanged","stateToAction","open","handleAttachmentRemoved","renderUpload","renderAttachment","emptyOption","templateTranslation","variable_count","updatedText","_this7","handleShouldExcludeTemplate","handleTemplateVariableChanged","handleTemplateFieldFailures","handleQuickReplyEntry","renderAttachments","handleSendAllUpdate","showTemplates","renderTemplateConfig","handleFieldFailures","getResultNameMarkup","SetRunResultComp","getSavePlaceholder","getClearPlaceholder","SetRunResultForm","snaked","handleNameUpdate","handleValueUpdate","handleCategoryUpdate","StartFlowComp","_ref$flow","flow","StartSessionComp","StartSessionForm","handleFlowChanged","DefaultExitNames","TransferAirtimeComp","transfer","details","amounts","withEmph","emph","renderSetText","emphasizeName","UpdateContactComp","channel","getDraggedFrom","ghostNode","exitUUIDs","inboundConnections","exitUUID","nodeUUID","ONLINE_PROPERTIES","OFFLINE_PROPERTIES","getContactProperties","isOnlineFlowType","createRenderNode","ui","hasCases","cases","createCaseProps","categories","getCategories","matchingCategory","category_uuid","isRelativeDate","caseConfig","categoryName","operatorType","has_date_eq","has_date_gt","has_date_lt","isCategoryMatch","cat","getSwitchRouter","switch","resolveRoutes","newCases","hasTimeout","resolved","originalRouter","previousCategories","newCase","previousCase","previousCategory","previousExit","exit_uuid","categorizeCases","_getDefaultRoute","hasCategories","defaultCategory","default_category_uuid","defaultExit","Other","All_Responses","getDefaultRoute","_getTimeoutRoute","timeoutCategory","timeoutExit","wait","timeout","No_Response","getTimeoutRoute","createWebhookBasedNode","previousRouter","destination_uuid","Success","Failure","has_only_text","operand","splitType","split_by_webhook","split_by_resthook","split_by_airtime","getCategoriesForExit","getResultName","switchRouter","uniquifyNode","newNode","removeResultFromStore","resultName","reference","filteredRefs","references","actionUUID","removeResultReference","addResult","updateConnection","fromNodeUUID","fromExitUUID","destinationNodeUUID","updatedNodes","fromNode","getNode","exitIdx","getExitIndex","previousDestination","mergeNode","removeNode","spliceInAction","previousNode","otherExit","getDefaultExit","destination","execute_actions","remap","nodeToRemove","detectLoops","_unused","updatePosition","snap","adjusted","updateStickyNotePosition","stickyUUID","_ui","stickies","lastPos","updateStickyNote","UpdateContactForm","fieldValue","dispatch","getState","assetMap","mutators","handlePropertyChange","handleLanguageUpdate","handleChannelUpdate","onUpdated","handleFieldValueUpdate","value_type","sortFieldsAndProperties","handleFieldAdded","getValueWidget","CurrencyElement","isNaN","Number","currency","amountInput","handleAmountChanged","removeIco","onRemove","form_element","exclude","airtime","handleCurrencyChanged","OptionalTextInput","editing","handleTextChanged","handleEditingChanged","toggleText","createResultNameInput","OptionalTextInput_OptionalTextInput","ValidationFailures","nodeToState","getOriginalAction","AirtimeRouterForm","updateRouter","stateToNode","CurrencyElement_CurrencyElement","handleTransferChanged","handleRemoved","renderAmount","form_ValidationFailures","renderAmounts","handleUpdateResultName","operatorConfigList","has_any_word","verboseName","operands","has_all_words","has_phrase","has_only_phrase","has_beginning","has_text","has_number","has_number_between","has_number_lt","has_number_lte","has_number_eq","has_number_gte","has_number_gt","has_date","has_time","has_group","has_phone","has_email","has_error","has_value","has_pattern","operatorConfigMap","operatorConfig","getOperatorConfig","argument","min","categoryNameEdited","pre","validateCase","exitEdited","exitName","getCategoryName","today","op","days","abs","words","firstWord","slicedToArray","CaseElement","operators","getArgumentArray","getCaseProps","handleMinChanged","handleMaxChanged","handleArgumentChanged","kaseError","data-draggable","menuPlacement","getOperators","handleOperatorChanged","renderArguments","handleExitChanged","handleRemoveClicked","DragCursor","createEmptyCase","CaseList","sortableItem","SortableElement","caseProps","CaseElement_CaseElement","handleRemoveCase","handleUpdateCase","sortableList","SortableContainer","currentCases","shouldCancelStart","hasEmptyCase","ensureEmptyCase","removeCase","onCasesUpdated","oldIndex","_ref3","newIndex","_ref4","arrayMove","onSortEnd","handleSortEnd","HTMLElement","dataset","InputToFocus","initialCases","DigitsRouterForm","_resolveRoutes","optionalRouter","hint","digits","CaseList_CaseList","handleCasesUpdated","renderEdit","DEFAULT_BODY","ExpressionRouterForm","handleOperandUpdated","getRoutableFields","FieldRouterForm","handleFieldChanged","LocalizedType","extractGroups","groupsToCases","GroupsRouterForm","getLocalizedObjects","localizedType","filtered","Case","hasLocalizableCases","original","_nodeSettings$localiz","RouterLocalizationForm","Category","arg","originalCase","orginalArgument","translating_operator_container","translating_operator","translating_from","translating_to","handleUpdateCaseArgument","originalCategory","translating_category","handleUpdateCategoryName","renderCases","renderCategories","menu","menuToCases","previousCases","MenuRouterForm","originalCases","menu_option","digit","handleMenuChanged","renderOption","renderMenu","BUCKET_OPTIONS","bucketOption","buckets","fillOutCategories","bucketChoice","RandomRouterForm","newExit","bucket_name","handleBucketNameChanged","OPTIONS","bucket_select","handleBucketsChanged","bucket_list","renderBucketNames","seconds","TIMEOUT_OPTIONS","DEFAULT_TIMEOUT","TimeoutControl","entries","base","isChecked","onChanged","timeout_control_container","left_section","getInstructions","handleChecked","drop_down","getSelected","handleTimeoutChanged","ResponseRouterForm","invalidCase","TimeoutControl_TimeoutControl","handleUpdateTimeout","resthookAsset","ResthookRouterForm","handleResthookChanged","FIELD_NUMBER_OPTIONS","DELIMITER_OPTIONS","getDelimiterOption","fieldNumber","shouldDelimit","split_by_run_result_delimited","ResultRouterForm","handleResultChanged","nodeType","handleFieldNumberChanged","lead_in_sub","result_select_delimited","handleDelimiterChanged","handleShouldDelimitChanged","renderFieldDelimited","renderField","split_by_subflow","flowToAsset","assetToFlow","SubflowRouterForm","Complete","Expired","handleFilter","Methods","WaitRouterForm","image","video","HeaderElement","getHeader","handleRemove","getRemoveIco","handleChangeName","handleChangeValue","GET_METHOD","GET","METHOD_OPTIONS","POST","PUT","postBody","WebhookRouterForm","ensureEmptyHeader","removeHeader","needsHeader","handleCreateHeader","headerElements","HeaderElement_HeaderElement","handleHeaderRemoved","handleHeaderUpdated","react_flip_move_es","easing","enterAnimation","leaveAnimation","handlePostBodyUpdate","handleMethodUpdate","handleUrlUpdate","typeConfigList","component","aliases","dedupeTypeConfigs","typeConfigMap","alias","originalType","fieldAction","fieldToAsset","channelAction","channelToAsset","languageAction","languageToAsset","nameAction","assetToField","assetToChannel","assetToLanguage","EMPTY_DRAG_STATE","dragStartTime","dragDownPosition","dragActive","dragNodeUUID","dragGroup","dragSelection","containerOffset","currentRevision","fetchingFlow","debug","segments","liveActivity","activityInterval","editorState","UPDATE_EDITOR_STATE","markDirty","lastDirtyAttempt","postingRevision","createDirty","revisionsEndpoint","quiet","_getState","_getState$flowContext","mergeEditorState","saving","newDefinition","getCurrentDefinition","saveRevision","updatedAssets","errorMessage","modalMessage","changes","updateEditorState","createNewRevision","loadFlowDefinition","onLoad","currentTop","guessNodeType","getFlowComponents","mergeAssetMaps","renderNodeMap","fetchFlow","_getState4","fetchFlowActivity","triggerActivityUpdate","assetType","handleLanguageChange","_getState6","_getState6$editorStat","currentLanguage","isEqual","onUpdateLocalizations","newDef","normalizedTranslations","updateExitDestination","disconnectExit","_source$split","_source$split2","_getState9$flowContex","removeAction","_getState10$flowConte","actionIdx","getActionIndex","moveActionUp","actionAbove","handleTypeConfigChange","updateTypeConfig","resetNodeEditingState","onUpdateAction","_getState13","_getState13$nodeEdito","_getState13$flowConte","updateContactFields","onAddToNode","showAdvanced","onRemoveNodes","uuids","_getState15$flowConte","updatedDefinition","didNodes","didDef","onUpdateCanvasPositions","positions","_getState16$flowConte","updatedNodePosition","updatedStickyPosition","onConnectionDrag","_getState17$flowConte","_event$sourceId$split","sourceId","_event$sourceId$split2","names","resultCount","hasResult","createEmptyNode","updateSticky","onUpdateRouter","newRouterNode","previousAction","_getState19","_getState19$flowConte","_getState19$nodeEdito","previousPosition","_originalNode$ui$posi","originalResultName","actionToSplice","topNode","bottomNode","topActions","bottomActions","_previousNode$ui$posi","onOpenNodeEditor","_getState20","_getState20$editorSta","_settings$localizatio","actionToTranslate","getLocalizations","activityTimeout","_ref6","_ref5","hasLoopSplit","hasWait","toNodeUUID","toNode","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","nodeMap","includeUI","renderNodes","getOrderedNodes","uiNodes","sorted","diff","suggestedResultNameCount","emptyNode","replyType","replyAction","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_ref7","actionType","pointerMap","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","groupUUID","_iterator9","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","groupsToChange","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","resultAction","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","pointers","_i4","_Object$keys4","toAdd","_getState$editorState","activityEndpoint","flowUUID","getActivity","CanvasDraggable","updateDimensions","clientWidth","clientHeight","classes","onTransitionEnd","onAnimated","nativeEvent","which","onDragStart","pageX","pageY","onDragStop","collides","fudge","getFirstCollision","changed","sortedDraggables","getOrderedDraggables","other","cascaded","_ret2","_ret","setTop","newTop","CANVAS_PADDING","Canvas","parentOffset","isScrolling","reflowTimeout","lastX","lastY","justSelected","documentElement","draggables","dragUUID","windowHeight","offset","handleWindowResize","updatedPositions","drag","startX","startY","currentX","currentY","drag_selection","isClickOnCanvas","draggingNew","updateStateWithScroll","clientY","box","collisions","getDraggablesInBox","updatePositions","speed","setInterval","scrollBy","dimensions","newPosition","markReflow","_reflow","newPositions","attempts","collision","_collision","_collision2","cascade","cascadeTop","reflow","onUpdatePositions","onDragging","doReflow","windowY","otherState","viewportHeight","clearInterval","scrollCanvas","startPosition","xd","yd","lowestNode","delta","addPosition","DRAG_THRESHOLD","getSelectedPositions","canvas_container","canvas","onMouseMove","handleMouseMove","handleMouseUpCapture","CanvasDraggable_CanvasDraggable","handleUpdateDimensions","handleDragStart","handleDragStop","renderSelectionBox","PureComponent","Counter","handleScrollIntoView","keepVisible","scrollTo","behavior","handleMouseEvent","onMouseEnter","onMouseLeave","toString","counter","containerStyle","handleMouseEnter","handleMouseLeave","countStyle","TitleBar","confirmationTimeout","confirmingRemoval","handleConfirmRemoval","showMove","up_button","onMoveUp","showRemoval","remove_confirm","onRemoval","getConfirmationEl","moveArrow","getMoveArrow","getRemove","titlebar","normal","ActionWrapper","attributes","getAttribute","missingLocalization","_localizedKeys","notLocalizable","getClasses","actionToInject","getAction","titleBarClass","actionClass","first","handleActionClicked","TitleBar_TitleBar","handleRemoval","handleMoveUp","render","ConnectedActionWrapper","_ref$editorState","bindActionCreators","DragHelper","drag_helper","arrow","tail","head","bold","getExitActivityKey","hexToRgb","hex","Loading","size","units","borderRadius","square","animationDelay","background","ExitComp","hideDragHelper","pendingMessageFetch","confirmDelete","recentMessages","fetchingRecentMessages","showDragHelper","plumberMakeSource","getSourceId","handleDisconnect","plumberUpdateClass","plumberRemove","plumberConnectExit","recentsEndpoint","cancel","recents","Counter_Counter","segmentCount","handleShowRecentMessages","handleHideRecentMessages","getRecentMessages","delim","hasRecents","recentStyles","recentMessage","toLocaleString","Loading_Loading","_this$getName","nameStyle","connected","dragNodeClasses","confirm","onDisconnect","dragging","exitClasses","getSegmentCount","DragHelper_DragHelper","ConnectedExit","_ref2$editorState","NodeComp","firstAction","clicking","events","handleShouldCancelClick","querySelector","plumberMakeTarget","ghostListener","getGhostListener","plumberRecalculate","getSelection","createRange","selectNodeContents","removeAllRanges","addRange","execCommand","textContent","Exit","onlyNode","kases","startingNode","showUUIDs","handleUUIDClicked","actionList","firstRef","actionConfig","ActionDiv","Action","anyAction","addActions","hasMissing","handleAddToNode","getExits","plumb-drag","isStartNodeVisible","isSelected","renderDebug","eleRef","activeCount","onActivityClicked","Direction","_ref2$flowContext","Modal","customStyles","marginRight","padding","outline","react_modal_lib_default","ariaHideApp","isOpen","show","onAfterOpen","onModalOpen","onRequestClose","shouldCloseOnOverlayClick","contentLabel","NodeEditor","canceled","dragPoint","LocalizationForm","localizationProps","Modal_Modal","Form","formProps","handleAddAsset","_ref$flowContext","_ref$nodeEditor","mins","getMinutes","minStr","getHours","isMessage","isMT","MAP_THUMB","DrawerType","getStyleForDirection","direction","MO","renderInfo","renderMessage","attaches","alt","LogEvent","detailsVisible","showDetails","groups_added","groups_removed","groupText","renderClickable","request","element","MT","renderGroupChange","renderEmail","base_language","renderWebhook","renderLogEvent","IMAGE_A","IMAGE_B","IMAGE_C","VIDEO_A","VIDEO_A_THUMB","Simulator","currentFlow","inputBox","drawerEle","keypadEntry","drawerHeight","waitingForHint","drawerOpen","attachmentOptionsVisible","sprinting","bottomRef","inputBoxRef","session","activeFlow","lastExit","paths","runs","finalStep","step","node_uuid","pathCount","flow_uuid","simulatedMessages","messageFound","shift","fromUUID","toUUID","step_uuid","unshift","newState","update","scrollToBottom","updateEvents","runContext","wasJustActive","urn","toISOString","newlyRecentMessages","newEvents","drawerType","videos","images","hasQuickReplies","updateActivity","handleFocusUpdate","environment","date_format","time_format","timezone","params","triggered_on","simulateStart","JSON","stringify","updateRunContext","resume","resumed_on","simulateResume","startFlow","delay","_this8","newVisible","_this9","_this10","sendAttachment","_this11","_this12","_this13","_this14","multiple","_this15","handleKeyPress","getKeyRow","getLocationDrawer","getAudioDrawer","getImageDrawer","getVideoDrawer","getQuickRepliesDrawer","getKeypadDrawer","zIndex","paddingBottom","handleDrawerRef","getDrawerContents","_this16","showAttachmentDrawer","_this17","handleHideAttachments","getAttachmentButton","_this18","handleHideAttachmentDrawer","_this19","LogEvent_LogEvent","String","simHidden","tabHidden","messagesStyle","onToggle","float","clear","getAttachmentOptions","getDrawer","onReset","COLOR_OPTIONS","Sticky","debounceTextChanges","showConfirmation","DEFUALT_TITLE","DEFUALT_BODY","_snapToGrid","finalPos","onUpdateText","select","handleSelectForValue","handleChangeColor","titleClasses","containerClasses","stickyClasses","colorChooser","getColorChooser","handleClickRemove","react_autosize_textarea_lib_default","handleChangeTitle","onFocusCapture","handleTitleFocused","handleChangeBody","handleBodyFocused","importDefaults","jsPlumb","TARGET_DEFAULTS","anchor","shape","faces","cssClass","hoverClass","dropOptions","tolerance","isTarget","dragAllowedWhenFull","deleteEndpointsOnEmpty","SOURCE_DEFAULTS","maxConnections","isSource","getAnchor","sourceEle","targetEle","defaultConnector","stub","midpoint","alwaysRespectStubs","gap","cornerRadius","Plumber","pendingConnections","pendingConnectionTimeout","animateInterval","DragOptions","cursor","DropOptions","Endpoint","EndpointStyle","strokeStyle","PaintStyle","ConnectionsDetachable","Connector","ConnectionOverlays","Container","setSourceEnabled","makeSource","makeTarget","connectExit","setDragSelection","clearDragSelection","removeFromDragSelection","cancelDurationRepaint","repaintForDuration","repaintFor","handlePendingConnections","checkForPendingConnections","repaint","recalculate","recalculateUUIDs","updateClass","onresize","repaintEverything","enabled","connection","addClass","removeClass","addToDragSelection","newDuration","cycles","millis","targets","batch","slot","totalSlots","anchors","getElementById","delete","fireEvent","connector","detachable","onEvent","recalculateOffsets","unmakeSource","deleteConnectionsForElement","connections","getConnections","setAnchor","revalidate","Debug","nodeContainerUUID","fe","targetId","beforeConnectionDrag","onConnectorDrop","onBeforeConnectorDrop","suspendedElementId","isDraggingBack","wrappedInstance","offsetLeft","offsetTop","dispatchEvent","Event","Node","stickyMap","sticky_Sticky","ghostRef","simulator_Simulator","nodeEditorSettings","nodeeditor_NodeEditor","plumberRepaintForDuration","getNodes","getEmptyFlow","getSimulator","getDragNode","getStickies","onDoubleClick","Canvas_Canvas","getNodeEditor","LanguageSelector","handleLanguageSort","lang","separator","language_link","handleLanguageChanged","PopTab","poppedEle","offsetWidth","onShow","onHide","handleTabClick","handlePoppedRef","handleClose","RevisionExplorer","onRevisionClicked","onRevertClicked","handleUpdateRevisions","PopTab_PopTab","handleTabClicked","selectedClass","dateFormat","utc","user","middlewares","thunk","PageVisibility","default","hotStore","createStore","rootReducer","composeWithDevTools","applyMiddleware","FlowEditor","dataStr","downloadAnchorNode","setAttribute","appendChild","downloadJSON","alert_modal","alert_body","Fixy_Fixy","showDownload","download_button","handleDownloadClicked","handleVisibilityChanged","getFooter","getAlertModal","languageselector_LanguageSelector","getSavingIndicator","flow_Flow","RevisionExplorer_RevisionExplorer","ConnectedFlowEditor","FlowEditorContainer","src_config","react_redux_es","Boolean","showFlowEditor","ReactDOM","src_components","navigator","serviceWorker","ready","registration","unregister","translating_categories","translating_operator_title","translating_operator_instructions","more"],"mappings":"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","file":"static/js/main.d152d2bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"sim_container\":\"Simulator_sim_container__H7rj0\",\"simulator\":\"Simulator_simulator__2tU1d\",\"sim_hidden\":\"Simulator_sim_hidden__1ggwF\",\"screen\":\"Simulator_screen__2Qp5p\",\"header\":\"Simulator_header__2r6Gy\",\"close\":\"Simulator_close__1RMuB\",\"time\":\"Simulator_time__3FKl6\",\"battery\":\"Simulator_battery__3Wa1Y\",\"wifi\":\"Simulator_wifi__2E-6D\",\"footer\":\"Simulator_footer__1_obl\",\"reset\":\"Simulator_reset__1A78l\",\"inactive\":\"Simulator_inactive__3bLl7\",\"active\":\"Simulator_active__1MwaM\",\"messages\":\"Simulator_messages__3Oalm\",\"controls\":\"Simulator_controls__1TlMu\",\"show_attachments_button\":\"Simulator_show_attachments_button__3LFcV\",\"attachment_buttons\":\"Simulator_attachment_buttons__hDIT5\",\"visible\":\"Simulator_visible__3BBvQ\",\"drawer\":\"Simulator_drawer__340zx\",\"drawer_visible\":\"Simulator_drawer_visible__1jBzI\",\"forced\":\"Simulator_forced__19aUl\",\"drawer_header\":\"Simulator_drawer_header__nlorO\",\"map_thumb\":\"Simulator_map_thumb__1zB9o\",\"audio_picker\":\"Simulator_audio_picker__V2K8X\",\"audio_icon\":\"Simulator_audio_icon__Ve23Y\",\"audio_message\":\"Simulator_audio_message___4Yvw\",\"keypad\":\"Simulator_keypad__29cCi\",\"keypad_entry\":\"Simulator_keypad_entry__2S4e_\",\"keys\":\"Simulator_keys__W8GcS\",\"row\":\"Simulator_row__mtRhr\",\"key\":\"Simulator_key__Wv2KS\",\"drawer_items\":\"Simulator_drawer_items__PYHpL\",\"drawer_item\":\"Simulator_drawer_item__yZRIg\",\"simulator_tab\":\"Simulator_simulator_tab__uRMHB\",\"tab_hidden\":\"Simulator_tab_hidden__1BDkU\",\"simulator_tab_icon\":\"Simulator_simulator_tab_icon__3cmxe\",\"simulator_tab_text\":\"Simulator_simulator_tab_text__1aI0Q\",\"detail_webhook_called\":\"Simulator_detail_webhook_called__1A8Iu\",\"quick_replies\":\"Simulator_quick_replies__3wan9\",\"quick_reply\":\"Simulator_quick_reply__sSRfK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unicode_char\":\"UnicodeList_unicode_char__3oGkq\",\"unicode_list\":\"UnicodeList_unicode_list__36pET\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scheme_selection\":\"AddURNForm_scheme_selection__3qqeb\",\"path\":\"AddURNForm_path__vTuFJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"chosen\":\"MultiChoice_chosen__3fQUn\",\"item\":\"MultiChoice_item__2hkE_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"text\":\"SayMsg_text__2WoYr\",\"recording\":\"SayMsg_recording__3JHw8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"code\":\"TransferAirtime_code__3WV9i\",\"amount\":\"TransferAirtime_amount__3mMNG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optional_text_input\":\"OptionalTextInput_optional_text_input__N6zb8\",\"toggle_link\":\"OptionalTextInput_toggle_link__3-B4a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"errors\":\"ValidationFailures_errors__3qGX8\",\"error\":\"ValidationFailures_error__2Q3Gg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"case_list\":\"CaseList_case_list__8CbuZ\",\"kase\":\"CaseList_kase__1FwXZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"lead_in\":\"FieldRouterForm_lead_in__ShYLI\",\"field_select\":\"FieldRouterForm_field_select__n0Csy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"draggable\":\"CanvasDraggable_draggable__cqsGq\",\"selected\":\"CanvasDraggable_selected__2GgF7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"evt\":\"LogEvent_evt__1J8Uq\",\"fadein\":\"LogEvent_fadein__kgfF4\",\"msg_text\":\"LogEvent_msg_text__1HqoJ\",\"ivr_msg\":\"LogEvent_ivr_msg__2pGYZ\",\"send_msg\":\"LogEvent_send_msg__195Tn\",\"msg_received\":\"LogEvent_msg_received__gf2kP\",\"image_attachment\":\"LogEvent_image_attachment__2Ku4T\",\"error\":\"LogEvent_error__2oBQ9\",\"info\":\"LogEvent_info__12nsu\",\"email\":\"LogEvent_email__1XyUb\",\"webhook\":\"LogEvent_webhook__3jEK2\",\"video_attachment\":\"LogEvent_video_attachment__2xn3C\",\"audio_attachment\":\"LogEvent_audio_attachment__2iBWG\",\"media_player\":\"LogEvent_media_player__22CtH\",\"audio_text\":\"LogEvent_audio_text__3j-uW\",\"email_details\":\"LogEvent_email_details__1f2TW\",\"to\":\"LogEvent_to__H-JTa\",\"subject\":\"LogEvent_subject__mN7Lz\",\"body\":\"LogEvent_body__2hSdi\",\"webhook_details\":\"LogEvent_webhook_details__3mtJW\",\"response\":\"LogEvent_response__2oEy0\",\"event_viewer\":\"LogEvent_event_viewer__2D4uw\",\"has_detail\":\"LogEvent_has_detail__ZRVpP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"clickable\":\"Dialog_clickable__1gSoh\",\"dialog\":\"Dialog_dialog__16A3R\",\"header\":\"Dialog_header__YD-Nm\",\"header_overlay\":\"Dialog_header_overlay__1Of6F\",\"header_icon\":\"Dialog_header_icon__2z4U8\",\"title\":\"Dialog_title__1IRe1\",\"barber\":\"Dialog_barber__3x6cp\",\"iconed\":\"Dialog_iconed__2eQKD\",\"title_container\":\"Dialog_title_container__2HiUa\",\"content\":\"Dialog_content__1YGhY\",\"footer\":\"Dialog_footer__3UylY\",\"gutter\":\"Dialog_gutter__1Xxy-\",\"buttons\":\"Dialog_buttons__1T0cB\",\"left_buttons\":\"Dialog_left_buttons__31hp_\",\"right_buttons\":\"Dialog_right_buttons__3NHBO\",\"tabs\":\"Dialog_tabs__2gLgU\",\"tab\":\"Dialog_tab__1x47g\",\"tab_icon\":\"Dialog_tab_icon__28etF\",\"active\":\"Dialog_active__3yOgq\"};","module.exports = __webpack_public_path__ + \"static/media/map.5e547148.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"type_list\":\"TypeList_type_list__3OATW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"RemoveGroupsForm_checkbox__3W5g6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"value\":\"UpdateContactForm_value__19Fyz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result_name\":\"AirtimeRouterForm_result_name__IPVnQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"option_list\":\"TextInputElement_option_list__18zXF\",\"option_summary\":\"TextInputElement_option_summary__qaT6A\",\"option_signature\":\"TextInputElement_option_signature__3c1zs\",\"option\":\"TextInputElement_option__5N_r_\",\"selected\":\"TextInputElement_selected__2bCI1\",\"first_option\":\"TextInputElement_first_option__2owME\",\"fn_marker\":\"TextInputElement_fn_marker__38I-n\",\"function_help\":\"TextInputElement_function_help__2jwVQ\",\"completion_container\":\"TextInputElement_completion_container__3c00R\",\"options_wrapper\":\"TextInputElement_options_wrapper__2knDu\",\"fn_container\":\"TextInputElement_fn_container__3tmtw\",\"option_name\":\"TextInputElement_option_name__2G-0k\",\"option_examples\":\"TextInputElement_option_examples__2l6sa\",\"fn_signature\":\"TextInputElement_fn_signature__efYOL\",\"wrapper\":\"TextInputElement_wrapper__1q0lN\",\"help\":\"TextInputElement_help__1dGMQ\",\"hidden\":\"TextInputElement_hidden__3Xul8\",\"textinput\":\"TextInputElement_textinput__2eOxW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"lead_in\":\"DigitsRouterForm_lead_in__1_8u2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result_name\":\"ResthookRouterForm_result_name__dcAsY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"result_name\":\"WaitRouterForm_result_name__1QlYs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"loading\":\"Loading_loading__3-t_e\",\"pulse\":\"Loading_pulse__apphI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"empty_flow\":\"Flow_empty_flow__roKNh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"exit\":\"Exit_exit__36tB1\",\"translating\":\"Exit_translating__mA2Hf\",\"unnamed_exit\":\"Exit_unnamed_exit__1H6-H\",\"endpoint\":\"Exit_endpoint__1D08c\",\"missing_localization\":\"Exit_missing_localization__h2WGJ\",\"name\":\"Exit_name__22WdX\",\"activity\":\"Exit_activity__11sTW\",\"count\":\"Exit_count__1tNM8\",\"confirm_delete\":\"Exit_confirm_delete__26Wo-\",\"confirm_x\":\"Exit_confirm_x__1AODA\",\"recent_messages\":\"Exit_recent_messages__1wUzf\",\"no_recents\":\"Exit_no_recents__R97kK\",\"title\":\"Exit_title__3Ugsu\",\"loading\":\"Exit_loading__37ssZ\",\"message\":\"Exit_message__Q_zU9\",\"text\":\"Exit_text__1-x4W\",\"sent\":\"Exit_sent__1DkCx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"yellow\":\"Sticky_yellow__39XW4\",\"color_option\":\"Sticky_color_option__32vU5\",\"sticky\":\"Sticky_sticky__3QUKK\",\"blue\":\"Sticky_blue__3s2JL\",\"purple\":\"Sticky_purple__278EO\",\"gray\":\"Sticky_gray__39re9\",\"green\":\"Sticky_green__3BQ0M\",\"color_chooser_container\":\"Sticky_color_chooser_container__2lT4F\",\"color_chooser\":\"Sticky_color_chooser__3Jbqj\",\"sticky_container\":\"Sticky_sticky_container__CAgg9\",\"selected\":\"Sticky_selected__1Ra33\",\"removal\":\"Sticky_removal__2Ktvw\",\"title_wrapper\":\"Sticky_title_wrapper__2QWs9\",\"remove_button\":\"Sticky_remove_button__2jDO8\",\"title\":\"Sticky_title__1kkPN\",\"confirmation\":\"Sticky_confirmation__wEJ6P\",\"body_wrapper\":\"Sticky_body_wrapper__3vHL0\",\"body\":\"Sticky_body__18mNO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"node_container\":\"Node_node_container__2eaRs\",\"uuid\":\"Node_uuid__1gU_w\",\"ghost\":\"Node_ghost__1rJWj\",\"nondragged\":\"Node_nondragged__3odZa\",\"selected\":\"Node_selected__1ck3F\",\"node\":\"Node_node__2ympr\",\"save_as\":\"Node_save_as__27Fv-\",\"save_result\":\"Node_save_result__cnC6y\",\"result_name\":\"Node_result_name__1F10Q\",\"cropped\":\"Node_cropped__3mV37\",\"exit_table\":\"Node_exit_table__3NybR\",\"exits\":\"Node_exits__3zABv\",\"add\":\"Node_add__3PamH\",\"drag_group\":\"Node_drag_group__1h4JV\",\"flow_start\":\"Node_flow_start__2ZLmX\",\"flow_start_message\":\"Node_flow_start_message__21Gdu\",\"active\":\"Node_active__31xXM\",\"pulse\":\"Node_pulse__14AYP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"link\":\"WebhookRouterForm_link__1jXIk\",\"info\":\"WebhookRouterForm_info__qgGFO\",\"method\":\"WebhookRouterForm_method__1IR0U\",\"url\":\"WebhookRouterForm_url__T29iJ\",\"code\":\"WebhookRouterForm_code__3x1A-\",\"instructions\":\"WebhookRouterForm_instructions__3LG_X\",\"headers_title\":\"WebhookRouterForm_headers_title__1GMIG\",\"remove_ico\":\"WebhookRouterForm_remove_ico__l-jUh\",\"example\":\"WebhookRouterForm_example__1ev4D\",\"header\":\"WebhookRouterForm_header__2waYT\",\"header_name\":\"WebhookRouterForm_header_name__3eQVG\",\"header_value\":\"WebhookRouterForm_header_value__1Fxrk\",\"body_form\":\"WebhookRouterForm_body_form__3BHas\",\"req_body\":\"WebhookRouterForm_req_body__1rKz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"simulating\":\"RevisionExplorer_simulating__3ar2x\",\"mask\":\"RevisionExplorer_mask__14GgE\",\"visible\":\"RevisionExplorer_visible__365U6\",\"explorer_wrapper\":\"RevisionExplorer_explorer_wrapper__3FIUU\",\"explorer\":\"RevisionExplorer_explorer__1yYSY\",\"revisions\":\"RevisionExplorer_revisions__1nYCu\",\"revision\":\"RevisionExplorer_revision__3f_kl\",\"selected\":\"RevisionExplorer_selected__2zSg4\",\"button\":\"RevisionExplorer_button__2srjQ\",\"current\":\"RevisionExplorer_current__Zlqcr\",\"created_on\":\"RevisionExplorer_created_on__qKoNX\",\"email\":\"RevisionExplorer_email__Z9xlH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"ele\":\"FormElement_ele__1FpYO\",\"border\":\"FormElement_border__3bx0s\",\"error_list\":\"FormElement_error_list__1SrT3\",\"error\":\"FormElement_error__1Peb9\",\"arrow_up\":\"FormElement_arrow_up__2HvAv\",\"send_msg_error\":\"FormElement_send_msg_error__3LIUw\",\"label\":\"FormElement_label__2dN0p\",\"invalid\":\"FormElement_invalid__1fOa-\",\"help_text\":\"FormElement_help_text__a6EcV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"action\":\"Action_action__NVQRK\",\"has_router\":\"Action_has_router__1Ad-S\",\"body\":\"Action_body__RtQCZ\",\"add_contact_urn\":\"Action_add_contact_urn__3Z706\",\"add_input_labels\":\"Action_add_input_labels__3IeO3\",\"send_msg\":\"Action_send_msg__1QYPk\",\"set_contact_field\":\"Action_set_contact_field__1HDvu\",\"set_contact_name\":\"Action_set_contact_name__1woBb\",\"call_webhook\":\"Action_call_webhook__2kR_s\",\"call_resthook\":\"Action_call_resthook__2zGlX\",\"set_contact_language\":\"Action_set_contact_language__G9Ko5\",\"set_contact_channel\":\"Action_set_contact_channel__1YEwX\",\"add_contact_groups\":\"Action_add_contact_groups__3H0fU\",\"remove_contact_groups\":\"Action_remove_contact_groups__3h7vs\",\"play_audio\":\"Action_play_audio__ShGHx\",\"say_msg\":\"Action_say_msg__3CqFc\",\"set_run_result\":\"Action_set_run_result__1CLz_\",\"send_email\":\"Action_send_email__2MDnO\",\"send_broadcast\":\"Action_send_broadcast__1SCyf\",\"transfer_airtime\":\"Action_transfer_airtime__2LvoA\",\"missing\":\"Action_missing__1Ghl9\",\"enter_flow\":\"Action_enter_flow__2ogxI\",\"start_session\":\"Action_start_session__1yM-7\",\"not_localizable\":\"Action_not_localizable__2rKMk\",\"overlay\":\"Action_overlay__ZEDK0\",\"translate_from\":\"Action_translate_from__3BID_\",\"translate_to\":\"Action_translate_to__TPeJw\",\"translating\":\"Action_translating__2n0n7\",\"missing_localization\":\"Action_missing_localization__1zslf\",\"localized\":\"Action_localized__3Mwip\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"group\":\"CaseElement_group__1fyWB\",\"divider\":\"CaseElement_divider__mkeU9\",\"kase\":\"CaseElement_kase__2vP_O\",\"form_group\":\"CaseElement_form_group__1PJTx\",\"choice\":\"CaseElement_choice__2RZct\",\"single_operand\":\"CaseElement_single_operand__o0kaN\",\"multi_operand\":\"CaseElement_multi_operand__eTLuc\",\"categorize_as\":\"CaseElement_categorize_as__XFySp\",\"category\":\"CaseElement_category__2yfW1\",\"remove_icon\":\"CaseElement_remove_icon__1PFzv\",\"dnd_icon\":\"CaseElement_dnd_icon__wjvHF\",\"relative_date\":\"CaseElement_relative_date__DGZXt\",\"empty\":\"CaseElement_empty__35kBB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"checkbox\":\"SendMsgForm_checkbox__-JOyy\",\"quick_reply_summary\":\"SendMsgForm_quick_reply_summary__DkA4i\",\"type_choice\":\"SendMsgForm_type_choice__1dciq\",\"url_attachment\":\"SendMsgForm_url_attachment__1Su5F\",\"upload\":\"SendMsgForm_upload__22kwL\",\"remove_upload\":\"SendMsgForm_remove_upload__2qqap\",\"url\":\"SendMsgForm_url__2eR-o\",\"remove\":\"SendMsgForm_remove__20sFL\",\"existing_quick_replies\":\"SendMsgForm_existing_quick_replies__W866I\",\"existing_quick_reply\":\"SendMsgForm_existing_quick_reply__2C65m\",\"add_quick_replies\":\"SendMsgForm_add_quick_replies__3vLIC\",\"template_text\":\"SendMsgForm_template_text__1zkKJ\",\"variable\":\"SendMsgForm_variable__3mVDI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"pop_wrapper\":\"PopTab_pop_wrapper__2kOzQ\",\"visible\":\"PopTab_visible__2udNm\",\"popped\":\"PopTab_popped__2Imlz\",\"tab_wrapper\":\"PopTab_tab_wrapper__3n1QM\",\"tab\":\"PopTab_tab__2Rm5M\",\"label\":\"PopTab_label__nf1JX\",\"icon\":\"PopTab_icon__irClb\",\"header\":\"PopTab_header__1NqmE\",\"header_label\":\"PopTab_header_label__2YD7z\",\"close\":\"PopTab_close__3O5BS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"random\":\"shared_random__URuHQ\",\"wait_for_audio\":\"shared_wait_for_audio__1LjH-\",\"wait_for_image\":\"shared_wait_for_image__3VU9W\",\"wait_for_video\":\"shared_wait_for_video__1nv-a\",\"wait_for_location\":\"shared_wait_for_location__2al5E\",\"wait_for_menu\":\"shared_wait_for_menu__hot7M\",\"wait_for_digits\":\"shared_wait_for_digits__35WPZ\",\"wait_for_response\":\"shared_wait_for_response__ZKUbx\",\"add_contact_groups\":\"shared_add_contact_groups__2dqfS\",\"remove_contact_groups\":\"shared_remove_contact_groups__1dJrQ\",\"send_email\":\"shared_send_email__dY51y\",\"send_broadcast\":\"shared_send_broadcast__3LXs5\",\"msg\":\"shared_msg__28OwU\",\"say_msg\":\"shared_say_msg__2U3R0\",\"send_msg\":\"shared_send_msg__2tEfv\",\"transfer_airtime\":\"shared_transfer_airtime__1H5tV\",\"enter_flow\":\"shared_enter_flow__XHnXb\",\"start_session\":\"shared_start_session__1f3aq\",\"set_run_result\":\"shared_set_run_result__1QltP\",\"add_input_labels\":\"shared_add_input_labels__2pTX0\",\"add_contact_urn\":\"shared_add_contact_urn__3nXG-\",\"set_contact_name\":\"shared_set_contact_name__KV1Re\",\"set_contact_field\":\"shared_set_contact_field__3VSZH\",\"set_contact_language\":\"shared_set_contact_language__4ZBkW\",\"set_contact_channel\":\"shared_set_contact_channel__3NhjI\",\"play_audio\":\"shared_play_audio__2OF7K\",\"missing\":\"shared_missing__2oICX\",\"subflow\":\"shared_subflow__yzbLM\",\"split_by_random\":\"shared_split_by_random__Zh1SY\",\"split_by_expression\":\"shared_split_by_expression__3k23C\",\"split_by_groups\":\"shared_split_by_groups__5EnH4\",\"split_by_contact_field\":\"shared_split_by_contact_field__1XjX5\",\"split_by_run_result\":\"shared_split_by_run_result__X4-Wp\",\"call_resthook\":\"shared_call_resthook__16wqp\",\"call_webhook\":\"shared_call_webhook__1h1Cb\",\"breaks\":\"shared_breaks__2F4AL\",\"url\":\"shared_url__1vtQK\",\"node_asset\":\"shared_node_asset__2MOdQ\",\"node_group\":\"shared_node_group__ju7iK\",\"node_label\":\"shared_node_label__1lQNA\",\"advanced_title\":\"shared_advanced_title__2auaT\",\"alert\":\"shared_alert__1JnkA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"lead_in\":\"ResultRouterForm_lead_in__2myeK\",\"lead-in-sub\":\"ResultRouterForm_lead-in-sub__2X4uS\",\"result_select\":\"ResultRouterForm_result_select__1cu2c\",\"result-select-delimited\":\"ResultRouterForm_result-select-delimited__p3SFC\",\"should_delimit\":\"ResultRouterForm_should_delimit__1Z8-4\",\"field_number\":\"ResultRouterForm_field_number__2WFxV\",\"delimiter\":\"ResultRouterForm_delimiter__2i5Hr\"};","import { Methods } from 'components/flow/routers/webhook/helpers';\nimport { FlowTypes, Operators, Types } from 'config/interfaces';\n\nexport interface Languages {\n  [iso: string]: string;\n}\n\nexport interface Language {\n  name: string;\n  iso: string;\n}\n\nexport interface Environment {\n  date_format: string;\n  time_format: string;\n  timezone: string;\n  languages: string[];\n}\n\nexport interface Endpoints {\n  attachments: string;\n  resthooks: string;\n  recents: string;\n  fields: string;\n  groups: string;\n  recipients: string;\n  flows: string;\n  revisions: string;\n  activity: string;\n  labels: string;\n  channels: string;\n  environment: string;\n  languages: string;\n  templates: string;\n  functions: string;\n  simulateStart: string;\n  simulateResume: string;\n  editor: string;\n}\n\nexport interface FlowEditorConfig {\n  localStorage: boolean;\n  endpoints: Endpoints;\n  flow: string;\n  flowType: FlowTypes;\n  showTemplates?: boolean;\n  showDownload?: boolean;\n  debug?: boolean;\n  path?: string;\n  headers?: any;\n  onLoad?: () => void;\n  onActivityClicked?: (uuid: string) => void;\n}\n\nexport interface LocalizationMap {\n  [lang: string]: {\n    [uuid: string]: any;\n  };\n}\n\nexport interface FlowDefinition {\n  localization: LocalizationMap;\n  language: string;\n  name: string;\n  nodes: FlowNode[];\n  uuid: string;\n  revision: number;\n  _ui: UIMetaData;\n}\n\nexport interface FlowNode {\n  uuid: string;\n  actions: Action[];\n  exits: Exit[];\n  router?: Router;\n}\n\nexport interface Exit {\n  uuid: string;\n  destination_uuid?: string;\n}\n\nexport enum RouterTypes {\n  switch = 'switch',\n  random = 'random'\n}\n\nexport interface Router {\n  type: RouterTypes;\n  result_name?: string;\n  categories: Category[];\n  wait?: Wait;\n}\n\nexport interface Channel {\n  uuid: string;\n  name: string;\n}\n\nexport interface Case {\n  uuid: string;\n  type: Operators;\n  category_uuid: string;\n  arguments?: string[];\n  omit_operand?: boolean;\n}\n\nexport interface Category {\n  uuid: string;\n  name: string;\n  exit_uuid: string;\n}\n\nexport interface TemplateTranslation {\n  language: string;\n  status: string;\n  content: string;\n}\n\nexport interface Template {\n  created_on: Date;\n  modified_on: Date;\n  translations: TemplateTranslation[];\n}\n\nexport interface SwitchRouter extends Router {\n  cases: Case[];\n  operand: string;\n  default_category_uuid: string;\n}\n\nexport enum WaitTypes {\n  msg = 'msg'\n}\n\nexport enum HintTypes {\n  digits = 'digits',\n  audio = 'audio',\n  image = 'image',\n  video = 'video',\n  location = 'location'\n}\n\nexport interface Hint {\n  type: HintTypes;\n  count?: number;\n}\n\nexport interface Timeout {\n  category_uuid: string;\n  seconds: number;\n}\n\nexport interface Wait {\n  type: WaitTypes;\n  timeout?: Timeout;\n  hint?: Hint;\n}\n\nexport interface Group {\n  uuid: string;\n  name: string;\n}\n\nexport interface Contact {\n  uuid: string;\n  name: string;\n}\n\nexport interface ChangeGroups extends Action {\n  groups: Group[];\n}\n\nexport interface RemoveFromGroups extends ChangeGroups {\n  all_groups: boolean;\n}\n\nexport interface Field {\n  key: string;\n  name: string;\n}\n\nexport interface Label {\n  uuid: string;\n  name: string;\n}\n\nexport interface Flow {\n  uuid: string;\n  name: string;\n}\n\nexport interface Action {\n  type: Types;\n  uuid: string;\n}\n\nexport interface SetContactField extends Action {\n  field: Field;\n  value: string;\n}\n\nexport interface SetContactName extends Action {\n  type: Types.set_contact_name;\n  name: string;\n}\n\nexport interface SetContactLanguage extends Action {\n  type: Types.set_contact_language;\n  language: string;\n}\n\nexport interface SetContactChannel extends Action {\n  type: Types.set_contact_channel;\n  channel: Channel;\n}\n\nexport type SetContactProperty = SetContactName | SetContactLanguage | SetContactChannel;\n\nexport type SetContactAttribute = SetContactField | SetContactProperty;\n\n// tslint:disable-next-line:no-empty-interface\nexport interface Missing extends Action {}\n\nexport interface RecipientsAction extends Action {\n  contacts: Contact[];\n  groups: Group[];\n  legacy_vars?: string[];\n}\n\nexport interface TemplateTranslation {\n  channel: Channel;\n  content: string;\n  language: string;\n  status: string;\n  variable_count: number;\n}\n\nexport interface TemplateOptions {\n  translations: TemplateTranslation[];\n}\n\nexport interface MsgTemplate {\n  name: string;\n  uuid: string;\n}\n\nexport interface MsgTemplating {\n  template: MsgTemplate;\n  variables: string[];\n}\n\nexport interface SendMsg extends Action {\n  text: string;\n  all_urns?: boolean;\n  quick_replies?: string[];\n  attachments?: string[];\n  templating?: MsgTemplating;\n}\n\nexport interface SayMsg extends Action {\n  text: string;\n  audio_url?: string;\n}\n\nexport interface PlayAudio extends Action {\n  audio_url: string;\n}\n\nexport interface BroadcastMsg extends RecipientsAction {\n  text: string;\n}\n\nexport interface AddLabels extends Action {\n  labels: Label[];\n}\n\nexport interface AddURN extends Action {\n  scheme: string;\n  path: string;\n}\n\nexport interface SetPreferredChannel extends Action {\n  language: string;\n}\n\nexport interface SendEmail extends Action {\n  subject: string;\n  body: string;\n  addresses: string[];\n}\n\nexport interface SetRunResult extends Action {\n  name: string;\n  value: string;\n  category?: string;\n}\n\nexport interface Headers {\n  [name: string]: string;\n}\n\nexport interface TransferAirtime extends Action {\n  amounts: { [name: string]: number };\n  result_name: string;\n}\n\nexport interface CallResthook extends Action {\n  resthook: string;\n  result_name: string;\n}\n\nexport interface CallWebhook extends Action {\n  url: string;\n  method: Methods;\n  result_name: string;\n  body?: string;\n  headers?: Headers;\n}\n\nexport interface StartFlow extends Action {\n  flow: Flow;\n}\n\nexport interface StartSession extends RecipientsAction {\n  flow: Flow;\n}\n\nexport interface UIMetaData {\n  nodes: { [key: string]: UINode };\n  languages: Array<{ [iso: string]: string }>;\n}\n\nexport interface FlowPosition {\n  left: number;\n  top: number;\n  right?: number;\n  bottom?: number;\n}\n\nexport interface Dimensions {\n  width: number;\n  height: number;\n}\n\nexport interface UIConfig {\n  [key: string]: any;\n}\n\nexport interface UINode {\n  position: FlowPosition;\n  // ui type, used for split by expression, contact field, etc\n  type?: Types;\n  config?: UIConfig;\n}\n\nexport interface StickyNote {\n  position: FlowPosition;\n  title: string;\n  body: string;\n  color?: string;\n}\n\nexport interface UIMetaData {\n  nodes: { [key: string]: UINode };\n  stickies: { [key: string]: StickyNote };\n}\n\nexport type AnyAction =\n  | Action\n  | ChangeGroups\n  | SetContactField\n  | SetContactName\n  | SetRunResult\n  | SendMsg\n  | SetPreferredChannel\n  | SendEmail\n  | CallWebhook\n  | StartFlow\n  | StartSession;\n\nexport enum ContactProperties {\n  UUID = 'uuid',\n  'Created By' = 'created_by',\n  'Modified By' = 'modified_by',\n  Org = 'org',\n  Name = 'name',\n  Language = 'language',\n  Timezone = 'timezone',\n  Channel = 'channel',\n  Email = 'email',\n  Mailto = 'mailto',\n  Phone = 'phone',\n  Groups = 'groups'\n}\n\nexport enum ValueType {\n  text = 'text',\n  numeric = 'numeric',\n  datetime = 'datetime',\n  state = 'state',\n  district = 'district',\n  ward = 'ward'\n}\n\nexport interface CreateOptions {\n  promptTextCreator?: any;\n  newOptionCreator?: any;\n  isValidNewOption?: any;\n  isOptionUnique?: any;\n  createNewOption?: any;\n  createPrompt?: string;\n}\n\nexport enum StartFlowArgs {\n  Complete = 'C',\n  Expired = 'E'\n}\n\nexport enum StartFlowExitNames {\n  Complete = 'Complete',\n  Expired = 'Expired'\n}\n\nexport enum WebhookExitNames {\n  Success = 'Success',\n  Failure = 'Failure'\n}\n\nexport enum TransferAirtimeExitNames {\n  Success = 'Success',\n  Failure = 'Failed'\n}\n","import { Action, Case, Category, Language } from 'flowTypes';\nimport { Asset } from 'store/flowContext';\n\nexport class LocalizedObject {\n  public localizedKeys: { [key: string]: boolean } = {};\n\n  private localizedObject: Action | Category | Case | any;\n  private localized: boolean = false;\n  private iso: string;\n  private name: string;\n  private language: Language;\n\n  constructor(object: Action | Category | Case, { id, name }: Asset) {\n    this.localizedObject = object;\n    this.iso = id;\n    this.language = { iso: this.iso, name };\n  }\n\n  public getLanguage(): Language {\n    if (!this.language) {\n      if (this.iso) {\n        this.language = { iso: this.iso, name: this.name };\n      }\n    }\n\n    return this.language;\n  }\n\n  public hasTranslation(key: string): boolean {\n    return key in this.localizedKeys;\n  }\n\n  // We use explicit any here to make this generic across all actions,\n  // note this means we'll attempt to set any property in our localization\n  // dictionary regardless of the object type\n  public addTranslation(key: string, value: any): void {\n    // localization shouldn't side-affect the original object\n    if (!this.localized) {\n      this.localizedObject = Object.assign({}, this.localizedObject);\n      this.localized = true;\n    }\n\n    if (Array.isArray(this.localizedObject[key])) {\n      this.localizedObject[key] = value;\n    } else {\n      if (value.length === 1) {\n        this.localizedObject[key] = value[0];\n      }\n    }\n\n    this.localizedKeys[key] = true;\n  }\n\n  public isLocalized(): boolean {\n    return this.localized;\n  }\n\n  public getObject(): Action | Case | Category {\n    return this.localizedObject;\n  }\n}\n\nexport default class Localization {\n  public static translate(\n    object: Action | Category | Case,\n    language: Asset,\n    translations?: { [uuid: string]: any }\n  ): LocalizedObject {\n    const localized: LocalizedObject = new LocalizedObject(object, language);\n\n    if (translations) {\n      if (object.uuid in translations) {\n        const values = translations[object.uuid];\n        // We don't want to side affect our action\n        Object.keys(values).forEach(key => {\n          return localized.addTranslation(key, values[key]);\n        });\n      }\n    }\n\n    return localized;\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport { renderIf } from 'utils';\n\nimport styles from './Button.module.scss';\n\nexport enum ButtonTypes {\n  primary = 'primary',\n  secondary = 'secondary',\n  tertiary = 'tertiary'\n}\nexport interface ButtonProps {\n  name: string;\n  onClick: any;\n  disabled?: boolean;\n  type?: ButtonTypes;\n  leftSpacing?: boolean;\n  topSpacing?: boolean;\n  iconName?: string;\n  onRef?: (ele: any) => void;\n}\n\ninterface ButtonState {\n  active: boolean;\n}\n\nexport default class Button extends React.Component<ButtonProps, ButtonState> {\n  constructor(props: ButtonProps) {\n    super(props);\n    this.state = {\n      active: false\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleMouseDown(event: React.MouseEvent<HTMLDivElement>): void {\n    this.setState({ active: true });\n  }\n\n  private handleMouseUp(event: React.MouseEvent<HTMLDivElement>): void {\n    this.setState({ active: false });\n  }\n\n  public render(): JSX.Element {\n    const { onRef, name, onClick, type, disabled, leftSpacing, topSpacing, iconName } = this.props;\n\n    return (\n      <div\n        ref={onRef}\n        style={{\n          marginLeft: leftSpacing ? 10 : 0,\n          marginTop: topSpacing ? 10 : 0\n        }}\n        onClick={onClick}\n        onMouseDown={this.handleMouseDown}\n        onMouseUp={this.handleMouseUp}\n        className={`${styles.btn} ${styles[type!]} ${disabled ? styles.disabled : ''} ${\n          this.state.active ? styles.active : ''\n        }`}\n      >\n        {renderIf(iconName != null)(<span style={{ paddingRight: 4 }} className={iconName} />)}\n        {name}\n      </div>\n    );\n  }\n}\n","import {\n  Action,\n  Case,\n  Category,\n  ContactProperties,\n  FlowPosition,\n  LocalizationMap\n} from 'flowTypes';\nimport { Query } from 'immutability-helper';\nimport * as React from 'react';\nimport Localization, { LocalizedObject } from 'services/Localization';\nimport { Asset } from 'store/flowContext';\nimport { FormEntry } from 'store/nodeEditor';\nimport { v4 as generateUUID } from 'uuid';\nimport variables from 'variables.module.scss';\n\nexport const V4_UUID = /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i;\nconst LABEL_CHARS = /^[a-zA-Z0-9-][a-zA-Z0-9- ]*$/;\nconst MAX_LABEL_LENGTH = 36;\nconst SNAKED_CHARS = /\\s+(?=\\S)/g;\n\nexport const MAX_REFLOW_ATTEMPTS = 100;\nexport const ACTIVITY_INTERVAL = 5000;\nexport const COLLISION_FUDGE = 5;\nexport const GRID_SIZE: number = parseInt(variables.grid_size, 10) || 20;\nexport const NODE_SPACING: number = parseInt(variables.node_spacing, 10) || 10;\nexport const NODE_PADDING: number = parseInt(variables.node_padding, 10) || 10;\nexport const QUIET_NOTE = 2000;\nexport const CONFIRMATION_TIME = 2000;\n\nexport interface BoolMap {\n  [key: string]: boolean;\n}\n\ninterface Bounds {\n  left: number;\n  top: number;\n  right: number;\n  bottom: number;\n}\n\nexport type LabelIdCb = (label?: string, labelKey?: string, valueKey?: string) => string;\n\n/**\n * Adjusts the left and top offsets to a grid\n * @param left horizontal offset\n * @param top vertical offset\n */\nexport const snapToGrid = (left: number, top: number): { left: number; top: number } => {\n  let leftAdjust = left % GRID_SIZE;\n  let topAdjust = top % GRID_SIZE;\n\n  if (leftAdjust > GRID_SIZE / 3) {\n    leftAdjust = GRID_SIZE - leftAdjust;\n  } else {\n    leftAdjust = leftAdjust * -1;\n  }\n\n  if (topAdjust > GRID_SIZE / 3) {\n    topAdjust = GRID_SIZE - topAdjust;\n  } else {\n    topAdjust = topAdjust * -1;\n  }\n\n  return {\n    left: Math.max(left + leftAdjust, 0),\n    top: Math.max(top + topAdjust, 0)\n  };\n};\n\n/**\n * Adjusts the position offsets to a grid\n */\nexport const snapPositionToGrid = (position: FlowPosition): FlowPosition => {\n  let leftAdjust = position.left % GRID_SIZE;\n  let topAdjust = position.top % GRID_SIZE;\n\n  if (leftAdjust > GRID_SIZE / 3) {\n    leftAdjust = GRID_SIZE - leftAdjust;\n  } else {\n    leftAdjust = leftAdjust * -1;\n  }\n\n  if (topAdjust > GRID_SIZE / 3) {\n    topAdjust = GRID_SIZE - topAdjust;\n  } else {\n    topAdjust = topAdjust * -1;\n  }\n\n  const left = Math.max(position.left + leftAdjust, 0);\n  const top = Math.max(position.top + topAdjust, 0);\n  const right = left + position.right - position.left;\n  const bottom = top + position.bottom - position.top;\n\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n};\n\n/**\n * Turns a string array into a bool map for constant lookup\n * @param {string[]} array - an array of strings, e.g. contact fields\n * @returns {object} A map of each string\n */\nexport const toBoolMap = (array: string[]): BoolMap =>\n  array.reduce(\n    (map: BoolMap, item: string) => ({\n      ...map,\n      [item]: true\n    }),\n    {}\n  );\n\n/**\n * Inserts commas into numbers where appropriate for better readability\n * @param {number} value - A number, e.g. 10000\n * @returns {string} A comma-separated string, e.g. 10,000\n */\nexport const addCommas = (value: number): string =>\n  value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\n/**\n * Replaces spaces with underscores\n * @param {string} value - A space-separated string to be snaked, e.g. a raw flow field name ('my flow field')\n * @returns {string} A snaked string, e.g. 'my_flow_field'\n */\nexport const snakify = (value: string): string =>\n  value\n    .toLowerCase()\n    .trim()\n    .replace(SNAKED_CHARS, '_');\n/**\n * Returns true if a given UUID matches v4 format\n * @param {string} uuid - A version 4 UUID (no braces, uppercase OK)\n * @returns {boolean}\n */\nexport const validUUID = (uuid: string): boolean => V4_UUID.test(uuid);\n\n/**\n * Returns a given string in title case, e.g. 'full name' becomes 'Full Name'\n * @param {string} str - string to be title-cased\n * @returns {string} Title-cased string\n */\nexport const titleCase = (str: string): string =>\n  str.replace(/\\b\\w+/g, s => s.charAt(0).toUpperCase() + s.substr(1).toLowerCase());\n\nexport const getSelectClassForEntry = (entry: FormEntry): string => {\n  if (entry && entry.validationFailures && entry.validationFailures.length > 0) {\n    return 'select-invalid';\n  }\n  return '';\n};\n\nexport const getSelectClass = (errors: number): string => {\n  if (errors === 0) {\n    return 'select-base';\n  }\n  // We use a global selector here for react-select\n  return 'select-base select-invalid';\n};\n\nexport const reorderList = (list: any[], startIndex: number, endIndex: number): any[] => {\n  const [removed] = list.splice(startIndex, 1);\n\n  list.splice(endIndex, 0, removed);\n\n  return list;\n};\n\n/**\n * Compares basic objects (no methods and DOM nodes; property order important)\n * @param {object} objA - basic object\n * @param {object} objB - basic object\n * @returns {boolean}\n */\nexport const jsonEqual = (objA: {}, objB: {}): boolean =>\n  JSON.stringify(objA) === JSON.stringify(objB);\n\n/**\n * Checks whether any of a list of error strings contain one or more queries.\n * Used to determine whether a particular error has been encountered.\n */\nexport const hasErrorType = (errors: string[], exps: RegExp[]): boolean => {\n  if (!errors.length) {\n    return false;\n  }\n  for (const error of errors) {\n    for (const exp of exps) {\n      if (error.match(exp)) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const getLocalizedObject = (localizations: LocalizedObject[]) => {\n  if (localizations && localizations.length) {\n    return localizations[0];\n  }\n};\n\nexport interface ClickHandler {\n  // onClick: (event: React.MouseEvent<HTMLDivElement>) => void;\n  onMouseDown: (event: React.MouseEvent<HTMLDivElement>) => void;\n  onMouseUp: (event: React.MouseEvent<HTMLDivElement>) => void;\n}\n\n/**\n * Creates a simple click handler via onMouseDown and onMouseUp.\n * This is a necessity in order to let jsPlumb manage our element dragging.\n * @param onClick\n */\nexport const createClickHandler = (\n  onClick: (event: React.MouseEvent<HTMLElement>) => void,\n  shouldCancelClick: () => boolean = null,\n  onMouseDown?: (event: React.MouseEvent<HTMLElement>) => void\n): any => {\n  return {\n    onMouseDown: (event: React.MouseEvent<HTMLElement>) => {\n      if (onMouseDown) {\n        onMouseDown(event);\n      }\n    },\n    onMouseUp: (event: React.MouseEvent<HTMLElement>) => {\n      if (!shouldCancelClick || !shouldCancelClick()) {\n        onClick(event);\n      }\n    }\n  };\n};\n\nexport const getLocalization = (\n  obj: Action | Category | Case,\n  localization: LocalizationMap,\n  language: Asset\n) => Localization.translate(obj, language, localization[language.id]);\n\n/** istanbul ignore next */\nexport const dump = (thing: any) => console.log(JSON.stringify(thing, null, 4));\n\n/**\n * Apply emphasis style\n */\nexport const emphasize = (text: string) => <span className=\"emph\">{text}</span>;\n\n/**\n * Does property exist in our ContactProperties enum?\n * @param {string} propertyToCheck - 'name' key on react-select AutoCompleteOption\n */\nexport const propertyExists = (propertyToCheck: string) => {\n  for (const property of Object.keys(ContactProperties)) {\n    if (property.toLowerCase() === propertyToCheck.toLowerCase().trim()) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Should x element be rendered?\n */\nexport const renderIf = (predicate: boolean) => (then: JSX.Element, otherwise?: JSX.Element) =>\n  predicate ? then : otherwise ? otherwise : null;\n\n/**\n * Does the label meet our length requirements?\n * @param {string} label - label created by react-select\n */\nexport const properLabelLength = (label: string = '') =>\n  label.length > 0 && label.length <= MAX_LABEL_LENGTH;\n\n/**\n * Does the label meet our character requirements?\n * @param {string} label\n */\nexport const containsOnlyLabelChars = (label: string = '') => LABEL_CHARS.test(label);\n\n/**\n * Does the label meet our length, character requirements?\n * @param {string} label - label created by react-select\n */\nexport const isValidLabel = (label: string) =>\n  properLabelLength(label) && containsOnlyLabelChars(label);\n\nexport const isRealValue = (obj: any) => obj !== null && obj !== undefined;\n\n/* istanbul ignore next */\nexport const timeStart = (name: string) =>\n  process.env.NODE_ENV === 'development' && console.time(name);\n\n/* istanbul ignore next */\nexport const timeEnd = (name: string) =>\n  process.env.NODE_ENV === 'development' && console.timeEnd(name);\n\nexport const capitalize = (str: string) =>\n  str.replace(/(?:^|\\s)\\S/g, captured => captured.toUpperCase());\n\nexport const set = (val: any): Query<any> => ({ $set: val });\n\nexport const setTrue = (): Query<true> => set(true);\n\nexport const setFalse = (): Query<false> => set(false);\n\nexport const setNull = (): Query<null> => set(null);\n\nexport const setEmpty = (): Query<string> => set('');\n\nexport const merge = (val: any): Query<any> => ({ $merge: val });\n\nexport const unset = (val: any): Query<any> => ({ $unset: val });\n\nexport const push = (arr: any[]): Query<any[]> => ({ $push: arr });\n\n// tslint:disable-next-line:array-type\nexport const splice = (arr: Array<Array<any>>): Query<Array<Array<any>>> => ({\n  $splice: arr\n});\n\nexport const optionExists = (newOptName: string, options: any[]) =>\n  options.find(({ name }) => name.toLowerCase().trim() === newOptName.toLowerCase().trim())\n    ? true\n    : false;\n\n/* export const isOptionUnique: IsOptionUniqueHandler = ({ option, options, labelKey, valueKey }) =>\n    !propertyExists(option.name) && !optionExists(option.name, options);\n\nexport const isValidNewOption: IsValidNewOptionHandler = ({ label }) => isValidLabel(label);\n*/\n/* export const composeCreateNewOption = ({\n    idCb,\n    type\n}: {\n    idCb: LabelIdCb;\n    type: AssetType;\n}): NewOptionCreatorHandler => ({ label, labelKey, valueKey }) => ({\n    id: idCb(label, labelKey, valueKey),\n    name: label,\n    type,\n    isNew: true\n});*/\n\n/**\n * Deduplicate values in an array.\n * Pass it a key to deduplicate based on obj key.\n */\nexport const uniqueBy = (a: any[], key: string): any[] => {\n  const seen: any = {};\n  return a.filter((item: any) => {\n    const k = item[key];\n    return seen.hasOwnProperty(k) ? false : (seen[k] = true);\n  });\n};\n\nexport const downloadJSON = (obj: any, name: string): void => {\n  const dataStr =\n    'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(obj, null, 2));\n  const downloadAnchorNode = document.createElement('a');\n  downloadAnchorNode.setAttribute('href', dataStr);\n  downloadAnchorNode.setAttribute('download', name + '.json');\n  document.body.appendChild(downloadAnchorNode); // required for firefox\n  downloadAnchorNode.click();\n  downloadAnchorNode.remove();\n};\n\nexport let createUUID = (): string => {\n  return generateUUID();\n};\n\nexport const seededUUIDs = (seed: number = 1): any => {\n  let current = seed;\n  const randomNext = () => {\n    const x = Math.sin(current++) * 10000;\n    return x - Math.floor(x);\n  };\n\n  const random = (min: number, max: number): number => {\n    return Math.floor(randomNext() * (max - min) + min);\n  };\n\n  return () => {\n    const randomSeed: number[] = [];\n    for (let idx = 0; idx < 16; idx++) {\n      randomSeed.push(random(0, 250));\n    }\n    return generateUUID({ random: randomSeed });\n  };\n};\n\nexport const range = (start: number, end: number) =>\n  Array.from({ length: end - start }, (v: number, k: number) => k + start);\n\nexport const pluralize = (count: number, noun: string, suffix: string = 's'): string =>\n  `${noun}${count !== 1 ? suffix : ''}`;\n","import { react as bindCallbacks } from 'auto-bind';\nimport Button, { ButtonProps, ButtonTypes } from 'components/button/Button';\nimport shared from 'components/shared.module.scss';\nimport * as React from 'react';\nimport { renderIf } from 'utils';\n\nimport styles from './Dialog.module.scss';\n\nexport enum HeaderStyle {\n  NORMAL = 'normal',\n  BARBER = 'barber'\n}\n\nexport interface ButtonSet {\n  primary: ButtonProps;\n  secondary?: ButtonProps;\n  tertiary?: ButtonProps;\n}\n\nexport interface Tab {\n  name: string;\n  body: JSX.Element;\n  hasErrors?: boolean;\n  icon?: string;\n  checked?: boolean;\n}\n\ninterface Buttons {\n  leftButtons: JSX.Element[];\n  rightButtons: JSX.Element[];\n}\n\nexport interface DialogProps {\n  title: string;\n  subtitle?: string;\n  headerIcon?: string;\n  headerClass?: string;\n  headerStyle?: HeaderStyle;\n  buttons?: ButtonSet;\n  gutter?: JSX.Element;\n  noPadding?: boolean;\n  tabs?: Tab[];\n  className?: string;\n}\n\nexport interface DialogState {\n  activeTab: number;\n}\n\n/**\n * A component that has a front and back and can flip back and forth between them\n */\nexport default class Dialog extends React.Component<DialogProps, DialogState> {\n  private tabFocus: any = null;\n  private primaryButton: any = null;\n\n  constructor(props: DialogProps) {\n    super(props);\n    this.state = {\n      activeTab: -1\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/, /^get/]\n    });\n  }\n\n  public showTab(index: number): void {\n    this.setState({ activeTab: index });\n  }\n\n  private handlePrimaryButton(onClick: any): void {\n    onClick();\n\n    this.tabFocus = window.setTimeout(() => {\n      let foundTab = false;\n      // focus on a tab with errors\n      (this.props.tabs || []).forEach((tab: Tab, index: number) => {\n        if (tab.hasErrors) {\n          this.setState({ activeTab: index });\n          foundTab = true;\n          return;\n        }\n      });\n\n      if (!foundTab) {\n        // or focus on the main content\n        this.setState({ activeTab: -1 });\n      }\n    }, 0);\n  }\n\n  private handleKey(event: KeyboardEvent): void {\n    if (event.key === 'Enter' && event.shiftKey) {\n      if (this.primaryButton) {\n        event.preventDefault();\n        event.stopPropagation();\n        (event.target as any).blur();\n        this.primaryButton.click();\n        (event.target as any).focus();\n      } else {\n        console.log('No primary button!');\n      }\n    }\n  }\n\n  public componentDidMount(): void {\n    window.document.addEventListener('keydown', this.handleKey, {\n      capture: true\n    });\n  }\n\n  public componentWillUnmount(): void {\n    window.clearTimeout(this.tabFocus);\n    window.document.removeEventListener('keydown', this.handleKey, {\n      capture: true\n    });\n  }\n\n  private getButtons(): Buttons {\n    const rightButtons: JSX.Element[] = [];\n    const buttons = this.props.buttons || {\n      primary: null,\n      secondary: null,\n      tertiary: null\n    };\n\n    if (buttons.secondary) {\n      rightButtons.push(<Button key={0} type={ButtonTypes.secondary} {...buttons.secondary} />);\n    }\n\n    if (buttons.primary) {\n      rightButtons.push(\n        <Button\n          key={'button_' + buttons.primary.name}\n          onRef={(ref: any) => {\n            this.primaryButton = ref;\n          }}\n          onClick={() => {\n            this.handlePrimaryButton(buttons.primary.onClick);\n          }}\n          leftSpacing={true}\n          name={buttons.primary.name}\n          disabled={buttons.primary.disabled}\n          type={ButtonTypes.primary}\n        />\n      );\n    }\n\n    const leftButtons: JSX.Element[] = [];\n\n    // Our left most button if we have one\n    if (buttons.tertiary) {\n      leftButtons.push(<Button key={0} type={ButtonTypes.tertiary} {...buttons.tertiary} />);\n    }\n\n    return {\n      leftButtons,\n      rightButtons\n    };\n  }\n\n  public render(): JSX.Element {\n    const headerClasses = [styles.header];\n\n    if (this.state.activeTab > -1) {\n      headerClasses.push(styles.clickable);\n    }\n\n    if (this.props.headerClass) {\n      headerClasses.push(shared[this.props.headerClass]);\n    }\n\n    if (this.props.headerIcon) {\n      headerClasses.push(styles.iconed);\n    }\n\n    if (this.props.headerStyle === HeaderStyle.BARBER) {\n      headerClasses.push(styles.barber);\n    }\n\n    const activeClasses = [styles.dialog];\n    const { leftButtons, rightButtons } = this.getButtons();\n\n    if (this.props.className) {\n      activeClasses.push(this.props.className);\n    }\n\n    return (\n      <div className={activeClasses.join(' ')}>\n        {(this.props.tabs || []).length > 0 ? (\n          <div className={styles.tabs}>\n            {(this.props.tabs || []).map((tab: Tab, index: number) => (\n              <div\n                key={'tab_' + tab.name}\n                className={styles.tab + ' ' + (index === this.state.activeTab ? styles.active : '')}\n                onClick={(evt: React.MouseEvent<HTMLDivElement>) => {\n                  evt.stopPropagation();\n                  this.setState({ activeTab: index });\n                }}\n              >\n                {tab.name} {tab.icon ? <span className={styles.tab_icon + ' ' + tab.icon} /> : null}\n                {tab.checked ? <span className={styles.tab_icon + ' fe-check'} /> : null}\n              </div>\n            ))}\n          </div>\n        ) : null}\n        <div\n          onClick={() => {\n            this.setState({ activeTab: -1 });\n          }}\n          className={headerClasses.join(' ')}\n        >\n          {this.state.activeTab > -1 ? <div className={styles.header_overlay} /> : null}\n          {renderIf(this.props.headerIcon !== undefined)(\n            <span className={`${styles.header_icon} ${this.props.headerIcon}`} />\n          )}\n          <div className={styles.title_container}>\n            <div className={styles.title}>{this.props.title}</div>\n            <div className={styles.subtitle}>{this.props.subtitle}</div>\n          </div>\n        </div>\n        <div className={this.props.noPadding ? '' : styles.content}>\n          {this.state.activeTab > -1\n            ? this.props.tabs![this.state.activeTab].body\n            : this.props.children}\n        </div>\n\n        <div className={styles.footer}>\n          <div className={styles.buttons}>\n            {renderIf(leftButtons.length > 0)(\n              <div className={styles.left_buttons}>{leftButtons}</div>\n            )}\n            {renderIf(this.props.gutter != null)(\n              <div className={styles.gutter}>{this.props.gutter}</div>\n            )}\n            <div className={styles.right_buttons}>{rightButtons}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","enum Constants {\n  UPDATE_EDITOR_STATE = 'UPDATE_EDITOR_STATE',\n  UPDATE_NODE_EDITOR_SETTINGS = 'UPDATE_NODE_EDITOR_SETTINGS',\n  UPDATE_TRANSLATING = 'UPDATE_TRANSLATING',\n  UPDATE_BASE_LANGUAGE = 'UPDATE_BASE_LANGUAGE',\n  UPDATE_LANGUAGES = 'UPDATE_LANGUAGES',\n  UPDATE_LANGUAGE = 'UPDATE_LANGUAGE',\n  UPDATE_FETCHING_FLOW = 'FETCHING_FLOW',\n  UPDATE_DEFINITION = 'UPDATE_DEFINITION',\n  UPDATE_NODE_DRAGGING = 'UPDATE_NODE_DRAGGING',\n  UPDATE_FLOWS = 'UPDATE_FLOWS',\n  UPDATE_DEPENDENCIES = 'UPDATE_DEPENDENCIES',\n  UPDATE_PENDING_CONNECTIONS = 'UPDATE_PENDING_CONNECTIONS',\n  REMOVE_PENDING_CONNECTION = 'REMOVE_PENDING_CONNECTION',\n  UPDATE_COMPONENTS = 'UPDATE_COMPONENTS',\n  UPDATE_CONTACT_FIELDS = 'UPDATE_CONTACT_FIELDS',\n  UPDATE_GROUPS = 'UPDATE_GROUPS',\n  UPDATE_RESULT_MAP = 'UPDATE_RESULT_MAP',\n  UPDATE_ASSET_MAP = 'UPDATE_ASSET_MAP',\n  UPDATE_NODES = 'UPDATE_NODES',\n  UPDATE_EXITS = 'UPDATE_EXITS',\n  UPDATE_NODE_EDITOR_OPEN = 'UPDATE_NODE_EDITOR_OPEN',\n  UPDATE_CREATE_NODE_POSITION = 'UPDATE_CREATE_NODE_POSITION',\n  UPDATE_DRAG_GROUP = 'UPDATE_DRAG_GROUP',\n  UPDATE_TYPE_CONFIG = 'UPDATE_TYPE_CONFIG',\n  UPDATE_USER_ADDING_ACTION = 'UPDATE_USER_ADDING_ACTION',\n  INCREMENT_SUGGESTED_RESULT_NAME_COUNT = 'INCREMENT_SUGGESTED_RESULT_NAME_COUNT'\n}\n\nexport default Constants;\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\n\n// tslint:disable-next-line: no-empty-interface\ninterface FixyProps {}\n\ninterface FixyState {\n  top: number;\n  fixed: boolean;\n}\n\nexport class Fixy extends React.PureComponent<FixyProps, FixyState> {\n  private ele!: HTMLDivElement | null;\n\n  constructor(props: FixyProps) {\n    super(props);\n    this.state = {\n      top: 0,\n      fixed: false\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleScroll(): void {\n    const fixed = window.scrollY > this.state.top;\n    this.setState({ fixed });\n  }\n\n  public componentWillUnmount(): void {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  public componentDidMount(): void {\n    const top = this.ele!.getBoundingClientRect().top + window.scrollY;\n    const fixed = window.scrollY > top;\n    this.setState({ top, fixed });\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  public render(): JSX.Element {\n    let styles: React.CSSProperties = { position: 'absolute' };\n    if (this.state.fixed) {\n      styles = {\n        position: 'fixed',\n        top: 0\n      };\n    }\n\n    return (\n      <div\n        ref={ele => {\n          this.ele = ele;\n        }}\n        style={styles}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","import { FlowDefinition, FlowNode, UINode } from 'flowTypes';\nimport { combineReducers } from 'redux';\nimport ActionTypes, {\n  UpdateAssetsAction,\n  UpdateBaseLanguageAction,\n  UpdateContactFieldsAction,\n  UpdateDefinitionAction,\n  UpdateDependenciesAction,\n  UpdateNodesAction\n} from 'store/actionTypes';\nimport Constants from 'store/constants';\n\n// tslint:disable:no-shadowed-variable\nexport interface RenderNodeMap {\n  [uuid: string]: RenderNode;\n}\n\nexport interface RenderNode {\n  ui: UINode;\n  node: FlowNode;\n  inboundConnections: { [nodeUUID: string]: string };\n  ghost?: boolean;\n}\n\nexport interface FunctionExample {\n  template: string;\n  output: string;\n}\n\nexport interface CompletionOption {\n  name?: string;\n  summary: string;\n\n  // functions\n  signature?: string;\n  detail?: string;\n  examples?: FunctionExample[];\n}\n\nexport interface ContactFields {\n  [snakedFieldName: string]: string;\n}\n\nexport enum AssetType {\n  Channel = 'channel',\n  Currency = 'currency',\n  Template = 'template',\n  Revision = 'revision',\n  Flow = 'flow',\n  Group = 'group',\n  Field = 'field',\n  Result = 'result',\n  Contact = 'contact',\n  Resthook = 'resthook',\n  URN = 'urn',\n  Label = 'label',\n  Language = 'language',\n  Environment = 'environment',\n  Remove = 'remove',\n  ContactProperty = 'property',\n  Scheme = 'scheme',\n  Expression = 'expression'\n}\n\nexport interface Reference {\n  nodeUUID: string;\n  actionUUID?: string;\n}\n\nexport interface Asset {\n  id: string;\n  name: string;\n  type: AssetType;\n\n  order?: number;\n  references?: Reference[];\n  isNew?: boolean;\n  content?: any;\n}\n\nexport const REMOVE_VALUE_ASSET = {\n  id: AssetType.Remove,\n  name: 'Remove Value',\n  type: AssetType.Remove\n};\nexport const DEFAULT_LANGUAGE = {\n  id: 'base',\n  name: 'Default',\n  type: AssetType.Language\n};\n\nexport interface AssetStore {\n  [assetType: string]: Assets;\n}\n\nexport interface AssetMap {\n  [id: string]: Asset;\n}\n\nexport interface Assets {\n  // our local cache of assets\n  items: AssetMap;\n\n  type: AssetType;\n\n  // an optional endpoint to search for more\n  endpoint?: string;\n\n  // option name for the id when fetching remotely\n  id?: string;\n\n  // have our assets already been loaded\n  prefetched?: boolean;\n}\n\nexport interface FlowContext {\n  dependencies: FlowDefinition[];\n  baseLanguage: Asset;\n  contactFields: ContactFields;\n  definition: FlowDefinition;\n  nodes: { [uuid: string]: RenderNode };\n  assetStore: AssetStore;\n}\n\n// Initial state\nexport const initialState: FlowContext = {\n  definition: null,\n  dependencies: null,\n  baseLanguage: null,\n  contactFields: {},\n  nodes: {},\n  assetStore: {}\n};\n\n// Action Creators\nexport const updateDefinition = (definition: FlowDefinition): UpdateDefinitionAction => ({\n  type: Constants.UPDATE_DEFINITION,\n  payload: {\n    definition\n  }\n});\n\nexport const updateNodes = (nodes: RenderNodeMap): UpdateNodesAction => ({\n  type: Constants.UPDATE_NODES,\n  payload: {\n    nodes\n  }\n});\n\nexport const updateDependencies = (dependencies: FlowDefinition[]): UpdateDependenciesAction => ({\n  type: Constants.UPDATE_DEPENDENCIES,\n  payload: {\n    dependencies\n  }\n});\n\nexport const updateBaseLanguage = (baseLanguage: Asset): UpdateBaseLanguageAction => ({\n  type: Constants.UPDATE_BASE_LANGUAGE,\n  payload: {\n    baseLanguage\n  }\n});\n\nexport const updateContactFields = (contactFields: ContactFields): UpdateContactFieldsAction => ({\n  type: Constants.UPDATE_CONTACT_FIELDS,\n  payload: {\n    contactFields\n  }\n});\n\nexport const updateAssets = (assets: AssetStore): UpdateAssetsAction => ({\n  type: Constants.UPDATE_ASSET_MAP,\n  payload: {\n    assets\n  }\n});\n\n// Reducers\nexport const definition = (\n  state: FlowDefinition = initialState.definition,\n  action: ActionTypes\n) => {\n  switch (action.type) {\n    case Constants.UPDATE_DEFINITION:\n      return action.payload.definition;\n    default:\n      return state;\n  }\n};\n\nexport const nodes = (state: {} = initialState.nodes, action: ActionTypes) => {\n  switch (action.type) {\n    case Constants.UPDATE_NODES:\n      return action.payload.nodes;\n    default:\n      return state;\n  }\n};\n\nexport const dependencies = (\n  state: FlowDefinition[] = initialState.dependencies,\n  action: ActionTypes\n) => {\n  switch (action.type) {\n    case Constants.UPDATE_DEPENDENCIES:\n      return action.payload.dependencies;\n    default:\n      return state;\n  }\n};\n\nexport const assetStore = (state: AssetStore = initialState.assetStore, action: ActionTypes) => {\n  switch (action.type) {\n    case Constants.UPDATE_ASSET_MAP:\n      return action.payload.assets;\n    default:\n      return state;\n  }\n};\n\nexport const baseLanguage = (state: Asset = initialState.baseLanguage, action: ActionTypes) => {\n  switch (action.type) {\n    case Constants.UPDATE_BASE_LANGUAGE:\n      return action.payload.baseLanguage;\n    default:\n      return state;\n  }\n};\n\nexport const contactFields = (\n  state: ContactFields = initialState.contactFields,\n  action: ActionTypes\n) => {\n  switch (action.type) {\n    case Constants.UPDATE_CONTACT_FIELDS:\n      return action.payload.contactFields;\n    default:\n      return state;\n  }\n};\n\n// Root reducer\nexport default combineReducers({\n  definition,\n  nodes,\n  dependencies,\n  assetStore,\n  baseLanguage,\n  contactFields\n});\n","export enum FlowTypes {\n  MESSAGE = 'message',\n  VOICE = 'voice',\n  SURVEY = 'message_offline',\n  NONE = '-'\n}\n\nexport enum Types {\n  execute_actions = 'execute_actions',\n  add_contact_urn = 'add_contact_urn',\n  add_contact_groups = 'add_contact_groups',\n  add_input_labels = 'add_input_labels',\n  remove_contact_groups = 'remove_contact_groups',\n  set_contact_channel = 'set_contact_channel',\n  set_contact_field = 'set_contact_field',\n  set_contact_name = 'set_contact_name',\n  set_contact_language = 'set_contact_language',\n  set_run_result = 'set_run_result',\n  call_resthook = 'call_resthook',\n  call_webhook = 'call_webhook',\n  send_msg = 'send_msg',\n  send_email = 'send_email',\n  send_broadcast = 'send_broadcast',\n  enter_flow = 'enter_flow',\n  start_session = 'start_session',\n  transfer_airtime = 'transfer_airtime',\n  split_by_airtime = 'split_by_airtime',\n  split_by_expression = 'split_by_expression',\n  split_by_contact_field = 'split_by_contact_field',\n  split_by_run_result = 'split_by_run_result',\n  split_by_run_result_delimited = 'split_by_run_result_delimited',\n  split_by_groups = 'split_by_groups',\n  split_by_random = 'split_by_random',\n  split_by_resthook = 'split_by_resthook',\n  split_by_subflow = 'split_by_subflow',\n  split_by_webhook = 'split_by_webhook',\n  wait_for_response = 'wait_for_response',\n  wait_for_menu = 'wait_for_menu',\n  wait_for_digits = 'wait_for_digits',\n  wait_for_audio = 'wait_for_audio',\n  wait_for_video = 'wait_for_video',\n  wait_for_location = 'wait_for_location',\n  wait_for_image = 'wait_for_image',\n  missing = 'missing',\n  say_msg = 'say_msg',\n  play_audio = 'play_audio'\n}\n\nexport enum Operators {\n  has_any_word = 'has_any_word',\n  has_all_words = 'has_all_words',\n  has_phrase = 'has_phrase',\n  has_only_phrase = 'has_only_phrase',\n  has_beginning = 'has_beginning',\n  has_text = 'has_text',\n  has_date = 'has_date',\n  has_date_lt = 'has_date_lt',\n  has_date_eq = 'has_date_eq',\n  has_date_gt = 'has_date_gt',\n  has_time = 'has_time',\n  has_number = 'has_number',\n  has_number_between = 'has_number_between',\n  has_number_lt = 'has_number_lt',\n  has_number_lte = 'has_number_lte',\n  has_number_eq = 'has_number_eq',\n  has_number_gte = 'has_number_gte',\n  has_number_gt = 'has_number_gt',\n  has_run_status = 'has_run_status',\n  has_only_text = 'has_only_text',\n  has_group = 'has_group',\n  has_phone = 'has_phone',\n  has_email = 'has_email',\n  has_value = 'has_value',\n  has_district = 'has_district',\n  has_state = 'has_state',\n  has_ward = 'has_ward',\n  has_pattern = 'has_pattern',\n  has_error = 'has_error'\n}\n\nexport interface FlowTypeVisibility {\n  visibility?: FlowTypes[];\n}\n\nexport interface Type extends FlowTypeVisibility {\n  type: Types;\n  name: string;\n  description: string;\n  component?: any;\n  form?: React.ComponentClass<any>;\n  aliases?: string[];\n  localization?: React.ComponentClass<any>;\n  localizeableKeys?: string[];\n}\n\nexport interface Operator extends FlowTypeVisibility {\n  type: Operators;\n  verboseName: string;\n  operands: number;\n  categoryName?: string;\n}\n\nexport interface OperatorMap {\n  [propName: string]: Operator;\n}\n\nexport const HIDDEN = [FlowTypes.NONE];\nexport const VOICE = [FlowTypes.VOICE];\nexport const SURVEY = [FlowTypes.SURVEY];\nexport const TEXT_TYPES = [FlowTypes.MESSAGE, FlowTypes.SURVEY];\nexport const ONLINE = [FlowTypes.MESSAGE, FlowTypes.VOICE];\n","import { Contact, Endpoints, Group, RecipientsAction } from 'flowTypes';\nimport * as React from 'react';\nimport { Asset, AssetType } from 'store/flowContext';\nimport { FormEntry, NodeEditorSettings, ValidationFailure } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\n\nconst styles = require('components/shared.module.scss');\n\nexport const getActionUUID = (nodeSettings: NodeEditorSettings, currentType: string): string => {\n  if (nodeSettings.originalAction && nodeSettings.originalAction.type === currentType) {\n    return nodeSettings.originalAction.uuid;\n  }\n\n  return createUUID();\n};\n\nexport const getRecipients = (action: RecipientsAction): Asset[] => {\n  let selected = (action.groups || []).map((group: Group) => {\n    return { id: group.uuid, name: group.name, type: AssetType.Group };\n  });\n\n  selected = selected.concat(\n    (action.contacts || []).map((contact: Contact) => {\n      return { id: contact.uuid, name: contact.name, type: AssetType.Contact };\n    })\n  );\n\n  selected = selected.concat(\n    (action.legacy_vars || []).map((expression: string) => {\n      return { id: expression, name: expression, type: AssetType.Expression };\n    })\n  );\n\n  return selected;\n};\n\nexport const renderAssetList = (\n  assets: Asset[],\n  max: number = 10,\n  endpoints: Endpoints\n): JSX.Element[] => {\n  return assets.reduce((elements, asset, idx) => {\n    if (idx <= max - 1) {\n      elements.push(renderAsset(asset, endpoints));\n    } else if (idx > max - 1 && elements.length === max) {\n      elements.push(<div key=\"ellipses\">...</div>);\n    }\n    return elements;\n  }, []);\n};\n\nexport const renderAsset = (asset: Asset, endpoints: Endpoints) => {\n  switch (asset.type) {\n    case AssetType.Group:\n      return (\n        <div className={styles.node_asset} key={asset.id}>\n          <span className={`${styles.node_group} fe-group`} />\n          {asset.name}\n        </div>\n      );\n    case AssetType.Label:\n      return (\n        <div className={styles.node_asset} key={asset.id}>\n          <span className={`${styles.node_label} fe-label`} />\n          {asset.name}\n        </div>\n      );\n    case AssetType.Flow:\n      return (\n        <div className={styles.node_asset} key={asset.id}>\n          <span className={`${styles.node_label} fe-split`} />\n          <a\n            onMouseDown={(e: any) => {\n              e.preventDefault();\n              e.stopPropagation();\n            }}\n            onMouseUp={(e: any) => {\n              e.preventDefault();\n              e.stopPropagation();\n            }}\n            href={`${endpoints.editor}/${asset.id}`}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {asset.name}\n          </a>\n        </div>\n      );\n  }\n\n  return (\n    <div className={styles.node_asset} key={asset.id}>\n      {asset.name}\n    </div>\n  );\n};\n\nexport const getAllErrors = (entry: FormEntry): ValidationFailure[] => {\n  return (entry.validationFailures || []).concat(entry.persistantFailures || []);\n};\n\nexport const hasErrors = (entry: FormEntry): boolean => {\n  return getAllErrors(entry).length > 0;\n};\n\nexport const getExpressions = (assets: Asset[]): any[] => {\n  return assets\n    .filter((asset: Asset) => asset.type === AssetType.Expression)\n    .map((asset: Asset) => {\n      return asset.id;\n    });\n};\n\nexport const getRecipientsByAsset = (assets: Asset[], type: AssetType): any[] => {\n  return assets\n    .filter((asset: Asset) => asset.type === type)\n    .map((asset: Asset) => {\n      return { uuid: asset.id, name: asset.name };\n    });\n};\n","import { UpdateLocalizations } from 'components/nodeeditor/NodeEditor';\nimport { Type } from 'config/interfaces';\nimport { AnyAction, ContactProperties } from 'flowTypes';\nimport { Asset, AssetStore, AssetType, RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport { DispatchWithState, GetState } from 'store/thunks';\nimport { titleCase } from 'utils';\n\nexport interface ActionFormProps {\n  // action details\n  nodeSettings: NodeEditorSettings;\n  typeConfig: Type;\n  assetStore: AssetStore;\n\n  addAsset(assetType: string, asset: Asset): void;\n\n  // update handlers\n  updateAction(\n    action: AnyAction,\n    onUpdated?: (dispatch: DispatchWithState, getState: GetState) => void\n  ): void;\n\n  // modal notifiers\n  onTypeChange(config: Type): void;\n  onClose(canceled: boolean): void;\n}\n\nexport interface RouterFormProps {\n  nodeSettings: NodeEditorSettings;\n  typeConfig: Type;\n\n  assetStore: AssetStore;\n\n  // update handlers\n  updateRouter(renderNode: RenderNode): void;\n\n  // modal notifiers\n  onTypeChange(config: Type): void;\n  onClose(canceled: boolean): void;\n}\n\nexport interface LocalizationFormProps {\n  language: Asset;\n  nodeSettings: NodeEditorSettings;\n  updateLocalizations(languageCode: string, localizations: any[]): UpdateLocalizations;\n  onClose(canceled: boolean): void;\n}\n\nexport const NAME_PROPERTY: Asset = {\n  name: titleCase(ContactProperties.Name),\n  id: ContactProperties.Name,\n  type: AssetType.ContactProperty\n};\n\nexport const CHANNEL_PROPERTY: Asset = {\n  name: titleCase(ContactProperties.Channel),\n  id: ContactProperties.Channel,\n  type: AssetType.ContactProperty\n};\n\nexport const LANGUAGE_PROPERTY: Asset = {\n  name: titleCase(ContactProperties.Language),\n  id: ContactProperties.Language,\n  type: AssetType.ContactProperty\n};\n","import { FlowEditorConfig } from 'flowTypes';\nimport * as React from 'react';\n\nexport const fakePropType: any = (): any => null;\nfakePropType.isRequired = (): any => null;\n\ninterface ConfigProviderProps {\n  config: FlowEditorConfig;\n  children: any;\n}\n\nexport interface ConfigProviderContext {\n  config: FlowEditorConfig;\n}\n\n// ----------------------------------------------------------------------------------------------\n\nexport const SINGLE_CHILD_ERROR = 'ConfigProvider expects only one child component.';\nexport const VALID_CHILD_ERROR =\n  'ConfigProvider expects a valid React element: https://reactjs.org/docs/react-api.html#isvalidelement';\n\nexport default class ConfigProvider extends React.Component<ConfigProviderProps> {\n  public static childContextTypes = {\n    config: fakePropType,\n    assetService: fakePropType\n  };\n\n  constructor(props: ConfigProviderProps) {\n    super(props);\n\n    if (React.Children.count(props.children) > 1) {\n      throw new Error(SINGLE_CHILD_ERROR);\n    } else if (!React.isValidElement(props.children)) {\n      throw new Error(VALID_CHILD_ERROR);\n    }\n  }\n\n  public getChildContext(): ConfigProviderContext {\n    return {\n      config: this.props.config\n    };\n  }\n\n  public render(): JSX.Element {\n    return React.Children.only(this.props.children);\n  }\n}\n","import * as React from 'react';\nimport { renderAssetList } from 'components/flow/actions/helpers';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { AddLabels } from 'flowTypes';\nimport { AssetType } from 'store/flowContext';\n\nexport const MAX_TO_SHOW = 3;\n\nconst AddLabelsComp: React.SFC<AddLabels> = ({ labels }, context: any): JSX.Element => (\n  <>\n    {renderAssetList(\n      labels.map(label => {\n        return { id: label.uuid, name: label.name, type: AssetType.Label };\n      }),\n      MAX_TO_SHOW,\n      context.config.endpoints\n    )}\n  </>\n);\n\nAddLabelsComp.contextTypes = {\n  config: fakePropType\n};\n\nexport default AddLabelsComp;\n","import { Template } from 'flowTypes';\nimport { Asset } from 'store/flowContext';\n\n/**\n * Sorts all search results by name\n */\nexport const sortByName = (a: Asset, b: Asset): number => {\n  if (a.type !== b.type) {\n    return b.type.localeCompare(a.type);\n  }\n\n  return a.name.localeCompare(b.name);\n};\n\nexport const hasPendingTranslation = (template: Template) => {\n  return !!template.translations.find(translation => translation.status === 'pending');\n};\n\nexport const hasUseableTranslation = (template: Template) => {\n  return !!template.translations.find(\n    translation => translation.status === 'pending' || translation.status === 'approved'\n  );\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport * as React from 'react';\nimport { FormEntry, ValidationFailure } from 'store/nodeEditor';\nimport { renderIf } from 'utils';\n\nimport styles from './FormElement.module.scss';\n\nconst cx: any = classNames.bind(styles);\n\nexport interface FormElementProps {\n  name: string;\n  helpText?: string;\n  entry?: FormEntry;\n  showLabel?: boolean;\n  __className?: string;\n  border?: boolean;\n  sendMsgError?: boolean;\n  kaseError?: boolean;\n  attribError?: boolean;\n  hideError?: boolean;\n}\n\nexport default class FormElement extends React.PureComponent<FormElementProps> {\n  constructor(props: FormElementProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^get/, /^has/]\n    });\n  }\n  private getName(): JSX.Element {\n    return renderIf(\n      this.props.showLabel &&\n        this.props.name !== undefined &&\n        this.props.name !== null &&\n        this.props.name.length > 0\n    )(<div className={styles.label}>{this.props.name}</div>);\n  }\n\n  private getHelpText(): JSX.Element {\n    return renderIf(this.props.helpText != null)(\n      <div className={styles.help_text}>{this.props.helpText} </div>\n    );\n  }\n\n  private hasErrors(): boolean {\n    return this.getMergedErrors().length > 0;\n  }\n\n  private getMergedErrors(): ValidationFailure[] {\n    if (this.props.entry) {\n      return (this.props.entry.validationFailures || []).concat(\n        this.props.entry.persistantFailures || []\n      );\n    }\n    return [];\n  }\n\n  private getErrors(): JSX.Element {\n    if (this.hasErrors() && !this.props.hideError) {\n      const errors = this.getMergedErrors().map((failure, idx) => {\n        const className = cx({\n          [styles.error]: true,\n          [styles.send_msg_error]: this.props.sendMsgError === true\n        });\n        return (\n          <div key={idx} className={className}>\n            <div className={styles.arrow_up} />\n            <div>{failure.message}</div>\n          </div>\n        );\n      });\n      return <div className={styles.error_list}>{errors}</div>;\n    }\n    return null;\n  }\n\n  public render(): JSX.Element {\n    const name: JSX.Element = this.getName();\n    const helpText: JSX.Element = this.getHelpText();\n    const errorsToDisplay: JSX.Element = this.getErrors();\n\n    const className = cx({\n      [styles.ele]: true,\n      [styles.border]: this.props.border,\n      [styles.invalid]: this.hasErrors(),\n      [this.props.__className]: this.props.__className !== undefined\n    });\n\n    return (\n      <div className={className}>\n        {name}\n        {this.props.children}\n        {helpText}\n        {errorsToDisplay}\n      </div>\n    );\n  }\n}\n","import { AssetType } from 'store/flowContext';\n\nexport const currencies = {\n  ARS: {\n    id: 'ARS',\n    name: 'Argentine Peso',\n    type: AssetType.Currency\n  },\n  AUD: {\n    id: 'AUD',\n    name: 'Australian Dollar',\n    type: AssetType.Currency\n  },\n  BIF: {\n    id: 'BIF',\n    name: 'Burundi Franc',\n    type: AssetType.Currency\n  },\n  BRL: {\n    id: 'BRL',\n    name: 'Brazilian Real',\n    type: AssetType.Currency\n  },\n\n  CAD: {\n    id: 'CAD',\n    name: 'Canadian Dollar',\n    type: AssetType.Currency\n  },\n  CDF: {\n    id: 'CDF',\n    name: 'Congolese Franc',\n    type: AssetType.Currency\n  },\n  CLP: {\n    id: 'CLP',\n    name: 'Chilean Peso',\n    type: AssetType.Currency\n  },\n  COP: {\n    id: 'COP',\n    name: 'Colombian Peso',\n    type: AssetType.Currency\n  },\n  DJF: {\n    id: 'DJF',\n    name: 'Djibouti Franc',\n    type: AssetType.Currency\n  },\n  DOP: {\n    id: 'DOP',\n    name: 'Dominican Peso',\n    type: AssetType.Currency\n  },\n  DZD: {\n    id: 'DZD',\n    name: 'Algerian Dinar',\n    type: AssetType.Currency\n  },\n  EUR: {\n    id: 'EUR',\n    name: 'Euro',\n    type: AssetType.Currency\n  },\n  GBP: {\n    id: 'GBP',\n    name: 'Pound Sterling',\n    type: AssetType.Currency\n  },\n  GHS: {\n    id: 'GHS',\n    name: 'Ghana Cedi',\n    type: AssetType.Currency\n  },\n  GNF: {\n    id: 'GNF',\n    name: 'Guinean Franc',\n    type: AssetType.Currency\n  },\n  KES: {\n    id: 'KES',\n    name: 'Kenyan Shilling',\n    type: AssetType.Currency\n  },\n  LBP: {\n    id: 'LBP',\n    name: 'Lebanese Pound',\n    type: AssetType.Currency\n  },\n  LKR: {\n    id: 'LKR',\n    name: 'Sri Lanka Rupee',\n    type: AssetType.Currency\n  },\n  LRD: {\n    id: 'LRD',\n    name: 'Liberian Dollar',\n    type: AssetType.Currency\n  },\n  MWK: {\n    id: 'MWK',\n    name: 'Malawi Kwacha',\n    type: AssetType.Currency\n  },\n  MXN: {\n    id: 'MXN',\n    name: 'Mexican Peso',\n    type: AssetType.Currency\n  },\n  NAD: {\n    id: 'NAD',\n    name: 'Namibia Dollar',\n    type: AssetType.Currency\n  },\n  NPR: {\n    id: 'NPR',\n    name: 'Nepalese Rupee',\n    type: AssetType.Currency\n  },\n  NZD: {\n    id: 'NZD',\n    name: 'New Zealand Dollar',\n    type: AssetType.Currency\n  },\n  PHP: {\n    id: 'PHP',\n    name: 'Philippine Piso',\n    type: AssetType.Currency\n  },\n  PKR: {\n    id: 'PKR',\n    name: 'Pakistan Rupee',\n    type: AssetType.Currency\n  },\n  RUB: {\n    id: 'RUB',\n    name: 'Russian Ruble',\n    type: AssetType.Currency\n  },\n  RWF: {\n    id: 'RWF',\n    name: 'Rwanda Franc',\n    type: AssetType.Currency\n  },\n  SDG: {\n    id: 'SDG',\n    name: 'Sudanese Pound',\n    type: AssetType.Currency\n  },\n  SGD: {\n    id: 'SGD',\n    name: 'Singapore Dollar',\n    type: AssetType.Currency\n  },\n  SLL: {\n    id: 'SLL',\n    name: 'Leone',\n    type: AssetType.Currency\n  },\n  SOS: {\n    id: 'SOS',\n    name: 'Somali Shilling',\n    type: AssetType.Currency\n  },\n  SRD: {\n    id: 'SRD',\n    name: 'Surinam Dollar',\n    type: AssetType.Currency\n  },\n  SVC: {\n    id: 'SVC',\n    name: 'El Salvador Colon',\n    type: AssetType.Currency\n  },\n  TND: {\n    id: 'TND',\n    name: 'Tunisian Dinar',\n    type: AssetType.Currency\n  },\n  TRY: {\n    id: 'TRY',\n    name: 'Turkish Lira',\n    type: AssetType.Currency\n  },\n  TZS: {\n    id: 'TZS',\n    name: 'Tanzanian Shilling',\n    type: AssetType.Currency\n  },\n  UGX: {\n    id: 'UGX',\n    name: 'Uganda Shilling',\n    type: AssetType.Currency\n  },\n  USD: {\n    id: 'USD',\n    name: 'US Dollar',\n    type: AssetType.Currency\n  },\n  UYU: {\n    id: 'UYU',\n    name: 'Peso Uruguayo',\n    type: AssetType.Currency\n  },\n  UZS: {\n    id: 'UZS',\n    name: 'Uzbekistan Sum',\n    type: AssetType.Currency\n  },\n  VEF: {\n    id: 'VEF',\n    name: 'Bolívar',\n    type: AssetType.Currency\n  },\n  XCD: {\n    id: 'XCD',\n    name: 'East Caribbean Dollar',\n    type: AssetType.Currency\n  },\n  YER: {\n    id: 'YER',\n    name: 'Yemeni Rial',\n    type: AssetType.Currency\n  },\n  ZAR: {\n    id: 'ZAR',\n    name: 'Rand',\n    type: AssetType.Currency\n  },\n  ZMW: {\n    id: 'ZMW',\n    name: 'Zambian Kwacha',\n    type: AssetType.Currency\n  },\n  ZWL: {\n    id: 'ZWL',\n    name: 'Zimbabwe Dollar',\n    type: AssetType.Currency\n  }\n};\n","/* istanbul ignore file */\nimport axios, { AxiosResponse } from 'axios';\nimport { Revision } from 'components/revisions/RevisionExplorer';\nimport { Endpoints, Exit, FlowDefinition } from 'flowTypes';\nimport { currencies } from 'store/currencies';\nimport { Activity, RecentMessage } from 'store/editor';\nimport { Asset, AssetMap, Assets, AssetStore, AssetType } from 'store/flowContext';\nimport { assetListToMap } from 'store/helpers';\n\nexport interface FlowDetails {\n  uuid: string;\n  name: string;\n  definition: FlowDefinition;\n  dependencies: FlowDefinition[];\n}\n\n// Configure axios to always send JSON requests\naxios.defaults.headers.post['Content-Type'] = 'application/javascript';\naxios.defaults.responseType = 'json';\n\n/**\n * Gets the path activity and the count of active particpants at each node\n * @param {string} flowUUID - The UUID of the current flow\n * @param {string} activityEndpoint - The URL path to the endpoint providing this data\n * @returns {Object} - An object representation of the flow's activty\n */\nexport const getActivity = (\n  activityEndpoint: string,\n  flowUUID: string,\n  headers = {}\n): Promise<Activity> =>\n  new Promise<Activity>((resolve, reject) =>\n    axios\n      .get(`${activityEndpoint}?flow=${flowUUID}`, { headers })\n      .then((response: AxiosResponse) => resolve(response.data as Activity))\n      .catch(error => reject(error))\n  );\n\nexport interface Cancel {\n  reject?: () => void;\n}\n\nexport const saveRevision = (endpoint: string, definition: FlowDefinition): Promise<Revision> => {\n  const csrf = getCookie('csrftoken');\n  const headers = csrf ? { 'X-CSRFToken': csrf } : {};\n  return new Promise<Revision>((resolve, reject) => {\n    axios\n      .post(endpoint, definition, { headers })\n      .then((response: AxiosResponse) => {\n        resolve(response.data.revision as Revision);\n      })\n      .catch(error => reject(error));\n  });\n};\n\nexport const getRecentMessages = (\n  recentsEndpoint: string,\n  exit: Exit,\n  cancel: Cancel\n): Promise<RecentMessage[]> =>\n  new Promise<RecentMessage[]>((resolve, reject) => {\n    cancel.reject = reject;\n    return axios\n      .get(`${recentsEndpoint}?exits=${exit.uuid}&to=${exit.destination_uuid}`)\n      .then((response: AxiosResponse) => {\n        const recentMessages: RecentMessage[] = [];\n        for (const row of response.data) {\n          recentMessages.push({ text: row.text, sent: new Date(row.sent) });\n        }\n\n        resolve(response.data as RecentMessage[]);\n      })\n      .catch(error => reject(error));\n  });\n\n/** Get the value for a named cookie */\nexport const getCookie = (name: string): string => {\n  for (const cookie of document.cookie.split(';')) {\n    const idx = cookie.indexOf('=');\n    let key = cookie.substr(0, idx);\n    let value = cookie.substr(idx + 1);\n\n    // no spaces allowed\n    key = key.trim();\n    value = value.trim();\n\n    if (key === name) {\n      return value;\n    }\n  }\n  return null;\n};\n\nexport const postNewAsset = (assets: Assets, payload: any): Promise<Asset> => {\n  // if we have a csrf in our cookie, pass it along as a header\n  const csrf = getCookie('csrftoken');\n  const headers = csrf ? { 'X-CSRFToken': csrf } : {};\n\n  return new Promise<Asset>((resolve, reject) => {\n    axios\n      .post(assets.endpoint, payload, { headers })\n      .then((response: AxiosResponse) => {\n        resolve(resultToAsset(response.data, assets.type, assets.id));\n      })\n      .catch(error => reject(error));\n  });\n};\n\nexport const fetchAsset = (assets: Assets, id: string): Promise<Asset> => {\n  return new Promise<Asset>((resolve, reject) => {\n    axios\n      .get(assets.endpoint)\n      .then((response: AxiosResponse) => {\n        const match: Asset = response.data.results\n          .map((result: any) => resultToAsset(result, assets.type, assets.id))\n          .find((asset: Asset) => asset.id === id);\n        resolve(match);\n      })\n      .catch(error => reject(error));\n  });\n};\n\ninterface AssetPage {\n  assets: Asset[];\n  next: string;\n}\n\nexport const getAssetPage = (url: string, type: AssetType, id: string): Promise<AssetPage> => {\n  return new Promise<AssetPage>((resolve, reject) => {\n    axios\n      .get(url)\n      .then((response: AxiosResponse) => {\n        const assets: Asset[] = response.data.results.map((result: any, idx: number) => {\n          const asset = resultToAsset(result, type, id);\n          asset.order = idx;\n          return asset;\n        });\n        resolve({ assets, next: response.data.next });\n      })\n      .catch(error => reject(error));\n  });\n};\n\nexport const getAssets = async (url: string, type: AssetType, id: string): Promise<Asset[]> => {\n  if (!url) {\n    return new Promise<Asset[]>((resolve, reject) => resolve([]));\n  }\n\n  let assets: Asset[] = [];\n  let pageUrl = url;\n  while (pageUrl) {\n    const assetPage = await getAssetPage(pageUrl, type, id);\n    assets = assets.concat(assetPage.assets);\n    pageUrl = assetPage.next;\n  }\n  return assets;\n};\n\nexport const resultToAsset = (result: any, type: AssetType, id: string): Asset => {\n  const idKey = id || 'uuid';\n  const asset: Asset = {\n    name: result.name || result.text || result.label || result[idKey],\n    id: result[idKey],\n    type\n  };\n\n  delete result[idKey];\n  delete result.name;\n  delete result.text;\n\n  asset.content = result;\n\n  return asset;\n};\n\nexport const isMatch = (\n  input: string,\n  asset: Asset,\n  shouldExclude: (asset: Asset) => boolean\n): boolean => {\n  if (shouldExclude && shouldExclude(asset)) {\n    return false;\n  }\n  return asset.name.toLowerCase().includes(input.toLowerCase());\n};\n\n/**\n * Searches an AssetMap for a substring\n */\nexport const searchAssetMap = (\n  query: string,\n  assets: AssetMap,\n  additionalOptions?: Asset[],\n  shouldExclude?: (asset: Asset) => boolean\n): Asset[] => {\n  const search = query.toLowerCase();\n  let matches = Object.keys(assets)\n    .map(key => assets[key])\n    .filter((asset: Asset) => isMatch(search, asset, shouldExclude));\n\n  // include our additional matches if we have any\n  matches = matches\n    .concat(additionalOptions || [])\n    .filter((asset: Asset) => isMatch(search, asset, shouldExclude));\n\n  return matches;\n};\n\nexport const createAssetStore = (endpoints: Endpoints): Promise<AssetStore> => {\n  return new Promise<AssetStore>((resolve, reject) => {\n    const assetStore: AssetStore = {\n      channels: {\n        endpoint: getURL(endpoints.channels),\n        type: AssetType.Channel,\n        items: {}\n      },\n      languages: {\n        endpoint: getURL(endpoints.languages),\n        type: AssetType.Language,\n        items: {},\n        id: 'iso'\n      },\n      flows: {\n        endpoint: getURL(endpoints.flows),\n        type: AssetType.Flow,\n        items: {}\n      },\n      fields: {\n        endpoint: getURL(endpoints.fields),\n        type: AssetType.Field,\n        id: 'key',\n        items: {}\n      },\n      groups: {\n        endpoint: getURL(endpoints.groups),\n        type: AssetType.Group,\n        items: {}\n      },\n      revisions: {\n        endpoint: getURL(endpoints.revisions),\n        type: AssetType.Revision,\n        id: 'id',\n        items: {}\n      },\n      labels: {\n        endpoint: getURL(endpoints.labels),\n        type: AssetType.Label,\n        items: {}\n      },\n      results: {\n        type: AssetType.Result,\n        items: {}\n      },\n      recipients: {\n        endpoint: getURL(endpoints.recipients),\n        type: AssetType.Contact || AssetType.Group || AssetType.URN,\n        items: {},\n        id: 'id'\n      },\n      resthooks: {\n        endpoint: getURL(endpoints.resthooks),\n        type: AssetType.Resthook,\n        id: 'resthook',\n        items: {}\n      },\n      templates: {\n        endpoint: getURL(endpoints.templates),\n        type: AssetType.Template,\n        items: {}\n      },\n      currencies: {\n        type: AssetType.Currency,\n        id: 'id',\n        items: currencies,\n        prefetched: true\n      }\n    };\n\n    // prefetch some of our assets\n    const fetches: any[] = [];\n    ['languages', 'fields', 'groups', 'labels'].forEach((storeId: string) => {\n      const store = assetStore[storeId];\n      fetches.push(\n        getAssets(store.endpoint, store.type, store.id || 'uuid').then((assets: Asset[]) => {\n          store.items = assetListToMap(assets);\n          store.prefetched = true;\n        })\n      );\n    });\n\n    // wait for our prefetches to finish\n    Promise.all(fetches).then((results: any) => {\n      resolve(assetStore);\n    });\n  });\n};\n\nexport const getFlowDefinition = (\n  revisions: Assets,\n  id: string = null\n): Promise<FlowDefinition> => {\n  return new Promise<FlowDefinition>((resolve, reject) => {\n    (async () => {\n      let revisionToLoad = id;\n      if (!revisionToLoad) {\n        const response = await axios.get(`${revisions.endpoint}`);\n        if (response.data.results.length > 0) {\n          revisionToLoad = response.data.results[0].id;\n        }\n      }\n\n      if (revisionToLoad) {\n        const url = `${revisions.endpoint}${revisionToLoad}`;\n        axios\n          .get(url)\n          .then((response: AxiosResponse) => {\n            const definition = response.data as FlowDefinition;\n            return resolve(definition);\n          })\n          .catch(error => reject(error));\n      } else {\n        reject(new Error('No revision found for flow'));\n      }\n    })();\n  });\n};\n\nexport const getBaseURL = (): string => {\n  const location = window.location;\n  return location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '');\n};\n\nexport const getURL = (path: string): string => {\n  let url = path;\n  if (!url.endsWith('/') && url.indexOf('?') === -1 && url.indexOf('groups') === -1) {\n    url += '/';\n  }\n\n  if (url.startsWith('http://') || url.startsWith('https://')) {\n    return url;\n  }\n\n  // Set url for netlify deployments\n  // if (process.env.NODE_ENV === \"preview\") {\n  // url = \"/.netlify/functions/\" + url;\n  // }\n\n  const result = `${getBaseURL() + url}`;\n  return result;\n};\n","import axios, { AxiosResponse } from 'axios';\nimport { reject } from 'core-js/fn/promise';\nimport { Endpoints } from 'flowTypes';\nimport { AssetMap, AssetStore, CompletionOption } from 'store/flowContext';\n\nexport enum TopLevelVariables {\n  child = 'child',\n  contact = 'contact',\n  fields = 'fields',\n  input = 'input',\n  parent = 'parent',\n  results = 'results',\n  run = 'run',\n  trigger = 'trigger',\n  urns = 'urns',\n  webhook = 'webhook'\n}\n\nexport const getCompletionName = (option: CompletionOption): string => {\n  return option.name || option.signature.substr(0, option.signature.indexOf('('));\n};\n\nexport const getCompletionSignature = (option: CompletionOption): string => {\n  return option.signature.substr(option.signature.indexOf('('));\n};\n\nexport const getFlowOptions = (accessor: string = ''): CompletionOption[] => {\n  const prefix = accessor ? accessor : TopLevelVariables.run;\n  return [\n    {\n      name: `${prefix}.flow`,\n      summary: `The flow in which a ${accessor} run takes place`\n    },\n    {\n      name: `${prefix}.flow.uuid`,\n      summary: `The UUID of the flow in which a ${accessor} run takes place`\n    },\n    {\n      name: `${prefix}.flow.name`,\n      summary: `The name of the flow in which a ${accessor} run takes place`\n    },\n    {\n      name: `${prefix}.flow.revision`,\n      summary: `The revision number of the flow in which a ${accessor} run takes place`\n    }\n  ];\n};\n\nexport const INPUT_OPTIONS: CompletionOption[] = [\n  { name: 'input', summary: 'The most recent input' },\n  { name: 'input.uuid', summary: 'The UUID of the last input' },\n  { name: 'input.type', summary: 'The type of the last input' },\n  {\n    name: 'input.channel',\n    summary: 'The channel the last input was received on'\n  },\n  {\n    name: 'input.channel.address',\n    summary: 'The channel the last input was received on'\n  },\n  {\n    name: 'input.channel.name',\n    summary: 'The name of the channel the last input was received on'\n  },\n  {\n    name: 'input.channel.uuid',\n    summary: 'The uuid of the channel the last input was received on'\n  },\n  {\n    name: 'input.created_on',\n    summary: 'The date of the last input'\n  },\n  {\n    name: 'input.text',\n    summary: 'The text from the last message'\n  },\n  {\n    name: 'input.attachments',\n    summary: 'The attachments from the last message'\n  }\n];\n\nexport const getContactOptions = (accessor?: string): CompletionOption[] => {\n  const prefix = accessor ? `${accessor}.` : '';\n  const descriptor = accessor\n    ? accessor === TopLevelVariables.run\n      ? `${accessor}'s`\n      : `${accessor} run's`\n    : '';\n  return [\n    {\n      name: `${prefix}contact`,\n      summary: `The name of the ${descriptor} contact`\n    },\n    {\n      name: `${prefix}contact.first_name`,\n      summary: `The first name of a ${descriptor} contact`\n    },\n    {\n      name: `${prefix}contact.name`,\n      summary: `The name of the ${descriptor} contact`\n    },\n    {\n      name: `${prefix}contact.display`,\n      summary: `The name or urn of the ${descriptor} contact`\n    },\n    {\n      name: `${prefix}contact.fields`,\n      summary: `Custom fields on a ${descriptor} contact`\n    },\n    {\n      name: `${prefix}contact.urn`,\n      summary: `The primary urn for a ${descriptor} contact`\n    },\n    {\n      name: `${prefix}contact.language`,\n      summary: `The language iso code for a ${descriptor} contact`\n    },\n    // {\n    // name: `${prefix}contact.timezone`,\n    // summary: `The timezone for a ${descriptor} contact`\n    // },\n    {\n      name: `${prefix}contact.created_on`,\n      summary: `The creation date for the ${descriptor} contact`\n    },\n    {\n      name: `${prefix}contact.groups`,\n      summary: `The groups a ${descriptor} contact is a member of`\n    },\n    {\n      name: `${prefix}contact.urns`,\n      summary: `The urns for a ${descriptor} contact`\n    },\n    {\n      name: `${prefix}contact.uuid`,\n      summary: `The uuid of the ${descriptor} contact`\n    },\n    {\n      name: `${prefix}contact.channel`,\n      summary: `A ${descriptor} contact's preferred channel`\n    },\n    {\n      name: `${prefix}contact.channel.uuid`,\n      summary: `The UUID of a ${descriptor} contact's preferred channel`\n    },\n    {\n      name: `${prefix}contact.channel.name`,\n      summary: `The name of a ${descriptor} contact's preferred channel`\n    },\n    {\n      name: `${prefix}contact.channel.address`,\n      summary: `The address of a ${descriptor} contact's preferred channel`\n    }\n  ];\n};\n\nexport const RUN_OPTIONS: CompletionOption[] = [\n  { name: TopLevelVariables.run, summary: 'A run in this flow' },\n  ...getFlowOptions(),\n  ...getContactOptions(TopLevelVariables.run)\n];\n\nexport const CHILD_OPTIONS: CompletionOption[] = [\n  {\n    name: TopLevelVariables.child,\n    summary: 'Run details collected in a child flow, if any'\n  },\n  ...getFlowOptions(TopLevelVariables.child),\n  ...getContactOptions(TopLevelVariables.child)\n];\n\nexport const PARENT_OPTIONS: CompletionOption[] = [\n  {\n    name: TopLevelVariables.parent,\n    summary: 'Run details collected by a parent flow, if any'\n  },\n  ...getFlowOptions(TopLevelVariables.parent),\n  ...getContactOptions(TopLevelVariables.parent)\n];\n\nexport const TRIGGER_OPTIONS: CompletionOption[] = [\n  { name: 'trigger', summary: 'A trigger that initiated a session' },\n  {\n    name: 'trigger.type',\n    summary: 'The type of a trigger, one of “manual” or “flow”'\n  },\n  { name: 'trigger.params', summary: 'The parameters passed to a trigger' }\n];\n\nexport const URN_OPTIONS: CompletionOption[] = [\n  { name: 'urns', summary: 'The urns for the contact' },\n  { name: 'urns.facebook', summary: 'The Facebook urn for the contact' },\n  {\n    name: 'urns.fcm',\n    summary: 'The Firebase Cloud Messaging id for the contact'\n  },\n  { name: 'urns.jiochat', summary: 'The Jiochat id for the contact' },\n  { name: 'urns.line', summary: 'The Line id for the contact' },\n  { name: 'urns.mailto', summary: 'The email address for the contact' },\n  { name: 'urns.tel', summary: 'The phone number for the contact' },\n  { name: 'urns.telegram', summary: 'The Telegram id for the contact' },\n  { name: 'urns.twitterid', summary: 'The Twitter id for the contact' },\n  { name: 'urns.viber', summary: 'The Viber id for the contact' },\n  { name: 'urns.wechat', summary: 'The Wechat id for the contact' },\n  { name: 'urns.whatsapp', summary: 'The WhatsApp number for the contact' }\n];\n\nexport const COMPLETION_VARIABLES: CompletionOption[] = [\n  ...getContactOptions(),\n  { name: 'results', summary: 'The results for the current run' },\n  { name: 'fields', summary: 'The custom fields for the contact' },\n  ...INPUT_OPTIONS,\n  ...URN_OPTIONS,\n  ...RUN_OPTIONS,\n  ...CHILD_OPTIONS,\n  ...PARENT_OPTIONS,\n  { name: 'webhook', summary: 'The parsed JSON payload of the last webhook call' },\n  ...TRIGGER_OPTIONS\n];\n\nexport const TOP_LEVEL_OPTIONS = COMPLETION_VARIABLES.filter((option: CompletionOption) => {\n  const name = getCompletionName(option);\n  return (\n    name === TopLevelVariables.child ||\n    name === TopLevelVariables.contact ||\n    name === TopLevelVariables.fields ||\n    name === TopLevelVariables.input ||\n    name === TopLevelVariables.parent ||\n    name === TopLevelVariables.results ||\n    name === TopLevelVariables.run ||\n    name === TopLevelVariables.trigger ||\n    name === TopLevelVariables.urns ||\n    name === TopLevelVariables.webhook\n  );\n});\n\nexport const filterOptions = (\n  options: CompletionOption[],\n  query: string = '',\n  includeFunctions: boolean\n): CompletionOption[] => {\n  const search = query.toLowerCase();\n  return options.filter((option: CompletionOption) => {\n    if (includeFunctions) {\n      if (option.signature) {\n        return option.signature.indexOf(search) === 0;\n      }\n    }\n\n    if (option.name) {\n      const rest = option.name.substr(search.length);\n      return (\n        option.name.indexOf(search) === 0 &&\n        (rest.length === 0 || rest.substr(1).indexOf('.') === -1)\n      );\n    }\n    return false;\n  });\n};\n\nexport const getResultPropertyOptions = (accessor: string, name: string) => [\n  {\n    name: accessor,\n    description: `Result for \"${name}\"`\n  },\n  {\n    name: `${accessor}.value`,\n    description: `Value for \"${name}\"`\n  },\n  {\n    name: `${accessor}.category`,\n    description: `Category for \"${name}\"`\n  },\n  {\n    name: `${accessor}.category_localized`,\n    description: `Localized category for \"${name}\"`\n  },\n  {\n    name: `${accessor}.input`,\n    description: `Input for \"${name}\"`\n  },\n  {\n    name: `${accessor}.created_on`,\n    description: `Time \"${name}\" was created`\n  }\n];\n\n/* export const getResultOptions = (results: ResultMap) =>\n  [...new Set(Object.keys(results).map(uuid => results[uuid]))].reduce((options, query) => {\n      const accessor = query.replace(/^@/, '');\n      const name = titleCase(accessor.slice(accessor.lastIndexOf('.') + 1).replace(/_/g, ' '));\n      options.push(...getResultPropertyOptions(accessor, name));\n      return options;\n  }, []);\n*/\n\nexport const getContactFieldOptions = (assets: AssetMap) =>\n  Object.keys(assets).reduce((options, key) => {\n    const { [key]: asset } = assets;\n    options.push({\n      name: `fields.${key}`,\n      summary: `${asset.name} for the contact.`\n    });\n\n    const accessors = ['', 'parent.', 'run.', 'child.'];\n    accessors.forEach(accessor =>\n      options.push({\n        name: `${accessor}contact.fields.${key}`,\n        summary: `${asset.name} for the contact.`\n      })\n    );\n    return options;\n  }, []);\n\nexport const getResultsOptions = (assets: AssetMap) =>\n  Object.keys(assets).reduce((options, key) => {\n    const { [key]: asset } = assets;\n\n    return options.concat([\n      // @results\n      {\n        name: `results.${key}`,\n        summary: `${asset.name} for the run.`\n      },\n      {\n        name: `results.${key}.value`,\n        summary: `${asset.name} value for the run.`\n      },\n      {\n        name: `results.${key}.category`,\n        summary: `${asset.name} category for the run.`\n      },\n      {\n        name: `results.${key}.category_localized`,\n        summary: `${asset.name} localized category for the run.`\n      },\n      {\n        name: `results.${key}.name`,\n        summary: `${asset.name} localized category for the run.`\n      },\n      {\n        name: `results.${key}.node_uuid`,\n        summary: 'The uuid for the node that created this result.'\n      },\n      {\n        name: `results.${key}.input`,\n        summary: 'The input at the time this result was created.'\n      },\n      {\n        name: `results.${key}.created_on`,\n        summary: `${asset.name} localized category for the run.`\n      },\n\n      // @run.results\n      {\n        name: `run.results.${key}`,\n        summary: `${asset.name} for the run.`\n      },\n      {\n        name: `run.results.${key}.categories`,\n        summary: `${asset.name} categories for the run.`\n      },\n      {\n        name: `run.results.${key}.categories_localized`,\n        summary: `${asset.name} localized categories for the run.`\n      },\n      {\n        name: `run.results.${key}.input`,\n        summary: 'The input at the time this result was created.'\n      },\n      {\n        name: `results.${key}.extra`,\n        summary: `${asset.name} extra data for this result, such as a webhook response.`\n      },\n      {\n        name: `run.results.${key}.created_on`,\n        summary: `${asset.name} localized category for the run.`\n      }\n    ]);\n  }, []);\n\nlet COMPLETIONS_WITH_FUNCTIONS: CompletionOption[] = COMPLETION_VARIABLES;\n\nexport const setFunctions = (functions: CompletionOption[]) => {\n  COMPLETIONS_WITH_FUNCTIONS = COMPLETION_VARIABLES.concat(functions);\n};\n\nexport const fetchFunctions = (endpoints: Endpoints) => {\n  axios\n    .get(endpoints.functions)\n    .then((response: AxiosResponse) => {\n      setFunctions(response.data as CompletionOption[]);\n    })\n    .catch(error => reject(error));\n};\n\nexport const getCompletionOptions = (\n  autocomplete: boolean,\n  assets: AssetStore,\n  functions: boolean = true\n): CompletionOption[] => {\n  const options = functions ? COMPLETIONS_WITH_FUNCTIONS : COMPLETION_VARIABLES;\n  return autocomplete\n    ? [\n        ...options,\n        ...getContactFieldOptions(assets.fields ? assets.fields.items : {}),\n        ...getResultsOptions(assets.results ? assets.results.items : {})\n      ]\n    : options;\n};\n","import { StylesConfig } from 'react-select/lib/styles';\n\nexport const large = {\n  placeholder: (styles: StylesConfig, state: any) => {\n    return { ...styles, color: '#ddd', marginLeft: '3px' };\n  },\n  singleValue: (styles: StylesConfig, state: any) => {\n    return { ...styles, marginLeft: '3px' };\n  },\n  multiValue: (styles: StylesConfig, state: any) => {\n    return { ...styles, marginLeft: '0px' };\n  },\n  input: (styles: StylesConfig, state: any) => {\n    return {\n      ...styles,\n      marginLeft: '0px',\n      caretColor: '#999',\n      marginBottom: '0px',\n      boxShadow: 'none',\n      border: 'none'\n    };\n  },\n  control: (styles: StylesConfig, state: any) => {\n    return {\n      ...styles,\n      borderColor: '#ccc',\n      boxShadow: 'none',\n      transition: 'all 0.3s ease-in-out',\n      '&:hover': {\n        borderColor: '#ccc'\n      }\n    };\n  }\n};\n\nexport const messageStyle = {\n  control: (styles: StylesConfig, state: any) => {\n    return {\n      ...styles,\n      borderColor: '#ccc',\n      boxShadow: 'none',\n      borderBottom: 'none',\n      borderBottomRightRadius: '0px',\n      borderBottomLeftRadius: '0px',\n      '&:hover': {\n        borderColor: '#ccc'\n      }\n    };\n  }\n};\n\nexport const getErroredSelect = (baseControl: any): any => {\n  return {\n    control: (styles: StylesConfig) => ({\n      ...styles,\n      ...baseControl,\n      borderColor: 'tomato',\n      boxShadow: '0 0 0 3px rgba(255,196,186,0.5) !important;',\n      '&:hover': {\n        borderColor: 'tomato'\n      }\n    })\n  };\n};\n\nexport const small = {\n  control: (styles: StylesConfig) => ({\n    ...styles,\n    borderColor: '#ccc',\n    boxShadow: 'none',\n    '&:hover': {\n      borderColor: '#ccc'\n    },\n    minHeight: 28,\n    maxHeight: 28,\n    fontSize: 12\n  }),\n  menuList: (styles: StylesConfig) => ({\n    ...styles,\n    maxHeight: 200\n  }),\n  option: (styles: StylesConfig) => ({\n    ...styles,\n    fontSize: 12\n  }),\n  singleValue: (styles: StylesConfig) => ({\n    ...styles,\n    maxHeight: 28\n  }),\n  indicatorsContainer: (styles: StylesConfig) => ({\n    ...styles,\n    height: 28,\n    maxHeight: 28\n  }),\n  valueContainer: (styles: StylesConfig) => ({\n    ...styles,\n    height: 28,\n    maxHeight: 28\n  }),\n  input: (styles: StylesConfig) => ({\n    ...styles,\n    margin: 0\n  })\n};\n\nexport const tagging = {\n  control: (styles: StylesConfig, state: any) => {\n    return {\n      ...styles,\n      borderColor: '#ccc',\n      boxShadow: 'none',\n      '&:hover': {\n        borderColor: '#ccc'\n      }\n    };\n  },\n  multiValue: (styles: StylesConfig) => {\n    return {\n      ...styles,\n      maxHeight: 24,\n      minHeight: 24,\n      lineHeight: '17px',\n      backgroundColor: 'hsl(0, 0%, 94%)',\n      border: '1px solid hsl(0, 0%, 85%)'\n    };\n  }\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { sortByName } from 'components/form/assetselector/helpers';\nimport { getIconForAssetType } from 'components/form/assetselector/widgets';\nimport FormElement, { FormElementProps } from 'components/form/FormElement';\nimport { getAssets, isMatch, postNewAsset, searchAssetMap } from 'external';\nimport React from 'react';\nimport { Async, components } from 'react-select';\nimport { OptionProps } from 'react-select/lib/components/Option';\nimport Creatable from 'react-select/lib/Creatable';\nimport { StylesConfig } from 'react-select/lib/styles';\nimport { OptionsType, ValueType } from 'react-select/lib/types';\nimport {\n  Asset,\n  Assets,\n  AssetStore,\n  AssetType,\n  CompletionOption,\n  REMOVE_VALUE_ASSET\n} from 'store/flowContext';\nimport { AssetEntry } from 'store/nodeEditor';\nimport { uniqueBy } from 'utils';\nimport { getCompletionOptions } from 'utils/completion';\nimport { getErroredSelect as getErroredControl, large, messageStyle } from 'utils/reactselect';\n\nimport styles from './AssetSelector.module.scss';\n\ntype CallbackFunction = (options: OptionsType<Asset>) => void;\n\nconst AssetOption = (props: OptionProps<Asset>) => {\n  const asset = (props as any).data as Asset;\n\n  const prefix = '';\n  let suffix = '';\n  if (asset.type === AssetType.Currency) {\n    suffix = ` (${asset.id})`;\n  }\n\n  // TODO: add styling for different asset types\n  return !props.isDisabled ? (\n    <div ref={props.innerRef} {...props.innerProps}>\n      <components.Option {...props}>\n        {prefix}\n        {getIconForAssetType(asset)} {asset.name}\n        {suffix}\n      </components.Option>\n    </div>\n  ) : null;\n};\n\nexport interface AssetSelectorProps extends FormElementProps {\n  assets: Assets;\n  onChange: (selected: Asset[]) => void;\n\n  // a function to exclude assets when matching\n  shouldExclude?: (asset: Asset) => boolean;\n\n  // more options to consider when searching\n  additionalOptions?: Asset[];\n\n  // add custom styling\n  styles?: StylesConfig;\n\n  placeholder?: string;\n  searchable?: boolean;\n\n  // do we give the clearing option (trash)\n  valueClearable?: boolean;\n\n  // do we present an x to clear the form\n  formClearable?: boolean;\n\n  onFilter?: (asset: Asset) => boolean;\n\n  // creation options\n  createPrefix?: string;\n  onAssetCreated?: (asset: Asset) => void;\n  createAssetFromInput?: (input: string) => Asset;\n\n  // supports multiple selection\n  multi?: boolean;\n\n  // overrids default message when no options to show\n  noOptionsMessage?: string;\n\n  // override default sorting function\n  sortFunction?(a: Asset, b: Asset): number;\n\n  // completion options\n  completion?: AssetStore;\n}\n\ninterface AssetSelectorState {\n  defaultOptions: Asset[];\n  completionOptions: Asset[];\n  entry: AssetEntry;\n  isLoading: boolean;\n  menuOpen: boolean;\n  message?: string;\n}\n\nexport default class AssetSelector extends React.Component<AssetSelectorProps, AssetSelectorState> {\n  private lastCreation: number = 0;\n\n  constructor(props: AssetSelectorProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^is/, /^handle/, /^get/]\n    });\n\n    let defaultOptions: Asset[] = [];\n\n    // or it should be a list of local assets from an empty search\n    if (!props.assets.endpoint) {\n      defaultOptions = searchAssetMap('', props.assets.items);\n    }\n\n    let completionOptions: Asset[] = [];\n    if (this.props.completion) {\n      completionOptions = getCompletionOptions(true, this.props.completion, false).map(\n        (option: CompletionOption) => {\n          return {\n            id: '@' + option.name,\n            name: '@' + option.name,\n            type: AssetType.Expression\n          };\n        }\n      );\n    }\n\n    this.state = {\n      menuOpen: false,\n      defaultOptions,\n      entry: this.props.entry,\n      isLoading: false,\n      completionOptions\n    };\n  }\n\n  public static getDerivedStateFromProps(\n    nextProps: AssetSelectorProps,\n    prevState: AssetSelectorState\n  ): Partial<AssetSelectorState> {\n    // the default options should be true if there is an endpoint\n    let entry = nextProps.entry;\n\n    // if we don't know our entry name, look for it\n    if (prevState.defaultOptions && entry.value && !entry.value.name) {\n      const existing = prevState.defaultOptions.find((asset: Asset) => asset.id === entry.value.id);\n      if (existing) {\n        entry = { value: existing };\n      }\n    }\n\n    return { entry };\n  }\n\n  private handleChanged(selected: any): void {\n    this.setState({ message: null });\n    if (Array.isArray(selected)) {\n      this.props.onChange(selected);\n    } else if (this.props.onChange) {\n      /* istanbul ignore else */\n      this.props.onChange([selected]);\n    }\n  }\n\n  public handleLoadOptions(input: string, callback: CallbackFunction): void {\n    let options = this.props.additionalOptions || [];\n\n    if (this.state.completionOptions.length > 0 && input.startsWith('@')) {\n      options = options.concat(this.state.completionOptions);\n      callback(searchAssetMap(input, {}, options, this.props.shouldExclude));\n      return;\n    }\n\n    let localMatches = searchAssetMap(\n      input,\n      this.props.assets.items,\n      options,\n      this.props.shouldExclude\n    );\n\n    const assets = this.props.assets;\n\n    // then query against our endpoint to add to that list if we weren't prefetched\n    if (!assets.prefetched) {\n      let url = assets.endpoint;\n      if (url && input) {\n        url += url.indexOf('?') < 0 ? '?' : '&';\n        url += 'search=' + encodeURIComponent(input);\n      }\n\n      getAssets(url, assets.type, assets.id || 'uuid').then((remoteAssets: Asset[]) => {\n        const remoteMatches = remoteAssets.filter((asset: Asset) =>\n          isMatch(input, asset, this.props.shouldExclude)\n        );\n        const removalAsset: Asset[] = this.props.valueClearable ? [REMOVE_VALUE_ASSET] : [];\n\n        // concat them all together and uniquify them\n        let matches = uniqueBy(localMatches.concat(remoteMatches).concat(removalAsset), 'id');\n\n        // if we don't know our initial name, look for it\n        if (this.props.entry.value && !this.props.entry.value.name) {\n          const existing = matches.find((asset: Asset) => asset.id === this.props.entry.value.id);\n          if (existing) {\n            this.props.onChange([existing]);\n          }\n        }\n\n        if (this.props.onFilter) {\n          matches = matches.filter(this.props.onFilter);\n        }\n\n        // sort our results and callback\n        callback(matches.sort(this.props.sortFunction || sortByName));\n      });\n    } else {\n      if (this.props.onFilter) {\n        localMatches = localMatches.filter(this.props.onFilter);\n      }\n      // only local matches\n      callback(localMatches.sort(this.props.sortFunction || sortByName));\n    }\n  }\n\n  public handleCheckValid(\n    input: string,\n    value: ValueType<Asset>,\n    options: OptionsType<Asset>\n  ): boolean {\n    if (!this.props.createAssetFromInput) {\n      return false;\n    }\n\n    if (input.length > 0) {\n      return (\n        searchAssetMap(\n          input,\n          this.props.assets.items,\n          this.props.additionalOptions,\n          this.props.shouldExclude\n        ).filter((asset: Asset) => asset.name.toLowerCase() === input.toLowerCase()).length === 0\n      );\n    }\n\n    return false;\n  }\n\n  public handleCreatePrompt(input: string): any {\n    return (this.props.createPrefix || `New ${this.props.name}: `) + input;\n  }\n\n  public handleGetNewOptionData(inputValue: string, label: any): Asset {\n    return { id: '_', name: label, type: null };\n  }\n\n  public handleLoadingComplete(): void {\n    this.setState({ isLoading: false });\n  }\n\n  public handleMenuOpen(): void {\n    this.setState({\n      menuOpen: true,\n      message: null\n    });\n  }\n\n  public handleMenuClose(): void {\n    this.setState({\n      menuOpen: false\n    });\n  }\n\n  public handleClearMessage(): void {\n    if (this.state.message) {\n      this.setState({ message: null });\n    }\n  }\n\n  public handleCreateOption(input: string): void {\n    // this is a hack due to react-select triggering two creates in a race\n    const now = new Date().getTime();\n    if (now - this.lastCreation < 1000) {\n      return;\n    }\n\n    this.lastCreation = now;\n    // mark us as loading\n    const asset: Asset = this.props.createAssetFromInput(input);\n\n    if (this.props.assets.endpoint) {\n      this.setState({ isLoading: true, message: null });\n      postNewAsset(this.props.assets, asset)\n        .then((result: Asset) => {\n          this.setState({ isLoading: false });\n          this.props.onAssetCreated(result);\n          // this.props.onChange([...(this.state.entry.value as any)]);\n        })\n        .catch(error => {\n          console.log(error);\n          this.setState({\n            message: `Couldn't create new ${this.props.assets.type} \"${input}\"`,\n            isLoading: false\n          });\n        });\n    } else {\n      this.props.onChange([asset]);\n    }\n  }\n\n  private getStyle(): any {\n    if (this.state.message) {\n      return messageStyle;\n    }\n\n    let style = this.props.styles || large;\n    if (hasErrors(this.props.entry)) {\n      const erroredControl = getErroredControl(style.control({}, {}));\n      style = { ...style, ...erroredControl };\n    }\n    return style;\n  }\n\n  public render(): JSX.Element {\n    const commonAttributes = {\n      className: 'react-select ' + styles.selection,\n      value: this.state.entry.value,\n      components: { Option: AssetOption },\n      styles: this.getStyle(),\n      onChange: this.handleChanged,\n      onMenuOpen: this.handleMenuOpen,\n      onMenuClose: this.handleMenuClose,\n      onBlur: this.handleClearMessage,\n      menuShouldBlockScroll: true,\n      isMulti: this.props.multi,\n      isDisabled: this.state.isLoading,\n      isLoading: this.state.isLoading,\n      isClearable: this.props.formClearable,\n      isSearchable: this.props.searchable,\n      getOptionValue: (option: Asset) => option.id,\n      getOptionLabel: (option: Asset) => option.name\n    };\n\n    if (this.props.createAssetFromInput) {\n      // Perform this in lieu of AsyncCreatable loadOptions\n      const localMatches = searchAssetMap(\n        '',\n        this.props.assets.items,\n        this.props.additionalOptions,\n        this.props.shouldExclude\n      );\n\n      const article = !this.props.multi ? 'an' : '';\n      const newLanguage = this.props.multi ? 'new ones' : 'a new one';\n\n      return (\n        <FormElement\n          name={this.props.name}\n          entry={this.props.entry}\n          showLabel={this.props.showLabel}\n          helpText={this.props.helpText}\n          hideError={this.state.menuOpen}\n          __className={styles.ele}\n        >\n          <Creatable\n            {...commonAttributes}\n            placeholder={\n              this.props.placeholder ||\n              `Select ${article} existing ${this.props.name.toLocaleLowerCase()} or enter ${newLanguage}`\n            }\n            options={localMatches.sort(this.props.sortFunction || sortByName)}\n            isValidNewOption={this.handleCheckValid}\n            formatCreateLabel={this.handleCreatePrompt}\n            getNewOptionData={this.handleGetNewOptionData}\n            onCreateOption={this.handleCreateOption}\n\n            // We are currently using Creatable since our assets are currently\n            // being preloaded on page load and because of isLoaded not being\n            // honored when set manually (this is needed to perform onCreateOption\n            // via call to asset endpoint with feedback). Once that fix is merged,\n            // we can consider using AsyncCreateable\n            //\n            // See: https://github.com/JedWatson/react-select/issues/2986\n            //      https://github.com/JedWatson/react-select/pull/3319\n            //\n          />\n        </FormElement>\n      );\n    } else {\n      // the default options should be true if there is an endpoint\n      let defaultOptions: any = this.props.assets.endpoint !== undefined;\n\n      // or it should be a list of local assets from an empty search\n      if (!defaultOptions) {\n        defaultOptions = this.state.defaultOptions;\n\n        if (this.props.shouldExclude) {\n          defaultOptions = searchAssetMap(\n            '',\n            this.props.assets.items,\n            this.props.additionalOptions,\n            this.props.shouldExclude\n          );\n        }\n      }\n\n      return (\n        <FormElement\n          name={this.props.name}\n          entry={this.props.entry}\n          showLabel={this.props.showLabel}\n          helpText={this.props.helpText}\n          hideError={this.state.menuOpen}\n          __className={styles.ele}\n        >\n          <Async\n            {...commonAttributes}\n            defaultOptions={defaultOptions}\n            cacheOptions={true}\n            loadOptions={this.handleLoadOptions}\n            noOptionsMessage={(obj: { inputValue: string }) =>\n              this.props.noOptionsMessage || `No ${this.props.name} Found`\n            }\n          />\n          {this.state.message ? <div className={styles.message}>{this.state.message}</div> : null}\n        </FormElement>\n      );\n    }\n  }\n}\n","import * as React from 'react';\nimport { hasPendingTranslation } from 'components/form/assetselector/helpers';\nimport { Template } from 'flowTypes';\nimport { Asset, AssetType } from 'store/flowContext';\n\nexport const getIconForAssetType = (asset: Asset): JSX.Element => {\n  switch (asset.type) {\n    case AssetType.Group:\n      return <span className=\"fe-group\" />;\n    case AssetType.Label:\n      return <span className=\"fe-label\" />;\n    case AssetType.Flow:\n      return <span className=\"fe-split\" />;\n    case AssetType.Scheme:\n      return <span className=\"fe-connection\" />;\n    case AssetType.Template:\n      if (hasPendingTranslation(asset.content as Template)) {\n        return <span className=\"fe-hourglass\" />;\n      } else {\n        return <span className=\"fe-check\" />;\n      }\n    case AssetType.Remove:\n      return (\n        <>\n          <span className=\"fe-trash\" />\n          &nbsp;\n        </>\n      );\n    default:\n      return null;\n  }\n};\n","import { FlowTypes, FlowTypeVisibility, ONLINE, Operator, Type } from 'config/interfaces';\n\nexport const isOnlineFlowType = (flowType: FlowTypes) => {\n  return !!ONLINE.find((type: FlowTypes) => type === flowType);\n};\n\nexport const filterOperators = (operators: Operator[], flowType: FlowTypes): Operator[] => {\n  return filterVisibility(operators, flowType);\n};\n\nexport const filterTypeConfigs = (typeConfigs: Type[], flowType: FlowTypes): Type[] => {\n  return filterVisibility(typeConfigs, flowType);\n};\n\nconst filterVisibility = (items: FlowTypeVisibility[], flowType: FlowTypes): any[] => {\n  return items.filter((item: FlowTypeVisibility) => {\n    if (item.visibility === undefined) {\n      return true;\n    }\n\n    return item.visibility.findIndex((ft: FlowTypes) => ft === flowType) > -1;\n  });\n};\n","import { fakePropType } from 'config/ConfigProvider';\nimport { filterTypeConfigs } from 'config/helpers';\nimport { Type } from 'config/interfaces';\nimport { configsToDisplay } from 'config/typeConfigs';\nimport * as React from 'react';\nimport Select from 'react-select';\nimport { large } from 'utils/reactselect';\n\nimport styles from './TypeList.module.scss';\n\nexport interface TypeListProps {\n  __className: string;\n  initialType: Type;\n  onChange(config: Type): void;\n}\n\nexport interface TypeListState {\n  config: Type;\n}\n\nexport default class TypeList extends React.PureComponent<TypeListProps, TypeListState> {\n  private typeConfigs: Type[];\n\n  constructor(props: TypeListProps) {\n    super(props);\n\n    this.state = {\n      config: this.props.initialType\n    };\n\n    this.handleChangeType = this.handleChangeType.bind(this);\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  private handleChangeType(config: Type): void {\n    this.setState(\n      {\n        config\n      },\n      () => this.props.onChange(config)\n    );\n  }\n\n  private getTypeConfigs(): Type[] {\n    if (this.typeConfigs === undefined) {\n      this.typeConfigs = filterTypeConfigs(configsToDisplay, this.context.config.flowType);\n    }\n    return this.typeConfigs;\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div className={`${this.props.__className} ${styles.type_list}`}>\n        <p>When a contact arrives at this point in your flow...</p>\n        <div>\n          <Select\n            className=\"react-select\"\n            styles={large as any}\n            value={this.state.config}\n            onChange={this.handleChangeType as any}\n            isSearchable={true}\n            isClearable={false}\n            getOptionValue={(option: Type) => option.type}\n            getOptionLabel={(option: Type) => option.description}\n            options={this.getTypeConfigs()}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import { Asset } from 'store/flowContext';\nimport { FormEntry, ValidationFailure } from 'store/nodeEditor';\n\nexport type FormInput = string | string[] | number | Asset | Asset[];\nexport type ValidatorFunc = (\n  name: string,\n  input: FormInput\n) => { failures: ValidationFailure[]; value: FormInput };\n\n// Courtesy of @diegoperini: https://gist.github.com/dperini/729294\n// Expected behavior: https://mathiasbynens.be/demo/url-regex\nconst REGEX_URL = new RegExp(\n  '^' +\n    // protocol identifier\n    '(?:(?:https?|ftp)://)' +\n    // user:pass authentication\n    '(?:\\\\S+(?:u:\\\\S*)?@)?' +\n    '(?:' +\n    // IP address exclusion\n    // private & local networks\n    '(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})' +\n    '(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})' +\n    '(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})' +\n    // IP address dotted notation octets\n    // excludes loopback network 0.0.0.0\n    // excludes reserved space >= 224.0.0.0\n    // excludes network & broacast addresses\n    // (first & last IP address of each class)\n    '(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])' +\n    '(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}' +\n    '(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))' +\n    '|' +\n    // host name\n    '(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)' +\n    // domain name\n    '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*' +\n    // TLD identifier\n    '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))' +\n    // TLD may end with dot\n    '\\\\.?' +\n    ')' +\n    // port number\n    '(?::\\\\d{2,5})?' +\n    // resource path\n    '(?:[/?#]\\\\S*)?' +\n    '$',\n  'i'\n);\n\nconst inputAsString = (input: FormInput): string => {\n  let value = input;\n  if (typeof input === 'string') {\n    return value + '';\n  }\n\n  // if we are an object consider the name to match assets\n  if (input && typeof input === 'object') {\n    value = (input as any).name || undefined;\n  }\n\n  return value ? value + '' : null;\n};\n\nconst fromMaxItems = (max: number): ValidatorFunc => (name: string, input: FormInput) => {\n  if (Array.isArray(input)) {\n    const items = input as string[];\n    if (items.length > max) {\n      return {\n        value: input,\n        failures: [{ message: `${name} cannot have more than ${max} entries` }]\n      };\n    }\n  }\n  return { failures: [], value: input };\n};\n\nconst fromRegex = (regex: RegExp, message: string): ValidatorFunc => (\n  name: string,\n  input: FormInput\n) => {\n  const value = inputAsString(input);\n  if (value) {\n    if (!regex.test(value)) {\n      return {\n        value: input,\n        failures: [{ message: `${name} ${message}` }]\n      };\n    }\n  }\n  return { failures: [], value: input };\n};\n\nexport const validate = (\n  name: string,\n  input: FormInput,\n  validators: ValidatorFunc[]\n): FormEntry => {\n  let allFailures: ValidationFailure[] = [];\n  let value = input;\n  validators.forEach(validateFunc => {\n    const validation = validateFunc(name, input);\n    value = validation.value;\n    allFailures = allFailures.concat(validation.failures);\n  });\n\n  return { value, validationFailures: allFailures };\n};\n\nexport const Empty: ValidatorFunc = (name: string, input: FormInput) => {\n  if (input) {\n    return { value: input, failures: [{ message: `${name} is not finished` }] };\n  }\n\n  if (typeof input === 'string') {\n    if ((input as string).trim().length !== 0) {\n      return {\n        value: input,\n        failures: [{ message: `${name} is not finished` }]\n      };\n    }\n  } else if (Array.isArray(input)) {\n    if (input.length !== 0) {\n      return {\n        value: input,\n        failures: [{ message: `${name} is not finished` }]\n      };\n    }\n  }\n  return { failures: [], value: input };\n};\n\nexport const Required: ValidatorFunc = (name: string, input: FormInput) => {\n  if (!input) {\n    return { value: input, failures: [{ message: `${name} is required` }] };\n  }\n\n  if (typeof input === 'string') {\n    if ((input as string).trim().length === 0) {\n      return { value: input, failures: [{ message: `${name} is required` }] };\n    }\n  } else if (Array.isArray(input)) {\n    if (input.length === 0) {\n      return { value: input, failures: [{ message: `${name} are required` }] };\n    }\n  }\n  return { failures: [], value: input };\n};\n\nexport const Regex: ValidatorFunc = (name: string, input: FormInput) => {\n  if (typeof input === 'string') {\n    const inputString = input as string;\n\n    if (inputString.trim().startsWith('@')) {\n      return { failures: [], value: input };\n    }\n\n    try {\n      // tslint:disable-next-line:no-unused-expression\n      new RegExp(inputString);\n    } catch (e) {\n      return {\n        value: input,\n        failures: [{ message: `${name} is not a valid regex` }]\n      };\n    }\n  }\n\n  return { failures: [], value: input };\n};\n\nexport const LessThan = (amount: number, checkName: string): ValidatorFunc => (\n  name: string,\n  input: FormInput\n) => {\n  if (typeof input === 'string') {\n    if (parseFloat(input as string) >= amount) {\n      return {\n        value: input,\n        failures: [{ message: `${name} must be a less than ${checkName}` }]\n      };\n    }\n\n    return { failures: [], value: input };\n  }\n  return { failures: [], value: input };\n};\n\nexport const MoreThan = (amount: number, checkName: string): ValidatorFunc => (\n  name: string,\n  input: FormInput\n) => {\n  if (typeof input === 'string') {\n    if (parseFloat(input as string) <= amount) {\n      return {\n        value: input,\n        failures: [{ message: `${name} must be a more than ${checkName}` }]\n      };\n    }\n\n    return { failures: [], value: input };\n  }\n  return { failures: [], value: input };\n};\n\nexport const shouldRequireIf = (required: boolean): ValidatorFunc => (\n  name: string,\n  input: FormInput\n) => {\n  if (required) {\n    return Required(name, input);\n  }\n  return { failures: [], value: input };\n};\n\nexport const MaxOfTenItems = fromMaxItems(10);\nexport const StartIsNonNumeric = fromRegex(/^(?!\\d)/, \"can't start with a number\");\nexport const ValidURL = fromRegex(REGEX_URL, 'is not a valid URL');\nexport const HeaderName = fromRegex(/^[\\w-]+$/, 'is invalid');\nexport const Numeric = fromRegex(/^([-+]?((\\.\\d+)|(\\d+)(\\.\\d+)?)$)/, 'must be a number');\nexport const Alphanumeric = fromRegex(/^[a-z\\d\\-_\\s]+$/i, 'can only have letters and numbers');\nexport const NumOrExp = fromRegex(/^@.*$|^([-+]?((\\.\\d+)|(\\d+)(\\.\\d+)?)$)/, 'must be a number');\n","import { hasErrors } from 'components/flow/actions/helpers';\nimport { SelectOption } from 'components/form/select/SelectElement';\nimport { Type } from 'config/interfaces';\nimport { Scheme } from 'config/typeConfigs';\nimport { AnyAction } from 'flowTypes';\nimport mutate from 'immutability-helper';\nimport { combineReducers } from 'redux';\nimport { LocalizedObject } from 'services/Localization';\nimport ActionTypes, {\n  UpdateNodeEditorSettings,\n  UpdateTypeConfigAction,\n  UpdateUserAddingActionAction\n} from 'store/actionTypes';\nimport Constants from 'store/constants';\nimport { Asset, RenderNode } from 'store/flowContext';\n\n// tslint:disable:no-shadowed-variable\nexport interface ValidationFailure {\n  message: string;\n}\n\nexport interface FormEntry {\n  value: any;\n  validationFailures?: ValidationFailure[];\n  persistantFailures?: ValidationFailure[];\n}\n\nexport interface SelectOptionEntry extends FormEntry {\n  value: SelectOption;\n}\n\nexport interface NumberEntry extends FormEntry {\n  value: number;\n}\n\nexport interface StringEntry extends FormEntry {\n  value: string;\n}\n\nexport interface SchemeEntry extends FormEntry {\n  value: Scheme;\n}\n\nexport interface StringArrayEntry extends FormEntry {\n  value: string[];\n}\n\nexport interface AssetEntry extends FormEntry {\n  value: Asset;\n}\n\nexport interface AssetArrayEntry extends FormEntry {\n  value: Asset[] | null;\n}\n\nexport const mergeForm = (\n  form: FormState,\n  toMerge: Partial<FormState>,\n  toRemove: any[] = []\n): FormState => {\n  // TODO: deal with explicit array setting\n  let updated = form || {};\n  // we auto update array items with uuids\n  for (const key of Object.keys(toMerge)) {\n    const entry: any = (toMerge as any)[key];\n    if (Array.isArray(entry)) {\n      for (const item of entry) {\n        // we support objects with uuids or FormEntry's with uuids\n        const isEntry = item.hasOwnProperty('value') && typeof item.value === 'object';\n\n        if ((isEntry && item.value.uuid) || item.uuid) {\n          const existingIdx = (form as any)[key].findIndex((existing: any) => {\n            if (isEntry) {\n              return existing.value.uuid === item.value.uuid;\n            } else {\n              return existing.uuid === item.uuid;\n            }\n          });\n\n          if (existingIdx > -1) {\n            // we found a match, merge us in\n            updated = mutate(updated, {\n              [key]: { $merge: { [existingIdx]: item } }\n            }) as FormState;\n          } else {\n            // couldn't find it, lets push it on\n            updated = mutate(updated, {\n              [key]: { $push: [item] }\n            }) as FormState;\n          }\n        }\n      }\n\n      // remove it from our merge\n      delete (toMerge as any)[key];\n    }\n  }\n\n  // removals can be items in an array\n  for (const remove of toRemove.filter((item: any) => typeof item === 'object')) {\n    for (const key of Object.keys(remove)) {\n      const entry: any = remove[key];\n      if (Array.isArray(entry)) {\n        for (const item of entry) {\n          // we support objects with uuids or FormEntry's with uuids\n          const isEntry = item.hasOwnProperty('value') && typeof item.value === 'object';\n          if ((isEntry && item.value.uuid) || item.uuid) {\n            updated = mutate(updated, {\n              [key]: (items: any) =>\n                items.filter((existing: any) => {\n                  if (isEntry) {\n                    return existing.value.uuid !== item.value.uuid;\n                  } else {\n                    return existing.uuid !== item.uuid;\n                  }\n                })\n            });\n          }\n        }\n      }\n    }\n  }\n\n  const removeKeys = toRemove.filter((item: any) => typeof item === 'string');\n  updated = mutate(updated, {\n    $merge: toMerge,\n    $unset: removeKeys\n  }) as FormState;\n\n  let valid = true;\n  for (const key of Object.keys(form)) {\n    const entry: any = (updated as any)[key];\n    if (Array.isArray(entry)) {\n      for (const item of entry) {\n        if (hasErrors(item)) {\n          valid = false;\n          break;\n        }\n      }\n    } else if (entry && typeof entry === 'object') {\n      if (hasErrors(entry)) {\n        valid = false;\n        break;\n      }\n    }\n  }\n\n  return mutate(updated, { $merge: { valid } }) as FormState;\n};\n\nexport interface FormState {\n  validationFailures?: ValidationFailure[];\n  valid: boolean;\n}\n\nexport interface NodeEditorSettings {\n  originalNode: RenderNode;\n  showAdvanced?: boolean;\n  originalAction?: AnyAction;\n  localizations?: LocalizedObject[];\n}\n\nexport interface NodeEditor {\n  typeConfig: Type | null;\n  userAddingAction: boolean;\n  settings: NodeEditorSettings | null;\n}\n\n// Initial state\nexport const initialState: NodeEditor = {\n  typeConfig: null,\n  userAddingAction: false,\n  settings: null\n};\n\n// Action Creators\nexport const updateTypeConfig = (typeConfig: Type): UpdateTypeConfigAction => ({\n  type: Constants.UPDATE_TYPE_CONFIG,\n  payload: {\n    typeConfig\n  }\n});\n\nexport const updateNodeEditorSettings = (\n  settings: NodeEditorSettings\n): UpdateNodeEditorSettings => ({\n  type: Constants.UPDATE_NODE_EDITOR_SETTINGS,\n  payload: {\n    settings\n  }\n});\n\nexport const updateUserAddingAction = (\n  userAddingAction: boolean\n): UpdateUserAddingActionAction => ({\n  type: Constants.UPDATE_USER_ADDING_ACTION,\n  payload: {\n    userAddingAction\n  }\n});\n\n// Reducers\nexport const typeConfig = (state: Type | null = initialState.typeConfig, action: ActionTypes) => {\n  switch (action.type) {\n    case Constants.UPDATE_TYPE_CONFIG:\n      return action.payload!.typeConfig;\n    default:\n      return state;\n  }\n};\n\nexport const userAddingAction = (\n  state: boolean = initialState.userAddingAction,\n  action: ActionTypes\n) => {\n  switch (action.type) {\n    case Constants.UPDATE_USER_ADDING_ACTION:\n      return action.payload!.userAddingAction;\n    default:\n      return state;\n  }\n};\n\nexport const settings = (\n  state: NodeEditorSettings | null = initialState.settings,\n  action: ActionTypes\n) => {\n  switch (action.type) {\n    case Constants.UPDATE_NODE_EDITOR_SETTINGS:\n      return action.payload!.settings;\n    default:\n      return state;\n  }\n};\n\n// Root reducer\nexport default combineReducers({\n  typeConfig,\n  userAddingAction,\n  settings\n});\n","import { AddLabelsFormState } from 'components/flow/actions/addlabels/AddLabelsForm';\nimport { getActionUUID } from 'components/flow/actions/helpers';\nimport { Types } from 'config/interfaces';\nimport { AddLabels } from 'flowTypes';\nimport { Asset, AssetType } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): AddLabelsFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.add_input_labels) {\n    const action = settings.originalAction as AddLabels;\n    return {\n      labels: {\n        value: action.labels.map(label => {\n          return { id: label.uuid, name: label.name, type: AssetType.Label };\n        })\n      },\n      valid: true\n    };\n  }\n\n  return {\n    labels: { value: [] },\n    valid: false\n  };\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  formState: AddLabelsFormState\n): AddLabels => {\n  return {\n    type: Types.add_input_labels,\n    labels: getAsset(formState.labels.value!, AssetType.Label),\n    uuid: getActionUUID(settings, Types.add_input_labels)\n  };\n};\n\nexport const getAsset = (assets: Asset[], type: AssetType): any[] => {\n  return assets\n    .filter((asset: Asset) => asset.type === type)\n    .map((asset: Asset) => {\n      return { uuid: asset.id, name: asset.name };\n    });\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { AssetArrayEntry, FormState, mergeForm } from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\n\nimport { initializeForm, stateToAction } from './helpers';\n\nexport interface AddLabelsFormState extends FormState {\n  labels: AssetArrayEntry;\n}\n\nexport const controlLabelSpecId = 'label';\n\nexport default class AddLabelsForm extends React.PureComponent<\n  ActionFormProps,\n  AddLabelsFormState\n> {\n  public static contextTypes = {\n    assetService: fakePropType\n  };\n\n  constructor(props: ActionFormProps) {\n    super(props);\n\n    this.state = initializeForm(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleSave(): void {\n    const valid = this.handleLabelsChanged(this.state.labels.value!, true);\n\n    if (valid) {\n      const newAction = stateToAction(this.props.nodeSettings, this.state);\n      this.props.updateAction(newAction);\n      this.props.onClose(false);\n    }\n  }\n\n  public handleLabelsChanged(selected: Asset[], submitting: boolean = false): boolean {\n    const updates: Partial<AddLabelsFormState> = {\n      labels: validate('Labels', selected, [shouldRequireIf(submitting)])\n    };\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  public handleCreateAssetFromInput(input: string): any {\n    return { name: input };\n  }\n\n  public handleLabelCreated(label: Asset): void {\n    // update our store with our new group\n    this.props.addAsset('labels', label);\n\n    this.handleLabelsChanged(this.state.labels.value!.concat(label));\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p data-spec={controlLabelSpecId}>Select the labels to apply to the incoming message.</p>\n\n        <AssetSelector\n          name=\"Labels\"\n          placeholder=\"Enter the name of an existing label or create a new one\"\n          assets={this.props.assetStore.labels}\n          entry={this.state.labels}\n          searchable={true}\n          multi={true}\n          onChange={this.handleLabelsChanged}\n          createPrefix=\"Create Label: \"\n          createAssetFromInput={this.handleCreateAssetFromInput}\n          onAssetCreated={this.handleLabelCreated}\n        />\n      </Dialog>\n    );\n  }\n}\n","import { AddURNFormState } from 'components/flow/actions/addurn/AddURNForm';\nimport { getActionUUID } from 'components/flow/actions/helpers';\nimport { SelectOption } from 'components/form/select/SelectElement';\nimport { Types } from 'config/interfaces';\nimport { Scheme, SCHEMES } from 'config/typeConfigs';\nimport { AddURN } from 'flowTypes';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const getSchemeOptions = (): SelectOption[] => {\n  return SCHEMES.map((scheme: Scheme) => {\n    return schemeToSelectOption(scheme);\n  });\n};\n\nexport const getSchemeObject = (scheme: string): Scheme => {\n  return SCHEMES.find((item: Scheme) => item.scheme === scheme)!;\n};\n\nexport const getSchemeSelectOption = (scheme: string): SelectOption =>\n  schemeToSelectOption(getSchemeObject(scheme));\n\nexport const schemeToSelectOption = (scheme: Scheme): SelectOption => {\n  return { value: scheme.scheme, label: scheme.name };\n};\n\nexport const initializeForm = (settings: NodeEditorSettings): AddURNFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.add_contact_urn) {\n    const { scheme, path } = settings.originalAction as AddURN;\n\n    return {\n      scheme: { value: getSchemeSelectOption(scheme) },\n      path: { value: path },\n      valid: true\n    };\n  }\n\n  return {\n    scheme: { value: getSchemeSelectOption('tel') },\n    path: { value: '' },\n    valid: false\n  };\n};\n\nexport const stateToAction = (settings: NodeEditorSettings, formState: AddURNFormState): AddURN => {\n  return {\n    type: Types.add_contact_urn,\n    uuid: getActionUUID(settings, Types.add_input_labels),\n    scheme: formState.scheme.value.value,\n    path: formState.path.value\n  };\n};\n","// https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values\nexport enum KeyValues {\n  KEY_AT = '@',\n  KEY_SPACE = ' ',\n  KEY_ENTER = 'Enter',\n  KEY_UP = 'ArrowUp',\n  KEY_DOWN = 'ArrowDown',\n  KEY_RIGHT = 'ArrowRight',\n  KEY_LEFT = 'ArrowLeft',\n  KEY_TAB = 'Tab',\n  KEY_ESC = 'Escape',\n  KEY_BACKSPACE = 'Backspace',\n  KEY_N = 'n',\n  KEY_P = 'p',\n  KEY_F = 'f',\n  KEY_B = 'b'\n}\n\nexport const MAX_GSM_SINGLE = 160;\nexport const MAX_GSM_MULTI = 153;\nexport const MAX_UNICODE_SINGLE = 70;\nexport const MAX_UNICODE_MULTI = 67;\n\nexport const COMPLETION_HELP = 'Tab to complete, enter to select';\n\nexport const GSM: { [key: string]: number } = {\n  // char: charCode\n  0: 48,\n  1: 49,\n  2: 50,\n  3: 51,\n  4: 52,\n  5: 53,\n  6: 54,\n  7: 55,\n  8: 56,\n  9: 57,\n  '\\n': 10,\n  '\\f': 12,\n  '\\r': 13,\n  ' ': 32,\n  '!': 33,\n  '\"': 34,\n  '#': 35,\n  $: 36,\n  '%': 37,\n  '&': 38,\n  \"'\": 39,\n  '(': 40,\n  ')': 41,\n  '*': 42,\n  '+': 43,\n  ',': 44,\n  '-': 45,\n  '.': 46,\n  '/': 47,\n  ':': 58,\n  ';': 59,\n  '<': 60,\n  '=': 61,\n  '>': 62,\n  '?': 63,\n  '@': 64,\n  A: 65,\n  B: 66,\n  C: 67,\n  D: 68,\n  E: 69,\n  F: 70,\n  G: 71,\n  H: 72,\n  I: 73,\n  J: 74,\n  K: 75,\n  L: 76,\n  M: 77,\n  N: 78,\n  O: 79,\n  P: 80,\n  Q: 81,\n  R: 82,\n  S: 83,\n  T: 84,\n  U: 85,\n  V: 86,\n  W: 87,\n  X: 88,\n  Y: 89,\n  Z: 90,\n  '[': 91,\n  '\\\\': 92,\n  ']': 93,\n  '^': 94,\n  _: 95,\n  a: 97,\n  b: 98,\n  c: 99,\n  d: 100,\n  e: 101,\n  f: 102,\n  g: 103,\n  h: 104,\n  i: 105,\n  j: 106,\n  k: 107,\n  l: 108,\n  m: 109,\n  n: 110,\n  o: 111,\n  p: 112,\n  q: 113,\n  r: 114,\n  s: 115,\n  t: 116,\n  u: 117,\n  v: 118,\n  w: 119,\n  x: 120,\n  y: 121,\n  z: 122,\n  '{': 123,\n  '|': 124,\n  '}': 125,\n  '~': 126,\n  '¡': 161,\n  '£': 163,\n  '¤': 164,\n  '¥': 165,\n  '§': 167,\n  '¿': 191,\n  Ä: 196,\n  Å: 197,\n  Æ: 198,\n  Ç: 199,\n  É: 201,\n  Ñ: 209,\n  Ö: 214,\n  Ø: 216,\n  Ü: 220,\n  ß: 223,\n  à: 224,\n  ä: 228,\n  å: 229,\n  æ: 230,\n  è: 232,\n  é: 233,\n  ì: 236,\n  ñ: 241,\n  ò: 242,\n  ö: 246,\n  ø: 248,\n  ù: 249,\n  ü: 252,\n  Γ: 915,\n  Δ: 916,\n  Θ: 920,\n  Λ: 923,\n  Ξ: 926,\n  Π: 928,\n  Σ: 931,\n  Φ: 934,\n  Ψ: 936,\n  Ω: 937,\n  '€': 8364\n};\n","import * as React from 'react';\nimport { AddURN } from 'flowTypes';\n\nimport { getSchemeObject } from './helpers';\n\nexport const MAX_TO_SHOW = 3;\n\nconst AddURNComp: React.SFC<AddURN> = ({ scheme, path }): JSX.Element => (\n  <>\n    Add {getSchemeObject(scheme).name} {path}\n  </>\n);\n\nexport default AddURNComp;\n","import FormElement, { FormElementProps } from 'components/form/FormElement';\nimport * as React from 'react';\nimport Select from 'react-select';\nimport { StylesConfig } from 'react-select/lib/styles';\n\ninterface SelectElementProps extends FormElementProps {\n  onChange?(value: any): void;\n  options: any;\n  placeholder?: string;\n  styles?: StylesConfig;\n}\n\nexport interface SelectOption {\n  label: string;\n  value: string;\n}\n\nexport default class SelectElement extends React.Component<SelectElementProps> {\n  public render(): JSX.Element {\n    return (\n      <FormElement name={this.props.name} entry={this.props.entry}>\n        <Select\n          isDisabled={this.props.onChange === undefined}\n          placeholder={this.props.placeholder}\n          styles={this.props.styles}\n          name={this.props.name}\n          value={this.props.entry.value}\n          onChange={this.props.onChange}\n          isSearchable={false}\n          isClearable={false}\n          options={this.props.options}\n        />\n      </FormElement>\n    );\n  }\n}\n","import { UnicodeCharMap } from 'components/form/textinput/helpers';\nimport * as React from 'react';\nimport { pluralize, renderIf } from 'utils';\n\nimport styles from './UnicodeList.module.scss';\n\nexport interface UnicodeListProps {\n  unicodeChars: UnicodeCharMap;\n}\n\nexport const utfWarning = (num: number) =>\n  ` Note that your message may require more segments to send because it contains the following ${pluralize(\n    num,\n    'character'\n  )}:`;\n\nexport const unicodeListContainerSpecId = 'unicode-list-container';\nexport const unicodeListSpecId = 'unicode-list';\n\nconst UnicodeList: React.SFC<UnicodeListProps> = ({ unicodeChars }) => {\n  const chars = Object.keys(unicodeChars);\n  return renderIf(chars.length > 0)(\n    <span data-testid={unicodeListContainerSpecId}>\n      {utfWarning(chars.length)}\n      <div className={styles.unicode_list} data-testid={unicodeListSpecId}>\n        {chars.map((char, idx) => (\n          <span key={char} className={styles.unicode_char}>\n            {char}\n          </span>\n        ))}\n      </div>\n    </span>\n  );\n};\n\nexport default UnicodeList;\n","import classNames from 'classnames/bind';\nimport { UnicodeCharMap } from 'components/form/textinput/helpers';\nimport UnicodeList from 'components/form/textinput/UnicodeList';\nimport React from 'react';\nimport { pluralize } from 'utils';\n\nimport styles from './CharCount.module.scss';\n\ninterface CharCountProps {\n  count: number;\n  parts: number;\n  unicodeChars: UnicodeCharMap;\n}\n\nconst cx: any = classNames.bind(styles);\n\nconst CharCount: React.SFC<CharCountProps> = ({ count, parts, unicodeChars }) => {\n  const hasUnicode = Object.keys(unicodeChars).length > 0;\n  const toolTipTextClasses = cx({\n    [styles.tooltip_text]: true,\n    [styles.unicode]: hasUnicode\n  });\n  return (\n    <div className={styles.count}>\n      <div className={styles.tooltip}>\n        {count}\n        <span className={styles.divider}>/</span>\n        {parts}\n        <span className={toolTipTextClasses}>\n          This message will be about <b>{count}</b> {pluralize(count, 'character')} long. We\n          estimate it will take <b>{parts}</b> {pluralize(parts, 'message')} to send over SMS.\n          {hasUnicode && <UnicodeList unicodeChars={unicodeChars} />}\n          <div className={styles.fine_print}>\n            Using variables may result in longer messages that require more messages to send over\n            SMS.\n          </div>\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default CharCount;\n","import { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport FormElement, { FormElementProps } from 'components/form/FormElement';\nimport shared from 'components/form/FormElement.module.scss';\nimport CharCount from 'components/form/textinput/CharCount';\nimport { COMPLETION_HELP, KeyValues } from 'components/form/textinput/constants';\nimport ExcellentParser, { isWordChar } from 'components/form/textinput/ExcellentParser';\nimport { getMsgStats, UnicodeCharMap } from 'components/form/textinput/helpers';\nimport { Type, Types } from 'config/interfaces';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { AssetStore, CompletionOption, FunctionExample } from 'store/flowContext';\nimport { StringEntry, ValidationFailure } from 'store/nodeEditor';\nimport AppState from 'store/state';\nimport getCaretCoordinates from 'textarea-caret';\nimport {\n  filterOptions,\n  getCompletionName,\n  getCompletionOptions,\n  getCompletionSignature\n} from 'utils/completion';\n\nimport styles from './TextInputElement.module.scss';\n\nconst ReactMarkdown = require('react-markdown');\n\n// import setCaretPosition from 'get-input-selection';\nexport enum Count {\n  SMS = 'SMS'\n}\n\nexport interface Coordinates {\n  left: number;\n  top: number;\n}\n\nexport type HTMLTextElement = HTMLTextAreaElement | HTMLInputElement;\n\nexport interface TextInputStoreProps {\n  typeConfig: Type;\n  assetStore: AssetStore;\n}\n\nexport interface TextInputPassedProps extends FormElementProps {\n  entry?: StringEntry;\n  __className?: string;\n  count?: Count;\n  textarea?: boolean;\n  placeholder?: string;\n  autocomplete?: boolean;\n  focus?: boolean;\n  showInvalid?: boolean;\n  maxLength?: number;\n  onFieldFailures?: (failures: ValidationFailure[]) => void;\n  onChange?: (value: string) => void;\n  onBlur?: (event: React.ChangeEvent<HTMLTextElement>) => void;\n  onEnter?: (event: React.KeyboardEvent<HTMLTextElement>) => boolean;\n}\n\nexport type TextInputProps = TextInputStoreProps & TextInputPassedProps;\n\nexport interface TextInputState {\n  value: string;\n  caretCoordinates: Coordinates;\n  completionVisible: boolean;\n  selectedOptionIndex: number;\n  matches: CompletionOption[];\n  query: string;\n  options: CompletionOption[];\n  parts?: string[];\n  characterCount?: number;\n  unicodeChars?: UnicodeCharMap;\n  fn?: CompletionOption;\n}\n\ntype InitialState = Pick<\n  TextInputState,\n  'caretCoordinates' | 'completionVisible' | 'selectedOptionIndex' | 'matches' | 'query'\n>;\n\nconst initialState: InitialState = {\n  caretCoordinates: { left: 0, top: 0 },\n  completionVisible: false,\n  selectedOptionIndex: 0,\n  matches: [],\n  query: ''\n};\n\nconst cx: any = classNames.bind({ ...styles, ...shared });\n\nexport class TextInputElement extends React.Component<TextInputProps, TextInputState> {\n  private selectedEl: HTMLLIElement;\n  private textEl: HTMLTextElement;\n  private parser: ExcellentParser;\n  private nextCaret = -1;\n\n  constructor(props: TextInputProps) {\n    super(props);\n\n    let initial = '';\n    if (this.props.entry && this.props.entry.value) {\n      initial = this.props.entry.value;\n    }\n\n    this.state = {\n      value: initial,\n      options: getCompletionOptions(this.props.autocomplete, this.props.assetStore),\n      ...initialState,\n      ...(this.props.count && this.props.count === Count.SMS ? getMsgStats(initial) : {})\n    };\n\n    this.parser = new ExcellentParser('@', [\n      'contact',\n      'child',\n      'fields',\n      'input',\n      'parent',\n      'results',\n      'run',\n      'trigger',\n      'urns',\n      'webhook'\n    ]);\n\n    bindCallbacks(this, {\n      include: [/^on/, /Ref$/, 'setSelection', 'validate', /^has/, /^handle/]\n    });\n  }\n\n  private selectedElRef(ref: HTMLLIElement): HTMLLIElement {\n    return (this.selectedEl = ref);\n  }\n\n  private textElRef(ref: HTMLTextElement): HTMLTextElement {\n    return (this.textEl = ref);\n  }\n\n  public componentWillReceiveProps(nextProps: TextInputProps): void {\n    if (nextProps.entry.value !== this.props.entry.value || this.nextCaret > -1) {\n      this.setState({ value: nextProps.entry.value }, () => {\n        if (this.nextCaret > -1) {\n          this.textEl.selectionStart = this.nextCaret;\n          this.textEl.selectionEnd = this.nextCaret;\n          this.nextCaret = -1;\n        }\n      });\n    }\n  }\n\n  public componentDidMount(): void {\n    this.checkForMissingFields();\n    return this.props.focus && this.focusInput();\n  }\n\n  public componentDidUpdate(previous: TextInputProps): void {\n    if (this.selectedEl) {\n      if (this.selectedEl.scrollIntoView) {\n        this.selectedEl.scrollIntoView(false);\n      }\n    }\n  }\n\n  private handleKeyDown(event: React.KeyboardEvent<HTMLTextElement>): void {\n    if (!this.props.autocomplete) {\n      return;\n    }\n\n    // if our parent cares about enter, give them a go at it\n    if (event.key === KeyValues.KEY_ENTER && this.props.onEnter) {\n      if (this.props.onEnter(event)) {\n        return;\n      }\n    }\n\n    switch (event.key) {\n      case KeyValues.KEY_SPACE:\n        if (event.ctrlKey) {\n          this.reevaluate(event.currentTarget.value, event.currentTarget.selectionStart, true);\n        }\n        break;\n      case KeyValues.KEY_P:\n        if (event.ctrlKey) {\n          if (this.state.completionVisible) {\n            this.setSelection(this.state.selectedOptionIndex - 1);\n            event.preventDefault();\n          }\n        }\n        break;\n      case KeyValues.KEY_UP:\n        if (this.state.completionVisible) {\n          this.setSelection(this.state.selectedOptionIndex - 1);\n          event.preventDefault();\n        }\n        break;\n      case KeyValues.KEY_N:\n        if (event.ctrlKey) {\n          if (this.state.completionVisible) {\n            this.setSelection(this.state.selectedOptionIndex + 1);\n            event.preventDefault();\n          }\n        }\n        break;\n      case KeyValues.KEY_DOWN:\n        if (this.state.completionVisible) {\n          this.setSelection(this.state.selectedOptionIndex + 1);\n          event.preventDefault();\n        }\n        return;\n      case KeyValues.KEY_AT:\n        this.setState({\n          completionVisible: true,\n          caretCoordinates: getCaretCoordinates(this.textEl, this.textEl.selectionEnd)\n        });\n        return;\n      case KeyValues.KEY_ESC:\n        if (this.state.completionVisible) {\n          this.setState({\n            completionVisible: false\n          });\n          event.preventDefault();\n          event.stopPropagation();\n        }\n        return;\n      case KeyValues.KEY_TAB:\n      case KeyValues.KEY_ENTER:\n        let caret = event.currentTarget.selectionStart;\n        if (this.state.completionVisible && this.state.matches.length > 0) {\n          const option = this.state.matches[this.state.selectedOptionIndex];\n          let newValue = this.state.value.substr(0, caret - this.state.query.length);\n\n          if (option.signature) {\n            let parens = 1;\n            if (option.signature.indexOf('()') > -1) {\n              parens++;\n            }\n\n            newValue += option.signature.substring(0, option.signature.indexOf('(') + parens);\n          } else {\n            newValue += option.name;\n          }\n\n          const newCaret = newValue.length;\n\n          // skip over adjacent text including dot completions\n          for (const ch of this.state.value.substr(caret)) {\n            if (isWordChar(ch) || ch === '.') {\n              caret++;\n            } else {\n              break;\n            }\n          }\n\n          newValue += this.state.value.substr(caret);\n\n          let fn: CompletionOption = null;\n          let query = '';\n          let completionVisible = false;\n          const matches: CompletionOption[] = [];\n          if (event.key === KeyValues.KEY_TAB || option.signature) {\n            query = option.name;\n            matches.push(...filterOptions(this.state.options, query, true));\n            completionVisible = matches.length > 0;\n            if (option.signature && option.signature.indexOf('()') === -1) {\n              fn = option;\n            }\n          }\n\n          this.setState(\n            {\n              fn,\n              query,\n              value: newValue,\n              matches,\n              completionVisible,\n              selectedOptionIndex: 0\n            },\n            () => {\n              if (this.props.onChange) {\n                this.props.onChange(this.state.value);\n              }\n              this.nextCaret = newCaret;\n            }\n          );\n\n          event.preventDefault();\n          event.stopPropagation();\n          return;\n        } else {\n          if (this.props.onEnter) {\n            this.checkForMissingFields();\n            this.props.onEnter(event);\n          }\n        }\n        return;\n      case KeyValues.KEY_BACKSPACE:\n        // go backwards on our value until we reach either a space or @\n        this.executeQuery(event.currentTarget.value, event.currentTarget.selectionStart - 1);\n        return;\n    }\n  }\n\n  private reevaluate(value: string, selectionStart: number, force: boolean = false): void {\n    if (this.state.completionVisible || force) {\n      this.setState(this.executeQuery(value, selectionStart) as TextInputState);\n    }\n  }\n\n  private handleKeyUp(event: React.KeyboardEvent<HTMLTextElement>): void {\n    if (event.currentTarget) {\n      const {\n        currentTarget: { value, selectionStart }\n      } = event;\n\n      switch (event.key) {\n        case KeyValues.KEY_P:\n        case KeyValues.KEY_N:\n          if (this.state.completionVisible && event.ctrlKey) {\n            return;\n          }\n          this.reevaluate(value, selectionStart);\n          return;\n\n        case KeyValues.KEY_F:\n        case KeyValues.KEY_B:\n          this.reevaluate(value, selectionStart);\n          return;\n\n        case KeyValues.KEY_RIGHT:\n        case KeyValues.KEY_LEFT:\n          this.reevaluate(value, selectionStart);\n          return;\n\n        case KeyValues.KEY_UP:\n        case KeyValues.KEY_DOWN:\n          if (this.state.completionVisible) {\n            return;\n          }\n          this.reevaluate(value, selectionStart);\n      }\n    }\n  }\n\n  private handleClick(event: React.MouseEvent<HTMLTextElement>): void {\n    if (event.currentTarget) {\n      const {\n        currentTarget: { value, selectionStart }\n      } = event;\n\n      this.reevaluate(value, selectionStart);\n    }\n  }\n\n  private checkForMissingFields(): boolean {\n    // check if we have any bogus field references\n    if (this.props.autocomplete && this.props.onFieldFailures) {\n      const fields = this.parser.getContactFields(this.state.value);\n      const missingFields = fields\n        .filter((key: string) => !(key in this.props.assetStore.fields.items))\n        .map((field: string) => {\n          return {\n            message: `${field} is not a valid contact field`\n          };\n        });\n\n      this.props.onFieldFailures(missingFields);\n      return missingFields.length > 0;\n    }\n    return false;\n  }\n\n  private handleBlur(event: React.ChangeEvent<HTMLTextElement>): void {\n    if (this.checkForMissingFields()) {\n      if (this.props.onBlur) {\n        this.props.onBlur(event);\n      }\n      return;\n    }\n\n    this.setState(\n      {\n        query: '',\n        matches: [],\n        selectedOptionIndex: 0,\n        completionVisible: false\n      },\n      () => this.props.onBlur && this.props.onBlur(event)\n    );\n  }\n\n  private executeQuery(value: string, position: number): Partial<TextInputState> {\n    // go backwards until we have a query\n    const expression = this.parser.expressionContext(value.substr(0, position));\n\n    let fn: CompletionOption = null;\n    if (expression !== null) {\n      const includeFunctions = expression.startsWith('(');\n\n      if (includeFunctions) {\n        const functionQuery = this.parser.functionContext(expression);\n        if (functionQuery) {\n          const fns = filterOptions(this.state.options, functionQuery, includeFunctions);\n          if (fns.length > 0) {\n            fn = fns[0];\n          }\n        }\n      }\n\n      for (let i = expression.length; i >= 0; i--) {\n        const curr = expression[i];\n        if (curr === '@' || curr === '(' || curr === ' ' || i === 0) {\n          // don't include open parens or spaces\n          if (curr === '(' || curr === ' ') {\n            i++;\n\n            if (!includeFunctions) {\n              return {\n                completionVisible: false\n              };\n            }\n          }\n\n          const query = expression.substr(i, expression.length - i);\n          const matches = filterOptions(this.state.options, query, includeFunctions);\n\n          const completionVisible = matches.length > 0;\n          return {\n            query,\n            matches,\n            completionVisible,\n            selectedOptionIndex: 0,\n            caretCoordinates: getCaretCoordinates(this.textEl, position - query.length),\n            fn,\n            value\n          };\n        }\n      }\n    }\n\n    return {\n      // keep our text field state\n      value,\n\n      // reset the others\n      query: null,\n      completionVisible: false,\n      matches: [],\n      selectedOptionIndex: 0\n    };\n  }\n\n  private handleChange({\n    currentTarget: { value, selectionStart }\n  }: React.ChangeEvent<HTMLTextElement>): void {\n    const updates: Partial<TextInputState> = this.executeQuery(value, selectionStart);\n\n    if (this.props.autocomplete) {\n      if (this.props.count === Count.SMS) {\n        const { parts, characterCount, unicodeChars } = getMsgStats(value, true);\n        updates.parts = parts;\n        updates.characterCount = characterCount;\n        updates.unicodeChars = unicodeChars;\n      }\n\n      updates.selectedOptionIndex = 0;\n      this.setState(updates as TextInputState);\n    }\n\n    if (this.props.onChange) {\n      this.props.onChange(value);\n    }\n  }\n\n  private setSelection(selectedIdx: number): void {\n    let selectedOptionIndex: number = selectedIdx;\n\n    // Can't exceed the last option\n    if (selectedIdx >= this.state.matches.length) {\n      selectedOptionIndex = this.state.matches.length - 1;\n    }\n\n    // Can't go beyond the first option\n    if (selectedIdx < 0) {\n      selectedOptionIndex = 0;\n    }\n\n    if (selectedOptionIndex !== this.state.selectedOptionIndex) {\n      this.setState({ selectedOptionIndex });\n    }\n  }\n\n  private focusInput(): void {\n    const {\n      value: { length }\n    } = this.textEl;\n    this.textEl.focus();\n    this.textEl.selectionStart = length;\n  }\n\n  private getOption(\n    option: CompletionOption,\n    showSummary: boolean = false,\n    numExamples: number = 0\n  ): JSX.Element {\n    const name = getCompletionName(option);\n\n    let summary = null;\n    let examples = null;\n\n    if (showSummary) {\n      summary = (\n        <div data-spec=\"option-summary\" className={styles.option_summary}>\n          <ReactMarkdown source={option.summary} />\n        </div>\n      );\n    }\n\n    if (option.examples && numExamples > 0) {\n      examples = (\n        <div data-spec=\"option-example\" className={styles.option_examples}>\n          <div>\n            EXAMPLE\n            {numExamples !== 1 ? 'S' : ''}\n          </div>\n          {option.examples.slice(0, numExamples).map((example: FunctionExample, idx: number) => (\n            <div key={option.name + '_example_' + idx}> {example.template}</div>\n          ))}\n        </div>\n      );\n    }\n\n    return (\n      <>\n        <div data-spec=\"option-name\" className={styles.option_name}>\n          {option.signature ? <div className={styles.fn_marker}>ƒ</div> : null}\n          {name}\n\n          {showSummary && option.signature ? (\n            <div className={styles.option_signature}>{getCompletionSignature(option)}</div>\n          ) : null}\n        </div>\n        {summary}\n        {examples}\n      </>\n    );\n  }\n\n  private getOptions(): JSX.Element[] {\n    return this.state.matches.map((option: CompletionOption, idx: number) => {\n      const optionClasses = [styles.option];\n\n      if (idx === this.state.selectedOptionIndex) {\n        optionClasses.push(styles.selected);\n\n        if (idx === 0) {\n          optionClasses.push(styles.first_option);\n        }\n\n        return (\n          <li\n            ref={this.selectedElRef}\n            className={optionClasses.join(' ')}\n            key={option.signature || option.name}\n          >\n            {this.getOption(option, true, 1)}\n          </li>\n        );\n      }\n\n      return (\n        <li className={optionClasses.join(' ')} key={option.signature || option.name}>\n          {this.getOption(option, false)}\n        </li>\n      );\n    });\n  }\n\n  private hasErrors(): boolean {\n    return this.getMergedErrors().length > 0;\n  }\n\n  private getMergedErrors(): ValidationFailure[] {\n    if (this.props.entry) {\n      return (this.props.entry.validationFailures || []).concat(\n        this.props.entry.persistantFailures || []\n      );\n    }\n    return [];\n  }\n\n  private getScroll(): number {\n    if (this.textEl) {\n      return this.textEl.scrollTop;\n    }\n    return 0;\n  }\n\n  private getError(): string {\n    return this.props.entry.validationFailures && this.props.entry.validationFailures.length > 0\n      ? this.props.entry.validationFailures[0].message\n      : null;\n  }\n\n  private getTextElement(): JSX.Element {\n    const textElClasses = cx({\n      [styles.textinput]: true,\n      [shared.invalid]: this.hasErrors() || this.props.showInvalid === true\n    });\n\n    let text = this.state.value;\n    if (this.props.entry) {\n      text = this.props.entry.value;\n    }\n\n    if (this.props.textarea) {\n      return (\n        <textarea\n          data-spec=\"input\"\n          data-testid=\"input\"\n          ref={this.textElRef}\n          className={textElClasses}\n          value={text}\n          onClick={this.handleClick}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          onKeyDown={this.handleKeyDown}\n          onKeyUp={this.handleKeyUp}\n          placeholder={this.props.placeholder}\n          maxLength={this.props.maxLength || -1}\n        />\n      );\n    } else {\n      return (\n        <input\n          data-spec=\"input\"\n          data-testid=\"input\"\n          ref={this.textElRef}\n          type=\"text\"\n          className={textElClasses}\n          value={text}\n          onClick={this.handleClick}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          onKeyDown={this.handleKeyDown}\n          onKeyUp={this.handleKeyUp}\n          placeholder={this.props.placeholder}\n          maxLength={this.props.maxLength || -1}\n        />\n      );\n    }\n  }\n\n  public render(): JSX.Element {\n    const completionClasses = cx({\n      [styles.completion_container]: true,\n      [styles.hidden]: !this.state.completionVisible || this.state.matches.length === 0\n    });\n\n    const fnClasses = cx({\n      [styles.fn_container]: true,\n      [styles.hidden]: !this.state.completionVisible || this.state.matches.length === 0\n    });\n    const options: JSX.Element[] = this.getOptions();\n    const charCount: JSX.Element =\n      this.props.count && this.props.count === Count.SMS ? (\n        <CharCount\n          count={this.state.characterCount}\n          parts={this.state.parts.length}\n          unicodeChars={this.state.unicodeChars}\n        />\n      ) : null;\n\n    const sendMsgError =\n      this.hasErrors() &&\n      this.props.name === 'Message' &&\n      (this.props.typeConfig.type === Types.send_msg ||\n        this.props.typeConfig.type === Types.send_broadcast);\n\n    const showFn = this.state.fn && !this.state.query;\n\n    return (\n      <FormElement\n        __className={this.props.__className}\n        name={this.props.name}\n        helpText={this.props.helpText}\n        showLabel={this.props.showLabel}\n        // errors={this.state.errors}\n        entry={this.props.entry}\n        sendMsgError={sendMsgError}\n      >\n        <div className={styles.wrapper}>\n          {this.getTextElement()}\n          <div\n            className={completionClasses}\n            style={{\n              top: this.state.caretCoordinates.top - this.getScroll(),\n              left: this.state.caretCoordinates.left\n            }}\n            data-spec=\"completion-options\"\n          >\n            <div className={styles.options_wrapper}>\n              <ul className={styles.option_list} data-spec=\"completion-list\">\n                {options}\n              </ul>\n              <div className={styles.help} data-spec=\"completion-help\">\n                {COMPLETION_HELP}\n              </div>\n            </div>\n\n            {showFn ? (\n              <div className={fnClasses}>{this.getOption(this.state.fn, true, 3)}</div>\n            ) : null}\n          </div>\n        </div>\n        {charCount}\n      </FormElement>\n    );\n  }\n}\n\n/* istanbul ignore next */\nconst mapStateToProps = ({\n  flowContext: { assetStore },\n  nodeEditor: { typeConfig }\n}: AppState) => ({\n  typeConfig,\n  assetStore\n});\n\nconst ConnectedTextInputElement = connect(\n  mapStateToProps,\n  null,\n  null,\n  { withRef: true }\n)(TextInputElement);\n\nexport default ConnectedTextInputElement;\n","const STATE_BODY = 0; // not in a expression\nconst STATE_PREFIX = 1; // '@' prefix that denotes the start of an expression\nconst STATE_IDENTIFIER = 2; // the identifier part, e.g. 'contact.age' in '@contact.age'\nconst STATE_BALANCED = 3; // the balanced parentheses delimited part, e.g. '(1 + 2)' in '@(1 + 2)'\nconst STATE_STRING_LITERAL = 4; // a string literal which could contain )\nconst STATE_ESCAPED_PREFIX = 5; // a '@' prefix preceded by another '@'\nconst STATE_IGNORE = 6;\n\ninterface Expression {\n  start: number;\n  end: number;\n  text: string;\n  closed: boolean;\n}\n\n/**\n * Determines whether the given string starts with the given text\n */\nconst startsWith = (str: string, start: string): boolean => {\n  return str.indexOf(start, 0) === 0;\n};\n\n/**\n * Checks the parsed (possibly partial) expression to determine if it's valid based on how it starts\n */\nconst isValidStart = (\n  partialExpression: string,\n  allowedTopLevels: string[],\n  allowIncomplete: boolean\n): boolean => {\n  const body = partialExpression.substring(1); // strip prefix\n\n  if (body[0] === '(') {\n    return true;\n  } else {\n    // if expression doesn't start with ( then check it's an allowed top level context reference\n    const topLevel = body.split('.')[0].toLowerCase();\n\n    if (allowIncomplete) {\n      for (const allowed of allowedTopLevels) {\n        if (startsWith(allowed, topLevel)) {\n          return true;\n        }\n      }\n    } else {\n      return allowedTopLevels.indexOf(topLevel) >= 0;\n    }\n    return false;\n  }\n};\n\n/**\n * Determines whether the given character is a word character, i.e. \\w in a regex\n */\nexport const isWordChar = (ch: string | 0): boolean => {\n  return (\n    (ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z') || (ch >= '0' && ch <= '9') || ch === '_'\n  );\n};\n\n/**\n * Determines whether we are in a string literal\n */\nconst isInStringLiteral = (partialExpression: string): boolean => {\n  // count number quotation marks\n  let numQuotes = 0;\n  for (const pos of partialExpression) {\n    if (pos === '\"') {\n      numQuotes++;\n    }\n  }\n  return numQuotes % 2 !== 0; // odd means last string literal is open\n};\n\nexport default class ExcellentParser {\n  private expressionPrefix: string;\n  private allowedTopLevels: string[];\n\n  /**\n   * Creates a new parser\n   * @param expressionPrefix the prefix for expressions, e.g. '@'\n   * @param allowedTopLevels the context names that are allowed without parentheses, e.g. [\"contact\", \"flow\", ...]\n   */\n  constructor(expressionPrefix: string, allowedTopLevels: string[]) {\n    this.expressionPrefix = expressionPrefix;\n    this.allowedTopLevels = allowedTopLevels;\n  }\n\n  /**\n   * Given the text up to the caret position, returns the expression currently being edited, without its prefix\n   */\n  public expressionContext(textToCaret: string): string {\n    const expressions = this.findExpressions(textToCaret);\n    if (expressions.length === 0) {\n      // no expressions found\n      return null;\n    }\n\n    const lastExpression = expressions[expressions.length - 1];\n\n    // has last expression already ended or is it closed (i.e. has balanced parentheses)\n    if (lastExpression.end < textToCaret.length || lastExpression.closed) {\n      return null;\n    }\n\n    return lastExpression.text.substring(1); // return without prefix\n  }\n\n  /**\n   * Given the partial expression currently being edited, returns the current auto-completable identifier\n   * which may be a function name or a context reference.\n   */\n  public autoCompleteContext(partialExpression: string): string {\n    if (isInStringLiteral(partialExpression)) {\n      return null;\n    }\n\n    const neededParentheses = [];\n    let fragment = '';\n    let skipChar = false;\n    let inQuotes = false;\n    let prependFlag = '';\n\n    for (let pos = partialExpression.length - 1; pos >= 0; pos--) {\n      const ch = partialExpression[pos];\n\n      if (ch === ' ') {\n        skipChar = true;\n      }\n\n      if (ch === ',') {\n        skipChar = true;\n        if (neededParentheses[neededParentheses.length - 1] !== '(') {\n          neededParentheses.push('(');\n        }\n      }\n\n      if (ch === ')' && !inQuotes) {\n        skipChar = true;\n        neededParentheses.push('(');\n        neededParentheses.push('(');\n      }\n\n      if (ch === '\"') {\n        inQuotes = !inQuotes;\n      }\n\n      if (skipChar) {\n        if (ch === '(' && !inQuotes) {\n          if (neededParentheses[neededParentheses.length - 1] === '(') {\n            neededParentheses.pop();\n          }\n\n          if (neededParentheses.length === 0) {\n            skipChar = false;\n          }\n        }\n      }\n\n      if (ch === '(' && fragment === '') {\n        prependFlag = '#';\n      }\n\n      if (skipChar || inQuotes || (ch === '(' && fragment === '')) {\n        continue;\n      }\n\n      if (isWordChar(ch) || ch === '.') {\n        fragment = ch + fragment;\n      } else {\n        break;\n      }\n    }\n\n    if (fragment.match(/[A-Za-z][\\w]*(\\.[\\w]+)*/)) {\n      return prependFlag + fragment;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * TODO find the function context\n   */\n  public functionContext(partialExpression: string): string {\n    const inString = isInStringLiteral(partialExpression);\n\n    // initial state is string literal if number of quotes is odd\n    let state = inString ? STATE_STRING_LITERAL : STATE_IGNORE;\n    let identifier = '';\n    let parenthesesLevel = partialExpression[-1] === '(' ? 0 : 1;\n\n    for (let pos = partialExpression.length - 1; pos >= 0; pos--) {\n      const ch = partialExpression[pos];\n\n      if (ch === '@') {\n        return '';\n      }\n\n      if (state === STATE_IGNORE) {\n        if (parenthesesLevel === 0 && (isWordChar(ch) || ch === '.')) {\n          state = STATE_IDENTIFIER;\n          identifier = ch + identifier;\n        } else if (ch === '\"') {\n          state = STATE_STRING_LITERAL;\n        } else if (ch === '(') {\n          parenthesesLevel--;\n        } else if (ch === ')') {\n          parenthesesLevel++;\n        }\n      } else if (state === STATE_IDENTIFIER) {\n        if (isWordChar(ch) || ch === '.') {\n          identifier = ch + identifier;\n        } else {\n          return identifier;\n        }\n      } else if (state === STATE_STRING_LITERAL) {\n        if (ch === '\"') {\n          state = STATE_IGNORE;\n        }\n      }\n    }\n    return '';\n  }\n\n  public getContactFields(text: string): string[] {\n    const fields = {};\n    const re = /((parent|child\\.)*contact\\.)*fields\\.([a-z0-9_]+)/g;\n    const expressions = this.findExpressions(text);\n    for (const expression of expressions) {\n      let match;\n      // tslint:disable-next-line:no-conditional-assignment\n      while ((match = re.exec(expression.text))) {\n        (fields as any)[match[3]] = true;\n      }\n    }\n    return Object.keys(fields);\n  }\n\n  /**\n   * Finds all expressions in the given text, including any partially complete expression at the end of the input\n   */\n  public findExpressions(text: string): Expression[] {\n    const expressions: Expression[] = [];\n    let state = STATE_BODY;\n    let currentExpression: Expression = null;\n    let parenthesesLevel = 0;\n\n    for (let pos = 0; pos < text.length; pos++) {\n      const ch = text[pos];\n\n      // in order to determine if the b in a.b terminates an identifier, we have to peek two characters ahead as\n      // it could be a.b. (b terminates) or a.b.c (b doesn't terminate)\n      const nextCh = pos < text.length - 1 ? text[pos + 1] : 0;\n      const nextNextCh = pos < text.length - 2 ? text[pos + 2] : 0;\n\n      if (state === STATE_BODY) {\n        if (ch === this.expressionPrefix && (isWordChar(nextCh) || nextCh === '(')) {\n          state = STATE_PREFIX;\n          currentExpression = {\n            start: pos,\n            end: null,\n            text: ch,\n            closed: false\n          };\n        } else if (ch === this.expressionPrefix && nextCh === this.expressionPrefix) {\n          state = STATE_ESCAPED_PREFIX;\n        }\n      } else if (state === STATE_PREFIX) {\n        if (isWordChar(ch)) {\n          state = STATE_IDENTIFIER; // we're parsing an expression like @XXX\n        } else if (ch === '(') {\n          // we're parsing an expression like @(1 + 2)\n          state = STATE_BALANCED;\n          parenthesesLevel += 1;\n        }\n        currentExpression.text += ch;\n      } else if (state === STATE_IDENTIFIER) {\n        currentExpression.text += ch;\n      } else if (state === STATE_BALANCED) {\n        if (ch === '(') {\n          parenthesesLevel += 1;\n        } else if (ch === ')') {\n          parenthesesLevel -= 1;\n        } else if (ch === '\"') {\n          state = STATE_STRING_LITERAL;\n        }\n\n        currentExpression.text += ch;\n\n        // expression terminates if parentheses balance\n        if (parenthesesLevel === 0) {\n          currentExpression.end = pos + 1;\n        }\n      } else if (state === STATE_STRING_LITERAL) {\n        if (ch === '\"') {\n          state = STATE_BALANCED;\n        }\n        currentExpression.text += ch;\n      } else if (state === STATE_ESCAPED_PREFIX) {\n        state = STATE_BODY;\n      }\n\n      // identifier can terminate expression in 3 ways:\n      //  1. next char is null (i.e. end of the input)\n      //  2. next char is not a word character or period\n      //  3. next char is a period, but it's not followed by a word character\n      if (state === STATE_IDENTIFIER) {\n        if (\n          (!isWordChar(nextCh) && nextCh !== '.') ||\n          (nextCh === '.' && !isWordChar(nextNextCh))\n        ) {\n          currentExpression.end = pos + 1;\n        }\n      }\n\n      if (currentExpression != null && (currentExpression.end != null || nextCh === 0)) {\n        const allowIncomplete = nextCh === 0; // if we're at the end of the input, allow incomplete expressions\n        if (isValidStart(currentExpression.text, this.allowedTopLevels, allowIncomplete)) {\n          currentExpression.closed = currentExpression.text[1] === '(' && parenthesesLevel === 0;\n          currentExpression.end = pos + 1;\n          expressions.push(currentExpression);\n        }\n\n        currentExpression = null;\n        state = STATE_BODY;\n      }\n    }\n\n    return expressions;\n  }\n}\n","import { GSM } from 'components/form/textinput/constants';\nimport { split } from 'split-sms';\n\nexport interface UnicodeCharMap {\n  [char: string]: boolean;\n}\n\ninterface MsgStats {\n  value: string;\n  parts: string[];\n  characterCount: number;\n  unicodeChars: UnicodeCharMap;\n}\n\nexport const isUnicode = (char: string): boolean => {\n  if (GSM.hasOwnProperty(char)) {\n    return false;\n  }\n  return true;\n};\n\nexport const getUnicodeChars = (msg: string): UnicodeCharMap => {\n  const chars = {};\n\n  for (const char of msg) {\n    if (isUnicode(char)) {\n      (chars as any)[char] = true;\n    }\n  }\n\n  return chars;\n};\n\n/**\n * Replaces unicode characters commonly inserted by text editors like MSWord with their GSM equivalents\n * @param {string} msg - msg to be cleaned\n * @returns {string} Cleaned msg\n */\nexport const cleanMsg = (msg: string): string =>\n  msg\n    .replace(/[\\u2018\\u2019]/g, \"'\") // Smart single quotes\n    .replace(/[\\u201C\\u201D]/g, '\"') // Smart double quotes\n    .replace(/[\\u2013\\u2014]/g, '-') // En/em dash\n    .replace(/\\u2026/g, '...') // Horizontal ellipsis\n    .replace(/\\u2002/g, ' '); // En space\n\n/**\n * First pass at providing the user with an accurate character count for their SMS messages.\n * Determines encoding, segments, max character limit per message and calculates character count.\n * Optionally replaces common unicode 'gotcha characters' with their GSM counterparts.\n * @param value\n * @param replace\n */\nexport const getMsgStats = (value: string | string[], replace?: boolean): MsgStats => {\n  let newVal = value as string;\n\n  // Localized values are stored as string arrays\n  if (newVal.constructor === Array) {\n    newVal = newVal[0];\n  }\n\n  if (replace) {\n    newVal = cleanMsg(newVal);\n  }\n\n  const stats = split(newVal);\n\n  return {\n    value: newVal,\n    parts: stats.parts,\n    characterCount: stats.length,\n    unicodeChars: getUnicodeChars(newVal)\n  };\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { ActionFormProps } from 'components/flow/props';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport {\n  FormState,\n  mergeForm,\n  SelectOptionEntry,\n  StringEntry,\n  ValidationFailure\n} from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\n\nimport styles from './AddURNForm.module.scss';\nimport { getSchemeOptions, initializeForm, stateToAction } from './helpers';\n\nexport interface AddURNFormState extends FormState {\n  scheme: SelectOptionEntry;\n  path: StringEntry;\n}\n\nexport const controlLabelSpecId = 'label';\n\nexport default class AddURNForm extends React.PureComponent<ActionFormProps, AddURNFormState> {\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = initializeForm(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public handleSave(): void {\n    const valid = this.handlePathChanged(this.state.path.value, true);\n    if (valid) {\n      const newAction = stateToAction(this.props.nodeSettings, this.state);\n      this.props.updateAction(newAction);\n      this.props.onClose(false);\n    }\n  }\n\n  public handleSchemeChanged(selected: SelectOption): boolean {\n    const updates: Partial<AddURNFormState> = {\n      scheme: { value: selected }\n    };\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  public handlePathChanged(value: string, submitting: boolean = false): boolean {\n    const updates: Partial<AddURNFormState> = {\n      path: validate('URN', value, [shouldRequireIf(submitting)])\n    };\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p data-spec={controlLabelSpecId}>\n          Add a new URN to reach the contact such as a phone number.\n        </p>\n        <div className={styles.scheme_selection}>\n          <SelectElement\n            name=\"URN Type\"\n            entry={this.state.scheme}\n            onChange={this.handleSchemeChanged}\n            options={getSchemeOptions()}\n          />\n        </div>\n        <div className={styles.path}>\n          <TextInputElement\n            name=\"URN\"\n            placeholder=\"Enter the URN value\"\n            entry={this.state.path}\n            onChange={this.handlePathChanged}\n            onFieldFailures={(persistantFailures: ValidationFailure[]) => {\n              const path = { ...this.state.path, persistantFailures };\n              this.setState({\n                path,\n                valid: this.state.valid && !hasErrors(path)\n              });\n            }}\n            autocomplete={true}\n          />\n        </div>\n      </Dialog>\n    );\n  }\n}\n","import * as React from 'react';\nimport { CallResthook } from 'flowTypes';\n\nconst CallResthookComp: React.SFC<CallResthook> = ({ resthook }): JSX.Element => (\n  <div>{resthook}</div>\n);\n\nexport default CallResthookComp;\n","import * as React from 'react';\nimport { CallWebhook } from 'flowTypes';\n\nconst CallWebhookComp: React.SFC<CallWebhook> = ({ url }): JSX.Element => <div>{url}</div>;\n\nexport default CallWebhookComp;\n","import { Group } from 'flowTypes';\nimport { Asset, AssetType } from 'store/flowContext';\nimport { AssetArrayEntry, FormState } from 'store/nodeEditor';\n\nexport const labelSpecId = 'label';\n\nexport interface ChangeGroupsFormState extends FormState {\n  groups: AssetArrayEntry;\n  removeAll?: boolean;\n}\n\nexport const excludeDynamicGroups = (asset: Asset): boolean => {\n  return asset.content && asset.content.query;\n};\n\nexport const mapGroupsToAssets = (groups: Group[]): Asset[] =>\n  groups.map(({ name, uuid }) => ({ name, id: uuid, type: AssetType.Group }));\n\nexport const mapAssetsToGroups = (searchResults: Asset[] | null): Group[] => {\n  if (!searchResults) {\n    return [];\n  }\n\n  return searchResults.map(result => ({\n    uuid: result.id,\n    name: result.name\n  }));\n};\n","import {\n  ChangeGroupsFormState,\n  mapAssetsToGroups,\n  mapGroupsToAssets\n} from 'components/flow/actions/changegroups/helpers';\nimport { getActionUUID } from 'components/flow/actions/helpers';\nimport { Types } from 'config/interfaces';\nimport { ChangeGroups } from 'flowTypes';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): ChangeGroupsFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.add_contact_groups) {\n    const action = settings.originalAction as ChangeGroups;\n    return {\n      groups: { value: mapGroupsToAssets(action.groups) },\n      valid: true\n    };\n  }\n\n  return {\n    groups: { value: null },\n    valid: false\n  };\n};\n\nexport const stateToAction = (\n  nodeSettings: NodeEditorSettings,\n  state: ChangeGroupsFormState\n): ChangeGroups => {\n  return {\n    type: Types.add_contact_groups,\n    groups: mapAssetsToGroups(state.groups.value),\n    uuid: getActionUUID(nodeSettings, Types.add_contact_groups)\n  };\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { ChangeGroups } from 'flowTypes';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { mergeForm } from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\n\nimport { ChangeGroupsFormState, excludeDynamicGroups, labelSpecId } from '../helpers';\nimport { initializeForm, stateToAction } from './helpers';\n\nexport default class AddGroupsForm extends React.Component<ActionFormProps, ChangeGroupsFormState> {\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = initializeForm(this.props.nodeSettings) as ChangeGroupsFormState;\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleSave(): void {\n    const valid = this.handleGroupsChanged(this.state.groups.value!, true);\n    if (valid) {\n      const newAction = stateToAction(this.props.nodeSettings, this.state);\n      this.props.updateAction(newAction as ChangeGroups);\n      this.props.onClose(false);\n    }\n  }\n\n  public handleGroupsChanged(groups: Asset[], submitting: boolean = false): boolean {\n    const updates: Partial<ChangeGroupsFormState> = {\n      groups: validate('Groups', groups, [shouldRequireIf(submitting)])\n    };\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  public handleGroupAdded(group: Asset): void {\n    // update our store with our new group\n    this.props.addAsset('groups', group);\n\n    // try to add the group\n    this.handleGroupsChanged((this.state.groups.value || []).concat(group), false);\n  }\n\n  public handleCreateAssetFromInput(input: string): any {\n    return { name: input };\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p data-spec={labelSpecId}>Select the group(s) to add the contact to.</p>\n\n        <AssetSelector\n          name=\"Groups\"\n          multi={true}\n          noOptionsMessage=\"Enter a name to create a new group\"\n          assets={this.props.assetStore.groups}\n          entry={this.state.groups}\n          onChange={this.handleGroupsChanged}\n          searchable={true}\n          shouldExclude={excludeDynamicGroups}\n          // Groups can be created on the fly\n          createPrefix=\"Create Group: \"\n          createAssetFromInput={this.handleCreateAssetFromInput}\n          onAssetCreated={this.handleGroupAdded}\n        />\n      </Dialog>\n    );\n  }\n}\n","import { renderAssetList } from 'components/flow/actions/helpers';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Types } from 'config/interfaces';\nimport { ChangeGroups, Endpoints } from 'flowTypes';\nimport * as React from 'react';\nimport { AssetType } from 'store/flowContext';\n\nexport const removeAllSpecId = 'remove_from_all';\nexport const contentSpecId = 'content';\nexport const removeAllText = 'Remove from all groups';\nexport const ellipsesText = '...';\n\nexport const MAX_TO_SHOW = 3;\nexport const getRemoveAllMarkup = (\n  key = removeAllSpecId,\n  specId = removeAllSpecId,\n  text = removeAllText\n) => (\n  <div key={key} data-spec={specId}>\n    {text}\n  </div>\n);\n\nexport const getContentMarkup = (\n  { type, groups }: ChangeGroups,\n  endpoints?: Endpoints\n): JSX.Element[] => {\n  const content = [];\n\n  if (type === Types.remove_contact_groups && (!groups || !groups.length)) {\n    content.push(getRemoveAllMarkup());\n  } else {\n    return renderAssetList(\n      groups.map(group => {\n        return { id: group.uuid, name: group.name, type: AssetType.Group };\n      }),\n      MAX_TO_SHOW,\n      endpoints!\n    );\n  }\n\n  return content;\n};\n\nexport const getChangeGroupsMarkup = (\n  action: ChangeGroups,\n  endpoints?: Endpoints,\n  specId = contentSpecId\n) => <div data-spec={specId}>{getContentMarkup(action, endpoints)}</div>;\n\nconst ChangeGroupsComp: React.SFC<ChangeGroups> = (props, context: any): JSX.Element => {\n  return getChangeGroupsMarkup(props, context.config.endpoints);\n};\n\nChangeGroupsComp.contextTypes = {\n  config: fakePropType\n};\n\nexport default ChangeGroupsComp;\n","import classNames from 'classnames/bind';\nimport { FormElementProps } from 'components/form/FormElement';\nimport * as React from 'react';\nimport { isRealValue, renderIf } from 'utils';\n\nimport styles from './CheckboxElement.module.scss';\n\nexport interface CheckboxElementProps extends FormElementProps {\n  checked: boolean;\n  title?: string;\n  description?: string;\n  labelClassName?: string;\n  checkboxClassName?: string;\n  onChange?(checked: boolean): void;\n}\n\ninterface CheckboxState {\n  checked: boolean;\n}\n\nexport const boxIco = 'fe-square';\nexport const checkedBoxIco = 'fe-check-square';\n\nexport const checkboxSpecId = 'checkbox';\nexport const titleSpecId = 'title';\nexport const descSpecId = 'description';\n\nconst cx: any = classNames.bind(styles);\n\nexport default class CheckboxElement extends React.Component<CheckboxElementProps, CheckboxState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      checked: this.props.checked\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  private handleChange(): void {\n    this.setState({ checked: !this.state.checked }, () => {\n      if (this.props.onChange) {\n        this.props.onChange(this.state.checked);\n      }\n    });\n  }\n\n  /* istanbul ignore next */\n  public validate(): boolean {\n    return true;\n  }\n\n  public render(): JSX.Element {\n    const checkboxIcon = this.state.checked ? checkedBoxIco : boxIco;\n    return (\n      <label className={cx(styles.label, this.props.labelClassName)} onClick={this.handleChange}>\n        <span\n          data-spec={checkboxSpecId}\n          className={cx(checkboxIcon, this.props.checkboxClassName)}\n        />\n        {renderIf(isRealValue(this.props.title))(\n          <div data-spec={titleSpecId} className={styles.title}>\n            {this.props.title}\n          </div>\n        )}\n        {renderIf(isRealValue(this.props.description))(\n          <div\n            data-spec={descSpecId}\n            className={this.props.title ? styles.description : styles.description_solo}\n          >\n            {this.props.description}\n          </div>\n        )}\n      </label>\n    );\n  }\n}\n","import {\n  ChangeGroupsFormState,\n  mapAssetsToGroups,\n  mapGroupsToAssets\n} from 'components/flow/actions/changegroups/helpers';\nimport { getActionUUID } from 'components/flow/actions/helpers';\nimport { Types } from 'config/interfaces';\nimport { RemoveFromGroups } from 'flowTypes';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): ChangeGroupsFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.remove_contact_groups) {\n    const action = settings.originalAction as RemoveFromGroups;\n\n    const groups = action.groups || [];\n    return {\n      groups: { value: mapGroupsToAssets(groups) },\n      removeAll: groups.length === 0 || action.all_groups,\n      valid: true\n    };\n  }\n\n  return {\n    groups: { value: null },\n    removeAll: false,\n    valid: false\n  };\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  state: ChangeGroupsFormState\n): RemoveFromGroups => {\n  return {\n    type: Types.remove_contact_groups,\n    groups: state.removeAll ? [] : mapAssetsToGroups(state.groups.value),\n    all_groups: !!state.removeAll,\n    uuid: getActionUUID(settings, Types.remove_contact_groups)\n  };\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { ChangeGroupsFormState } from 'components/flow/actions/changegroups/helpers';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport CheckboxElement from 'components/form/checkbox/CheckboxElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { ChangeGroups } from 'flowTypes';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { mergeForm } from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\nimport { renderIf } from 'utils';\n\nimport { initializeForm, stateToAction } from './helpers';\nimport styles from './RemoveGroupsForm.module.scss';\n\nexport const LABEL = 'Select the group(s) to remove the contact from.';\nexport const NOT_FOUND = 'Enter the name of an existing group';\nexport const PLACEHOLDER = 'Enter the name an existing group';\nexport const REMOVE_FROM_ALL = 'Remove from All';\nexport const REMOVE_FROM_ALL_DESC =\n  \"Remove the active contact from all groups they're a member of.\";\n\nexport const labelSpecId = 'label';\nexport const fieldContainerSpecId = 'field-container';\n\nexport default class RemoveGroupsForm extends React.Component<\n  ActionFormProps,\n  ChangeGroupsFormState\n> {\n  public static contextTypes = {\n    assetService: fakePropType\n  };\n\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = initializeForm(this.props.nodeSettings) as ChangeGroupsFormState;\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleSave(): void {\n    const valid = this.handleGroupsChanged(this.state.groups.value!, true);\n    if (valid) {\n      const newAction = stateToAction(this.props.nodeSettings, this.state);\n      this.props.updateAction(newAction as ChangeGroups);\n      this.props.onClose(false);\n    }\n  }\n\n  private handleUpdate(\n    keys: { groups?: Asset[]; removeAll?: boolean },\n    submitting: boolean = false\n  ): boolean {\n    const updates: Partial<ChangeGroupsFormState> = {};\n\n    // we only require groups if removeAll isn't checked\n    let groupValidators = this.state.removeAll ? [] : [shouldRequireIf(submitting)];\n\n    if (keys.hasOwnProperty('removeAll')) {\n      updates.removeAll = keys.removeAll;\n      if (keys.removeAll) {\n        groupValidators = [];\n      }\n    }\n\n    if (keys.hasOwnProperty('groups')) {\n      updates.groups = validate('Groups', keys.groups!, groupValidators);\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  public handleGroupsChanged(groups: Asset[], submitting: boolean = false): boolean {\n    return this.handleUpdate({ groups }, submitting);\n  }\n\n  public handleRemoveAllUpdate(removeAll: boolean): boolean {\n    return this.handleUpdate({ removeAll });\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n\n        {renderIf(!this.state.removeAll)(\n          <div>\n            <p data-spec={labelSpecId}>{LABEL}</p>\n            <AssetSelector\n              name=\"Groups\"\n              assets={this.props.assetStore.groups}\n              entry={this.state.groups}\n              searchable={true}\n              onChange={this.handleGroupsChanged}\n              multi={true}\n            />\n          </div>\n        )}\n\n        <CheckboxElement\n          name={REMOVE_FROM_ALL}\n          title={REMOVE_FROM_ALL}\n          labelClassName={this.state.removeAll ? '' : styles.checkbox}\n          checked={this.state.removeAll!}\n          description={REMOVE_FROM_ALL_DESC}\n          onChange={this.handleRemoveAllUpdate}\n        />\n      </Dialog>\n    );\n  }\n}\n","import { Type, Types } from 'config/interfaces';\nimport { getType, getTypeConfig } from 'config/typeConfigs';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const determineTypeConfig = (nodeSettings: NodeEditorSettings): Type => {\n  const renderNode = nodeSettings.originalNode;\n  const node = renderNode && renderNode.node;\n\n  if (nodeSettings.originalAction && nodeSettings.originalAction.type) {\n    return getTypeConfig(nodeSettings.originalAction.type);\n  } else if (node && node.actions && node.actions.length > 0) {\n    return getTypeConfig(node.actions[node.actions.length - 1].type);\n  } else {\n    try {\n      const type = getType(renderNode);\n      const config = getTypeConfig(type);\n      if (config.type !== Types.missing) {\n        return config;\n      }\n      // tslint:disable-next-line:no-empty\n    } catch (Error) {}\n  }\n\n  // Account for ghost nodes\n  if (node && node.router) {\n    return getTypeConfig(node.router.type);\n  }\n\n  throw new Error(`Couldn't determine type config for: ${node.uuid}`);\n};\n","import * as React from 'react';\n\nimport styles from './Pill.module.scss';\n\nexport interface PillProps {\n  advanced?: boolean;\n  onClick?(event: React.MouseEvent<HTMLDivElement>): void;\n  text: string;\n  maxLength?: number;\n  icon?: string;\n  large?: boolean;\n  style?: React.CSSProperties;\n}\n\nconst Pill: React.SFC<PillProps> = (props: PillProps): JSX.Element => {\n  let text = props.text;\n\n  if (props.text.startsWith('@')) {\n    text = '@(exp)';\n  } else if (props.maxLength && text.length > props.maxLength) {\n    text = props.text.substring(0, props.maxLength) + '...';\n  }\n\n  const pillStyles = [styles.pill];\n\n  if (props.large) {\n    pillStyles.push(styles.large);\n  }\n\n  if (props.onClick) {\n    pillStyles.push(styles.clickable);\n  }\n\n  return (\n    <div\n      style={props.style}\n      data-advanced={props.advanced}\n      onClick={props.onClick}\n      className={pillStyles.join(' ')}\n    >\n      {text}\n      {props.icon ? (\n        <span data-advanced={props.advanced} className={styles.icon + ' ' + props.icon} />\n      ) : null}\n    </div>\n  );\n};\n\nexport default Pill;\n","import { react as bindCallbacks } from 'auto-bind';\nimport TextInputElement, { HTMLTextElement } from 'components/form/textinput/TextInputElement';\nimport Pill from 'components/pill/Pill';\nimport * as React from 'react';\nimport { StringArrayEntry, StringEntry, ValidationFailure } from 'store/nodeEditor';\nimport { Empty, validate } from 'store/validators';\n\nimport styles from './MultiChoice.module.scss';\n\nexport interface MultiChoiceInputProps {\n  name: string;\n  items: StringArrayEntry;\n  entry?: StringEntry;\n  onRemoved: (item: string) => void;\n  onItemAdded: (item: string) => boolean;\n  onFieldErrors: (validationFailures: ValidationFailure[]) => void;\n  onEntryChanged?: (entry: StringEntry) => void;\n  helpText?: string;\n}\n\ninterface MultiChoiceInputState {\n  currentInput: StringEntry;\n}\n\nexport default class MultiChoiceInput extends React.Component<\n  MultiChoiceInputProps,\n  MultiChoiceInputState\n> {\n  constructor(props: MultiChoiceInputProps) {\n    super(props);\n\n    if (this.props.entry) {\n      this.state = {\n        currentInput: this.props.entry\n      };\n    } else {\n      this.state = {\n        currentInput: { value: '' }\n      };\n    }\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public handleInputChanged(value: string): void {\n    this.setState({ currentInput: { value } });\n    if (this.props.onEntryChanged) {\n      this.props.onEntryChanged({ value });\n    }\n  }\n\n  public handleAddItem(event: React.KeyboardEvent<HTMLTextElement>): boolean {\n    // hack: we want to evaluate after the state is updated for validation errors\n    window.setTimeout(() => {\n      if ((this.state.currentInput.persistantFailures || []).length > 0) {\n        return;\n      }\n\n      if (this.state.currentInput.value.trim().length > 0) {\n        const newItem = this.state.currentInput.value.trim();\n\n        if (this.props.onItemAdded(newItem)) {\n          this.setState({ currentInput: { value: '' } });\n        }\n\n        if (this.props.onEntryChanged) {\n          this.props.onEntryChanged({ value: '' });\n        }\n      }\n    }, 0);\n    return true;\n  }\n\n  private handleValidateEmpty(): void {\n    const currentInput = validate(this.props.name, this.state.currentInput.value, [Empty]);\n    this.setState({ currentInput }, () => {\n      if (this.props.onEntryChanged) {\n        this.props.onEntryChanged(currentInput);\n      }\n    });\n  }\n\n  private getChosenItems(): JSX.Element {\n    if (this.props.items.value.length > 0) {\n      return (\n        <div className={styles.chosen}>\n          {this.props.items.value.map((item: string) => (\n            <div key={`item_${item}`} className={styles.item}>\n              <Pill\n                icon=\"fe-x\"\n                text={' ' + item}\n                large={true}\n                onClick={() => {\n                  this.props.onRemoved(item);\n                }}\n              />\n            </div>\n          ))}\n        </div>\n      );\n    }\n    return null;\n  }\n\n  public render(): JSX.Element {\n    return (\n      <>\n        {this.getChosenItems()}\n        {this.props.helpText ? <p>{this.props.helpText}</p> : <p />}\n        <TextInputElement\n          name={this.props.name}\n          placeholder={this.props.name}\n          showLabel={false}\n          onChange={this.handleInputChanged}\n          entry={this.state.currentInput}\n          autocomplete={true}\n          focus={true}\n          onBlur={this.handleValidateEmpty}\n          onEnter={this.handleAddItem}\n          onFieldFailures={(persistantFailures: ValidationFailure[]) => {\n            const currentInput = {\n              ...this.state.currentInput,\n              persistantFailures\n            };\n            this.setState(\n              {\n                currentInput\n              },\n              () => {\n                if (this.props.onEntryChanged) {\n                  this.props.onEntryChanged(currentInput);\n                }\n              }\n            );\n          }}\n        />\n      </>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport axios from 'axios';\nimport * as React from 'react';\nimport Button, { ButtonTypes } from 'components/button/Button';\nimport { getCookie } from 'external';\n\nexport interface UploadButtonState {}\n\nexport interface UploadButtonProps {\n  icon: string;\n  uploadText: string;\n  removeText: string;\n  url: string;\n  endpoint: string;\n  onUploadChanged: (url: string) => void;\n}\n\nexport default class UploadButton extends React.Component<UploadButtonProps, UploadButtonState> {\n  private filePicker: any;\n\n  constructor(props: UploadButtonProps) {\n    super(props);\n    this.state = {};\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleRemoveUpload(): void {\n    this.props.onUploadChanged(null);\n  }\n\n  private handleUploadFile(files: FileList): void {\n    const data = new FormData();\n    data.append('file', files[0]);\n\n    // if we have a csrf in our cookie, pass it along as a header\n    const csrf = getCookie('csrftoken');\n    const headers = csrf ? { 'X-CSRFToken': csrf } : {};\n\n    axios\n      .post(this.props.endpoint, data, { headers })\n      .then(response => {\n        this.props.onUploadChanged(response.data.url);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  public render(): JSX.Element {\n    return (\n      <>\n        <input\n          style={{\n            display: 'none'\n          }}\n          ref={ele => {\n            this.filePicker = ele;\n          }}\n          type=\"file\"\n          onChange={e => this.handleUploadFile(e.target.files)}\n        />\n        {this.props.url ? (\n          <Button\n            iconName=\"fe-trash\"\n            name={this.props.removeText}\n            topSpacing={true}\n            onClick={this.handleRemoveUpload}\n            type={ButtonTypes.tertiary}\n          />\n        ) : (\n          <Button\n            iconName={this.props.icon}\n            name={this.props.uploadText}\n            topSpacing={true}\n            onClick={() => {\n              this.filePicker.click();\n            }}\n            type={ButtonTypes.tertiary}\n          />\n        )}\n      </>\n    );\n  }\n}\n","import { MsgLocalizationFormState } from 'components/flow/actions/localization/MsgLocalizationForm';\nimport { Types } from 'config/interfaces';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeLocalizedForm = (settings: NodeEditorSettings): MsgLocalizationFormState => {\n  // check if our form should use a localized action\n  if (\n    settings.originalAction &&\n    (settings.originalAction.type === Types.send_msg ||\n      settings.originalAction.type === Types.say_msg) &&\n    settings.localizations &&\n    settings.localizations.length > 0\n  ) {\n    const localized = settings.localizations[0];\n    if (localized.isLocalized()) {\n      const action = localized.getObject() as any;\n      return {\n        message: {\n          value: 'text' in localized.localizedKeys ? action.text : ''\n        },\n        quickReplies: {\n          value: 'quick_replies' in localized.localizedKeys ? action.quick_replies || [] : []\n        },\n        audio: {\n          value: 'audio_url' in localized.localizedKeys ? action.audio_url : null\n        },\n        valid: true\n      };\n    }\n  }\n\n  return {\n    message: { value: '' },\n    quickReplies: { value: [] },\n    audio: { value: null },\n    valid: true\n  };\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport styles from 'components/flow/actions/action/Action.module.scss';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { determineTypeConfig } from 'components/flow/helpers';\nimport { LocalizationFormProps } from 'components/flow/props';\nimport MultiChoiceInput from 'components/form/multichoice/MultiChoice';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport UploadButton from 'components/uploadbutton/UploadButton';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { SendMsg } from 'flowTypes';\nimport * as React from 'react';\nimport {\n  FormState,\n  mergeForm,\n  StringArrayEntry,\n  StringEntry,\n  ValidationFailure\n} from 'store/nodeEditor';\nimport { MaxOfTenItems, validate } from 'store/validators';\n\nimport { initializeLocalizedForm } from './helpers';\n\nexport interface MsgLocalizationFormState extends FormState {\n  message: StringEntry;\n  quickReplies: StringArrayEntry;\n  audio: StringEntry;\n}\n\nexport default class MsgLocalizationForm extends React.Component<\n  LocalizationFormProps,\n  MsgLocalizationFormState\n> {\n  constructor(props: LocalizationFormProps) {\n    super(props);\n    this.state = initializeLocalizedForm(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/, /^on/]\n    });\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  public handleMessageUpdate(text: string): boolean {\n    return this.handleUpdate({ text });\n  }\n\n  public handleQuickRepliesUpdate(quickReplies: string[]): boolean {\n    return this.handleUpdate({ quickReplies });\n  }\n\n  private handleAudioChanged(url: string): void {\n    this.handleUpdate({ audio: url });\n  }\n\n  private handleUpdate(keys: {\n    text?: string;\n    sendAll?: boolean;\n    quickReplies?: string[];\n    audio?: string;\n  }): boolean {\n    const updates: Partial<MsgLocalizationFormState> = {};\n\n    if (keys.hasOwnProperty('text')) {\n      updates.message = validate('Message', keys.text!, []);\n    }\n\n    if (keys.hasOwnProperty('quickReplies')) {\n      updates.quickReplies = validate('Quick Replies', keys.quickReplies!, [MaxOfTenItems]);\n    }\n\n    if (keys.hasOwnProperty('audio')) {\n      updates.audio! = { value: keys.audio! };\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    const { message: text, quickReplies, audio } = this.state;\n\n    // make sure we are valid for saving, only quick replies can be invalid\n    const typeConfig = determineTypeConfig(this.props.nodeSettings);\n    const valid =\n      typeConfig.localizeableKeys!.indexOf('quick_replies') > -1\n        ? this.handleQuickRepliesUpdate(this.state.quickReplies.value)\n        : true;\n\n    if (valid) {\n      const translations: any = {};\n      if (text.value) {\n        translations.text = text.value;\n      }\n\n      if (quickReplies.value) {\n        translations.quick_replies = quickReplies.value;\n      }\n\n      if (audio.value) {\n        translations.audio_url = audio.value;\n      }\n\n      this.props.updateLocalizations(this.props.language.id, [\n        {\n          uuid: this.props.nodeSettings.originalAction!.uuid,\n          translations\n        }\n      ]);\n\n      // notify our modal we are done\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  private handleAddQuickReply(newQuickReply: string): boolean {\n    const newReplies = [...this.state.quickReplies.value];\n    if (newReplies.length >= 10) {\n      return false;\n    }\n\n    // we don't allow two quick replies with the same name\n    const isNew = !newReplies.find(\n      (reply: string) => reply.toLowerCase() === newQuickReply.toLowerCase()\n    );\n\n    if (isNew) {\n      newReplies.push(newQuickReply);\n      this.setState({\n        quickReplies: { value: newReplies }\n      });\n      return true;\n    }\n\n    return false;\n  }\n\n  private handleRemoveQuickReply(toRemove: string): void {\n    this.setState({\n      quickReplies: {\n        value: this.state.quickReplies.value.filter((reply: string) => reply !== toRemove)\n      }\n    });\n  }\n\n  public handleQuickReplyFieldFailures(persistantFailures: ValidationFailure[]): void {\n    const quickReplies = { ...this.state.quickReplies, persistantFailures };\n    this.setState({\n      quickReplies,\n      valid: this.state.valid && !hasErrors(quickReplies)\n    });\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = determineTypeConfig(this.props.nodeSettings);\n    const tabs: Tab[] = [];\n\n    if (typeConfig.localizeableKeys!.indexOf('quick_replies') > -1) {\n      tabs.push({\n        name: 'Quick Replies',\n        body: (\n          <>\n            <MultiChoiceInput\n              name=\"Quick Reply\"\n              helpText={`Add a new ${this.props.language.name} Quick Reply and press enter.`}\n              items={this.state.quickReplies}\n              onRemoved={this.handleRemoveQuickReply}\n              onItemAdded={this.handleAddQuickReply}\n              onFieldErrors={this.handleQuickReplyFieldFailures}\n            />\n          </>\n        )\n      });\n    }\n\n    let audioButton: JSX.Element | null = null;\n    if (typeConfig.localizeableKeys!.indexOf('audio_url') > 0) {\n      audioButton = (\n        <UploadButton\n          icon=\"fe-mic\"\n          uploadText=\"Upload Recording\"\n          removeText=\"Remove Recording\"\n          url={this.state.audio.value}\n          endpoint={this.context.config.endpoints.attachments}\n          onUploadChanged={this.handleAudioChanged}\n        />\n      );\n    }\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={tabs}\n      >\n        <div data-spec=\"translation-container\">\n          <div data-spec=\"text-to-translate\" className={styles.translate_from}>\n            {(this.props.nodeSettings.originalAction as SendMsg).text}\n          </div>\n        </div>\n\n        <TextInputElement\n          name=\"Message\"\n          showLabel={false}\n          onChange={this.handleMessageUpdate}\n          entry={this.state.message}\n          placeholder={`${this.props.language.name} Translation`}\n          onFieldFailures={(persistantFailures: ValidationFailure[]) => {\n            const text = { ...this.state.message, persistantFailures };\n            this.setState({\n              message: text,\n              valid: this.state.valid && !hasErrors(text)\n            });\n          }}\n          autocomplete={true}\n          focus={true}\n          textarea={true}\n        />\n\n        {audioButton}\n      </Dialog>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Action } from 'flowTypes';\n\nexport const PLACEHOLDER = 'Send a message to the contact';\n\n/* istanbul ignore next */\nconst MissingComp: React.SFC<Action> = ({ type }): JSX.Element => {\n  return <div className=\"placeholder\">No implementation yet for {type}</div>;\n};\n\nexport default MissingComp;\n","import * as React from 'react';\nimport { PlayAudio } from 'flowTypes';\n\nconst PlayAudioComp: React.SFC<PlayAudio> = (action: PlayAudio): JSX.Element => {\n  return <div>{action.audio_url}</div>;\n};\n\nexport default PlayAudioComp;\n","import { getActionUUID } from 'components/flow/actions/helpers';\nimport { PlayAudioFormState } from 'components/flow/actions/playaudio/PlayAudioForm';\nimport { Types } from 'config/interfaces';\nimport { PlayAudio } from 'flowTypes';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): PlayAudioFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.play_audio) {\n    const action = settings.originalAction as PlayAudio;\n    return {\n      audio: { value: action.audio_url },\n      valid: true\n    };\n  }\n\n  return {\n    audio: { value: '' },\n    valid: false\n  };\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  state: PlayAudioFormState\n): PlayAudio => ({\n  audio_url: state.audio.value,\n  type: Types.play_audio,\n  uuid: getActionUUID(settings, Types.say_msg)\n});\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { ActionFormProps } from 'components/flow/props';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { FormState, mergeForm, StringEntry, ValidationFailure } from 'store/nodeEditor';\nimport { validate, Required } from 'store/validators';\n\nimport { initializeForm, stateToAction } from './helpers';\n\nexport interface PlayAudioFormState extends FormState {\n  audio: StringEntry;\n}\n\nexport default class PlayAudioForm extends React.Component<ActionFormProps, PlayAudioFormState> {\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = initializeForm(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public handleAudioUpdate(text: string): boolean {\n    const updates: Partial<PlayAudioFormState> = {};\n    updates.audio = validate('Recording', text, [Required]);\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    // make sure we validate untouched text fields\n    const valid = this.handleAudioUpdate(this.state.audio.value);\n\n    if (valid) {\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n\n      // notify our modal we are done\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p>Previous Recording</p>\n        <TextInputElement\n          name=\"Message\"\n          showLabel={false}\n          onChange={this.handleAudioUpdate}\n          entry={this.state.audio}\n          onFieldFailures={(persistantFailures: ValidationFailure[]) => {\n            const audio = { ...this.state.audio, persistantFailures };\n            this.setState({\n              audio,\n              valid: this.state.valid && !hasErrors(audio)\n            });\n          }}\n          autocomplete={true}\n          focus={true}\n          helpText={\n            'Enter a variable that contains a recording the contact has previously recorded. For example, @flow.voicemail or @contact.short_bio.'\n          }\n        />\n      </Dialog>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\n\nimport styles from './MediaPlayer.module.scss';\n\nexport interface MediaPlayerProps {\n  url: string;\n  triggered?: boolean;\n}\n\ninterface MediaPlayerState {\n  durationSeconds: number;\n  currentSeconds: number;\n  progress: number;\n  playing: boolean;\n}\n\nexport class MediaPlayer extends React.Component<MediaPlayerProps, MediaPlayerState> {\n  private ele: HTMLAudioElement;\n\n  private stroke = 1;\n  private radius = 9;\n\n  private radiusNormalized = this.radius - this.stroke * 2;\n  private circumference = this.radiusNormalized * 2 * Math.PI;\n\n  constructor(props: MediaPlayerProps) {\n    super(props);\n\n    this.state = {\n      durationSeconds: 0,\n      currentSeconds: 0,\n      playing: false,\n      progress: 0\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleTimeUpdate(e: React.SyntheticEvent<HTMLAudioElement>): void {\n    const currentTime = this.ele.currentTime || 0;\n    const duration = this.ele.duration || 0;\n\n    this.setState((prevState: MediaPlayerState) => {\n      if ((this.ele.ended || currentTime === 0) && prevState.playing) {\n        setTimeout(() => {\n          this.setState({ progress: 0, playing: false });\n        }, 500);\n      }\n\n      return {\n        currentSeconds: this.ele.ended ? 0 : currentTime,\n        durationSeconds: duration,\n        playing: currentTime > 0,\n        progress: duration > 0 ? Math.floor((currentTime / duration) * 100) : 0\n      };\n    });\n  }\n\n  public componentDidMount(): void {\n    if (this.props.triggered) {\n      this.handleTogglePlay(null);\n    }\n  }\n\n  private handleTogglePlay(e: React.MouseEvent<HTMLDivElement>): void {\n    if (this.state.playing) {\n      this.ele.pause();\n      this.ele.currentTime = 0;\n    } else {\n      this.ele.play();\n    }\n\n    if (e !== null) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n\n  private handleRef(ref: HTMLAudioElement): any {\n    return (this.ele = ref);\n  }\n\n  public componentDidUpdate(prevProps: MediaPlayerProps): void {\n    if (this.props.url !== prevProps.url) {\n      this.setState({\n        durationSeconds: 0,\n        currentSeconds: 0,\n        playing: false,\n        progress: 0\n      });\n    }\n  }\n\n  public render(): JSX.Element {\n    const progress = this.state.progress || 0;\n    const strokeDashoffset = this.circumference - (progress / 100) * this.circumference;\n\n    return (\n      <div\n        className={styles.player + ' ' + (this.state.playing ? styles.playing : '')}\n        style={{ height: this.radius * 2, width: this.radius * 2 }}\n        onMouseDown={this.handleTogglePlay}\n      >\n        <audio ref={this.handleRef} onTimeUpdate={this.handleTimeUpdate} src={this.props.url} />\n\n        <div className={styles.circles}>\n          <svg height={this.radius * 2} width={this.radius * 2}>\n            <circle\n              className={styles.circle_background}\n              stroke=\"#fff\"\n              fill=\"#fff\"\n              strokeWidth={this.stroke}\n              r={this.radiusNormalized}\n              cx={this.radius}\n              cy={this.radius}\n            />\n            <circle\n              className={styles.circle_background}\n              stroke=\"#ddd\"\n              fill=\"transparent\"\n              strokeWidth={this.stroke}\n              r={this.radiusNormalized}\n              cx={this.radius}\n              cy={this.radius}\n            />\n            <circle\n              className={styles.circle_foreground}\n              stroke=\"cornflowerblue\"\n              fill=\"transparent\"\n              strokeWidth={this.stroke}\n              strokeDasharray={this.circumference + ' ' + this.circumference}\n              style={{ strokeDashoffset }}\n              r={this.radiusNormalized}\n              cx={this.radius}\n              cy={this.radius}\n            />\n          </svg>\n        </div>\n        <div className={styles.button + ' ' + (this.state.playing ? 'fe-stop' : 'fe-play_arrow')} />\n      </div>\n    );\n  }\n}\n","import { MediaPlayer } from 'components/mediaplayer/MediaPlayer';\nimport { SayMsg } from 'flowTypes';\nimport * as React from 'react';\n\nimport styles from './SayMsg.module.scss';\n\nexport const PLACEHOLDER = 'Send a message to the contact';\n\nconst SayMsgComp: React.SFC<SayMsg> = (action: SayMsg): JSX.Element => {\n  if (action.text) {\n    return (\n      <>\n        <div className={styles.text}>{action.text}</div>\n\n        {action.audio_url ? (\n          <div className={styles.recording}>\n            <MediaPlayer url={action.audio_url} />\n          </div>\n        ) : null}\n      </>\n    );\n  }\n  return <div className=\"placeholder\">{PLACEHOLDER}</div>;\n};\n\nexport default SayMsgComp;\n","import { getActionUUID } from 'components/flow/actions/helpers';\nimport { SayMsgFormState } from 'components/flow/actions/saymsg/SayMsgForm';\nimport { Types } from 'config/interfaces';\nimport { SayMsg } from 'flowTypes';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): SayMsgFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.say_msg) {\n    const action = settings.originalAction as SayMsg;\n    return {\n      message: { value: action.text },\n      audio: { value: action.audio_url },\n      valid: true\n    };\n  }\n\n  return {\n    message: { value: '' },\n    audio: { value: '' },\n    valid: false\n  };\n};\n\nexport const stateToAction = (settings: NodeEditorSettings, state: SayMsgFormState): SayMsg => ({\n  text: state.message.value,\n  audio_url: state.audio.value,\n  type: Types.say_msg,\n  uuid: getActionUUID(settings, Types.say_msg)\n});\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { ActionFormProps } from 'components/flow/props';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport UploadButton from 'components/uploadbutton/UploadButton';\nimport { fakePropType } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { FormState, mergeForm, StringEntry, ValidationFailure } from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\n\nimport { initializeForm, stateToAction } from './helpers';\n\nexport interface SayMsgFormState extends FormState {\n  message: StringEntry;\n  audio: StringEntry;\n}\n\nexport default class SayMsgForm extends React.Component<ActionFormProps, SayMsgFormState> {\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = initializeForm(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  private handleUpdate(keys: { text?: string }, submitting = false): boolean {\n    const updates: Partial<SayMsgFormState> = {};\n\n    if (keys.hasOwnProperty('text')) {\n      updates.message = validate('Message', keys.text!, [shouldRequireIf(submitting)]);\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  public handleMessageUpdate(text: string, submitting = false): boolean {\n    return this.handleUpdate({ text }, submitting);\n  }\n\n  private handleSave(): void {\n    // make sure we validate untouched text fields\n    const valid = this.handleUpdate({ text: this.state.message.value }, true);\n\n    if (valid) {\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n\n      // notify our modal we are done\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  private handleUploadChanged(url: string): void {\n    this.setState({ audio: { value: url } });\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <TextInputElement\n          name=\"Message\"\n          showLabel={false}\n          onChange={this.handleMessageUpdate}\n          entry={this.state.message}\n          onFieldFailures={(persistantFailures: ValidationFailure[]) => {\n            const message = { ...this.state.message, persistantFailures };\n            this.setState({\n              message,\n              valid: this.state.valid && !hasErrors(message)\n            });\n          }}\n          autocomplete={true}\n          focus={true}\n          textarea={true}\n        />\n\n        <UploadButton\n          icon=\"fe-mic\"\n          uploadText=\"Upload Recording\"\n          removeText=\"Remove Recording\"\n          url={this.state.audio.value}\n          endpoint={this.context.config.endpoints.attachments}\n          onUploadChanged={this.handleUploadChanged}\n        />\n      </Dialog>\n    );\n  }\n}\n","import { getRecipients, renderAssetList } from 'components/flow/actions/helpers';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { BroadcastMsg } from 'flowTypes';\nimport * as React from 'react';\n\nimport styles from './SendBroadcast.module.scss';\n\nexport const PLACEHOLDER = 'Send a message to the contact';\n\nconst MAX_TO_SHOW = 3;\n\nconst SendBroadcastComp: React.SFC<BroadcastMsg> = (\n  action: BroadcastMsg,\n  context: any\n): JSX.Element => {\n  const assets = getRecipients(action);\n  if (action.text) {\n    return (\n      <div className={styles.node}>\n        <div className={styles.to}>\n          {renderAssetList(assets, MAX_TO_SHOW, context.config.endpoints)}\n        </div>\n        <div className={styles.message}>\n          {action.text.split(/\\r?\\n/).map((line: string, idx: number) => (\n            <div key={action.uuid + idx} className={styles.line}>\n              {line}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n  return <div className=\"placeholder\">{PLACEHOLDER}</div>;\n};\n\nSendBroadcastComp.contextTypes = {\n  config: fakePropType\n};\n\nexport default SendBroadcastComp;\n","import {\n  getActionUUID,\n  getExpressions,\n  getRecipients,\n  getRecipientsByAsset\n} from 'components/flow/actions/helpers';\nimport { SendBroadcastFormState } from 'components/flow/actions/sendbroadcast/SendBroadcastForm';\nimport { Types } from 'config/interfaces';\nimport { BroadcastMsg } from 'flowTypes';\nimport { AssetType } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): SendBroadcastFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.send_broadcast) {\n    let action = settings.originalAction as BroadcastMsg;\n\n    // check if our form should use a localized action\n    if (settings.localizations && settings.localizations.length > 0) {\n      const localized = settings.localizations[0];\n      if (localized.isLocalized()) {\n        action = settings.localizations[0].getObject() as BroadcastMsg;\n      } else {\n        return {\n          message: { value: '' },\n          recipients: { value: [] },\n          valid: true\n        };\n      }\n    }\n\n    return {\n      message: { value: action.text },\n      recipients: { value: getRecipients(action) },\n      valid: true\n    };\n  }\n\n  return {\n    message: { value: '' },\n    recipients: { value: [] },\n    valid: false\n  };\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  formState: SendBroadcastFormState\n): BroadcastMsg => {\n  return {\n    legacy_vars: getExpressions(formState.recipients.value),\n    contacts: getRecipientsByAsset(formState.recipients.value, AssetType.Contact),\n    groups: getRecipientsByAsset(formState.recipients.value, AssetType.Group),\n    text: formState.message.value,\n    type: Types.send_broadcast,\n    uuid: getActionUUID(settings, Types.send_broadcast)\n  };\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { initializeForm, stateToAction } from 'components/flow/actions/sendbroadcast/helpers';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TextInputElement, { Count } from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport {\n  AssetArrayEntry,\n  FormState,\n  mergeForm,\n  StringEntry,\n  ValidationFailure\n} from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\n\nexport interface SendBroadcastFormState extends FormState {\n  message: StringEntry;\n  recipients: AssetArrayEntry;\n}\n\n// Note: action prop is only used for its uuid (see onValid)\nexport default class SendBroadcastForm extends React.Component<\n  ActionFormProps,\n  SendBroadcastFormState\n> {\n  public static contextTypes = {\n    endpoints: fakePropType,\n    assetService: fakePropType\n  };\n\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = initializeForm(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleRecipientsChanged(recipients: Asset[]): boolean {\n    return this.handleUpdate({ recipients });\n  }\n\n  public handleMessageUpdate(text: string): boolean {\n    return this.handleUpdate({ text });\n  }\n\n  private handleUpdate(keys: { text?: string; recipients?: Asset[] }, submitting = false): boolean {\n    const updates: Partial<SendBroadcastFormState> = {};\n\n    if (keys.hasOwnProperty('recipients')) {\n      updates.recipients = validate('Recipients', keys.recipients!, [shouldRequireIf(submitting)]);\n    }\n\n    if (keys.hasOwnProperty('text')) {\n      updates.message = validate('Message', keys.text!, [shouldRequireIf(submitting)]);\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    // validate in case they never updated an empty field\n    const valid = this.handleUpdate(\n      {\n        text: this.state.message.value,\n        recipients: this.state.recipients.value!\n      },\n      true\n    );\n\n    if (valid) {\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n\n      // notify our modal we are done\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <AssetSelector\n          name=\"Recipients\"\n          assets={this.props.assetStore.recipients}\n          entry={this.state.recipients}\n          completion={this.props.assetStore}\n          searchable={true}\n          multi={true}\n          onChange={this.handleRecipientsChanged}\n        />\n        <p />\n        <TextInputElement\n          name=\"Message\"\n          showLabel={false}\n          count={Count.SMS}\n          onChange={this.handleMessageUpdate}\n          entry={this.state.message}\n          onFieldFailures={(persistantFailures: ValidationFailure[]) => {\n            const message = { ...this.state.message, persistantFailures };\n            this.setState({\n              message,\n              valid: this.state.valid && !hasErrors(message)\n            });\n          }}\n          autocomplete={true}\n          focus={true}\n          textarea={true}\n        />\n      </Dialog>\n    );\n  }\n}\n","import * as React from 'react';\nimport { SendEmail } from 'flowTypes';\n\nconst SendEmailComp: React.SFC<SendEmail> = ({ subject }): JSX.Element => <div>{subject}</div>;\n\nexport default SendEmailComp;\n","import { react as bindCallbacks } from 'auto-bind';\nimport FormElement, { FormElementProps } from 'components/form/FormElement';\nimport React from 'react';\nimport Creatable from 'react-select/lib/Creatable';\nimport { StringArrayEntry } from 'store/nodeEditor';\nimport { getSelectClass } from 'utils';\nimport { tagging } from 'utils/reactselect';\n\nexport type TagList = Array<{ label: string; value: string }>;\n\nexport interface TaggingElementProps extends FormElementProps {\n  placeholder?: string;\n  prompt: string;\n  onChange?: (values: string[]) => void;\n  onCheckValid: (value: string) => boolean;\n}\n\nexport const tagsToOptions = (tags: StringArrayEntry): TagList => {\n  return tags.value.map(tag => ({ label: tag, value: tag }));\n};\n\nexport const optionsToTags = (tags: TagList): string[] =>\n  tags.map(tag => {\n    return tag.label;\n  });\n\nexport default class TaggingElement extends React.Component<TaggingElementProps> {\n  constructor(props: any) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public handleUpdateTags(tags: TagList): void {\n    if (this.props.onChange) {\n      this.props.onChange(optionsToTags(tags));\n    }\n  }\n\n  public handleCheckValid(label: string): boolean {\n    if (!label || label.trim().length === 0) {\n      return false;\n    }\n    return this.props.onCheckValid(label);\n  }\n\n  private arrowRenderer(): JSX.Element {\n    return <div />;\n  }\n\n  public render(): JSX.Element {\n    const className: string = getSelectClass((this.props.entry.validationFailures || []).length);\n\n    const tags = tagsToOptions(this.props.entry);\n    return (\n      <FormElement name={this.props.name} entry={this.props.entry}>\n        <Creatable\n          styles={tagging as any}\n          className={className}\n          name={this.props.name}\n          placeholder={this.props.placeholder}\n          value={tags}\n          onChange={this.handleUpdateTags as any}\n          isMulti={true}\n          isSearchable={true}\n          isValidNewOption={this.handleCheckValid}\n          noOptionsMessage={() => this.props.prompt}\n          options={[]}\n        />\n      </FormElement>\n    );\n  }\n}\n","import { getActionUUID } from 'components/flow/actions/helpers';\nimport { SendEmailFormState } from 'components/flow/actions/sendemail/SendEmailForm';\nimport { Types } from 'config/interfaces';\nimport { SendEmail } from 'flowTypes';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): SendEmailFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.send_email) {\n    const action = settings.originalAction as SendEmail;\n    return {\n      body: { value: action.body },\n      subject: { value: action.subject },\n      recipients: { value: action.addresses },\n      valid: true\n    };\n  }\n\n  return {\n    body: { value: '' },\n    subject: { value: '' },\n    recipients: { value: [] },\n    valid: true\n  };\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  formState: SendEmailFormState\n): SendEmail => {\n  return {\n    addresses: formState.recipients.value,\n    subject: formState.subject.value,\n    body: formState.body.value,\n    type: Types.send_email,\n    uuid: getActionUUID(settings, Types.send_email)\n  };\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { ActionFormProps } from 'components/flow/props';\nimport TaggingElement from 'components/form/select/tags/TaggingElement';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport {\n  FormState,\n  mergeForm,\n  StringArrayEntry,\n  StringEntry,\n  ValidationFailure\n} from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\n\nimport { initializeForm, stateToAction } from './helpers';\nimport styles from './SendEmailForm.module.scss';\n\nconst EMAIL_PATTERN = /\\S+@\\S+\\.\\S+/;\n\nexport interface SendEmailFormState extends FormState {\n  recipients: StringArrayEntry;\n  subject: StringEntry;\n  body: StringEntry;\n}\n\nexport default class SendEmailForm extends React.Component<ActionFormProps, SendEmailFormState> {\n  constructor(props: ActionFormProps) {\n    super(props);\n\n    this.state = initializeForm(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleRecipientsChanged(recipients: string[]): boolean {\n    return this.handleUpdate({ recipients });\n  }\n\n  public handleSubjectChanged(subject: string): boolean {\n    return this.handleUpdate({ subject });\n  }\n\n  public handleBodyChanged(body: string): boolean {\n    return this.handleUpdate({ body });\n  }\n\n  private handleUpdate(\n    keys: { recipients?: string[]; subject?: string; body?: string },\n    submitting = false\n  ): boolean {\n    const updates: Partial<SendEmailFormState> = {};\n\n    if (keys.hasOwnProperty('recipients')) {\n      updates.recipients = validate('Recipients', keys.recipients!, [shouldRequireIf(submitting)]);\n    }\n\n    if (keys.hasOwnProperty('subject')) {\n      updates.subject = validate('Subject', keys.subject!, [shouldRequireIf(submitting)]);\n    }\n\n    if (keys.hasOwnProperty('body')) {\n      updates.body = validate('Body', keys.body!, [shouldRequireIf(submitting)]);\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  public handleSave(): void {\n    // validate in case they never updated an empty field\n    const valid = this.handleUpdate(\n      {\n        recipients: this.state.recipients.value,\n        subject: this.state.subject.value,\n        body: this.state.body.value\n      },\n      true\n    );\n\n    if (valid) {\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n\n      // notify our modal we are done\n      this.props.onClose(false);\n    }\n  }\n\n  public getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  public handleCheckValid(value: string): boolean {\n    return EMAIL_PATTERN.test(value);\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div className={styles.ele}>\n          <TaggingElement\n            name=\"Recipient\"\n            placeholder=\"To\"\n            prompt=\"Enter e-mail address\"\n            onCheckValid={this.handleCheckValid}\n            entry={this.state.recipients}\n            onChange={this.handleRecipientsChanged}\n          />\n          <TextInputElement\n            __className={styles.subject}\n            name=\"Subject\"\n            placeholder=\"Subject\"\n            onChange={this.handleSubjectChanged}\n            entry={this.state.subject}\n            onFieldFailures={(persistantFailures: ValidationFailure[]) => {\n              const subject = { ...this.state.subject, persistantFailures };\n              this.setState({\n                subject,\n                valid: this.state.valid && !hasErrors(subject)\n              });\n            }}\n            autocomplete={true}\n          />\n          <TextInputElement\n            __className={styles.message}\n            name=\"Message\"\n            showLabel={false}\n            onChange={this.handleBodyChanged}\n            entry={this.state.body}\n            onFieldFailures={(persistantFailures: ValidationFailure[]) => {\n              const body = { ...this.state.body, persistantFailures };\n              this.setState({\n                body,\n                valid: this.state.valid && !hasErrors(body)\n              });\n            }}\n            autocomplete={true}\n            textarea={true}\n          />\n        </div>\n      </Dialog>\n    );\n  }\n}\n","import Pill from 'components/pill/Pill';\nimport { SendMsg } from 'flowTypes';\nimport * as React from 'react';\n\nimport styles from './SendMsg.module.scss';\n\nexport const PLACEHOLDER = 'Send a message to the contact';\n\nconst SendMsgComp: React.SFC<SendMsg> = (action: SendMsg): JSX.Element => {\n  if (action.text) {\n    let replies = null;\n\n    if ((action.quick_replies || []).length > 0) {\n      replies = (\n        <div className={styles.quick_replies}>\n          {action.quick_replies.map(reply => (\n            <Pill\n              style={{ marginLeft: 4, marginTop: 4 }}\n              maxLength={20}\n              advanced={true}\n              key={action.uuid + reply}\n              text={reply}\n            />\n          ))}\n        </div>\n      );\n    }\n\n    return (\n      <>\n        <div>\n          {action.text.split(/\\r?\\n/).map((line: string, idx: number) => (\n            <div key={action.uuid + idx} className={styles.line}>\n              {line}\n            </div>\n          ))}\n          {action.attachments && action.attachments.length > 0 ? (\n            <div data-advanced={true} className={`${styles.attachment} fe-paperclip`} />\n          ) : null}\n          {action.templating && action.templating.template ? (\n            <div data-advanced={true} className={`${styles.whatsapp} fe-whatsapp`} />\n          ) : null}\n        </div>\n        <div className={styles.summary}>{replies}</div>\n      </>\n    );\n  }\n  return <div className=\"placeholder\">{PLACEHOLDER}</div>;\n};\n\nexport default SendMsgComp;\n","import { getActionUUID } from 'components/flow/actions/helpers';\nimport { Attachment, SendMsgFormState } from 'components/flow/actions/sendmsg/SendMsgForm';\nimport { Types } from 'config/interfaces';\nimport { MsgTemplating, SendMsg } from 'flowTypes';\nimport { AssetStore, AssetType } from 'store/flowContext';\nimport { AssetEntry, NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nexport const initializeForm = (\n  settings: NodeEditorSettings,\n  assetStore: AssetStore\n): SendMsgFormState => {\n  let template: AssetEntry = { value: null };\n  let templateVariables: StringEntry[] = [];\n\n  if (settings.originalAction && settings.originalAction.type === Types.send_msg) {\n    const action = settings.originalAction as SendMsg;\n    const attachments: Attachment[] = [];\n    (action.attachments || []).forEach((attachmentString: string) => {\n      const splitPoint = attachmentString.indexOf(':');\n\n      const type = attachmentString.substring(0, splitPoint);\n      const attachment = {\n        type,\n        url: attachmentString.substring(splitPoint + 1),\n        uploaded: type.indexOf('/') > -1\n      };\n\n      attachments.push(attachment);\n    });\n\n    if (action.templating) {\n      const msgTemplate = action.templating.template;\n      template = {\n        value: {\n          id: msgTemplate.uuid,\n          name: msgTemplate.name,\n          type: AssetType.Template\n        }\n      };\n      templateVariables = action.templating.variables.map((value: string) => {\n        return {\n          value\n        };\n      });\n    }\n\n    return {\n      template,\n      templateVariables,\n      attachments,\n      message: { value: action.text },\n      quickReplies: { value: action.quick_replies || [] },\n      quickReplyEntry: { value: '' },\n      sendAll: action.all_urns,\n      valid: true\n    };\n  }\n\n  return {\n    template,\n    templateVariables: [],\n    attachments: [],\n    message: { value: '' },\n    quickReplies: { value: [] },\n    quickReplyEntry: { value: '' },\n    sendAll: false,\n    valid: false\n  };\n};\n\nexport const stateToAction = (settings: NodeEditorSettings, state: SendMsgFormState): SendMsg => {\n  const attachments = state.attachments\n    .filter((attachment: Attachment) => attachment.url.trim().length > 0)\n    .map((attachment: Attachment) => `${attachment.type}:${attachment.url}`);\n\n  let templating: MsgTemplating = null;\n  if (state.template && state.template.value) {\n    templating = {\n      template: {\n        uuid: state.template.value.id,\n        name: state.template.value.name\n      },\n      variables: state.templateVariables.map((variable: StringEntry) => variable.value)\n    };\n  }\n\n  const result: SendMsg = {\n    attachments,\n    text: state.message.value,\n    type: Types.send_msg,\n    all_urns: state.sendAll,\n    quick_replies: state.quickReplies.value,\n    uuid: getActionUUID(settings, Types.send_msg)\n  };\n\n  if (templating) {\n    result.templating = templating;\n  }\n\n  return result;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport axios from 'axios';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport {\n  initializeForm as stateToForm,\n  stateToAction\n} from 'components/flow/actions/sendmsg/helpers';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport { hasUseableTranslation } from 'components/form/assetselector/helpers';\nimport CheckboxElement from 'components/form/checkbox/CheckboxElement';\nimport MultiChoiceInput from 'components/form/multichoice/MultiChoice';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\nimport TextInputElement, { Count } from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport Pill from 'components/pill/Pill';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { fetchAsset, getCookie } from 'external';\nimport { Template, TemplateOptions, TemplateTranslation } from 'flowTypes';\nimport mutate from 'immutability-helper';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport {\n  AssetEntry,\n  FormState,\n  mergeForm,\n  StringArrayEntry,\n  StringEntry,\n  ValidationFailure\n} from 'store/nodeEditor';\nimport { MaxOfTenItems, Required, shouldRequireIf, validate } from 'store/validators';\nimport { createUUID, range } from 'utils';\nimport { small } from 'utils/reactselect';\n\nimport styles from './SendMsgForm.module.scss';\n\nconst MAX_ATTACHMENTS = 3;\n\nconst TYPE_OPTIONS: SelectOption[] = [\n  { value: 'image', label: 'Image URL' },\n  { value: 'audio', label: 'Audio URL' },\n  { value: 'video', label: 'Video URL' }\n];\n\nconst NEW_TYPE_OPTIONS = TYPE_OPTIONS.concat([{ value: 'upload', label: 'Upload Attachment' }]);\n\nconst getAttachmentTypeOption = (type: string): SelectOption => {\n  return TYPE_OPTIONS.find((option: SelectOption) => option.value === type);\n};\n\nexport interface Attachment {\n  type: string;\n  url: string;\n  uploaded?: boolean;\n}\n\nexport interface SendMsgFormState extends FormState {\n  message: StringEntry;\n  quickReplies: StringArrayEntry;\n  quickReplyEntry: StringEntry;\n  sendAll: boolean;\n  attachments: Attachment[];\n  template: AssetEntry;\n  templateVariables: StringEntry[];\n  templateTranslation?: TemplateTranslation;\n}\n\nexport default class SendMsgForm extends React.Component<ActionFormProps, SendMsgFormState> {\n  private filePicker: any;\n\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = stateToForm(this.props.nodeSettings, this.props.assetStore);\n    bindCallbacks(this, {\n      include: [/^handle/, /^on/]\n    });\n\n    // intialize our templates if we have them\n    if (this.state.template.value !== null) {\n      fetchAsset(this.props.assetStore.templates, this.state.template.value.id).then(\n        (asset: Asset) => {\n          if (asset !== null) {\n            this.handleTemplateChanged([asset]);\n          }\n        }\n      );\n    }\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  private handleUpdate(\n    keys: {\n      text?: string;\n      sendAll?: boolean;\n      quickReplies?: string[];\n    },\n    submitting = false\n  ): boolean {\n    const updates: Partial<SendMsgFormState> = {};\n    if (keys.hasOwnProperty('text')) {\n      updates.message = validate('Message', keys.text, [shouldRequireIf(submitting)]);\n    }\n\n    if (keys.hasOwnProperty('sendAll')) {\n      updates.sendAll = keys.sendAll;\n    }\n\n    if (keys.hasOwnProperty('quickReplies')) {\n      updates.quickReplies = validate('Quick Replies', keys.quickReplies, [MaxOfTenItems]);\n    }\n\n    const updated = mergeForm(this.state, updates) as SendMsgFormState;\n\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  public handleMessageUpdate(message: string, submitting = false): boolean {\n    return this.handleUpdate({ text: message }, submitting);\n  }\n\n  public handleQuickRepliesUpdate(quickReplies: string[]): boolean {\n    return this.handleUpdate({ quickReplies });\n  }\n\n  public handleSendAllUpdate(sendAll: boolean): boolean {\n    return this.handleUpdate({ sendAll });\n  }\n\n  private handleSave(): void {\n    // make sure we validate untouched text fields and contact fields\n    let valid = this.handleMessageUpdate(this.state.message.value, true);\n\n    let templateVariables = this.state.templateVariables;\n    // make sure we don't have untouched template variables\n    this.state.templateVariables.forEach((variable: StringEntry, num: number) => {\n      const updated = validate(`Variable ${num + 1}`, variable.value, [Required]);\n      templateVariables = mutate(templateVariables, {\n        [num]: { $merge: updated }\n      }) as StringEntry[];\n      valid = valid && !hasErrors(updated);\n    });\n\n    valid = valid && !hasErrors(this.state.quickReplyEntry);\n\n    if (valid) {\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n      // notify our modal we are done\n      this.props.onClose(false);\n    } else {\n      this.setState({ templateVariables, valid });\n    }\n  }\n\n  public handleFieldFailures(persistantFailures: ValidationFailure[]): void {\n    const message = { ...this.state.message, persistantFailures };\n    this.setState({ message, valid: this.state.valid && !hasErrors(message) });\n  }\n\n  public handleQuickReplyFieldFailures(persistantFailures: ValidationFailure[]): void {\n    const quickReplies = { ...this.state.quickReplies, persistantFailures };\n    this.setState({\n      quickReplies,\n      valid: this.state.valid && !hasErrors(quickReplies)\n    });\n  }\n\n  public handleAttachmentRemoved(index: number): void {\n    // we found a match, merge us in\n    const updated: any = mutate(this.state.attachments, {\n      $splice: [[index, 1]]\n    });\n    this.setState({ attachments: updated });\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  private renderUpload(index: number, attachment: Attachment): JSX.Element {\n    return (\n      <div\n        className={styles.url_attachment}\n        key={index > -1 ? 'url_attachment_' + index : createUUID()}\n      >\n        <div className={styles.type_choice}>\n          <SelectElement\n            name=\"Type\"\n            styles={small as any}\n            entry={{\n              value: { label: attachment.type }\n            }}\n            options={TYPE_OPTIONS}\n          />\n        </div>\n        <div className={styles.url}>\n          <span className={styles.upload}>\n            <Pill\n              icon=\"fe-download\"\n              text=\" Download\"\n              large={true}\n              onClick={() => {\n                window.open(attachment.url, '_blank');\n              }}\n            />\n            <div className={styles.remove_upload}>\n              <Pill\n                icon=\"fe-x\"\n                text=\" Remove\"\n                large={true}\n                onClick={() => {\n                  this.handleAttachmentRemoved(index);\n                }}\n              />\n            </div>\n          </span>\n        </div>\n      </div>\n    );\n  }\n\n  private handleUploadFile(files: FileList): void {\n    let attachments: any = this.state.attachments;\n\n    // if we have a csrf in our cookie, pass it along as a header\n    const csrf = getCookie('csrftoken');\n    const headers = csrf ? { 'X-CSRFToken': csrf } : {};\n\n    const data = new FormData();\n    data.append('file', files[0]);\n    axios\n      .post(this.context.config.endpoints.attachments, data, { headers })\n      .then(response => {\n        attachments = mutate(attachments, {\n          $push: [{ type: response.data.type, url: response.data.url, uploaded: true }]\n        });\n        this.setState({ attachments });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  private renderAttachment(index: number, attachment: Attachment): JSX.Element {\n    let attachments: any = this.state.attachments;\n    return (\n      <div\n        className={styles.url_attachment}\n        key={index > -1 ? 'url_attachment_' + index : createUUID()}\n      >\n        <div className={styles.type_choice}>\n          <SelectElement\n            styles={small as any}\n            name=\"Type Options\"\n            placeholder=\"Add Attachment\"\n            entry={{\n              value: index > -1 ? getAttachmentTypeOption(attachment.type) : null\n            }}\n            onChange={(option: any) => {\n              if (option.value === 'upload') {\n                window.setTimeout(() => {\n                  this.filePicker.click();\n                }, 200);\n              } else {\n                if (index === -1) {\n                  attachments = mutate(attachments, {\n                    $push: [{ type: option.value, url: '' }]\n                  });\n                } else {\n                  attachments = mutate(attachments, {\n                    [index]: {\n                      $set: { type: option.value, url: attachment.url }\n                    }\n                  });\n                }\n                this.setState({ attachments });\n              }\n            }}\n            options={index > -1 ? TYPE_OPTIONS : NEW_TYPE_OPTIONS}\n          />\n        </div>\n        {index > -1 ? (\n          <>\n            <div className={styles.url}>\n              <TextInputElement\n                placeholder=\"URL\"\n                name=\"url\"\n                onChange={(value: string) => {\n                  attachments = mutate(attachments, {\n                    [index]: { $set: { type: attachment.type, url: value } }\n                  });\n                  this.setState({ attachments });\n                }}\n                entry={{ value: attachment.url }}\n                autocomplete={true}\n              />\n            </div>\n            <div className={styles.remove}>\n              <Pill\n                icon=\"fe-x\"\n                text=\" Remove\"\n                large={true}\n                onClick={() => {\n                  this.handleAttachmentRemoved(index);\n                }}\n              />\n            </div>\n          </>\n        ) : null}\n      </div>\n    );\n  }\n\n  private renderAttachments(): JSX.Element {\n    const attachments = this.state.attachments.map((attachment, index: number) =>\n      attachment.uploaded\n        ? this.renderUpload(index, attachment)\n        : this.renderAttachment(index, attachment)\n    );\n\n    const emptyOption =\n      this.state.attachments.length < MAX_ATTACHMENTS\n        ? this.renderAttachment(-1, { url: '', type: '' })\n        : null;\n    return (\n      <>\n        <p>\n          Add up to {MAX_ATTACHMENTS} attachments to each message. Each attachment can be a file you\n          upload or a dynamic URL using expressions and variables from your Flow.\n        </p>\n        {attachments}\n        {emptyOption}\n        <input\n          style={{\n            display: 'none'\n          }}\n          ref={ele => {\n            this.filePicker = ele;\n          }}\n          type=\"file\"\n          onChange={e => this.handleUploadFile(e.target.files)}\n        />\n      </>\n    );\n  }\n\n  private handleTemplateChanged(selected: Asset[]): void {\n    const template = selected[0];\n\n    if (!template) {\n      this.setState({\n        template: { value: null },\n        templateTranslation: null,\n        templateVariables: []\n      });\n    } else {\n      const templateOptions = template.content as TemplateOptions;\n      const templateTranslation = templateOptions.translations[0];\n\n      const templateVariables =\n        this.state.templateVariables.length === 0 ||\n        (this.state.template.value && this.state.template.value.id !== template.id)\n          ? range(0, templateTranslation.variable_count).map(() => {\n              return {\n                value: ''\n              };\n            })\n          : this.state.templateVariables;\n\n      this.setState({\n        template: { value: template },\n        templateTranslation,\n        templateVariables\n      });\n    }\n  }\n\n  private handleTemplateFieldFailures(persistantFailures: ValidationFailure[], num: number): void {\n    const templateVariables = mutate(this.state.templateVariables, {\n      [num]: { $merge: { persistantFailures } }\n    }) as StringEntry[];\n\n    this.setState({\n      templateVariables,\n      valid: this.state.valid && !hasErrors(templateVariables[num])\n    });\n  }\n\n  private handleTemplateVariableChanged(updatedText: string, num: number): void {\n    const entry = validate(`Variable ${num + 1}`, updatedText, [Required]);\n    const templateVariables = mutate(this.state.templateVariables, {\n      $merge: { [num]: entry }\n    }) as StringEntry[];\n    this.setState({ templateVariables });\n  }\n\n  private handleShouldExcludeTemplate(asset: Asset): boolean {\n    return !hasUseableTranslation(asset.content as Template);\n  }\n\n  private renderTemplateConfig(): JSX.Element {\n    return (\n      <>\n        <p>\n          Sending messages over a WhatsApp channel requires that a template be used if you have not\n          received a message from a contact in the last 24 hours. Setting a template to use over\n          WhatsApp is especially important for the first message in your flow.\n        </p>\n        <AssetSelector\n          name=\"Template\"\n          noOptionsMessage=\"No templates found\"\n          assets={this.props.assetStore.templates}\n          entry={this.state.template}\n          onChange={this.handleTemplateChanged}\n          shouldExclude={this.handleShouldExcludeTemplate}\n          searchable={true}\n          formClearable={true}\n        />\n        {this.state.templateTranslation ? (\n          <>\n            <div className={styles.template_text}>{this.state.templateTranslation.content}</div>\n            {range(0, this.state.templateTranslation.variable_count).map((num: number) => {\n              return (\n                <div className={styles.variable} key={'tr_arg_' + num}>\n                  <TextInputElement\n                    name={`Variable ${num + 1}`}\n                    showLabel={false}\n                    placeholder={`Variable ${num + 1}`}\n                    onChange={(updatedText: string) => {\n                      this.handleTemplateVariableChanged(updatedText, num);\n                    }}\n                    entry={this.state.templateVariables[num]}\n                    autocomplete={true}\n                    onFieldFailures={(failures: ValidationFailure[]) => {\n                      this.handleTemplateFieldFailures(failures, num);\n                    }}\n                  />\n                </div>\n              );\n            })}\n          </>\n        ) : null}\n      </>\n    );\n  }\n\n  private handleAddQuickReply(newQuickReply: string): boolean {\n    const newReplies = [...this.state.quickReplies.value];\n    if (newReplies.length >= 10) {\n      return false;\n    }\n\n    // we don't allow two quick replies with the same name\n    const isNew = !newReplies.find(\n      (reply: string) => reply.toLowerCase() === newQuickReply.toLowerCase()\n    );\n\n    if (isNew) {\n      newReplies.push(newQuickReply);\n      this.setState({\n        quickReplies: { value: newReplies }\n      });\n      return true;\n    }\n\n    return false;\n  }\n\n  private handleRemoveQuickReply(toRemove: string): void {\n    this.setState({\n      quickReplies: {\n        value: this.state.quickReplies.value.filter((reply: string) => reply !== toRemove)\n      }\n    });\n  }\n\n  private handleQuickReplyEntry(quickReplyEntry: StringEntry): void {\n    this.setState({ quickReplyEntry });\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    const quickReplies: Tab = {\n      name: 'Quick Replies',\n      body: (\n        <>\n          <p>\n            Quick Replies are made into buttons for supported channels. For example, when asking a\n            question, you might add a Quick Reply for \"Yes\" and one for \"No\".\n          </p>\n\n          <MultiChoiceInput\n            name=\"Quick Reply\"\n            helpText=\"Add a new Quick Reply and press enter.\"\n            items={this.state.quickReplies}\n            entry={this.state.quickReplyEntry}\n            onRemoved={this.handleRemoveQuickReply}\n            onItemAdded={this.handleAddQuickReply}\n            onEntryChanged={this.handleQuickReplyEntry}\n            onFieldErrors={this.handleQuickReplyFieldFailures}\n          />\n        </>\n      ),\n      checked: this.state.quickReplies.value.length > 0,\n      hasErrors: hasErrors(this.state.quickReplyEntry)\n    };\n\n    const attachments: Tab = {\n      name: 'Attachments',\n      body: this.renderAttachments(),\n      checked: this.state.attachments.length > 0\n    };\n\n    const advanced: Tab = {\n      name: 'Advanced',\n      body: (\n        <CheckboxElement\n          name=\"All Destinations\"\n          title=\"All Destinations\"\n          labelClassName={styles.checkbox}\n          checked={this.state.sendAll}\n          description=\"Send a message to all destinations known for this contact. If you aren't sure what this means, leave it unchecked.\"\n          onChange={this.handleSendAllUpdate}\n        />\n      ),\n      checked: this.state.sendAll\n    };\n\n    const tabs = [quickReplies, attachments, advanced];\n\n    if (this.context.config.showTemplates) {\n      const templates: Tab = {\n        name: 'WhatsApp',\n        body: this.renderTemplateConfig(),\n        checked: this.state.template.value != null,\n        hasErrors: !!this.state.templateVariables.find((entry: StringEntry) => hasErrors(entry))\n      };\n      tabs.splice(0, 0, templates);\n    }\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={tabs}\n      >\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <TextInputElement\n          name=\"Message\"\n          showLabel={false}\n          count={Count.SMS}\n          onChange={this.handleMessageUpdate}\n          entry={this.state.message}\n          autocomplete={true}\n          focus={true}\n          textarea={true}\n          onFieldFailures={this.handleFieldFailures}\n        />\n      </Dialog>\n    );\n  }\n}\n","import * as React from 'react';\nimport { SetRunResult } from 'flowTypes';\n\n// tslint:disable-next-line:variable-name\nexport const getResultNameMarkup = (name: string): JSX.Element => (\n  <span className=\"emph\">{name}</span>\n);\nexport const getSavePlaceholder = (value: string, name: JSX.Element): JSX.Element => (\n  <div>\n    Save {value} as {name}\n  </div>\n);\n\nexport const getClearPlaceholder = (name: JSX.Element) => <div>Clear value for {name}</div>;\n\nconst SetRunResultComp: React.SFC<SetRunResult> = ({ value, name }): JSX.Element => {\n  if (value) {\n    return getSavePlaceholder(value, getResultNameMarkup(name));\n  }\n  return getClearPlaceholder(getResultNameMarkup(name));\n};\n\nexport default SetRunResultComp;\n","import { getActionUUID } from 'components/flow/actions/helpers';\nimport { SetRunResultFormState } from 'components/flow/actions/setrunresult/SetRunResultForm';\nimport { Types } from 'config/interfaces';\nimport { SetRunResult } from 'flowTypes';\nimport { AssetType } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport { snakify } from 'utils';\n\nexport const initializeForm = (settings: NodeEditorSettings): SetRunResultFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.set_run_result) {\n    const action = settings.originalAction as SetRunResult;\n\n    return {\n      name: {\n        value: {\n          id: snakify(action.name),\n          name: action.name,\n          type: AssetType.Result\n        }\n      },\n      value: { value: action.value },\n      category: { value: action.category },\n      valid: true\n    };\n  }\n\n  return {\n    name: { value: null },\n    value: { value: '' },\n    category: { value: '' },\n    valid: false\n  };\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  state: SetRunResultFormState\n): SetRunResult => {\n  return {\n    type: Types.set_run_result,\n    name: state.name.value.name,\n    value: state.value.value,\n    category: state.category.value,\n    uuid: getActionUUID(settings, Types.set_run_result)\n  };\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { Asset, AssetType } from 'store/flowContext';\nimport { AssetEntry, FormState, mergeForm, StringEntry, ValidationFailure } from 'store/nodeEditor';\nimport { Alphanumeric, shouldRequireIf, StartIsNonNumeric, validate } from 'store/validators';\nimport { snakify } from 'utils';\n\nimport { initializeForm, stateToAction } from './helpers';\nimport styles from './SetRunResultForm.module.scss';\n\nexport interface SetRunResultFormState extends FormState {\n  name: AssetEntry;\n  value: StringEntry;\n  category: StringEntry;\n}\n\nexport default class SetRunResultForm extends React.PureComponent<\n  ActionFormProps,\n  SetRunResultFormState\n> {\n  constructor(props: ActionFormProps) {\n    super(props);\n\n    this.state = initializeForm(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^handle/, /^on/]\n    });\n  }\n\n  private handleNameUpdate(selected: Asset[]): void {\n    this.handleUpdate({ name: selected[0] });\n  }\n\n  public handleValueUpdate(value: string): boolean {\n    return this.handleUpdate({ value });\n  }\n\n  public handleCategoryUpdate(category: string): boolean {\n    return this.handleUpdate({ category });\n  }\n\n  private handleUpdate(\n    keys: { name?: Asset; value?: string; category?: string },\n    submitting: boolean = false\n  ): boolean {\n    const updates: Partial<SetRunResultFormState> = {};\n\n    if (keys.hasOwnProperty('name')) {\n      updates.name = validate('Name', keys.name, [\n        shouldRequireIf(submitting),\n        Alphanumeric,\n        StartIsNonNumeric\n      ]);\n    }\n\n    if (keys.hasOwnProperty('value')) {\n      updates.value = validate('Value', keys.value, []);\n    }\n\n    if (keys.hasOwnProperty('category')) {\n      updates.category = validate('Category', keys.category, []);\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    // make sure we validate untouched text fields\n    const valid = this.handleUpdate({ name: this.state.name.value }, true);\n\n    if (valid) {\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n\n      // notify our modal we are done\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  private handleCreateAssetFromInput(input: string): Asset {\n    return {\n      id: snakify(input),\n      name: input,\n      type: AssetType.Result\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    const snaked =\n      !hasErrors(this.state.name) && this.state.name.value\n        ? '.' + snakify(this.state.name.value.name)\n        : '';\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div className={styles.form}>\n          <AssetSelector\n            name=\"Result\"\n            assets={this.props.assetStore.results}\n            entry={this.state.name}\n            searchable={true}\n            createPrefix=\"New: \"\n            onChange={this.handleNameUpdate}\n            createAssetFromInput={this.handleCreateAssetFromInput}\n            formClearable={true}\n            showLabel={true}\n            helpText={`The name of the result, used to reference later as @results${snaked}`}\n          />\n\n          <TextInputElement\n            __className={styles.value}\n            name=\"Value\"\n            showLabel={true}\n            onChange={this.handleValueUpdate}\n            entry={this.state.value}\n            onFieldFailures={(persistantFailures: ValidationFailure[]) => {\n              const value = { ...this.state.value, persistantFailures };\n              this.setState({\n                value,\n                valid: this.state.valid && !hasErrors(value)\n              });\n            }}\n            autocomplete={true}\n            helpText=\"The value to save for this result or empty to clears it. You can use expressions, for example: @(title(input))\"\n          />\n          <TextInputElement\n            __className={styles.category}\n            name=\"Category\"\n            placeholder=\"Optional\"\n            showLabel={true}\n            onChange={this.handleCategoryUpdate}\n            entry={this.state.category}\n            autocomplete={false}\n            helpText=\"An optional category for your result. For age, the value might be 17, but the category might be 'Young Adult'\"\n          />\n        </div>\n      </Dialog>\n    );\n  }\n}\n","import * as React from 'react';\nimport { renderAssetList } from 'components/flow/actions/helpers';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { StartFlow } from 'flowTypes';\nimport { AssetType } from 'store/flowContext';\n\nconst StartFlowComp: React.SFC<StartFlow> = (\n  { flow: { name, uuid } },\n  context: any\n): JSX.Element => (\n  <>{renderAssetList([{ name, id: uuid, type: AssetType.Flow }], 3, context.config.endpoints)}</>\n);\n\nStartFlowComp.contextTypes = {\n  config: fakePropType\n};\n\nexport default StartFlowComp;\n","import { getRecipients, renderAssetList } from 'components/flow/actions/helpers';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { StartSession } from 'flowTypes';\nimport * as React from 'react';\nimport { AssetType } from 'store/flowContext';\n\nimport styles from './StartSession.module.scss';\n\nconst MAX_TO_SHOW = 3;\n\nconst StartSessionComp: React.SFC<StartSession> = (\n  action: StartSession,\n  context: any\n): JSX.Element => {\n  const recipients = getRecipients(action);\n  return (\n    <div className={styles.node}>\n      <div className={styles.to}>\n        {renderAssetList(recipients, MAX_TO_SHOW, context.config.endpoints)}\n      </div>\n      <div className={styles.flow}>\n        {renderAssetList(\n          [\n            {\n              name: action.flow.name,\n              id: action.flow.uuid,\n              type: AssetType.Flow\n            }\n          ],\n          3,\n          context.config.endpoints\n        )}\n      </div>\n    </div>\n  );\n};\n\nStartSessionComp.contextTypes = {\n  config: fakePropType\n};\n\nexport default StartSessionComp;\n","import {\n  getActionUUID,\n  getExpressions,\n  getRecipients,\n  getRecipientsByAsset\n} from 'components/flow/actions/helpers';\nimport { StartSessionFormState } from 'components/flow/actions/startsession/StartSessionForm';\nimport { Types } from 'config/interfaces';\nimport { StartSession } from 'flowTypes';\nimport { Asset, AssetType } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): StartSessionFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.start_session) {\n    const action = settings.originalAction as StartSession;\n    return {\n      recipients: { value: getRecipients(action) },\n      flow: {\n        value: {\n          id: action.flow.uuid,\n          name: action.flow.name,\n          type: AssetType.Flow\n        }\n      },\n      valid: true\n    };\n  }\n\n  return {\n    recipients: { value: [] },\n    flow: { value: null },\n    valid: false\n  };\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  state: StartSessionFormState\n): StartSession => {\n  const flow: Asset = state.flow.value;\n\n  return {\n    legacy_vars: getExpressions(state.recipients.value),\n    contacts: getRecipientsByAsset(state.recipients.value, AssetType.Contact),\n    groups: getRecipientsByAsset(state.recipients.value, AssetType.Group),\n    flow: { name: flow.name, uuid: flow.id },\n    type: Types.start_session,\n    uuid: getActionUUID(settings, Types.start_session)\n  };\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { AssetArrayEntry, AssetEntry, FormState, mergeForm } from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\n\nimport { initializeForm, stateToAction } from './helpers';\n\nexport interface StartSessionFormState extends FormState {\n  recipients: AssetArrayEntry;\n  flow: AssetEntry;\n}\n\nexport default class StartSessionForm extends React.Component<\n  ActionFormProps,\n  StartSessionFormState\n> {\n  public static contextTypes = {\n    endpoints: fakePropType,\n    assetService: fakePropType\n  };\n\n  constructor(props: ActionFormProps) {\n    super(props);\n\n    this.state = initializeForm(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleRecipientsChanged(recipients: Asset[]): boolean {\n    return this.handleUpdate({ recipients });\n  }\n\n  public handleFlowChanged(flows: Asset[]): boolean {\n    let flow = null;\n    if (flows && flows.length > 0) {\n      flow = flows[0];\n    }\n    return this.handleUpdate({ flow });\n  }\n\n  private handleUpdate(keys: { flow?: Asset; recipients?: Asset[] }, submitting = false): boolean {\n    const updates: Partial<StartSessionFormState> = {};\n\n    if (keys.hasOwnProperty('recipients')) {\n      updates.recipients = validate('Recipients', keys.recipients, [shouldRequireIf(submitting)]);\n    }\n\n    if (keys.hasOwnProperty('flow')) {\n      updates.flow = validate('Flow', keys.flow, [shouldRequireIf(submitting)]);\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    // validate in case they never updated an empty field\n    const valid = this.handleUpdate(\n      {\n        recipients: this.state.recipients.value,\n        flow: this.state.flow.value\n      },\n      true\n    );\n\n    if (valid) {\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n\n      // notify our modal we are done\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div>\n          <AssetSelector\n            name=\"Recipients\"\n            assets={this.props.assetStore.recipients}\n            completion={this.props.assetStore}\n            entry={this.state.recipients}\n            searchable={true}\n            multi={true}\n            onChange={this.handleRecipientsChanged}\n          />\n          <p />\n          <AssetSelector\n            name=\"Flow\"\n            placeholder=\"Select the flow to start\"\n            assets={this.props.assetStore.flows}\n            entry={this.state.flow}\n            searchable={true}\n            onChange={this.handleFlowChanged}\n          />\n        </div>\n      </Dialog>\n    );\n  }\n}\n","export const WAIT_LABEL = 'If the message response...';\nexport const EXPRESSION_LABEL = 'If the expression...';\nexport const GROUP_LABEL = \"Select the group(s) you'd like to split by below\";\nexport const OPERAND_LOCALIZATION_DESC =\n  'Sometimes languages need special rules to route things properly. If a translation is not provided, the original rule will be used.';\n\nexport enum DefaultExitNames {\n  All_Responses = 'All Responses',\n  No_Response = 'No Response',\n  Any_Value = 'Any Value',\n  Other = 'Other'\n}\n","import { TransferAirtime } from 'flowTypes';\nimport * as React from 'react';\n\nimport styles from './TransferAirtime.module.scss';\n\nconst TransferAirtimeComp: React.SFC<TransferAirtime> = (transfer): JSX.Element => {\n  const details = Object.keys(transfer.amounts).map((key: string) => {\n    return (\n      <div key={'transfer_' + key}>\n        <div className={styles.amount}>{transfer.amounts[key]}</div>\n        <div className={styles.code}>{key}</div>\n      </div>\n    );\n  });\n\n  return <div>{details}</div>;\n};\n\nexport default TransferAirtimeComp;\n","import * as React from 'react';\nimport { Types } from 'config/interfaces';\nimport {\n  SetContactAttribute,\n  SetContactChannel,\n  SetContactLanguage,\n  SetContactName\n} from 'flowTypes';\nimport { emphasize } from 'utils';\n\nconst withEmph = (text: string, emph: boolean) => (emph ? emphasize(text) : text);\n\nexport const renderSetText = (\n  name: string,\n  value: string,\n  emphasizeName: boolean = false\n): JSX.Element => {\n  if (value) {\n    return (\n      <div>\n        Set {withEmph(name, emphasizeName)} to {emphasize(value)}.\n      </div>\n    );\n  } else {\n    return <div>Clear {withEmph(name, emphasizeName)}.</div>;\n  }\n};\n\nconst UpdateContactComp: React.SFC<SetContactAttribute> = action => {\n  switch (action.type) {\n    case Types.set_contact_field:\n      return renderSetText(action.field.name, action.value, true);\n    case Types.set_contact_channel:\n      return renderSetText('channel', (action as SetContactChannel).channel.name);\n    case Types.set_contact_language:\n      return renderSetText('language', (action as SetContactLanguage).language);\n    case Types.set_contact_name:\n      return renderSetText('name', (action as SetContactName).name);\n  }\n};\n\nexport default UpdateContactComp;\n","import { CHANNEL_PROPERTY, LANGUAGE_PROPERTY, NAME_PROPERTY } from 'components/flow/props';\nimport { isOnlineFlowType } from 'config/helpers';\nimport { FlowTypes } from 'config/interfaces';\nimport { Asset, RenderNode } from 'store/flowContext';\n\nexport interface DragPoint {\n  exitUUID: string;\n  nodeUUID: string;\n}\n\nexport const getDraggedFrom = (ghostNode: RenderNode): DragPoint => {\n  if (ghostNode.ghost) {\n    const exitUUIDs = Object.keys(ghostNode.inboundConnections);\n    if (exitUUIDs.length > 0) {\n      const exitUUID = exitUUIDs[0];\n      const nodeUUID = ghostNode.inboundConnections[exitUUID];\n      return { exitUUID, nodeUUID };\n    }\n  }\n};\n\nconst ONLINE_PROPERTIES: Asset[] = [NAME_PROPERTY, LANGUAGE_PROPERTY, CHANNEL_PROPERTY];\nconst OFFLINE_PROPERTIES: Asset[] = [NAME_PROPERTY, LANGUAGE_PROPERTY];\n\nexport const getContactProperties = (flowType: FlowTypes = null): Asset[] => {\n  return !flowType || isOnlineFlowType(flowType) ? ONLINE_PROPERTIES : OFFLINE_PROPERTIES;\n};\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { DefaultExitNames } from 'components/flow/routers/constants';\nimport { Operators, Types } from 'config/interfaces';\nimport {\n  Action,\n  CallResthook,\n  CallWebhook,\n  Case,\n  Category,\n  Exit,\n  FlowNode,\n  Router,\n  RouterTypes,\n  SwitchRouter,\n  TransferAirtime,\n  UIConfig,\n  WebhookExitNames\n} from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { createUUID, snakify } from 'utils';\n\nexport interface CategorizedCases {\n  cases: Case[];\n  categories: Category[];\n  exits: Exit[];\n  caseConfig: { [uuid: string]: any };\n}\nexport interface ResolvedRoutes extends CategorizedCases {\n  defaultCategory: string;\n  timeoutCategory?: string;\n}\n\nexport const createRenderNode = (\n  uuid: string,\n  router: Router,\n  exits: Exit[],\n  type: Types,\n  actions: Action[] = [],\n  uiConfig: { [key: string]: any } = {}\n): RenderNode => {\n  const renderNode: RenderNode = {\n    node: {\n      uuid,\n      actions,\n      router,\n      exits\n    },\n    ui: {\n      type,\n      position: null,\n      config: uiConfig\n    },\n    inboundConnections: {}\n  };\n  return renderNode;\n};\n\nexport const hasCases = (node: FlowNode): boolean => {\n  if (\n    node.router &&\n    (node.router as SwitchRouter).cases &&\n    (node.router as SwitchRouter).cases.length\n  ) {\n    return true;\n  }\n  return false;\n};\n\nexport const getCategories = (renderNode: RenderNode): Category[] => {\n  if (renderNode.node.router) {\n    return renderNode.node.router.categories;\n  }\n  return [];\n};\n\nexport const createCaseProps = (cases: Case[], renderNode: RenderNode): CaseProps[] => {\n  const categories: Category[] = getCategories(renderNode);\n  return cases.map((kase: Case) => {\n    const matchingCategory = categories.find(\n      (category: Category) => category.uuid === kase.category_uuid\n    );\n\n    if (isRelativeDate(kase.type)) {\n      if (renderNode.ui.config && renderNode.ui.config.cases) {\n        const caseConfig = renderNode.ui.config.cases[kase.uuid];\n        if (caseConfig && caseConfig.arguments) {\n          kase.arguments = caseConfig.arguments;\n        }\n      }\n    }\n\n    return {\n      uuid: kase.uuid,\n      kase,\n      categoryName: matchingCategory ? matchingCategory.name : null,\n      valid: true\n    };\n  });\n};\n\nexport const isRelativeDate = (operatorType: Operators): boolean => {\n  return !![Operators.has_date_eq, Operators.has_date_gt, Operators.has_date_lt].find(\n    (type: string) => operatorType === type\n  );\n};\n\nconst isCategoryMatch = (cat: Category, kase: CaseProps) => {\n  // see if we have the same name\n  return cat.name.toLowerCase().trim() === kase.categoryName.trim().toLowerCase();\n};\n\n/**\n * Given a set of cases and previous categories, determines correct merging of cases\n * and the union of categories\n */\nexport const categorizeCases = (\n  newCases: CaseProps[],\n  originalNode: FlowNode\n): CategorizedCases => {\n  const categories: Category[] = [];\n  const cases: Case[] = [];\n  const exits: Exit[] = [];\n  const caseConfig: UIConfig = {};\n\n  const originalRouter = originalNode && originalNode.router;\n  const previousCategories = (originalRouter && originalRouter.categories) || [];\n\n  // look over the new cases and match up categories and exits\n  for (const newCase of newCases) {\n    // ignore empty cases\n    if (!newCase.categoryName || newCase.categoryName.trim().length === 0) {\n      continue;\n    }\n\n    // convert relative dates to expressions with configs\n    if (isRelativeDate(newCase.kase.type)) {\n      caseConfig[newCase.uuid] = { arguments: newCase.kase.arguments };\n      newCase.kase.arguments = [`@(datetime_add(today(), ${newCase.kase.arguments[0]}, \"D\"))`];\n    }\n\n    //  see if it exists on a previous case\n    let category = categories.find((cat: Category) => isCategoryMatch(cat, newCase));\n\n    // if not, see if that category exists on our old node\n    if (!category) {\n      category = previousCategories.find((cat: Category) => isCategoryMatch(cat, newCase));\n\n      // still no category, lets see if we can find a case uuid match\n      if (!category) {\n        const router = getSwitchRouter(originalNode);\n        if (router) {\n          const previousCase = router.cases.find((kase: Case) => kase.uuid === newCase.uuid);\n          if (previousCase) {\n            const previousCategory = previousCategories.find(\n              (cat: Category) => cat.uuid === previousCase.category_uuid\n            );\n\n            if (previousCategory) {\n              category = { ...previousCategory, name: newCase.categoryName };\n            }\n          }\n        }\n      }\n\n      // we found an old category, bring it and its exit over\n      if (category) {\n        categories.push(category);\n        const previousExit = originalNode.exits.find(\n          (exit: Exit) => category.exit_uuid === exit.uuid\n        );\n        exits.push(previousExit);\n      }\n    }\n\n    // if still no category, finally lets just create a new one\n    if (!category) {\n      const exit: Exit = {\n        uuid: createUUID()\n      };\n\n      exits.push(exit);\n\n      category = {\n        uuid: createUUID(),\n        name: newCase.categoryName,\n        exit_uuid: exit.uuid\n      };\n\n      categories.push(category);\n    }\n\n    // lastly, add our case\n    cases.push({\n      ...newCase.kase,\n      category_uuid: category.uuid\n    });\n  }\n\n  return { cases, categories, exits, caseConfig };\n};\n\nexport const getSwitchRouter = (node: FlowNode): SwitchRouter => {\n  if (node && node.router && node.router.type === RouterTypes.switch) {\n    return node.router as SwitchRouter;\n  }\n  return null;\n};\n\n/**\n * Adds a default route, reusing the previous one if possible\n * @param originalNode\n */\nexport const getDefaultRoute = (\n  hasCategories: boolean,\n  originalNode: FlowNode\n): { defaultCategory: Category; defaultExit: Exit } => {\n  const originalRouter = getSwitchRouter(originalNode);\n\n  // use the previous default if it had one\n  if (originalRouter) {\n    const defaultCategory = originalRouter.categories.find(\n      (cat: Category) => cat.uuid === originalRouter.default_category_uuid\n    );\n\n    const defaultExit = originalNode.exits.find((e: Exit) => e.uuid === defaultCategory.exit_uuid);\n\n    defaultCategory.name = hasCategories ? DefaultExitNames.Other : DefaultExitNames.All_Responses;\n\n    return { defaultCategory, defaultExit };\n  }\n  // otherwise, create a new exit and category\n  else {\n    const defaultExit: Exit = {\n      uuid: createUUID()\n    };\n\n    const defaultCategory = {\n      uuid: createUUID(),\n      name: hasCategories ? DefaultExitNames.Other : DefaultExitNames.All_Responses,\n      exit_uuid: defaultExit.uuid\n    };\n\n    return { defaultCategory, defaultExit };\n  }\n};\n\nconst getTimeoutRoute = (\n  originalNode: FlowNode\n): { timeoutCategory: Category; timeoutExit: Exit } => {\n  let timeoutCategory: Category = null;\n  let timeoutExit: Exit = null;\n\n  const originalRouter = getSwitchRouter(originalNode);\n\n  // see if our previous node had a timeout case\n  if (originalRouter) {\n    if (originalRouter.wait && originalRouter.wait.timeout) {\n      const previousCategory = originalRouter.wait.timeout.category_uuid;\n      timeoutCategory = originalRouter.categories.find(\n        (cat: Category) => cat.uuid === previousCategory\n      );\n      timeoutExit = originalNode.exits.find(\n        (exit: Exit) => exit.uuid === timeoutCategory.exit_uuid\n      );\n    }\n  }\n\n  if (!timeoutCategory) {\n    // create a new route\n    timeoutExit = {\n      uuid: createUUID()\n    };\n\n    timeoutCategory = {\n      uuid: createUUID(),\n      name: DefaultExitNames.No_Response,\n      exit_uuid: timeoutExit.uuid\n    };\n  }\n\n  return { timeoutCategory, timeoutExit };\n};\n\n/**\n * Given a set of cases and previous categories, determines correct merging of cases\n * and the union of categories\n */\nexport const resolveRoutes = (\n  newCases: CaseProps[],\n  hasTimeout: boolean,\n  originalNode: FlowNode\n): ResolvedRoutes => {\n  const resolved = categorizeCases(newCases, originalNode);\n\n  // tack on our other category\n  const { defaultCategory, defaultExit } = getDefaultRoute(\n    resolved.categories.length > 0,\n    originalNode\n  );\n\n  resolved.categories.push(defaultCategory);\n  resolved.exits.push(defaultExit);\n\n  const results: ResolvedRoutes = {\n    ...resolved,\n    defaultCategory: defaultCategory.uuid\n  };\n\n  // add in a timeout route if we need one\n  if (hasTimeout) {\n    const { timeoutCategory, timeoutExit } = getTimeoutRoute(originalNode);\n    resolved.categories.push(timeoutCategory);\n    resolved.exits.push(timeoutExit);\n    results.timeoutCategory = timeoutCategory.uuid;\n  }\n\n  return results;\n};\n\nexport const createWebhookBasedNode = (\n  action: CallWebhook | CallResthook | TransferAirtime,\n  originalNode: RenderNode\n): RenderNode => {\n  const exits: Exit[] = [];\n  let cases: Case[] = [];\n  let categories: Category[] = [];\n\n  // see if we are editing an existing router so we reuse exits\n  if (\n    originalNode &&\n    originalNode.node.actions.length === 1 &&\n    originalNode.node.actions[0].type === action.type\n  ) {\n    const previousRouter = getSwitchRouter(originalNode.node);\n    originalNode.node.exits.forEach((exit: any) => exits.push(exit));\n    previousRouter.cases.forEach(kase => cases.push(kase));\n    originalNode.node.router.categories.forEach(category => categories.push(category));\n  } else {\n    // Otherwise, let's create some new ones\n    exits.push(\n      {\n        uuid: createUUID(),\n        destination_uuid: null\n      },\n      {\n        uuid: createUUID(),\n        destination_uuid: null\n      }\n    );\n\n    categories = [\n      {\n        uuid: createUUID(),\n        name: WebhookExitNames.Success,\n        exit_uuid: exits[0].uuid\n      },\n      {\n        uuid: createUUID(),\n        name: WebhookExitNames.Failure,\n        exit_uuid: exits[1].uuid\n      }\n    ];\n\n    cases = [\n      {\n        uuid: createUUID(),\n        type: Operators.has_only_text,\n        arguments: [WebhookExitNames.Success],\n        category_uuid: categories[0].uuid\n      }\n    ];\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    operand: '@results.' + snakify(action.result_name) + '.category',\n    cases,\n    categories,\n    default_category_uuid: categories[categories.length - 1].uuid\n  };\n\n  let splitType = Types.split_by_webhook;\n  if (action.type === Types.call_resthook) {\n    splitType = Types.split_by_resthook;\n  } else if (action.type === Types.transfer_airtime) {\n    splitType = Types.split_by_airtime;\n  }\n\n  return createRenderNode(originalNode.node.uuid, router, exits, splitType, [action]);\n};\n","import { getSwitchRouter } from 'components/flow/routers/helpers';\nimport { Types } from 'config/interfaces';\nimport { CallResthook, CallWebhook, Category, Exit, FlowNode, TransferAirtime } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\n\nexport const getCategoriesForExit = (renderNode: RenderNode, exit: Exit): Category[] => {\n  if (!renderNode.node.router) {\n    return [];\n  }\n  return renderNode.node.router.categories.filter((cat: Category) => cat.exit_uuid === exit.uuid);\n};\n\nexport const getResultName = (node: FlowNode) => {\n  const switchRouter = getSwitchRouter(node);\n  if (switchRouter && switchRouter.result_name) {\n    return switchRouter.result_name;\n  }\n  if (node.actions.length === 1) {\n    const action = node.actions[0];\n    if (\n      action.type === Types.call_webhook ||\n      action.type === Types.call_resthook ||\n      action.type === Types.transfer_airtime\n    ) {\n      const resultAction = action as CallWebhook | CallResthook | TransferAirtime;\n      return resultAction.result_name;\n    }\n  }\n};\n","import { getResultName } from 'components/flow/node/helpers';\nimport { Revision } from 'components/revisions/RevisionExplorer';\nimport { Types } from 'config/interfaces';\nimport {\n  AnyAction,\n  Dimensions,\n  FlowDefinition,\n  FlowNode,\n  FlowPosition,\n  RouterTypes,\n  StickyNote,\n  SwitchRouter\n} from 'flowTypes';\nimport {\n  Asset,\n  AssetMap,\n  AssetStore,\n  AssetType,\n  Reference,\n  RenderNode,\n  RenderNodeMap\n} from 'store/flowContext';\nimport { assetListToMap, detectLoops, getActionIndex, getExitIndex, getNode } from 'store/helpers';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport { LocalizationUpdates } from 'store/thunks';\nimport { createUUID, merge, push, set, snakify, snapToGrid, splice, unset } from 'utils';\n\nconst mutate = require('immutability-helper');\n\nexport const uniquifyNode = (newNode: FlowNode): FlowNode => {\n  // Give our node a unique uuid\n  return mutate(newNode, merge({ uuid: createUUID() }));\n};\n\nexport const getDefaultExit = (node: FlowNode) => {\n  if (node.router.type === RouterTypes.switch) {\n    const switchRouter = node.router as SwitchRouter;\n    return node.exits.find(exit => exit.uuid === switchRouter.default_category_uuid);\n  }\n};\n\nexport const addAssets = (type: string, store: AssetStore, assets: Asset[]): AssetStore => {\n  const assetMap = assetListToMap(assets);\n  const updated = mutate(store, {\n    [type]: {\n      items: {\n        $merge: assetMap\n      }\n    }\n  });\n  return updated;\n};\n\nexport const removeResultReference = (\n  resultName: string,\n  items: AssetMap,\n  reference: Reference\n): AssetMap => {\n  const key = snakify(resultName);\n\n  if (key in items) {\n    const item = items[key];\n    const filteredRefs = item.references.filter(\n      (ref: Reference) =>\n        ref.nodeUUID !== reference.nodeUUID || ref.actionUUID !== reference.actionUUID\n    );\n\n    if (filteredRefs.length === 0) {\n      return mutate(items, { $unset: [key] });\n    }\n\n    return mutate(items, { [key]: { references: { $set: filteredRefs } } });\n  }\n\n  const result =\n    key in items\n      ? items[key]\n      : {\n          name: resultName,\n          id: key,\n          type: AssetType.Result,\n          references: []\n        };\n\n  if (\n    !result.references.find(\n      (ref: Reference) =>\n        ref.nodeUUID === reference.nodeUUID && ref.actionUUID === reference.actionUUID\n    )\n  ) {\n    result.references.push(reference);\n  }\n\n  return mutate(items, { $merge: { [key]: result } });\n};\n\nexport const removeResultFromStore = (\n  resultName: string,\n  assets: AssetStore,\n  reference: Reference\n): AssetStore => {\n  if (resultName && assets.results) {\n    const items = removeResultReference(resultName, assets.results.items, reference);\n    return mutate(assets, { results: { items: { $set: items } } });\n  }\n  return assets;\n};\n\nexport const addResultToStore = (\n  resultName: string,\n  assets: AssetStore,\n  reference: Reference\n): AssetStore => {\n  if (resultName) {\n    const items = addResult(resultName, assets.results.items, reference);\n    return mutate(assets, { results: { items: { $set: items } } });\n  }\n};\n\nexport const addResult = (resultName: string, items: AssetMap, reference: Reference): AssetMap => {\n  const key = snakify(resultName);\n  const result =\n    key in items\n      ? items[key]\n      : {\n          name: resultName,\n          id: key,\n          type: AssetType.Result,\n          references: []\n        };\n\n  if (\n    !result.references.find(\n      (ref: Reference) =>\n        ref.nodeUUID === reference.nodeUUID && ref.actionUUID === reference.actionUUID\n    )\n  ) {\n    result.references.push(reference);\n  }\n\n  return mutate(items, { $merge: { [key]: result } });\n};\n\nexport const addRevision = (assets: AssetStore, revision: Revision): AssetStore => {\n  return mutate(assets, {\n    revisions: { items: { $merge: { [revision.id]: revision } } }\n  });\n};\n\nexport const addFlowResult = (assets: AssetStore, node: FlowNode): AssetStore => {\n  let updated = assets;\n\n  // TODO: initialize these to empties further up to avoid this\n  if (!updated) {\n    updated = { results: { items: {}, type: AssetType.Result } };\n  }\n\n  if (!updated.results) {\n    updated.results = { items: {}, type: AssetType.Result };\n  }\n\n  const resultName = getResultName(node);\n  if (resultName) {\n    const items = addResult(resultName, assets.results.items, {\n      nodeUUID: node.uuid\n    });\n    return mutate(assets, { results: { items: { $set: items } } });\n  }\n\n  return assets;\n};\n\n/**\n * Update the destination for a specific exit. Updates destination_uuid and\n * the inboundConnections for the given node\n * @param nodes\n * @param fromNodeUUID\n * @param fromExitUUID\n * @param destination\n */\nexport const updateConnection = (\n  nodes: RenderNodeMap,\n  fromNodeUUID: string,\n  fromExitUUID: string,\n  destinationNodeUUID: string\n): RenderNodeMap => {\n  let updatedNodes = nodes;\n  const fromNode = getNode(nodes, fromNodeUUID);\n\n  // make sure our destination exits if they provided one\n  if (destinationNodeUUID) {\n    getNode(nodes, destinationNodeUUID);\n  }\n\n  const exitIdx = getExitIndex(fromNode.node, fromExitUUID);\n  const previousDestination = fromNode.node.exits[exitIdx].destination_uuid;\n\n  updatedNodes = mutate(updatedNodes, {\n    [fromNodeUUID]: {\n      node: {\n        exits: {\n          [exitIdx]: {\n            destination_uuid: set(destinationNodeUUID)\n          }\n        }\n      }\n    }\n  });\n\n  // update our pointers\n  if (destinationNodeUUID) {\n    updatedNodes = mutate(updatedNodes, {\n      [destinationNodeUUID]: {\n        inboundConnections: merge({ [fromExitUUID]: fromNodeUUID })\n      }\n    });\n  }\n\n  if (previousDestination != null) {\n    updatedNodes = mutate(updatedNodes, {\n      [previousDestination]: { inboundConnections: unset([[fromExitUUID]]) }\n    });\n  }\n\n  return updatedNodes;\n};\n\nexport const addLanguage = (languages: Asset[], language: Asset): Asset[] => {\n  return mutate(languages, push([language]));\n};\n\n/**\n * Removes a spcific destination for an exit and the associated inboundConnection.\n * @param nodes\n * @param fromNodeUUID\n * @param fromExitUUID\n */\nexport const removeConnection = (\n  nodes: RenderNodeMap,\n  fromNodeUUID: string,\n  fromExitUUID: string\n): RenderNodeMap => {\n  return updateConnection(nodes, fromNodeUUID, fromExitUUID, null);\n};\n\n/**\n * Adds a given RenderNode to our node map or updates an existing one.\n * Updates destinations for any inboundConnections provided and updates\n * inboundConnections for any destination_uuid our exits point to.\n * @param nodes\n * @param node the node to add, if unique uuid, it will be added\n */\nexport const mergeNode = (nodes: RenderNodeMap, node: RenderNode): RenderNodeMap => {\n  let updatedNodes = nodes;\n\n  // if the node is already there, remove it first\n  if (updatedNodes[node.node.uuid]) {\n    updatedNodes = removeNode(nodes, node.node.uuid);\n  }\n\n  // add our node updted node\n  updatedNodes = mutate(nodes, merge({ [node.node.uuid]: node }));\n\n  // if we have inbound connections, update our nodes accordingly\n  for (const fromExitUUID of Object.keys(node.inboundConnections)) {\n    const fromNodeUUID = node.inboundConnections[fromExitUUID];\n\n    const fromNode = getNode(nodes, fromNodeUUID);\n    const exitIdx = getExitIndex(fromNode.node, fromExitUUID);\n\n    updatedNodes = mutate(updatedNodes, {\n      [fromNodeUUID]: {\n        node: {\n          exits: {\n            [exitIdx]: merge({ destination_uuid: node.node.uuid })\n          }\n        }\n      }\n    });\n  }\n  return updatedNodes;\n};\n\n/**\n * Adds a given action to the provided node\n * @param nodes\n * @param nodeUUID\n * @param action\n */\nexport const addAction = (\n  nodes: RenderNodeMap,\n  nodeUUID: string,\n  action: AnyAction\n): RenderNodeMap => {\n  // check that our node exists\n  getNode(nodes, nodeUUID);\n  return mutate(nodes, { [nodeUUID]: { node: { actions: push([action]) } } });\n};\n\n/**\n * Updates the given action in place by it's uuid\n * @param nodes\n * @param nodeUUID\n * @param action\n */\nexport const updateAction = (\n  nodes: RenderNodeMap,\n  nodeUUID: string,\n  newAction: AnyAction,\n  originalAction?: AnyAction\n) => {\n  const originalNode = getNode(nodes, nodeUUID);\n  // If we have existing actions, find our action and update it\n  const actionIdx = originalAction ? getActionIndex(originalNode.node, originalAction.uuid) : 0;\n  return mutate(nodes, {\n    [nodeUUID]: {\n      node: {\n        actions: { [actionIdx]: set(newAction) }\n      }\n    }\n  });\n};\n\nexport const spliceInAction = (\n  nodes: RenderNodeMap,\n  nodeUUID: string,\n  action: AnyAction\n): RenderNodeMap => {\n  const { [nodeUUID]: previousNode } = nodes;\n\n  const otherExit = getDefaultExit(previousNode.node);\n  const destination = otherExit ? otherExit.destination_uuid : null;\n\n  // remove our previous node\n  let updatedNodes = removeNode(nodes, previousNode.node.uuid, false);\n\n  const newNode: RenderNode = {\n    node: {\n      uuid: createUUID(),\n      actions: [action],\n      exits: [{ uuid: createUUID(), destination_uuid: destination }]\n    },\n    ui: { position: previousNode.ui.position, type: Types.execute_actions },\n    inboundConnections: previousNode.inboundConnections\n  };\n\n  // add our new node\n  updatedNodes = mergeNode(updatedNodes, newNode);\n\n  return updatedNodes;\n};\n\n/** Removes a specific action from a node */\nexport const removeAction = (nodes: RenderNodeMap, nodeUUID: string, actionUUID: string) => {\n  const renderNode = getNode(nodes, nodeUUID);\n  const actionIdx = getActionIndex(renderNode.node, actionUUID);\n  return mutate(nodes, {\n    [nodeUUID]: { node: { actions: splice([[actionIdx, 1]]) } }\n  });\n};\n\n/**\n * Moves a single action up in the list for the given node\n * @param nodes\n * @param nodeUUID\n * @param action\n */\nexport const moveActionUp = (nodes: RenderNodeMap, nodeUUID: string, actionUUID: string) => {\n  const renderNode = getNode(nodes, nodeUUID);\n\n  const actions = renderNode.node.actions;\n  const actionIdx = getActionIndex(renderNode.node, actionUUID);\n\n  if (actionIdx === 0) {\n    throw new Error('Cannot move an action at the top upwards');\n  }\n\n  const action = actions[actionIdx];\n  const actionAbove = actions[actionIdx - 1];\n\n  return mutate(nodes, {\n    [nodeUUID]: {\n      node: { actions: splice([[actionIdx - 1, 2, action, actionAbove]]) }\n    }\n  });\n};\n\n/**\n * Removes a given node from our node map. Updates destinations for any exits that point to us\n * and removes any inboundConnections that reference our exits. Also will reroute connections\n * that route through us.\n * @param nodes\n * @param nodeToRemove\n */\nexport const removeNode = (\n  nodes: RenderNodeMap,\n  nodeUUID: string,\n  remap: boolean = true\n): RenderNodeMap => {\n  const nodeToRemove = getNode(nodes, nodeUUID);\n  let updatedNodes = nodes;\n\n  // remove us from any inbound connections\n  for (const exit of nodeToRemove.node.exits) {\n    if (exit.destination_uuid) {\n      updatedNodes = mutate(updatedNodes, {\n        [exit.destination_uuid]: {\n          inboundConnections: unset([exit.uuid])\n        }\n      });\n    }\n  }\n\n  // clear any destinations that point to us\n  for (const fromExitUUID of Object.keys(nodeToRemove.inboundConnections)) {\n    // if we have a single destination, reroute those pointing to us\n    let destination = null;\n    if (remap && nodeToRemove.node.exits.length === 1) {\n      ({ destination_uuid: destination } = nodeToRemove.node.exits[0]);\n    }\n\n    const fromNodeUUID = nodeToRemove.inboundConnections[fromExitUUID];\n    const fromNode = getNode(nodes, fromNodeUUID);\n\n    // make sure we aren't creating a loop\n    if (destination) {\n      try {\n        detectLoops(updatedNodes, fromNodeUUID, destination);\n      } catch {\n        destination = null;\n      }\n    }\n\n    const exitIdx = getExitIndex(fromNode.node, fromExitUUID);\n    updatedNodes = mutate(updatedNodes, {\n      [fromNodeUUID]: {\n        node: {\n          exits: {\n            [exitIdx]: { destination_uuid: set(destination) }\n          }\n        }\n      }\n    });\n\n    // if we are setting a new destination, update the inboundConnections\n    if (destination) {\n      // make sure our destination exists\n      getNode(nodes, destination);\n      updatedNodes = mutate(updatedNodes, {\n        [destination]: {\n          inboundConnections: merge({ [fromExitUUID]: fromNodeUUID })\n        }\n      });\n    }\n  }\n\n  // remove the actual node\n  return mutate(updatedNodes, unset([nodeUUID]));\n};\n\n/**\n * Update the position for a given node\n * @param nodes\n * @param nodeUUID\n * @param x\n * @param y\n */\nexport const updatePosition = (\n  nodes: RenderNodeMap,\n  nodeUUID: string,\n  position: FlowPosition,\n  snap: boolean = true\n): RenderNodeMap => {\n  const { left, top } = position;\n\n  // make sure we are on the grid\n  let adjusted = { left, top };\n\n  if (snap) {\n    adjusted = snapToGrid(left, top);\n  }\n\n  return mutate(nodes, {\n    [nodeUUID]: {\n      ui: {\n        position: set({\n          left: adjusted.left,\n          top: adjusted.top\n        })\n      }\n    }\n  });\n};\n\nexport const updateStickyNotePosition = (\n  definition: FlowDefinition,\n  stickyUUID: string,\n  position: FlowPosition,\n  snap: boolean = true\n): FlowDefinition => {\n  if (!definition._ui.stickies) {\n    definition._ui.stickies = {};\n  }\n\n  const lastPos = definition._ui.stickies[stickyUUID].position;\n  const width = lastPos.right - lastPos.left;\n  const height = lastPos.bottom - lastPos.top;\n\n  const { left, top } = position;\n\n  // make sure we are on the grid\n  let adjusted = { left, top };\n\n  if (snap) {\n    adjusted = snapToGrid(left, top);\n  }\n\n  return mutate(definition, {\n    _ui: {\n      stickies: {\n        [stickyUUID]: {\n          position: set({\n            left: adjusted.left,\n            top: adjusted.top,\n            right: adjusted.left + width,\n            bottom: adjusted.top + height\n          })\n        }\n      }\n    }\n  });\n};\n\n/**\n * Update the dimensions for a specific node\n * @param nodes\n * @param nodeUUID\n * @param dimensions\n */\nexport const updateNodeDimensions = (\n  nodes: RenderNodeMap,\n  nodeUUID: string,\n  dimensions: Dimensions\n): RenderNodeMap => {\n  const node = getNode(nodes, nodeUUID);\n  return mutate(nodes, {\n    [nodeUUID]: {\n      ui: {\n        position: merge({\n          bottom: node.ui.position.top + dimensions.height,\n          right: node.ui.position.left + dimensions.width\n        })\n      }\n    }\n  });\n};\n\n/**\n * Update the dimensions for a specific sticky\n * @param definition\n * @param uuuid\n * @param dimensions\n */\nexport const updateStickyDimensions = (\n  definition: FlowDefinition,\n  uuid: string,\n  dimensions: Dimensions\n): FlowDefinition => {\n  const position = definition._ui.stickies[uuid].position;\n  return mutate(definition, {\n    _ui: {\n      stickies: {\n        [uuid]: {\n          position: merge({\n            bottom: position.top + dimensions.height,\n            right: position.left + dimensions.width\n          })\n        }\n      }\n    }\n  });\n};\n\nexport const updateStickyNote = (\n  definition: FlowDefinition,\n  stickyUUID: string,\n  sticky: StickyNote\n): FlowDefinition => {\n  if (!definition._ui.stickies) {\n    definition._ui.stickies = {};\n  }\n  if (sticky) {\n    return mutate(definition, {\n      _ui: { stickies: merge({ [stickyUUID]: sticky }) }\n    });\n  } else {\n    return mutate(definition, { _ui: { stickies: unset([stickyUUID]) } });\n  }\n};\n\nexport const mergeNodeEditorSettings = (\n  current: NodeEditorSettings,\n  newSettings: NodeEditorSettings\n) => {\n  if (!newSettings) {\n    return current;\n  }\n\n  if (!current) {\n    return newSettings;\n  }\n\n  return mutate(current, { $merge: newSettings });\n};\n\n/**\n * Prunes the definition for editing, removing node references\n * @param definition our full definition\n */\nexport const pruneDefinition = (definition: FlowDefinition): FlowDefinition =>\n  mutate(definition, { nodes: [], _ui: { $merge: { nodes: {} } } });\n\n/**\n * Update the localization in the definition with the provided changes for a language\n * @param definition\n * @param language\n * @param changes\n */\nexport const updateLocalization = (\n  definition: FlowDefinition,\n  language: string,\n  changes: LocalizationUpdates\n) => {\n  let newDef = definition;\n\n  // Add language to localization map if not present\n  if (!newDef.localization[language]) {\n    newDef = mutate(newDef, {\n      localization: {\n        [language]: set({})\n      }\n    });\n  }\n\n  // Apply changes\n  changes.forEach(({ translations, uuid }) => {\n    if (translations) {\n      // console.log(translations);\n      // normalize our translations so all are treated as arrays\n      const normalizedTranslations: { [uuid: string]: string[] } = {};\n      for (const key of Object.keys(translations)) {\n        const prev = translations[key];\n        if (Array.isArray(prev)) {\n          normalizedTranslations[key] = prev;\n        } else {\n          normalizedTranslations[key] = [prev];\n        }\n      }\n\n      // adding localization\n      newDef = mutate(newDef, {\n        localization: { [language]: { [uuid]: set(normalizedTranslations) } }\n      });\n    } else {\n      // removing localization\n      newDef = mutate(newDef, {\n        localization: { [language]: unset([uuid]) }\n      });\n    }\n  });\n\n  return newDef;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport {\n  initializeForm,\n  sortFieldsAndProperties,\n  stateToAction,\n  UpdateContactFormState\n} from 'components/flow/actions/updatecontact/helpers';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport { getContactProperties } from 'components/helpers';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Types } from 'config/interfaces';\nimport { ContactProperties } from 'flowTypes';\nimport * as React from 'react';\nimport { Asset, AssetType, updateAssets } from 'store/flowContext';\nimport * as mutators from 'store/mutators';\nimport { mergeForm, ValidationFailure } from 'store/nodeEditor';\nimport { DispatchWithState, GetState } from 'store/thunks';\nimport { shouldRequireIf, validate } from 'store/validators';\n\nimport styles from './UpdateContactForm.module.scss';\n\nexport default class UpdateContactForm extends React.Component<\n  ActionFormProps,\n  UpdateContactFormState\n> {\n  public static contextTypes = {\n    assetService: fakePropType,\n    config: fakePropType\n  };\n\n  constructor(props: ActionFormProps) {\n    super(props);\n\n    this.state = initializeForm(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^get/, /^on/, /^handle/]\n    });\n  }\n\n  private handleUpdate(\n    keys: {\n      type?: Types;\n      name?: string;\n      channel?: Asset;\n      language?: Asset;\n      field?: Asset;\n      fieldValue?: string;\n    },\n    submitting = false\n  ): boolean {\n    const updates: Partial<UpdateContactFormState> = {};\n\n    if (keys.hasOwnProperty('type')) {\n      updates.type = keys.type;\n    }\n\n    if (keys.hasOwnProperty('name')) {\n      updates.name = { value: keys.name };\n    }\n\n    if (keys.hasOwnProperty('channel')) {\n      updates.channel = validate('Channel', keys.channel, [shouldRequireIf(submitting)]);\n    }\n\n    if (keys.hasOwnProperty('language')) {\n      updates.language = validate('Language', keys.language, [shouldRequireIf(submitting)]);\n    }\n\n    if (keys.hasOwnProperty('field')) {\n      updates.field = { value: keys.field };\n    }\n\n    if (keys.hasOwnProperty('fieldValue')) {\n      updates.fieldValue = { value: keys.fieldValue, validationFailures: [] };\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handlePropertyChange(selected: Asset[]): boolean {\n    const selection = selected[0];\n    if (selection.type === AssetType.ContactProperty) {\n      switch (selection.id) {\n        case ContactProperties.Name:\n          return this.handleUpdate({\n            field: selection,\n            type: Types.set_contact_name,\n            name: ''\n          });\n        case ContactProperties.Language:\n          return this.handleUpdate({\n            field: selection,\n            type: Types.set_contact_language\n          });\n        case ContactProperties.Channel:\n          return this.handleUpdate({\n            field: selection,\n            type: Types.set_contact_channel\n          });\n      }\n    }\n    return this.handleUpdate({\n      type: Types.set_contact_field,\n      field: selection,\n      fieldValue: ''\n    });\n  }\n\n  private handleChannelUpdate(selection: Asset[], submitting = false): boolean {\n    return this.handleUpdate({ channel: selection[0] }, submitting);\n  }\n\n  private handleLanguageUpdate(selection: Asset[], submitting = false): boolean {\n    return this.handleUpdate({ language: selection[0] }, submitting);\n  }\n\n  private handleFieldValueUpdate(fieldValue: string): boolean {\n    return this.handleUpdate({ fieldValue, name: '' });\n  }\n\n  private handleNameUpdate(name: string): boolean {\n    return this.handleUpdate({ name, fieldValue: '' });\n  }\n\n  private onUpdated(dispatch: DispatchWithState, getState: GetState): void {\n    const {\n      flowContext: { assetStore }\n    } = getState();\n\n    if (this.state.field.value.type === AssetType.Field) {\n      dispatch(updateAssets(mutators.addAssets('fields', assetStore, [this.state.field.value])));\n    }\n  }\n\n  public handleFieldAdded(field: Asset): void {\n    // update our store with our new group\n    this.props.addAsset('fields', field);\n    this.handlePropertyChange([field]);\n  }\n\n  private handleSave(): void {\n    let valid = this.state.valid;\n\n    // check if language required\n    if (this.state.type === Types.set_contact_language) {\n      valid = this.handleLanguageUpdate([this.state.language.value], true) && valid;\n    }\n\n    // check if channel required\n    if (this.state.type === Types.set_contact_channel) {\n      valid = this.handleChannelUpdate([this.state.channel.value], true) && valid;\n    }\n\n    /*        if (this.state.type === Types.set_contact_field) {\n            const fieldValue = mergePersistantFailures(this.state.fieldValue);\n            if (fieldValue.validationFailures.length > 0) {\n                valid = this.state.\n                this.setState({ fieldValue });\n            }\n        }\n\n        if (this.state.type === Types.set_contact_name) {\n            const name = mergePersistantFailures(this.state.name);\n            if (name.validationFailures.length > 0) {\n                valid = false;\n                this.setState({ name });\n            }\n        }\n*/\n    if (valid) {\n      // do the saving!\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state), this.onUpdated);\n      this.props.onClose(true);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  /**\n   * The value widget varies for the action type\n   */\n  private getValueWidget(): JSX.Element {\n    if (this.state.type === Types.set_contact_channel) {\n      return (\n        <AssetSelector\n          key=\"select_channel\"\n          name=\"Channel\"\n          placeholder=\"Select the channel to use for this contact\"\n          assets={this.props.assetStore.channels}\n          entry={this.state.channel}\n          searchable={true}\n          valueClearable={true}\n          onChange={this.handleChannelUpdate}\n        />\n      );\n    }\n\n    if (this.state.type === Types.set_contact_language) {\n      return (\n        <AssetSelector\n          key=\"select_language\"\n          name=\"Language\"\n          placeholder=\"Select the language to use for this contact\"\n          assets={this.props.assetStore.languages}\n          entry={this.state.language}\n          searchable={true}\n          valueClearable={true}\n          onChange={this.handleLanguageUpdate}\n        />\n      );\n    } else if (this.state.type === Types.set_contact_name) {\n      return (\n        <TextInputElement\n          name=\"Name\"\n          placeholder=\"Enter a new name for the contact\"\n          onFieldFailures={(persistantFailures: ValidationFailure[]) => {\n            const name = { ...this.state.name, persistantFailures };\n            this.setState({\n              name,\n              valid: this.state.valid && !hasErrors(name)\n            });\n          }}\n          onChange={this.handleNameUpdate}\n          entry={this.state.name}\n          autocomplete={true}\n          focus={true}\n        />\n      );\n    } else {\n      return (\n        <TextInputElement\n          name=\"Field Value\"\n          placeholder={`Enter a new value for ${this.state.field.value.name}`}\n          onFieldFailures={(persistantFailures: ValidationFailure[]) => {\n            const fieldValue = { ...this.state.fieldValue, persistantFailures };\n            this.setState({\n              fieldValue,\n              valid: this.state.valid && !hasErrors(fieldValue)\n            });\n          }}\n          onChange={this.handleFieldValueUpdate}\n          entry={this.state.fieldValue}\n          autocomplete={true}\n          focus={true}\n        />\n      );\n    }\n  }\n\n  public handleCreateAssetFromInput(input: string): any {\n    return { label: input, value_type: 'text' };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n\n        <p>Select what to update</p>\n        <AssetSelector\n          name=\"Contact Field\"\n          assets={this.props.assetStore.fields}\n          additionalOptions={getContactProperties(this.context.config.flowType)}\n          entry={this.state.field}\n          searchable={true}\n          sortFunction={sortFieldsAndProperties}\n          onChange={this.handlePropertyChange}\n          // Fields can be created on the fly\n          createPrefix=\"Create Contact Field: \"\n          createAssetFromInput={this.handleCreateAssetFromInput}\n          onAssetCreated={this.handleFieldAdded}\n        />\n\n        <div className={styles.value}>{this.getValueWidget()}</div>\n      </Dialog>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport { AirtimeTransferEntry } from 'components/flow/routers/airtime/AirtimeRouterForm';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport FormElement from 'components/form/FormElement';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport * as React from 'react';\nimport { Asset, Assets } from 'store/flowContext';\nimport { ValidationFailure } from 'store/nodeEditor';\nimport { small } from 'utils/reactselect';\n\nimport styles from './CurrencyElement.module.scss';\n\nexport interface AirtimeTransfer {\n  amount: string;\n  code: string;\n}\n\nexport interface CurrencyElementProps {\n  currencies: Assets;\n  transfer: AirtimeTransferEntry;\n  index: number;\n  exclude: AirtimeTransferEntry[];\n  onChange(index: number, transfer: AirtimeTransferEntry): void;\n  onRemove(index: number): void;\n}\n\nexport default class CurrencyElement extends React.Component<CurrencyElementProps> {\n  constructor(props: CurrencyElementProps) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleCurrencyChanged(selected: Asset[]): void {\n    this.props.onChange(this.props.index, {\n      value: { amount: this.props.transfer.value.amount, code: selected[0].id },\n      validationFailures: this.props.transfer.validationFailures\n    });\n  }\n\n  private handleAmountChanged(value: string): void {\n    const validationFailures: ValidationFailure[] = [];\n    if (isNaN(Number(value))) {\n      validationFailures.push({\n        message: 'Invalid amount, please enter a number'\n      });\n    }\n    this.props.onChange(this.props.index, {\n      value: { amount: value, code: this.props.transfer.value.code },\n      validationFailures\n    });\n  }\n\n  public render(): JSX.Element {\n    let placeholder = 'Transfer Amount';\n\n    let amount = '';\n    let currency: any = null;\n\n    if (this.props.transfer.value) {\n      const transfer = this.props.transfer.value;\n      if (transfer.code) {\n        placeholder = `${transfer.code} ${placeholder}`;\n        currency = { id: transfer.code };\n      }\n\n      amount = '' + transfer.amount;\n    }\n\n    const amountInput =\n      this.props.index > -1 ? (\n        <div className={styles.amount}>\n          <TextInputElement\n            placeholder={placeholder}\n            name=\"value\"\n            onChange={this.handleAmountChanged}\n            entry={{ value: amount }}\n          />\n        </div>\n      ) : null;\n\n    const removeIco =\n      this.props.index > -1 ? (\n        <div\n          className={styles.remove}\n          onClick={() => {\n            this.props.onRemove(this.props.index);\n          }}\n        >\n          <span className=\"fe-x\" />\n        </div>\n      ) : null;\n\n    const shouldExclude = (asset: Asset): boolean => {\n      return (\n        this.props.exclude.filter(\n          (airtime: AirtimeTransferEntry) => airtime.value.code === asset.id\n        ).length > 1\n      );\n    };\n\n    return (\n      <FormElement name=\"Currency\" entry={this.props.transfer} __className={styles.form_element}>\n        <div className={styles.transfer}>\n          <div className={styles.currency}>\n            <AssetSelector\n              styles={small as any}\n              name=\"Currency\"\n              shouldExclude={shouldExclude}\n              assets={this.props.currencies}\n              entry={{ value: currency }}\n              searchable={true}\n              onChange={this.handleCurrencyChanged}\n            />\n          </div>\n          {amountInput} {removeIco}\n        </div>\n      </FormElement>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport * as React from 'react';\nimport { FormState, StringEntry } from 'store/nodeEditor';\n\nimport styles from './OptionalTextInput.module.scss';\n\nexport interface OptionalTextInputProps {\n  name: string;\n  value: StringEntry;\n  toggleText: string;\n  onChange(value: string): void;\n  helpText?: string;\n  maxLength?: number;\n}\n\nexport interface OptionalTextInputState extends FormState {\n  editing: boolean;\n}\n\n/**\n * OptionalText is a hideable text box\n */\nexport default class OptionalTextInput extends React.Component<\n  OptionalTextInputProps,\n  OptionalTextInputState\n> {\n  constructor(props: OptionalTextInputProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n\n    this.state = {\n      editing: this.props.value.value.trim().length > 0,\n      valid: true\n    };\n  }\n\n  private handleTextChanged(text: string): void {\n    this.props.onChange(text);\n  }\n\n  private handleEditingChanged(): void {\n    this.setState({ editing: true });\n  }\n\n  public render(): JSX.Element {\n    let ele: JSX.Element;\n\n    if (this.state.editing) {\n      ele = (\n        <TextInputElement\n          data-spec=\"optional-field\"\n          name={this.props.name}\n          showLabel={true}\n          entry={this.props.value}\n          onChange={this.handleTextChanged}\n          helpText={this.props.helpText}\n          maxLength={this.props.maxLength}\n        />\n      );\n    } else {\n      ele = (\n        <span\n          data-spec=\"toggle-link\"\n          className={styles.toggle_link}\n          onClick={this.handleEditingChanged}\n        >\n          {this.props.toggleText}\n        </span>\n      );\n    }\n\n    return <div className={styles.optional_text_input}>{ele}</div>;\n  }\n}\n","import * as React from 'react';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport OptionalTextInput from 'components/form/optionaltext/OptionalTextInput';\nimport { StringEntry } from 'store/nodeEditor';\nimport { snakify } from 'utils';\n\nexport const createResultNameInput = (\n  value: StringEntry,\n  onChange: (value: string) => void\n): JSX.Element => {\n  const snaked = !hasErrors(value) && value.value ? '.' + snakify(value.value) : '';\n\n  return (\n    <OptionalTextInput\n      name=\"Result Name\"\n      maxLength={64}\n      value={value}\n      onChange={onChange}\n      toggleText=\"Save as..\"\n      helpText={`By naming the result, you can reference it later using @results${snaked}`}\n    />\n  );\n};\n","import * as React from 'react';\nimport { ValidationFailure } from 'store/nodeEditor';\n\nimport styles from './ValidationFailures.module.scss';\n\nexport interface Validation {\n  validationFailures: ValidationFailure[];\n}\n\nconst ValidationFailures: React.SFC<Validation> = (validation): JSX.Element => {\n  const errors = validation.validationFailures.map((failure: ValidationFailure, idx: number) => {\n    return (\n      <div key={'validation_' + idx} className={styles.error}>\n        {failure.message}\n      </div>\n    );\n  });\n  return <div className={styles.errors}>{errors}</div>;\n};\n\nexport default ValidationFailures;\n","import {\n  AirtimeRouterFormState,\n  AirtimeTransferEntry\n} from 'components/flow/routers/airtime/AirtimeRouterForm';\nimport { createWebhookBasedNode } from 'components/flow/routers/helpers';\nimport { Types } from 'config/interfaces';\nimport { TransferAirtime } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\n\nexport const nodeToState = (settings: NodeEditorSettings): AirtimeRouterFormState => {\n  const originalAction = getOriginalAction(settings);\n  let resultName = { value: 'Result' };\n  let valid = false;\n\n  const amounts: AirtimeTransferEntry[] = [];\n  if (originalAction && originalAction.type === Types.transfer_airtime) {\n    Object.keys(originalAction.amounts).forEach((key: string) => {\n      amounts.push({\n        value: { code: key, amount: '' + originalAction.amounts[key] }\n      });\n    });\n    resultName = { value: originalAction.result_name };\n    valid = true;\n  }\n\n  return {\n    valid,\n    amounts,\n    resultName\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: AirtimeRouterFormState\n): RenderNode => {\n  let uuid = createUUID();\n  const originalAction = getOriginalAction(settings);\n  if (originalAction) {\n    uuid = originalAction.uuid;\n  }\n\n  const amounts = {};\n  state.amounts.forEach((entry: AirtimeTransferEntry) => {\n    if (entry.value.amount.trim().length > 0) {\n      (amounts as any)[entry.value.code] = Number(entry.value.amount);\n    }\n  });\n\n  const newAction: TransferAirtime = {\n    uuid,\n    type: Types.transfer_airtime,\n    amounts,\n    result_name: state.resultName.value\n  };\n\n  return createWebhookBasedNode(newAction, settings.originalNode);\n};\n\nexport const getOriginalAction = (settings: NodeEditorSettings): TransferAirtime => {\n  const action =\n    settings.originalAction ||\n    (settings.originalNode.node.actions.length > 0 && settings.originalNode.node.actions[0]);\n\n  if (action.type === Types.transfer_airtime) {\n    return action as TransferAirtime;\n  }\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport CurrencyElement, {\n  AirtimeTransfer\n} from 'components/flow/routers/airtime/currency/CurrencyElement';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport ValidationFailures from 'components/form/ValidationFailures';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport mutate from 'immutability-helper';\nimport * as React from 'react';\nimport { FormEntry, FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, Required, StartIsNonNumeric, validate } from 'store/validators';\n\nimport styles from './AirtimeRouterForm.module.scss';\nimport { nodeToState, stateToNode } from './helpers';\n\nexport interface AirtimeTransferEntry extends FormEntry {\n  value: AirtimeTransfer;\n}\n\nexport interface AirtimeRouterFormState extends FormState {\n  amounts: AirtimeTransferEntry[];\n  resultName: StringEntry;\n}\n\nexport default class AirtimeRouterForm extends React.PureComponent<\n  RouterFormProps,\n  AirtimeRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleSave(): void {\n    const missing: number[] = [];\n\n    this.state.amounts.forEach((entry: AirtimeTransferEntry, index: number) => {\n      if (entry.value.amount.trim().length === 0) {\n        missing.push(index);\n      }\n    });\n\n    let valid: boolean = !!!this.state.amounts.find(\n      (entry: AirtimeTransferEntry) => (entry.validationFailures || []).length > 0\n    );\n\n    // make sure at least one has a value\n    if (valid) {\n      valid =\n        this.state.amounts.find(\n          (entry: AirtimeTransferEntry) => entry.value.amount.trim().length > 0\n        ) !== undefined;\n\n      if (!valid) {\n        this.setState({\n          valid: false,\n          validationFailures: [{ message: 'At least one amount to transfer is required' }]\n        });\n      }\n    }\n\n    if (valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private handleUpdateResultName(result: string): void {\n    const resultName = validate('Result Name', result, [Required, Alphanumeric, StartIsNonNumeric]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  public getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  public handleRemoved(index: number): void {\n    // we found a match, merge us in\n    const updated: any = mutate(this.state.amounts, {\n      $splice: [[index, 1]]\n    });\n    this.setState({ amounts: updated });\n  }\n\n  public handleTransferChanged(idx: number, transfer: AirtimeTransferEntry): void {\n    let updated: any = this.state.amounts;\n\n    if (idx > -1) {\n      // we found a match, merge us in\n      updated = mutate(this.state.amounts, {\n        $merge: { [idx]: transfer }\n      });\n    } else {\n      // otherwise push us on\n      updated = mutate(this.state.amounts, {\n        $push: [transfer]\n      });\n    }\n\n    this.setState({ amounts: updated, validationFailures: [] });\n  }\n\n  private renderAmount(index: number, entry: AirtimeTransferEntry): JSX.Element {\n    return (\n      <CurrencyElement\n        key={'currency_' + index}\n        exclude={this.state.amounts}\n        currencies={this.props.assetStore.currencies}\n        transfer={entry}\n        index={index}\n        onChange={this.handleTransferChanged}\n        onRemove={this.handleRemoved}\n      />\n    );\n  }\n\n  private renderAmounts(): JSX.Element {\n    const amounts = this.state.amounts.map((entry: AirtimeTransferEntry, index: number) => {\n      return this.renderAmount(index, entry);\n    });\n\n    return (\n      <div>\n        {amounts}\n        {this.renderAmount(-1, { value: { code: null, amount: '' } })}\n      </div>\n    );\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    const errors = this.state.validationFailures ? (\n      <ValidationFailures validationFailures={this.state.validationFailures} />\n    ) : null;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        {this.renderAmounts()}\n        {errors}\n        <div className={styles.result_name}>\n          {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        </div>\n      </Dialog>\n    );\n  }\n}\n","import { HIDDEN, Operator, OperatorMap, Operators, TEXT_TYPES } from 'config/interfaces';\n\nexport const operatorConfigList: Operator[] = [\n  {\n    type: Operators.has_any_word,\n    verboseName: 'has any of the words',\n    operands: 1,\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_all_words,\n    verboseName: 'has all of the words',\n    operands: 1,\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_phrase,\n    verboseName: 'has the phrase',\n    operands: 1,\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_only_phrase,\n    verboseName: 'has only the phrase',\n    operands: 1,\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_beginning,\n    verboseName: 'starts with',\n    operands: 1\n  },\n  {\n    type: Operators.has_text,\n    verboseName: 'has some text',\n    operands: 0,\n    categoryName: 'Has Text',\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_number,\n    verboseName: 'has a number',\n    operands: 0,\n    categoryName: 'Has Number'\n  },\n  {\n    type: Operators.has_number_between,\n    verboseName: 'has a number between',\n    operands: 2\n  },\n  {\n    type: Operators.has_number_lt,\n    verboseName: 'has a number below',\n    operands: 1\n  },\n  {\n    type: Operators.has_number_lte,\n    verboseName: 'has a number at or below',\n    operands: 1\n  },\n  {\n    type: Operators.has_number_eq,\n    verboseName: 'has a number equal to',\n    operands: 1\n  },\n  {\n    type: Operators.has_number_gte,\n    verboseName: 'has a number at or above',\n    operands: 1\n  },\n  {\n    type: Operators.has_number_gt,\n    verboseName: 'has a number above',\n    operands: 1\n  },\n  {\n    type: Operators.has_date,\n    verboseName: 'has a date',\n    operands: 0,\n    categoryName: 'Has Date',\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_date_lt,\n    verboseName: 'has a date before',\n    operands: 1,\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_date_eq,\n    verboseName: 'has a date equal to',\n    operands: 1,\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_date_gt,\n    verboseName: 'has a date after',\n    operands: 1,\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_time,\n    verboseName: 'has a time',\n    operands: 0,\n    categoryName: 'Has Time',\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_group,\n    verboseName: 'is in the group',\n    operands: 1,\n    visibility: HIDDEN\n  },\n  {\n    type: Operators.has_phone,\n    verboseName: 'has a phone number',\n    operands: 0,\n    categoryName: 'Has Phone'\n  },\n  {\n    type: Operators.has_email,\n    verboseName: 'has an email',\n    operands: 0,\n    categoryName: 'Has Email',\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_error,\n    verboseName: 'has an error',\n    operands: 0,\n    categoryName: 'Has Error',\n    visibility: HIDDEN\n  },\n  {\n    type: Operators.has_value,\n    verboseName: 'is not empty',\n    operands: 0,\n    categoryName: 'Not Empty'\n  },\n  {\n    type: Operators.has_pattern,\n    verboseName: 'matches regex',\n    operands: 1\n  }\n];\n\nexport const operatorConfigMap: OperatorMap = operatorConfigList.reduce(\n  (map: OperatorMap, operatorConfig: Operator) => {\n    map[operatorConfig.type] = operatorConfig;\n    return map;\n  },\n  {}\n);\n\n/**\n * Shortcut for constant lookup of operator config in operator configs map\n * @param {string} type - The type of the operator config to return, e.g. 'send_msg'\n * @returns {Object} - The operator config found at operatorConfigs[type] or -1\n */\nexport const getOperatorConfig = (type: Operators): Operator => operatorConfigMap[type];\n","import { isRelativeDate } from 'components/flow/routers/helpers';\nimport { Operator, Operators } from 'config/interfaces';\nimport { getOperatorConfig } from 'config/operatorConfigs';\nimport { LessThan, MoreThan, Numeric, NumOrExp, Regex, Required, validate } from 'store/validators';\nimport { titleCase } from 'utils';\n\nimport { CaseElementProps, CaseElementState } from './CaseElement';\n\nexport const initializeForm = (props: CaseElementProps): CaseElementState => {\n  return {\n    errors: [],\n    operatorConfig: getOperatorConfig(props.kase.type),\n    argument: {\n      value:\n        props.kase.arguments && props.kase.arguments.length === 1 ? props.kase.arguments[0] : ''\n    },\n    min: {\n      value:\n        props.kase.arguments && props.kase.arguments.length === 2 ? props.kase.arguments[0] : ''\n    },\n    max: {\n      value:\n        props.kase.arguments && props.kase.arguments.length === 2 ? props.kase.arguments[1] : ''\n    },\n    categoryName: { value: props.categoryName || '' },\n    categoryNameEdited: !!props.categoryName,\n    valid: true\n  };\n};\n/**\n * Determines prefix for case's exit name\n */\nexport const prefix = (operatorType: string): string => {\n  let pre = '';\n\n  if (operatorType.indexOf('_lt') > -1) {\n    if (operatorType.indexOf('date') > -1) {\n      pre = 'Before ';\n    } else {\n      if (operatorType.indexOf('lte') > -1) {\n        pre = '<= ';\n      } else {\n        pre = '< ';\n      }\n    }\n  } else if (operatorType.indexOf('_gt') > -1) {\n    if (operatorType.indexOf('date') > -1) {\n      pre = 'After ';\n    } else {\n      if (operatorType.indexOf('gte') > -1) {\n        pre = '>= ';\n      } else {\n        pre = '>';\n      }\n    }\n  }\n\n  return pre;\n};\n\n/**\n * Returns min, max values for Operators.has_number_between case\n */\nexport const getMinMax = (args: string[] = []): { min: string; max: string } => {\n  let min = '';\n  let max = '';\n  if (args.length) {\n    if (strContainsNum(args[0])) {\n      min = args[0];\n    }\n    if (args[1]) {\n      if (strContainsNum(args[1])) {\n        max = args[1];\n      }\n    }\n  }\n  return {\n    min,\n    max\n  };\n};\n\nexport const isFloat = (val: string): boolean => /^[+-]?\\d?(\\.\\d*)?$/.test(val.trim());\n\nexport const isInt = (val: string): boolean => /^[+-]?\\d+$/.test(val.trim());\n\nexport const strContainsNum = (str: string): boolean => {\n  const trimmed = str.trim();\n  if (isFloat(trimmed)) {\n    return true;\n  } else if (isInt(trimmed)) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const parseNum = (str: string): number => {\n  const trimmed = (str || '').trim();\n  if (isFloat(trimmed)) {\n    return parseFloat(str);\n  } else if (isInt(trimmed)) {\n    return parseInt(trimmed, 10);\n  }\n};\n\nexport const validateCase = (keys: {\n  operatorConfig: Operator;\n  argument?: string;\n  min?: string;\n  max?: string;\n  exitName?: string;\n  exitEdited?: boolean;\n}): Partial<CaseElementState> => {\n  // when the exit is set, our arguments become required\n  const validators = keys.exitEdited && keys.exitName ? [Required] : [];\n\n  const updates: Partial<CaseElementState> = {\n    operatorConfig: keys.operatorConfig\n  };\n\n  if (keys.operatorConfig.operands > 0) {\n    switch (keys.operatorConfig.type) {\n      case Operators.has_number_eq:\n      case Operators.has_number_gt:\n      case Operators.has_number_gte:\n      case Operators.has_number_lt:\n      case Operators.has_number_lte:\n        validators.push(NumOrExp);\n        break;\n      case Operators.has_date_eq:\n      case Operators.has_date_lt:\n      case Operators.has_date_gt:\n        validators.push(Numeric);\n        break;\n      case Operators.has_pattern:\n        validators.push(Regex);\n        break;\n    }\n\n    if (keys.operatorConfig.type === Operators.has_number_between) {\n      updates.min = validate(\n        'Minimum value',\n        keys.min || '',\n        validators.concat([Numeric, LessThan(parseFloat(keys.max), 'the maximum')])\n      );\n\n      updates.max = validate(\n        'Maximum value',\n        keys.max || '',\n        validators.concat([Numeric, MoreThan(parseFloat(keys.min), 'the minimum')])\n      );\n\n      updates.argument = { value: '', validationFailures: [] };\n    } else {\n      updates.min = { value: '', validationFailures: [] };\n      updates.max = { value: '', validationFailures: [] };\n      updates.argument = validate('Value', keys.argument || '', validators);\n    }\n  } else {\n    // no operand clear them all\n    updates.min = { value: '', validationFailures: [] };\n    updates.max = { value: '', validationFailures: [] };\n    updates.argument = { value: '', validationFailures: [] };\n  }\n\n  updates.categoryNameEdited = !!keys.exitEdited;\n  updates.categoryName = validate(\n    'Category',\n    updates.categoryNameEdited ? keys.exitName : getCategoryName(updates),\n    updates.argument.value || (updates.min.value && updates.max.value) ? [Required] : []\n  );\n\n  updates.valid =\n    updates.min.validationFailures.length === 0 &&\n    updates.max.validationFailures.length === 0 &&\n    updates.argument.validationFailures.length === 0 &&\n    updates.categoryName.validationFailures.length === 0;\n\n  return updates;\n};\n\nexport const getCategoryName = (state: Partial<CaseElementState>): string => {\n  if (state.categoryNameEdited) {\n    return state.categoryName.value;\n  }\n\n  if (state.operatorConfig.operands === 0) {\n    return state.operatorConfig.categoryName;\n  }\n\n  if (\n    state.operatorConfig.type === Operators.has_number_between &&\n    state.min.value &&\n    state.max.value\n  ) {\n    return `${state.min.value} - ${state.max.value}`;\n  }\n\n  if (isRelativeDate(state.operatorConfig.type)) {\n    const count = parseInt(state.argument.value, 10);\n    if (!isNaN(count)) {\n      const today = state.operatorConfig.type === Operators.has_date_eq ? 'Today' : 'today';\n      const op = count < 0 ? ' - ' : ' + ';\n      const days = Math.abs(count) === 1 ? ' day' : ' days';\n      return prefix(state.operatorConfig.type) + today + op + Math.abs(count) + days;\n    }\n  }\n\n  if (state.argument && state.argument.value) {\n    const pre = prefix(state.operatorConfig.type);\n    const words = state.argument.value.match(/\\w+/g);\n\n    if (words && words.length > 0) {\n      const [firstWord] = words;\n      return pre + titleCase(firstWord);\n    }\n\n    return pre + titleCase(state.argument.value);\n  }\n  return '';\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { isRelativeDate } from 'components/flow/routers/helpers';\nimport FormElement from 'components/form/FormElement';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { filterOperators } from 'config/helpers';\nimport { Operator, Operators } from 'config/interfaces';\nimport { operatorConfigList } from 'config/operatorConfigs';\nimport { Case } from 'flowTypes';\nimport * as React from 'react';\nimport Select from 'react-select';\nimport { FormState, StringEntry, ValidationFailure } from 'store/nodeEditor';\nimport { getSelectClass, hasErrorType } from 'utils';\nimport { small } from 'utils/reactselect';\n\nimport styles from './CaseElement.module.scss';\nimport { initializeForm, validateCase } from './helpers';\n\nexport interface CaseElementProps {\n  kase: Case;\n  categoryName: string;\n  name?: string; // satisfy form widget props\n  onRemove?(uuid: string): void;\n  onChange?(c: CaseProps): void;\n}\n\nexport interface CaseElementState extends FormState {\n  errors: string[];\n  operatorConfig: Operator;\n  categoryName: StringEntry;\n  categoryNameEdited: boolean;\n\n  // for string based args\n  argument: StringEntry;\n\n  // for numeric operators\n  min: StringEntry;\n  max: StringEntry;\n}\n\nexport default class CaseElement extends React.Component<CaseElementProps, CaseElementState> {\n  private operators: Operator[];\n\n  constructor(props: CaseElementProps) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/^handle/, /^get/]\n    });\n\n    this.state = initializeForm(props);\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  private getOperators(): Operator[] {\n    if (this.operators === undefined) {\n      this.operators = filterOperators(operatorConfigList, this.context.config.flowType);\n    }\n\n    return this.operators;\n  }\n\n  private getArgumentArray(): string[] {\n    if (this.state.operatorConfig.operands === 0) {\n      return [];\n    }\n\n    return this.state.operatorConfig.type === Operators.has_number_between\n      ? [this.state.min.value, this.state.max.value]\n      : [this.state.argument.value];\n  }\n\n  private handleOperatorChanged(operatorConfig: Operator): void {\n    const updates = validateCase({\n      operatorConfig,\n      argument: this.state.argument.value,\n      min: this.state.min.value,\n      max: this.state.max.value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleArgumentChanged(value: string): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      argument: value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleMinChanged(value: string): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      min: value,\n      max: this.state.max.value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleMaxChanged(value: string): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      min: this.state.min.value,\n      max: value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleExitChanged(value: string): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      argument: this.state.argument.value,\n      min: this.state.min.value,\n      max: this.state.max.value,\n      exitName: value,\n      exitEdited: true\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleRemoveClicked(): void {\n    this.props.onRemove(this.props.kase.uuid);\n  }\n\n  private getCaseProps(): CaseProps {\n    return {\n      uuid: this.props.kase.uuid,\n      categoryName: this.state.categoryName.value,\n      kase: {\n        arguments: this.getArgumentArray(),\n        type: this.state.operatorConfig.type,\n        uuid: this.props.kase.uuid,\n\n        // if the exit name changed, we'll need to recompute our exit\n        category_uuid: this.state.categoryNameEdited ? null : this.props.kase.category_uuid\n      },\n      valid: this.state.valid\n    };\n  }\n\n  private handleChange(): void {\n    // If the case doesn't have arguments & an exit name, remove it\n    if (!this.state.categoryName.value) {\n      // see if we are clearing out a between\n      if (this.state.operatorConfig.type === Operators.has_number_between) {\n        if (!this.state.min.value && !this.state.max.value) {\n          // this.handleRemoveClicked();\n          // return;\n        }\n      }\n      // see if we are clearing out a single operand\n      else {\n        if (!this.state.argument.value) {\n          // this.handleRemoveClicked();\n          // return;\n        }\n      }\n    }\n\n    this.props.onChange(this.getCaseProps());\n  }\n\n  private renderArguments(): JSX.Element {\n    if (this.state.operatorConfig.operands > 0) {\n      // First pass at displaying, handling Operators.has_number_between inputs\n      if (this.state.operatorConfig.operands > 1) {\n        return (\n          <>\n            <TextInputElement\n              name=\"arguments\"\n              onChange={this.handleMinChanged}\n              entry={this.state.min}\n            />\n            <span className={styles.divider}>and</span>\n            <TextInputElement\n              name=\"arguments\"\n              onChange={this.handleMaxChanged}\n              entry={this.state.max}\n            />\n          </>\n        );\n      } else if (isRelativeDate(this.state.operatorConfig.type)) {\n        return (\n          <>\n            <span className={styles.divider}>today + </span>\n            <TextInputElement\n              __className={styles.relative_date}\n              name=\"arguments\"\n              onChange={this.handleArgumentChanged}\n              entry={this.state.argument}\n              autocomplete={false}\n            />\n            <span className={styles.divider}>days</span>\n          </>\n        );\n      } else {\n        return (\n          <TextInputElement\n            name=\"arguments\"\n            onChange={this.handleArgumentChanged}\n            entry={this.state.argument}\n            onFieldFailures={(persistantFailures: ValidationFailure[]) => {\n              const argument = { ...this.state.argument, persistantFailures };\n              this.setState({\n                argument,\n                valid: this.state.valid && !hasErrors(argument)\n              });\n            }}\n            autocomplete={true}\n          />\n        );\n      }\n    }\n\n    return null;\n  }\n\n  public render(): JSX.Element {\n    return (\n      <FormElement\n        data-spec=\"case-form\"\n        name={this.props.name}\n        __className={styles.group}\n        kaseError={this.state.errors.length > 0}\n      >\n        <div className={`${styles.kase}`} data-draggable={true}>\n          <span className={`fe-chevrons-expand ${styles.dnd_icon}`} data-draggable={true} />\n          <div className={styles.choice + ' select-medium'}>\n            <Select\n              className={getSelectClass(0)}\n              styles={small as any}\n              data-spec=\"operator-list\"\n              isClearable={false}\n              menuPlacement=\"auto\"\n              options={this.getOperators()}\n              getOptionLabel={(option: Operator) => option.verboseName}\n              getOptionValue={(option: Operator) => option.type}\n              isSearchable={false}\n              name=\"operator\"\n              onChange={this.handleOperatorChanged as any}\n              value={this.state.operatorConfig}\n            />\n          </div>\n          <div\n            className={\n              this.state.operatorConfig.type === Operators.has_number_between\n                ? styles.multi_operand\n                : styles.single_operand\n            }\n          >\n            {this.renderArguments()}\n          </div>\n          <div className={styles.categorize_as} data-draggable={true}>\n            categorize as\n          </div>\n          <div className={styles.category}>\n            <TextInputElement\n              name=\"exitName\"\n              onChange={this.handleExitChanged}\n              entry={this.state.categoryName}\n              maxLength={36}\n              showInvalid={hasErrorType(this.state.errors, [/category/])}\n            />\n          </div>\n          <span\n            data-testid={'remove-case-' + this.props.kase.uuid}\n            className={`fe-x ${styles.remove_icon}`}\n            onClick={this.handleRemoveClicked}\n          />\n        </div>\n      </FormElement>\n    );\n  }\n}\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { Operators } from 'config/interfaces';\nimport { createUUID } from 'utils';\n\nexport const createEmptyCase = (): CaseProps => {\n  const uuid = createUUID();\n  return {\n    uuid,\n    kase: {\n      uuid,\n      type: Operators.has_any_word,\n      arguments: [''],\n      category_uuid: null\n    },\n    categoryName: '',\n    valid: true\n  };\n};\n","import arrayMove from 'array-move';\nimport { react as bindCallbacks } from 'auto-bind';\nimport CaseElement from 'components/flow/routers/case/CaseElement';\nimport { createEmptyCase } from 'components/flow/routers/caselist/helpers';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Case } from 'flowTypes';\nimport * as React from 'react';\nimport { SortableContainer, SortableElement, SortEnd } from 'react-sortable-hoc';\nimport { FormState, mergeForm } from 'store/nodeEditor';\n\nimport styles from './CaseList.module.scss';\n\nexport enum DragCursor {\n  move = 'move',\n  pointer = 'pointer'\n}\n\nexport interface CaseProps {\n  uuid: string;\n  kase: Case;\n  categoryName: string;\n  valid: boolean;\n}\n\nexport interface CaseListProps {\n  cases: CaseProps[];\n  onCasesUpdated(cases: CaseProps[]): void;\n}\n\nexport interface CaseListState extends FormState {\n  currentCases: CaseProps[];\n}\n\n/**\n * CaseList is a component made up of case elements that lets\n * the user configure rules and drag and drop to set their order.\n */\nexport default class CaseList extends React.Component<CaseListProps, CaseListState> {\n  private sortableItem = SortableElement(({ value: caseProps }: any) => (\n    <div className={styles.kase}>\n      <CaseElement\n        key={caseProps.uuid}\n        {...caseProps}\n        onRemove={this.handleRemoveCase}\n        onChange={this.handleUpdateCase}\n      />\n    </div>\n  ));\n\n  private sortableList = SortableContainer(({ items }: any) => {\n    return (\n      <div className={styles.case_list}>\n        {items.map((value: any, index: any) => (\n          <this.sortableItem\n            key={`item-${index}`}\n            index={index}\n            value={value}\n            disabled={index === this.state.currentCases.length - 1}\n            shouldCancelStart={(e: any) => {\n              console.log(e);\n              return true;\n            }}\n          />\n        ))}\n      </div>\n    );\n  });\n\n  constructor(props: CaseListProps) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n\n    const caseProps = this.props.cases;\n\n    if (!this.hasEmptyCase(caseProps)) {\n      caseProps.push(createEmptyCase());\n    }\n\n    // initialize our cases\n    this.state = {\n      currentCases: caseProps,\n      valid: true\n    };\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  private handleUpdate(keys: { caseProps?: CaseProps; removeCase?: any }): boolean {\n    const updates: Partial<CaseListState> = {};\n\n    let ensureEmptyCase = false;\n\n    if (keys.hasOwnProperty('caseProps')) {\n      updates.currentCases = [keys.caseProps];\n      ensureEmptyCase = true;\n      if (!keys.caseProps.valid) {\n        updates.valid = false;\n      }\n    }\n\n    let toRemove: any[] = [];\n    if (keys.hasOwnProperty('removeCase')) {\n      toRemove = [{ currentCases: [keys.removeCase] }];\n      ensureEmptyCase = true;\n    }\n\n    const updated = mergeForm(this.state, updates, toRemove) as CaseListState;\n\n    // notify our listener\n    this.props.onCasesUpdated(updated.currentCases);\n\n    // update our form\n    this.setState(updated, () => {\n      // if we no longer have an empty case, add one\n      if (ensureEmptyCase) {\n        if (!this.hasEmptyCase(this.state.currentCases)) {\n          this.handleUpdate({ caseProps: createEmptyCase() });\n        }\n      }\n    });\n    return updated.valid;\n  }\n\n  private hasEmptyCase(cases: CaseProps[]): boolean {\n    return cases.find((caseProps: CaseProps) => caseProps.categoryName.trim().length === 0) != null;\n  }\n\n  private handleRemoveCase(uuid: string): boolean {\n    return this.handleUpdate({\n      removeCase: { uuid }\n    });\n  }\n\n  private handleUpdateCase(caseProps: CaseProps): boolean {\n    return this.handleUpdate({ caseProps });\n  }\n\n  private handleSortEnd({ oldIndex, newIndex }: SortEnd): void {\n    this.setState(\n      ({ currentCases }) => ({\n        currentCases: arrayMove(\n          currentCases,\n          oldIndex,\n          newIndex === this.state.currentCases.length - 1 ? newIndex - 1 : newIndex\n        )\n      }),\n      () => {\n        this.props.onCasesUpdated(this.state.currentCases);\n      }\n    );\n  }\n\n  public render(): JSX.Element {\n    return (\n      <>\n        <this.sortableList\n          items={this.state.currentCases}\n          onSortEnd={this.handleSortEnd}\n          shouldCancelStart={(e: React.MouseEvent<HTMLDivElement>) => {\n            if (!(e.target instanceof HTMLElement)) {\n              return true;\n            }\n            return !e.target.dataset.draggable;\n          }}\n        />\n      </>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { nodeToState, stateToNode } from 'components/flow/routers/expression/helpers';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, Required, StartIsNonNumeric, validate } from 'store/validators';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport enum InputToFocus {\n  args = 'args',\n  min = 'min',\n  max = 'max',\n  exit = 'exit'\n}\n\nexport interface ExpressionRouterFormState extends FormState {\n  cases: CaseProps[];\n  resultName: StringEntry;\n  operand: StringEntry;\n}\n\nexport const leadInSpecId = 'lead-in';\n\nexport default class ExpressionRouterForm extends React.Component<\n  RouterFormProps,\n  ExpressionRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate('Result Name', value, [Alphanumeric, StartIsNonNumeric]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleOperandUpdated(value: string): void {\n    this.setState({ operand: validate('Operand', value, [Required]) });\n  }\n\n  private handleCasesUpdated(cases: CaseProps[]): void {\n    this.setState({ cases });\n  }\n\n  private handleSave(): void {\n    if (this.state.valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p>If the expression...</p>\n        <TextInputElement\n          name=\"Operand\"\n          showLabel={false}\n          autocomplete={true}\n          onChange={this.handleOperandUpdated}\n          entry={this.state.operand}\n        />\n        <CaseList\n          data-spec=\"cases\"\n          cases={this.state.cases}\n          onCasesUpdated={this.handleCasesUpdated}\n        />\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport {\n  createCaseProps,\n  createRenderNode,\n  hasCases,\n  resolveRoutes\n} from 'components/flow/routers/helpers';\nimport { Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { HintTypes, Router, RouterTypes, SwitchRouter, WaitTypes } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nimport { DigitsRouterFormState } from './DigitsRouterForm';\n\nexport const nodeToState = (settings: NodeEditorSettings): DigitsRouterFormState => {\n  let initialCases: CaseProps[] = [];\n\n  // TODO: work out an incremental result name\n  let resultName: StringEntry = { value: '' };\n\n  if (getType(settings.originalNode) === Types.wait_for_digits) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n    if (router) {\n      if (hasCases(settings.originalNode.node)) {\n        initialCases = createCaseProps(router.cases, settings.originalNode);\n      }\n\n      resultName = { value: router.result_name || '' };\n    }\n  }\n\n  return {\n    cases: initialCases,\n    resultName,\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: DigitsRouterFormState\n): RenderNode => {\n  const { cases, exits, categories, defaultCategory: defaultExit, caseConfig } = resolveRoutes(\n    state.cases,\n    false,\n    settings.originalNode.node\n  );\n\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    default_category_uuid: defaultExit,\n    categories,\n    cases,\n    operand: '@input',\n    wait: { type: WaitTypes.msg, hint: { type: HintTypes.digits } },\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.wait_for_response,\n    [],\n\n    { cases: caseConfig }\n  );\n\n  return newRenderNode;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\n\nimport styles from './DigitsRouterForm.module.scss';\nimport { nodeToState, stateToNode } from './helpers';\n\nexport interface DigitsRouterFormState extends FormState {\n  cases: CaseProps[];\n  resultName: StringEntry;\n}\n\nexport default class DigitsRouterForm extends React.Component<\n  RouterFormProps,\n  DigitsRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate('Result Name', value, [Alphanumeric, StartIsNonNumeric]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleCasesUpdated(cases: CaseProps[]): void {\n    this.setState({ cases });\n  }\n\n  private handleSave(): void {\n    if (this.state.valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p className={styles.lead_in}>If the keypad entry before the # symbol..</p>\n        <CaseList\n          data-spec=\"cases\"\n          cases={this.state.cases}\n          onCasesUpdated={this.handleCasesUpdated}\n        />\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","export const DEFAULT_OPERAND = '@input.text';\nexport const GROUPS_OPERAND = '@contact.groups';\nexport const WEBHOOK_OPERAND = '@run.webhook';\nexport const SUBFLOW_OPERAND = '@child.run.status';\n\nexport const DEFAULT_BODY: string = `@(json(object(\n  \"contact\", object(\n    \"uuid\", contact.uuid, \n    \"name\", contact.name, \n    \"urn\", contact.urn\n  ),\n  \"flow\", object(\n    \"uuid\", run.flow.uuid, \n    \"name\", run.flow.name\n  ),\n  \"results\", results\n)))`;\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { ExpressionRouterFormState } from 'components/flow/routers/expression/ExpressionRouterForm';\nimport {\n  createCaseProps,\n  createRenderNode,\n  hasCases,\n  resolveRoutes\n} from 'components/flow/routers/helpers';\nimport { DEFAULT_OPERAND } from 'components/nodeeditor/constants';\nimport { Types } from 'config/interfaces';\nimport { Router, RouterTypes, SwitchRouter } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nexport const nodeToState = (settings: NodeEditorSettings): ExpressionRouterFormState => {\n  let initialCases: CaseProps[] = [];\n\n  // TODO: work out an incremental result name\n  let resultName: StringEntry = { value: '' };\n\n  let operand = DEFAULT_OPERAND;\n\n  if (settings.originalNode && settings.originalNode.ui.type === Types.split_by_expression) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n    if (router) {\n      if (hasCases(settings.originalNode.node)) {\n        initialCases = createCaseProps(router.cases, settings.originalNode);\n      }\n\n      resultName = { value: router.result_name || '' };\n    }\n\n    operand = router.operand;\n  }\n\n  return {\n    cases: initialCases,\n    resultName,\n    operand: { value: operand },\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: ExpressionRouterFormState\n): RenderNode => {\n  const { cases, exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\n    state.cases,\n    false,\n    settings.originalNode.node\n  );\n\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    default_category_uuid: defaultExit,\n    categories,\n    cases,\n    operand: state.operand.value,\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.split_by_expression,\n    [],\n    { cases: caseConfig }\n  );\n\n  return newRenderNode;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { sortFieldsAndProperties } from 'components/flow/actions/updatecontact/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { AssetEntry, FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\nimport { small } from 'utils/reactselect';\n\nimport styles from './FieldRouterForm.module.scss';\nimport { getRoutableFields, nodeToState, stateToNode } from './helpers';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport enum InputToFocus {\n  args = 'args',\n  min = 'min',\n  max = 'max',\n  exit = 'exit'\n}\n\nexport interface FieldRouterFormState extends FormState {\n  field: AssetEntry;\n  cases: CaseProps[];\n  resultName: StringEntry;\n}\n\nexport const leadInSpecId = 'lead-in';\n\nexport default class FieldRouterForm extends React.Component<\n  RouterFormProps,\n  FieldRouterFormState\n> {\n  public static contextTypes = {\n    assetService: fakePropType,\n    config: fakePropType\n  };\n\n  constructor(props: RouterFormProps) {\n    super(props);\n    this.state = nodeToState(this.props.nodeSettings, this.props.assetStore);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate('Result Name', value, [Alphanumeric, StartIsNonNumeric]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleFieldChanged(selected: Asset[]): void {\n    this.setState({ field: { value: selected[0] } });\n  }\n\n  private handleCasesUpdated(cases: CaseProps[]): void {\n    this.setState({ cases });\n  }\n\n  private handleSave(): void {\n    if (this.state.valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div className={styles.lead_in}>\n          If the contact's\n          <div className={`${styles.field_select} select-small`}>\n            <AssetSelector\n              name=\"Contact Field\"\n              styles={small as any}\n              assets={this.props.assetStore.fields}\n              additionalOptions={getRoutableFields(this.context.config.flowType)}\n              entry={this.state.field}\n              searchable={true}\n              sortFunction={sortFieldsAndProperties}\n              onChange={this.handleFieldChanged}\n            />\n          </div>\n        </div>\n        <CaseList\n          data-spec=\"cases\"\n          cases={this.state.cases}\n          onCasesUpdated={this.handleCasesUpdated}\n        />\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { NAME_PROPERTY } from 'components/flow/props';\nimport { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { FieldRouterFormState } from 'components/flow/routers/field/FieldRouterForm';\nimport {\n  createCaseProps,\n  createRenderNode,\n  hasCases,\n  resolveRoutes\n} from 'components/flow/routers/helpers';\nimport { getContactProperties } from 'components/helpers';\nimport { DEFAULT_OPERAND } from 'components/nodeeditor/constants';\nimport { FlowTypes, Types } from 'config/interfaces';\nimport { Scheme, SCHEMES } from 'config/typeConfigs';\nimport { Router, RouterTypes, SwitchRouter } from 'flowTypes';\nimport { Asset, AssetStore, AssetType, RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nexport const getRoutableFields = (flowType: FlowTypes = null): Asset[] => {\n  return [\n    ...getContactProperties(flowType),\n    ...SCHEMES.map((scheme: Scheme) => ({\n      name: scheme.name,\n      id: scheme.scheme,\n      type: AssetType.Scheme\n    }))\n  ];\n};\n\nexport const nodeToState = (\n  settings: NodeEditorSettings,\n  assetStore: AssetStore\n): FieldRouterFormState => {\n  let initialCases: CaseProps[] = [];\n\n  // TODO: work out an incremental result name\n  let resultName: StringEntry = { value: '' };\n\n  let field: any = null;\n\n  if (settings.originalNode && settings.originalNode.ui.type === Types.split_by_contact_field) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n\n    if (router) {\n      if (hasCases(settings.originalNode.node)) {\n        initialCases = createCaseProps(router.cases, settings.originalNode);\n      }\n\n      resultName = { value: router.result_name || '' };\n    }\n\n    const operand = settings.originalNode.ui.config.operand;\n\n    if (assetStore.fields) {\n      if (operand.id in assetStore.fields.items) {\n        const name = assetStore.fields.items[operand.id].name;\n        field = { id: operand.id, type: operand.type, name };\n      }\n    }\n\n    // couldn't find the asset, checkour routable fields\n    if (!field) {\n      field = getRoutableFields().find((asset: Asset) => asset.id === operand.id);\n    }\n  }\n\n  // our default is name\n  if (!field) {\n    field = NAME_PROPERTY;\n  }\n\n  return {\n    cases: initialCases,\n    resultName,\n    field: { value: field },\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: FieldRouterFormState\n): RenderNode => {\n  const { cases, exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\n    state.cases,\n    false,\n    settings.originalNode.node\n  );\n\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  let operand = DEFAULT_OPERAND;\n  const asset = state.field.value;\n  if (asset.type === AssetType.Scheme) {\n    operand = `@(format_urn(urns.${asset.id}))`;\n  } else if (asset.type === AssetType.Field) {\n    operand = `@contact.fields.${asset.id}`;\n  } else {\n    operand = `@contact.${asset.id}`;\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    default_category_uuid: defaultExit,\n    cases,\n    categories,\n    operand,\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.split_by_contact_field,\n    [],\n    {\n      operand: {\n        id: asset.id,\n        type: asset.type,\n        name: asset.name\n      },\n      cases: caseConfig\n    }\n  );\n\n  return newRenderNode;\n};\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { GroupsRouterFormState } from 'components/flow/routers/groups/GroupsRouterForm';\nimport { createRenderNode, getSwitchRouter, resolveRoutes } from 'components/flow/routers/helpers';\nimport { GROUPS_OPERAND } from 'components/nodeeditor/constants';\nimport { Operators, Types } from 'config/interfaces';\nimport { Category, FlowNode, RouterTypes, SwitchRouter } from 'flowTypes';\nimport { Asset, AssetType, RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\n\nexport const nodeToState = (settings: NodeEditorSettings): GroupsRouterFormState => {\n  const state: GroupsRouterFormState = {\n    groups: { value: [] },\n    resultName: { value: '' },\n    valid: false\n  };\n\n  if (settings.originalNode.ui.type === Types.split_by_groups) {\n    state.groups.value = extractGroups(settings.originalNode.node);\n    state.resultName = {\n      value: (settings.originalNode.node.router as SwitchRouter).result_name || ''\n    };\n    state.valid = true;\n  }\n\n  return state;\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: GroupsRouterFormState\n): RenderNode => {\n  const currentCases = groupsToCases(state.groups.value);\n  const { cases, exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\n    currentCases,\n    false,\n    settings.originalNode.node\n  );\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    cases,\n    categories,\n    default_category_uuid: defaultExit,\n    operand: GROUPS_OPERAND,\n    result_name: state.resultName.value\n  };\n\n  return createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.split_by_groups,\n    [],\n    { cases: caseConfig }\n  );\n};\n\nexport const extractGroups = (node: FlowNode): Asset[] => {\n  let groups: Asset[] = [];\n  const router = getSwitchRouter(node);\n  if (router) {\n    groups = (router as SwitchRouter).cases.map(kase => {\n      const category = router.categories.find((cat: Category) => cat.uuid === kase.category_uuid);\n      return {\n        name: category.name,\n        id: kase.arguments[0],\n        type: AssetType.Group\n      };\n    });\n  }\n  return groups;\n};\nexport const groupsToCases = (groups: Asset[] = []): CaseProps[] =>\n  groups.map(({ name, id }: Asset) => ({\n    uuid: id,\n    kase: {\n      uuid: createUUID(),\n      type: Operators.has_group,\n      arguments: [id],\n      category_uuid: ''\n    },\n    categoryName: name,\n    valid: true\n  }));\n","import { Types } from 'config/interfaces';\nimport { Case, Category, SwitchRouter } from 'flowTypes';\nimport { LocalizedObject } from 'services/Localization';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport enum LocalizedType {\n  Category,\n  Case\n}\n\nexport const getOriginalCase = (nodeSettings: NodeEditorSettings, uuid: string) => {\n  const cases = (nodeSettings.originalNode.node.router as SwitchRouter).cases;\n  return cases.find((item: any) => item.uuid === uuid);\n};\n\nexport const getOriginalCategory = (nodeSettings: NodeEditorSettings, uuid: string) => {\n  const items = nodeSettings.originalNode.node.router.categories;\n  return items.find((item: any) => item.uuid === uuid);\n};\n\nexport const hasLocalizableCases = (renderNode: RenderNode) => {\n  const type = renderNode.ui.type;\n  return type === Types.wait_for_response || type === Types.split_by_expression;\n};\n\nexport const getLocalizedObjects = (\n  nodeSettings: NodeEditorSettings,\n  localizedType: LocalizedType\n): Category[] | Case[] => {\n  const filtered: any = [];\n\n  let items: Category[] | Case[] = nodeSettings.originalNode.node.router.categories;\n  if (localizedType === LocalizedType.Case) {\n    if (hasLocalizableCases(nodeSettings.originalNode)) {\n      items = (nodeSettings.originalNode.node.router as SwitchRouter).cases;\n    } else {\n      items = [];\n    }\n  }\n\n  for (const original of items) {\n    const [localized] = nodeSettings.localizations.filter(\n      (localizedObject: LocalizedObject) => localizedObject.getObject().uuid === original.uuid\n    );\n\n    if (localized.isLocalized()) {\n      filtered.push(localized.getObject());\n    } else {\n      filtered.push({ uuid: original.uuid });\n    }\n  }\n  return filtered;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { RouterFormProps } from 'components/flow/props';\nimport { GROUP_LABEL } from 'components/flow/routers/constants';\nimport { nodeToState, stateToNode } from 'components/flow/routers/groups/helpers';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Asset } from 'store/flowContext';\nimport { AssetArrayEntry, FormState, mergeForm, StringEntry } from 'store/nodeEditor';\nimport { Required, validate } from 'store/validators';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport interface GroupsRouterFormState extends FormState {\n  groups: AssetArrayEntry;\n  resultName: StringEntry;\n}\n\nexport default class GroupsRouterForm extends React.Component<\n  RouterFormProps,\n  GroupsRouterFormState\n> {\n  public static contextTypes = {\n    endpoints: fakePropType,\n    assetService: fakePropType\n  };\n\n  constructor(props: RouterFormProps) {\n    super(props);\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleGroupsChanged(groups: Asset[]): void {\n    this.handleUpdate({ groups });\n  }\n\n  private handleUpdateResultName(resultName: string): void {\n    this.handleUpdate({ resultName });\n  }\n\n  private handleUpdate(keys: { groups?: Asset[]; resultName?: string }): boolean {\n    const updates: Partial<GroupsRouterFormState> = {};\n\n    if (keys.hasOwnProperty('groups')) {\n      updates.groups = validate('Groups', keys.groups, [Required]);\n    }\n\n    if (keys.hasOwnProperty('resultName')) {\n      updates.resultName = { value: keys.resultName };\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    if (this.state.valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p>{GROUP_LABEL}</p>\n        <AssetSelector\n          name=\"Groups\"\n          assets={this.props.assetStore.groups}\n          entry={this.state.groups}\n          searchable={true}\n          onChange={this.handleGroupsChanged}\n          multi={true}\n        />\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n      </Dialog>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport { determineTypeConfig } from 'components/flow/helpers';\nimport { LocalizationFormProps } from 'components/flow/props';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport { getOperatorConfig } from 'config/operatorConfigs';\nimport { Case, Category } from 'flowTypes';\nimport * as React from 'react';\nimport { FormState, mergeForm } from 'store/nodeEditor';\n\nimport {\n  getLocalizedObjects,\n  getOriginalCase,\n  getOriginalCategory,\n  LocalizedType\n} from './helpers';\nimport styles from './RouterLocalizationForm.module.scss';\n\nexport interface RouterLocalizationFormState extends FormState {\n  categories: Category[];\n  cases: Case[];\n}\n\nexport default class RouterLocalizationForm extends React.Component<\n  LocalizationFormProps,\n  RouterLocalizationFormState\n> {\n  constructor(props: LocalizationFormProps) {\n    super(props);\n\n    const categories: Category[] = getLocalizedObjects(\n      props.nodeSettings,\n      LocalizedType.Category\n    ) as Category[];\n    const cases: Case[] = getLocalizedObjects(props.nodeSettings, LocalizedType.Case) as Case[];\n\n    this.state = { categories, cases, valid: true };\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleUpdate(keys: { category?: Category; kase?: Case }): boolean {\n    const updates: Partial<RouterLocalizationFormState> = {};\n\n    if (keys.hasOwnProperty('category')) {\n      updates.categories = [keys.category];\n    }\n\n    if (keys.hasOwnProperty('kase')) {\n      updates.cases = [keys.kase];\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleUpdateCategoryName(category: Category, name: string): boolean {\n    category.name = name;\n    return this.handleUpdate({ category });\n  }\n\n  private handleUpdateCaseArgument(kase: Case, arg: string): boolean {\n    kase.arguments = [arg];\n    return this.handleUpdate({ kase });\n  }\n\n  private handleSave(): void {\n    // collect up our category localizations\n    const translations: any[] = this.state.categories.map((cat: Category) => {\n      return cat.name\n        ? {\n            uuid: cat.uuid,\n            translations: {\n              name: cat.name\n            }\n          }\n        : { uuid: cat.uuid };\n    });\n\n    // same thing for any cases\n    translations.push(\n      ...this.state.cases.map((kase: Case) => {\n        return kase.arguments\n          ? {\n              uuid: kase.uuid,\n              translations: {\n                arguments: kase.arguments\n              }\n            }\n          : { uuid: kase.uuid };\n      })\n    );\n\n    this.props.updateLocalizations(this.props.language.id, translations);\n\n    // notify our modal we are done\n    this.props.onClose(false);\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  public renderCases(): JSX.Element[] {\n    return this.state.cases.map((kase: Case) => {\n      const originalCase = getOriginalCase(this.props.nodeSettings, kase.uuid) as Case;\n\n      const { verboseName } = getOperatorConfig(originalCase.type);\n\n      const [orginalArgument] = originalCase.arguments;\n\n      let argument = '';\n      if (kase.arguments && kase.arguments.length > 0) {\n        argument = kase.arguments[0];\n      }\n\n      return (\n        <div\n          key={`translate_${kase.uuid}`}\n          data-spec=\"operator-field\"\n          className={styles.translating_operator_container}\n        >\n          <div data-spec=\"verbose-name\" className={styles.translating_operator}>\n            {verboseName}\n          </div>\n          <div data-spec=\"argument-to-translate\" className={styles.translating_from}>\n            {orginalArgument}\n          </div>\n          <div className={styles.translating_to}>\n            <TextInputElement\n              data-spec=\"localize-case\"\n              name={kase.uuid}\n              placeholder={`${this.props.language.name} Translation`}\n              showLabel={false}\n              onChange={(arg: string) => this.handleUpdateCaseArgument(kase, arg)}\n              entry={{ value: argument }}\n            />\n          </div>\n        </div>\n      );\n    });\n  }\n\n  public renderCategories(): JSX.Element[] {\n    return this.state.categories.map((cat: Category) => {\n      const originalCategory = getOriginalCategory(this.props.nodeSettings, cat.uuid);\n\n      const placeholder = `${this.props.language.name} Translation`;\n\n      if (!cat.name) {\n        cat.name = '';\n      }\n\n      return (\n        <div key={cat.uuid} className={styles.translating_category}>\n          <div data-spec=\"category-name\" className={styles.translating_from}>\n            {originalCategory.name}\n          </div>\n          <div className={styles.translating_to}>\n            <TextInputElement\n              data-spec=\"localize-category\"\n              name={cat.name}\n              placeholder={placeholder}\n              showLabel={false}\n              entry={{ value: cat.name }}\n              onChange={(name: string) => this.handleUpdateCategoryName(cat, name)}\n            />\n          </div>\n        </div>\n      );\n    });\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = determineTypeConfig(this.props.nodeSettings);\n\n    const tabs: Tab[] = [];\n\n    if (this.state.cases.length > 0) {\n      tabs.push({\n        name: 'Rule Translations',\n        body: (\n          <>\n            <p data-spec=\"instructions\">\n              Sometimes languages need special rules to route things properly. If a translation is\n              not provided, the original rule will be used.\n            </p>\n            {this.renderCases()}\n          </>\n        )\n      });\n    }\n\n    const categories = (\n      <Dialog\n        title={`${this.props.language.name} Category Names`}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={tabs}\n      >\n        <p data-spec=\"instructions\">\n          When category names are referenced later in the flow, the appropriate language for the\n          category will be used. If no translation is provided, the original text will be used.\n        </p>\n        {this.renderCategories()}\n      </Dialog>\n    );\n\n    // if we have cases, use a flipper\n    return categories;\n  }\n}\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { createRenderNode, resolveRoutes } from 'components/flow/routers/helpers';\nimport { Operators, Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { Case, Category, HintTypes, Router, RouterTypes, SwitchRouter, WaitTypes } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\n\nimport { MenuRouterFormState } from './MenuRouterForm';\n\nexport const nodeToState = (settings: NodeEditorSettings): MenuRouterFormState => {\n  let resultName: StringEntry = { value: '' };\n\n  const menu: string[] = [];\n  for (let i = 0; i < 10; i++) {\n    menu.push('');\n  }\n\n  if (getType(settings.originalNode) === Types.wait_for_menu) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n    for (const kase of router.cases) {\n      let idx = parseInt(kase.arguments[0], 10) - 1;\n      if (idx === -1) {\n        idx = menu.length - 1;\n      }\n\n      menu[idx] = settings.originalNode.node.router.categories.find(\n        (category: Category) => category.uuid === kase.category_uuid\n      ).name;\n    }\n    resultName = { value: router.result_name || '' };\n  }\n\n  return {\n    resultName,\n    menu,\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: MenuRouterFormState\n): RenderNode => {\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  let originalCases: Case[] = [];\n  if (getType(settings.originalNode) === Types.wait_for_menu) {\n    originalCases = (settings.originalNode.node.router as SwitchRouter).cases;\n  }\n\n  const caseProps = menuToCases(state.menu, originalCases);\n  const { cases, exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\n    caseProps,\n    false,\n    settings.originalNode.node\n  );\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    operand: '@input',\n    default_category_uuid: defaultExit,\n    cases,\n    categories,\n    wait: { type: WaitTypes.msg, hint: { type: HintTypes.digits, count: 1 } },\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.wait_for_response,\n    [],\n    { cases: caseConfig }\n  );\n\n  return newRenderNode;\n};\n\nexport const menuToCases = (menu: string[] = [], previousCases: Case[]): CaseProps[] =>\n  menu\n    .map((categoryName: string, index: number) => {\n      const idx = index === 9 ? 0 : index + 1;\n\n      const kase =\n        previousCases.find((c: Case) => c.arguments[0] === '' + idx) ||\n        ({\n          uuid: createUUID(),\n          arguments: ['' + idx],\n          type: Operators.has_number_eq,\n          category_uuid: ''\n        } as Case);\n\n      return {\n        uuid: kase.uuid,\n        kase,\n        categoryName,\n        valid: true\n      };\n    })\n    .filter((caseProps: CaseProps) => caseProps.categoryName.trim().length > 0);\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\n\nimport { nodeToState, stateToNode } from './helpers';\nimport styles from './MenuRouterForm.module.scss';\n\nconst mutate = require('immutability-helper');\n\nexport interface MenuRouterFormState extends FormState {\n  resultName: StringEntry;\n  menu: string[];\n}\n\nexport const leadInSpecId = 'lead-in';\n\nexport default class MenuRouterForm extends React.Component<RouterFormProps, MenuRouterFormState> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public static contextTypes = {\n    assetService: fakePropType\n  };\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate('Result Name', value, [Alphanumeric, StartIsNonNumeric]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleSave(): void {\n    this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n    this.props.onClose(false);\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  private handleMenuChanged(index: number, value: string): void {\n    const menu = mutate(this.state.menu, { [index]: { $set: value } });\n    this.setState({ menu });\n  }\n\n  private renderOption(index: number): JSX.Element {\n    return (\n      <div key={'menuoption-' + index} className={styles.menu_option}>\n        <div className={styles.digit}>{index === 9 ? 0 : index + 1}</div>\n        <div className={styles.category}>\n          <TextInputElement\n            name={'Menu ' + index}\n            entry={{ value: this.state.menu[index] }}\n            onChange={(value: string) => {\n              this.handleMenuChanged(index, value);\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  private renderMenu(): any {\n    const options: JSX.Element[] = [];\n    for (let i = 0; i < 10; i++) {\n      options.push(this.renderOption(i));\n    }\n\n    return options;\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div className={styles.menu}>{this.renderMenu()}</div>\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { createRenderNode } from 'components/flow/routers/helpers';\nimport { RandomRouterFormState } from 'components/flow/routers/random/RandomRouterForm';\nimport { SelectOption } from 'components/form/select/SelectElement';\nimport { Types } from 'config/interfaces';\nimport { Category, Exit, Router, RouterTypes } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\nimport { createUUID, range } from 'utils';\n\nexport const BUCKET_OPTIONS: SelectOption[] = range(2, 11).map((count: number) => {\n  return { value: count + '', label: count + ' buckets' };\n});\n\nexport const getOption = (value: number): SelectOption => {\n  let option = BUCKET_OPTIONS.find(\n    (bucketOption: SelectOption) => bucketOption.value === value + ''\n  );\n  if (!option) {\n    option = { label: `${value} Buckets`, value: value + '' };\n  }\n  return option;\n};\n\nexport const nodeToState = (settings: NodeEditorSettings): RandomRouterFormState => {\n  // TODO: work out an incremental result name\n  let resultName: StringEntry = { value: '' };\n  let buckets = 2;\n\n  let categories: Category[] = [];\n  if (settings.originalNode && settings.originalNode.ui.type === Types.split_by_random) {\n    const router = settings.originalNode.node.router as Router;\n    resultName = { value: router.result_name || '' };\n    buckets = settings.originalNode.node.exits.length;\n\n    // use any existing random buckets if we have any\n    categories = settings.originalNode.node.router.categories;\n  }\n\n  categories = fillOutCategories(categories, buckets);\n\n  return {\n    categories,\n    resultName,\n    bucketChoice: { value: getOption(buckets) },\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: RandomRouterFormState\n): RenderNode => {\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  const exits =\n    settings.originalNode.ui.type === Types.split_by_random ? settings.originalNode.node.exits : [];\n\n  state.categories.forEach((category: Category, idx: number) => {\n    if (idx < exits.length) {\n      category.exit_uuid = exits[idx].uuid;\n    } else {\n      const newExit: Exit = {\n        uuid: createUUID(),\n        destination_uuid: null\n      };\n      category.exit_uuid = newExit.uuid;\n      exits.push(newExit);\n    }\n  });\n\n  const router: Router = {\n    type: RouterTypes.random,\n    categories: state.categories,\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.split_by_random,\n    [],\n    null\n  );\n\n  return newRenderNode;\n};\n\nexport const fillOutCategories = (categories: Category[], buckets: number): Category[] => {\n  // add any that we still need\n  return categories.concat(\n    range(categories.length, buckets).map((idx: number) => {\n      return { uuid: createUUID(), name: `Bucket ${idx + 1}`, exit_uuid: null };\n    })\n  );\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Category } from 'flowTypes';\nimport * as React from 'react';\nimport { FormState, mergeForm, SelectOptionEntry, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\nimport { small } from 'utils/reactselect';\n\nimport { BUCKET_OPTIONS, fillOutCategories, nodeToState, stateToNode } from './helpers';\nimport styles from './RandomRouterForm.module.scss';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport enum InputToFocus {\n  args = 'args',\n  min = 'min',\n  max = 'max',\n  exit = 'exit'\n}\n\nexport interface RandomRouterFormState extends FormState {\n  bucketChoice: SelectOptionEntry;\n  resultName: StringEntry;\n  categories: Category[];\n}\n\nexport const leadInSpecId = 'lead-in';\n\nexport default class RandomRouterForm extends React.Component<\n  RouterFormProps,\n  RandomRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public static contextTypes = {\n    assetService: fakePropType\n  };\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate('Result Name', value, [Alphanumeric, StartIsNonNumeric]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleBucketsChanged(selected: SelectOption): boolean {\n    // create new exits if needed\n\n    const count = parseInt(selected.value, 10);\n\n    let categories = this.state.categories.concat([]);\n\n    // prune off if we have too many\n    categories = categories.slice(0, count);\n\n    // add any that we still need\n    categories = fillOutCategories(categories, count);\n\n    const updates: Partial<RandomRouterFormState> = {\n      bucketChoice: { value: selected }\n    };\n\n    const updated = mergeForm(this.state, updates);\n    this.setState({ ...updated, categories });\n\n    return updated.valid;\n  }\n\n  public handleSave(): void {\n    this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n    this.props.onClose(false);\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  private handleBucketNameChanged(category: Category, value: string): void {\n    const categories = this.state.categories;\n    categories.find((cat: Category) => cat.uuid === category.uuid).name = value;\n    this.setState({ categories });\n  }\n\n  private renderBucketNames(): any {\n    return this.state.categories.map((cat: Category) => (\n      <TextInputElement\n        key={cat.uuid}\n        __className={styles.bucket_name}\n        data-spec=\"optional-field\"\n        name={cat.uuid}\n        entry={{ value: cat.name }}\n        onChange={(value: string) => {\n          this.handleBucketNameChanged(cat, value);\n        }}\n      />\n    ));\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    const OPTIONS = BUCKET_OPTIONS.concat([]);\n    if (BUCKET_OPTIONS.indexOf(this.state.bucketChoice.value) === -1) {\n      OPTIONS.push(this.state.bucketChoice.value);\n    }\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div className={styles.lead_in}>Split them randomly into one of</div>\n        <div className={styles.bucket_select}>\n          <SelectElement\n            styles={small as any}\n            name=\"Buckets\"\n            entry={this.state.bucketChoice}\n            onChange={this.handleBucketsChanged}\n            options={OPTIONS}\n          />\n        </div>\n        <div className={styles.bucket_list}>{this.renderBucketNames()}</div>\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport {\n  createCaseProps,\n  createRenderNode,\n  hasCases,\n  resolveRoutes\n} from 'components/flow/routers/helpers';\nimport { ResponseRouterFormState } from 'components/flow/routers/response/ResponseRouterForm';\nimport { DEFAULT_OPERAND } from 'components/nodeeditor/constants';\nimport { Types } from 'config/interfaces';\nimport { Router, RouterTypes, SwitchRouter, Wait, WaitTypes } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nexport const nodeToState = (settings: NodeEditorSettings): ResponseRouterFormState => {\n  let initialCases: CaseProps[] = [];\n\n  // TODO: work out an incremental result name\n  let resultName: StringEntry = { value: 'Result' };\n  let timeout = 0;\n\n  if (settings.originalNode && settings.originalNode.ui.type === Types.wait_for_response) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n    if (router) {\n      if (hasCases(settings.originalNode.node)) {\n        initialCases = createCaseProps(router.cases, settings.originalNode);\n      }\n\n      resultName = { value: router.result_name || '' };\n    }\n\n    if (settings.originalNode.node.router.wait && settings.originalNode.node.router.wait.timeout) {\n      timeout = settings.originalNode.node.router.wait.timeout.seconds || 0;\n    }\n  }\n\n  return {\n    cases: initialCases,\n    resultName,\n    timeout,\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: ResponseRouterFormState\n): RenderNode => {\n  const { cases, exits, defaultCategory, timeoutCategory, caseConfig, categories } = resolveRoutes(\n    state.cases,\n    state.timeout > 0,\n    settings.originalNode.node\n  );\n\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  const wait = { type: WaitTypes.msg } as Wait;\n  if (state.timeout > 0) {\n    wait.timeout = {\n      seconds: state.timeout,\n      category_uuid: timeoutCategory\n    };\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    default_category_uuid: defaultCategory,\n    cases,\n    categories,\n    operand: DEFAULT_OPERAND,\n    wait,\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.wait_for_response,\n    [],\n    { cases: caseConfig }\n  );\n\n  return newRenderNode;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { nodeToState, stateToNode } from 'components/flow/routers/response/helpers';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TimeoutControl from 'components/form/timeout/TimeoutControl';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport enum InputToFocus {\n  args = 'args',\n  min = 'min',\n  max = 'max',\n  exit = 'exit'\n}\n\nexport interface ResponseRouterFormState extends FormState {\n  cases: CaseProps[];\n  resultName: StringEntry;\n  timeout: number;\n}\n\nexport const leadInSpecId = 'lead-in';\n\nexport default class ResponseRouterForm extends React.Component<\n  RouterFormProps,\n  ResponseRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate('Result Name', value, [Alphanumeric, StartIsNonNumeric]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleUpdateTimeout(timeout: number): void {\n    this.setState({ timeout });\n  }\n\n  private handleCasesUpdated(cases: CaseProps[]): void {\n    const invalidCase = cases.find((caseProps: CaseProps) => !caseProps.valid);\n    this.setState({ cases, valid: !invalidCase });\n  }\n\n  private handleSave(): void {\n    if (this.state.valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        gutter={\n          <TimeoutControl timeout={this.state.timeout} onChanged={this.handleUpdateTimeout} />\n        }\n      >\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div>If the message response...</div>\n        <CaseList\n          data-spec=\"cases\"\n          cases={this.state.cases}\n          onCasesUpdated={this.handleCasesUpdated}\n        />\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport CheckboxElement from 'components/form/checkbox/CheckboxElement';\nimport * as React from 'react';\nimport Select from 'react-select';\nimport { renderIf } from 'utils';\nimport { small } from 'utils/reactselect';\n\nimport styles from './TimeoutControl.module.scss';\n\nexport const TIMEOUT_OPTIONS = [\n  { value: 60, label: '1 minute' },\n  { value: 120, label: '2 minutes' },\n  { value: 180, label: '3 minutes' },\n  { value: 240, label: '4 minutes' },\n  { value: 300, label: '5 minutes' },\n  { value: 600, label: '10 minutes' },\n  { value: 900, label: '15 minutes' },\n  { value: 3600, label: '1 hours' },\n  { value: 7200, label: '2 hours' },\n  { value: 10800, label: '3 hours' },\n  { value: 21600, label: '6 hours' },\n  { value: 43200, label: '12 hours' },\n  { value: 64800, label: '18 hours' },\n  { value: 86400, label: '1 days' },\n  { value: 172800, label: '2 days' },\n  { value: 259200, label: '3 days' },\n  { value: 604800, label: '1 week' }\n];\n\nexport const DEFAULT_TIMEOUT = TIMEOUT_OPTIONS[4];\n\nexport const ellipsize = (str: string) => `${str}...`;\n\nexport interface TimeoutControlProps {\n  timeout: number;\n  onChanged(timeout: number): void;\n}\n\nexport default class TimeoutControl extends React.Component<TimeoutControlProps> {\n  constructor(props: TimeoutControlProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private getSelected(timeout: number): any {\n    for (const [idx, { value }] of TIMEOUT_OPTIONS.entries()) {\n      if (value === timeout) {\n        return TIMEOUT_OPTIONS[idx];\n      }\n    }\n    return null;\n  }\n\n  private isChecked(): boolean {\n    return this.props.timeout > 0;\n  }\n\n  private getInstructions(): string {\n    const base = 'Continue when there is no response';\n    return this.isChecked() ? `${base} for` : ellipsize(base);\n  }\n\n  private handleChecked(): void {\n    if (this.props.timeout > 0) {\n      this.props.onChanged(0);\n    } else {\n      this.props.onChanged(DEFAULT_TIMEOUT.value);\n    }\n  }\n\n  private handleTimeoutChanged(selected: any): void {\n    this.props.onChanged(selected.value as number);\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div className={styles.timeout_control_container}>\n        <div className={styles.left_section}>\n          <CheckboxElement\n            name=\"Timeout\"\n            checked={this.isChecked()}\n            description={this.getInstructions()}\n            checkboxClassName={styles.checkbox}\n            onChange={this.handleChecked}\n          />\n        </div>\n        {renderIf(this.isChecked())(\n          <div className={styles.drop_down}>\n            <Select\n              name=\"timeout\"\n              menuPlacement=\"auto\"\n              styles={small as any}\n              isClearable={false}\n              isSearchable={false}\n              value={this.getSelected(this.props.timeout)}\n              onChange={this.handleTimeoutChanged}\n              options={TIMEOUT_OPTIONS}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import { createWebhookBasedNode } from 'components/flow/routers/helpers';\nimport { Types } from 'config/interfaces';\nimport { CallResthook } from 'flowTypes';\nimport { AssetType, RenderNode } from 'store/flowContext';\nimport { AssetEntry, NodeEditorSettings } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\n\nimport { ResthookRouterFormState } from './ResthookRouterForm';\n\nexport const nodeToState = (settings: NodeEditorSettings): ResthookRouterFormState => {\n  let resthookAsset: AssetEntry = { value: null };\n  let resultName = { value: 'Result' };\n  let valid = false;\n\n  const originalAction = getOriginalAction(settings) as CallResthook;\n  if (originalAction && originalAction.type === Types.call_resthook) {\n    const resthook = originalAction.resthook;\n    resthookAsset = {\n      value: { id: resthook, name: resthook, type: AssetType.Resthook }\n    };\n    resultName = { value: originalAction.result_name };\n    valid = true;\n  }\n\n  return {\n    resthook: resthookAsset,\n    resultName,\n    valid\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: ResthookRouterFormState\n): RenderNode => {\n  let uuid = createUUID();\n  const originalAction = getOriginalAction(settings);\n  if (originalAction) {\n    uuid = originalAction.uuid;\n  }\n\n  const newAction: CallResthook = {\n    uuid,\n    resthook: state.resthook.value.id,\n    type: Types.call_resthook,\n    result_name: state.resultName.value\n  };\n\n  return createWebhookBasedNode(newAction, settings.originalNode);\n};\n\nexport const getOriginalAction = (settings: NodeEditorSettings): CallResthook => {\n  const action =\n    settings.originalAction ||\n    (settings.originalNode.node.actions.length > 0 && settings.originalNode.node.actions[0]);\n\n  if (action.type === Types.call_resthook) {\n    return action as CallResthook;\n  }\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { AssetEntry, FormState, mergeForm, StringEntry } from 'store/nodeEditor';\nimport {\n  Alphanumeric,\n  Required,\n  shouldRequireIf,\n  StartIsNonNumeric,\n  validate\n} from 'store/validators';\n\nimport { nodeToState, stateToNode } from './helpers';\nimport styles from './ResthookRouterForm.module.scss';\n\n// TODO: Remove use of Function\nexport interface ResthookRouterFormState extends FormState {\n  resthook: AssetEntry;\n  resultName: StringEntry;\n}\n\nexport default class ResthookRouterForm extends React.PureComponent<\n  RouterFormProps,\n  ResthookRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleUpdateResultName(result: string): void {\n    const resultName = validate('Result Name', result, [Required, Alphanumeric, StartIsNonNumeric]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  public handleResthookChanged(selected: Asset[], submitting = false): boolean {\n    const updates: Partial<ResthookRouterFormState> = {\n      resthook: validate('Resthook', selected[0], [shouldRequireIf(submitting)])\n    };\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    // validate our resthook in case they haven't interacted\n    const valid = this.handleResthookChanged([this.state.resthook.value], true);\n\n    if (valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  public getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <AssetSelector\n          name=\"Resthook\"\n          placeholder=\"Select the resthook to call\"\n          assets={this.props.assetStore.resthooks}\n          entry={this.state.resthook}\n          searchable={true}\n          onChange={this.handleResthookChanged}\n        />\n        <div className={styles.result_name}>\n          {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        </div>\n      </Dialog>\n    );\n  }\n}\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport {\n  createCaseProps,\n  createRenderNode,\n  hasCases,\n  resolveRoutes\n} from 'components/flow/routers/helpers';\nimport { SelectOption } from 'components/form/select/SelectElement';\nimport { DEFAULT_OPERAND } from 'components/nodeeditor/constants';\nimport { Types } from 'config/interfaces';\nimport { Router, RouterTypes, SwitchRouter } from 'flowTypes';\nimport { AssetStore, AssetType, RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nimport { ResultRouterFormState } from './ResultRouterForm';\n\nexport const FIELD_NUMBER_OPTIONS: SelectOption[] = [\n  { value: '1', label: 'first' },\n  { value: '2', label: 'second' },\n  { value: '3', label: 'third' },\n  { value: '4', label: 'fourth' },\n  { value: '5', label: 'fifth' },\n  { value: '6', label: 'sixth' },\n  { value: '7', label: 'seventh' },\n  { value: '8', label: 'eighth' },\n  { value: '9', label: 'ninth' }\n];\n\nexport const getFieldOption = (value: number): SelectOption => {\n  return FIELD_NUMBER_OPTIONS.find((option: SelectOption) => option.value === '' + value);\n};\n\nexport const DELIMITER_OPTIONS: SelectOption[] = [\n  { value: ' ', label: 'spaces' },\n  { value: '.', label: 'periods' },\n  { value: '+', label: 'plusses' }\n];\n\nexport const getDelimiterOption = (value: string): SelectOption => {\n  return DELIMITER_OPTIONS.find((option: SelectOption) => option.value === value);\n};\n\nexport const nodeToState = (\n  settings: NodeEditorSettings,\n  assetStore: AssetStore\n): ResultRouterFormState => {\n  let initialCases: CaseProps[] = [];\n\n  // TODO: work out an incremental result name\n  let resultName: StringEntry = { value: '' };\n\n  let result: any = null;\n  let fieldNumber = 1;\n  let delimiter = ' ';\n  let shouldDelimit = false;\n\n  if (\n    (settings.originalNode && settings.originalNode.ui.type === Types.split_by_run_result) ||\n    settings.originalNode.ui.type === Types.split_by_run_result_delimited\n  ) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n\n    if (router) {\n      if (hasCases(settings.originalNode.node)) {\n        initialCases = createCaseProps(router.cases, settings.originalNode);\n      }\n\n      resultName = { value: router.result_name || '' };\n    }\n\n    const config = settings.originalNode.ui.config;\n    if (config && config.operand) {\n      result =\n        config.operand.id in assetStore.results.items\n          ? assetStore.results.items[config.operand.id]\n          : null;\n    }\n\n    if (settings.originalNode.ui.type === Types.split_by_run_result_delimited) {\n      fieldNumber = config.index;\n      delimiter = config.delimiter;\n      shouldDelimit = true;\n    }\n  }\n\n  return {\n    cases: initialCases,\n    resultName,\n    result: { value: result },\n    shouldDelimit,\n    fieldNumber,\n    delimiter,\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: ResultRouterFormState\n): RenderNode => {\n  const { cases, exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\n    state.cases,\n    false,\n    settings.originalNode.node\n  );\n\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  let nodeType = Types.split_by_run_result;\n  let operand = DEFAULT_OPERAND;\n  const asset = state.result.value;\n  if (asset.type === AssetType.URN) {\n    operand = `@(format_urn(contact.urns.${asset.id}))`;\n  } else if (asset.type === AssetType.Field) {\n    operand = `@contact.fields.${asset.id}`;\n  } else {\n    operand = `@contact.${asset.id}`;\n  }\n\n  const config: any = {\n    operand: {\n      id: asset.id,\n      type: asset.type,\n      name: asset.name\n    },\n    cases: caseConfig\n  };\n\n  if (state.shouldDelimit) {\n    config.index = state.fieldNumber;\n    config.delimiter = state.delimiter;\n    nodeType = Types.split_by_run_result_delimited;\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    default_category_uuid: defaultExit,\n    categories,\n    cases,\n    operand,\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    nodeType,\n    [],\n    config\n  );\n\n  return newRenderNode;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport CheckboxElement from 'components/form/checkbox/CheckboxElement';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { AssetEntry, FormState, mergeForm, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, shouldRequireIf, StartIsNonNumeric, validate } from 'store/validators';\nimport { small } from 'utils/reactselect';\n\nimport {\n  DELIMITER_OPTIONS,\n  FIELD_NUMBER_OPTIONS,\n  getDelimiterOption,\n  getFieldOption,\n  nodeToState,\n  stateToNode\n} from './helpers';\nimport styles from './ResultRouterForm.module.scss';\n\nexport interface ResultRouterFormState extends FormState {\n  result: AssetEntry;\n  cases: CaseProps[];\n  resultName: StringEntry;\n  shouldDelimit: boolean;\n\n  fieldNumber: number;\n  delimiter: string;\n}\n\nexport const leadInSpecId = 'lead-in';\n\nexport default class ResultRouterForm extends React.Component<\n  RouterFormProps,\n  ResultRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings, this.props.assetStore);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate('Result Name', value, [Alphanumeric, StartIsNonNumeric]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleResultChanged(selected: Asset[], submitting = false): boolean {\n    const updates: Partial<ResultRouterFormState> = {\n      result: validate('Result to split on', selected[0], [shouldRequireIf(submitting)])\n    };\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleCasesUpdated(cases: CaseProps[]): void {\n    this.setState({ cases });\n  }\n\n  private handleSave(): void {\n    const valid = this.handleResultChanged([this.state.result.value], true);\n    if (valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  private handleShouldDelimitChanged(checked: boolean): void {\n    this.setState({ shouldDelimit: checked });\n  }\n\n  private handleFieldNumberChanged(selected: SelectOption): void {\n    this.setState({ fieldNumber: parseInt(selected.value, 10) });\n  }\n\n  private handleDelimiterChanged(selected: SelectOption): void {\n    this.setState({ delimiter: selected.value });\n  }\n\n  private renderField(): JSX.Element {\n    return (\n      <>\n        <div className={styles.lead_in}>If the flow result</div>\n        <div className={styles.result_select}>\n          <AssetSelector\n            entry={this.state.result}\n            styles={small as any}\n            name=\"Flow Result\"\n            placeholder=\"Select Result\"\n            searchable={false}\n            assets={this.props.assetStore.results}\n            onChange={this.handleResultChanged}\n          />\n        </div>\n      </>\n    );\n  }\n\n  private renderFieldDelimited(): JSX.Element {\n    return (\n      <>\n        <div className={styles.lead_in}>If the</div>\n        <div className={styles.field_number}>\n          <SelectElement\n            styles={small as any}\n            name=\"Field Number\"\n            entry={{ value: getFieldOption(this.state.fieldNumber) }}\n            onChange={this.handleFieldNumberChanged}\n            options={FIELD_NUMBER_OPTIONS}\n          />\n        </div>\n        <div className={styles.lead_in_sub}>field of</div>\n        <div className={styles.result_select_delimited}>\n          <AssetSelector\n            entry={this.state.result}\n            styles={small as any}\n            name=\"Flow Result\"\n            placeholder=\"Select Result\"\n            searchable={false}\n            assets={this.props.assetStore.results}\n            onChange={this.handleResultChanged}\n          />\n        </div>\n        <div className={styles.lead_in_sub}>delimited by</div>\n        <div className={styles.delimiter}>\n          <SelectElement\n            styles={small as any}\n            name=\"Delimiter\"\n            entry={{ value: getDelimiterOption(this.state.delimiter) }}\n            onChange={this.handleDelimiterChanged}\n            options={DELIMITER_OPTIONS}\n          />\n        </div>\n      </>\n    );\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    const advanced: Tab = {\n      name: 'Advanced',\n      body: (\n        <div className={styles.should_delimit}>\n          <CheckboxElement\n            name=\"Delimit\"\n            title=\"Delimit Result\"\n            checked={this.state.shouldDelimit}\n            description=\"Evaluate your rules against a delimited part of your result\"\n            onChange={this.handleShouldDelimitChanged}\n          />\n        </div>\n      ),\n      checked: this.state.shouldDelimit\n    };\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={[advanced]}\n      >\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n\n        {this.state.shouldDelimit ? this.renderFieldDelimited() : this.renderField()}\n\n        <CaseList\n          data-spec=\"cases\"\n          cases={this.state.cases}\n          onCasesUpdated={this.handleCasesUpdated}\n        />\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n      </Dialog>\n    );\n  }\n}\n","import { createRenderNode } from 'components/flow/routers/helpers';\nimport { SubflowRouterFormState } from 'components/flow/routers/subflow/SubflowRouterForm';\nimport { SUBFLOW_OPERAND } from 'components/nodeeditor/constants';\nimport { Operators, Types } from 'config/interfaces';\nimport {\n  Case,\n  Category,\n  Exit,\n  Flow,\n  RouterTypes,\n  StartFlow,\n  StartFlowExitNames,\n  SwitchRouter\n} from 'flowTypes';\nimport { Asset, AssetType, RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\n\nexport const nodeToState = (settings: NodeEditorSettings): SubflowRouterFormState => {\n  if (settings.originalNode.ui.type === Types.split_by_subflow) {\n    const action = (settings.originalAction ||\n      (settings.originalNode.node.actions.length > 0 &&\n        settings.originalNode.node.actions[0])) as StartFlow;\n\n    return { flow: { value: flowToAsset(action.flow) }, valid: true };\n  }\n\n  return {\n    flow: { value: null },\n    valid: false\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: SubflowRouterFormState\n): RenderNode => {\n  const action =\n    settings.originalAction ||\n    (settings.originalNode.node.actions.length > 0 && settings.originalNode.node.actions[0]);\n\n  const newAction: StartFlow = {\n    uuid: action.uuid || createUUID(),\n    type: Types.enter_flow,\n    flow: assetToFlow(state.flow.value)\n  };\n\n  // If we're already a subflow, lean on those exits and cases\n  let exits: Exit[];\n  let cases: Case[];\n  let categories: Category[];\n\n  if (settings.originalNode.ui.type === Types.split_by_subflow) {\n    ({ exits } = settings.originalNode.node);\n    ({ cases, categories } = settings.originalNode.node.router as SwitchRouter);\n  } else {\n    // Otherwise, let's create some new ones\n    exits = [\n      {\n        uuid: createUUID(),\n        destination_uuid: null\n      },\n      {\n        uuid: createUUID(),\n        destination_uuid: null\n      }\n    ];\n\n    categories = [\n      {\n        uuid: createUUID(),\n        name: StartFlowExitNames.Complete,\n        exit_uuid: exits[0].uuid\n      },\n      {\n        uuid: createUUID(),\n        name: StartFlowExitNames.Expired,\n        exit_uuid: exits[1].uuid\n      }\n    ];\n\n    cases = [\n      {\n        uuid: createUUID(),\n        type: Operators.has_only_text,\n        arguments: ['completed'],\n        category_uuid: categories[0].uuid\n      },\n      {\n        uuid: createUUID(),\n        arguments: ['expired'],\n        type: Operators.has_only_text,\n        category_uuid: categories[1].uuid\n      }\n    ];\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    operand: SUBFLOW_OPERAND,\n    cases,\n    categories,\n    default_category_uuid: categories[categories.length - 1].uuid\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.split_by_subflow,\n    [newAction]\n  );\n\n  return newRenderNode;\n};\n\nconst flowToAsset = (field: Flow = { uuid: '', name: '' }): Asset => ({\n  id: field.uuid,\n  name: field.name,\n  type: AssetType.Flow\n});\n\nconst assetToFlow = (asset: Asset): Flow => ({\n  uuid: asset.id,\n  name: asset.name\n});\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { RouterFormProps } from 'components/flow/props';\nimport { nodeToState, stateToNode } from 'components/flow/routers/subflow/helpers';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { AssetEntry, FormState, mergeForm } from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\n\n// TODO: Remove use of Function\nexport interface SubflowRouterFormState extends FormState {\n  flow: AssetEntry;\n}\n\nexport default class SubflowRouterForm extends React.PureComponent<\n  RouterFormProps,\n  SubflowRouterFormState\n> {\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleFlowChanged(flows: Asset[], submitting = false): boolean {\n    const updates: Partial<SubflowRouterFormState> = {\n      flow: validate('Flow', flows[0], [shouldRequireIf(submitting)])\n    };\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    // validate our flow in case they haven't interacted\n    this.handleFlowChanged([this.state.flow.value], true);\n\n    if (this.state.valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  private handleFilter(asset: Asset): boolean {\n    // only show flows that match our flow type\n    return asset.content.type === this.context.config.flowType;\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <AssetSelector\n          name=\"Flow\"\n          placeholder=\"Select the flow to start\"\n          assets={this.props.assetStore.flows}\n          entry={this.state.flow}\n          searchable={true}\n          onFilter={this.handleFilter}\n          onChange={this.handleFlowChanged}\n        />\n      </Dialog>\n    );\n  }\n}\n","import { createRenderNode, resolveRoutes } from 'components/flow/routers/helpers';\nimport { WaitRouterFormState } from 'components/flow/routers/wait/WaitRouterForm';\nimport { DEFAULT_OPERAND } from 'components/nodeeditor/constants';\nimport { Type, Types } from 'config/interfaces';\nimport { HintTypes, Router, RouterTypes, SwitchRouter, Wait, WaitTypes } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nexport const nodeToState = (settings: NodeEditorSettings): WaitRouterFormState => {\n  let resultName: StringEntry = { value: 'Result' };\n  if (settings.originalNode && settings.originalNode.ui.type === Types.wait_for_response) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n    if (router) {\n      resultName = { value: router.result_name || '' };\n    }\n  }\n\n  return {\n    resultName,\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: WaitRouterFormState,\n  typeConfig: Type\n): RenderNode => {\n  const { exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\n    [],\n    false,\n    settings.originalNode.node\n  );\n\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  const wait = { type: WaitTypes.msg } as Wait;\n  switch (typeConfig.type) {\n    case Types.wait_for_audio:\n      wait.hint = { type: HintTypes.audio };\n      break;\n    case Types.wait_for_image:\n      wait.hint = { type: HintTypes.image };\n      break;\n    case Types.wait_for_location:\n      wait.hint = { type: HintTypes.location };\n      break;\n    case Types.wait_for_video:\n      wait.hint = { type: HintTypes.video };\n      break;\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    default_category_uuid: defaultExit,\n    cases: [],\n    categories,\n    wait,\n    operand: DEFAULT_OPERAND,\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.wait_for_response,\n    [],\n    { cases: caseConfig }\n  );\n\n  return newRenderNode;\n};\n","import { createWebhookBasedNode } from 'components/flow/routers/helpers';\nimport { WebhookRouterFormState } from 'components/flow/routers/webhook/WebhookRouterForm';\nimport { DEFAULT_BODY } from 'components/nodeeditor/constants';\nimport { Types } from 'config/interfaces';\nimport { CallWebhook } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\n\nexport enum Methods {\n  GET = 'GET',\n  POST = 'POST',\n  PUT = 'PUT'\n}\n\nexport interface MethodOption {\n  value: string;\n  label: string;\n}\n\ninterface HeaderMap {\n  [name: string]: string;\n}\n\nexport const GET_METHOD: MethodOption = {\n  value: Methods.GET,\n  label: Methods.GET\n};\n\nexport const METHOD_OPTIONS: MethodOption[] = [\n  GET_METHOD,\n  { value: Methods.POST, label: Methods.POST },\n  { value: Methods.PUT, label: Methods.PUT }\n];\n\nexport const getOriginalAction = (settings: NodeEditorSettings): CallWebhook => {\n  const action =\n    settings.originalAction ||\n    (settings.originalNode.node.actions.length > 0 && settings.originalNode.node.actions[0]);\n\n  if (action.type === Types.call_webhook) {\n    return action as CallWebhook;\n  }\n};\n\nexport const nodeToState = (settings: NodeEditorSettings): WebhookRouterFormState => {\n  // TODO: work out an incremental result name\n  const resultName: StringEntry = { value: 'Result' };\n\n  const state: WebhookRouterFormState = {\n    headers: [],\n    resultName,\n    method: { value: GET_METHOD },\n    url: { value: '' },\n    postBody: { value: DEFAULT_BODY },\n    valid: false\n  };\n\n  if (settings.originalNode.ui.type === Types.split_by_webhook) {\n    const action = getOriginalAction(settings) as CallWebhook;\n\n    // add in our headers\n    for (const name of Object.keys(action.headers || []).sort()) {\n      state.headers.push({\n        value: {\n          uuid: createUUID(),\n          value: action.headers[name],\n          name\n        }\n      });\n    }\n\n    state.resultName = { value: action.result_name };\n    state.url = { value: action.url };\n    state.method = { value: { label: action.method, value: action.method } };\n    state.postBody = { value: action.body };\n    state.valid = true;\n  } else {\n    state.headers.push({\n      value: {\n        uuid: createUUID(),\n        name: 'Content-Type',\n        value: 'application/json'\n      }\n    });\n  }\n\n  // one empty header\n  state.headers.push({\n    value: {\n      uuid: createUUID(),\n      name: '',\n      value: ''\n    }\n  });\n\n  return state;\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: WebhookRouterFormState\n): RenderNode => {\n  const headers: HeaderMap = {};\n\n  for (const entry of state.headers) {\n    if (entry.value.name.trim().length !== 0) {\n      headers[entry.value.name] = entry.value.value;\n    }\n  }\n\n  let uuid = createUUID();\n\n  const originalAction = getOriginalAction(settings);\n  if (originalAction) {\n    uuid = originalAction.uuid;\n  }\n\n  const newAction: CallWebhook = {\n    uuid,\n    headers,\n    type: Types.call_webhook,\n    url: state.url.value,\n    method: state.method.value.value as Methods,\n    result_name: state.resultName.value\n  };\n\n  // include the body if we aren't a get\n  if (newAction.method !== Methods.GET) {\n    newAction.body = state.postBody.value;\n  }\n\n  return createWebhookBasedNode(newAction, settings.originalNode);\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\n\nimport { nodeToState, stateToNode } from './helpers';\nimport styles from './WaitRouterForm.module.scss';\n\nexport interface WaitRouterFormState extends FormState {\n  resultName: StringEntry;\n}\n\nexport default class WaitRouterForm extends React.Component<RouterFormProps, WaitRouterFormState> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate('Result Name', value, [Alphanumeric, StartIsNonNumeric]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleSave(): void {\n    if (this.state.valid) {\n      this.props.updateRouter(\n        stateToNode(this.props.nodeSettings, this.state, this.props.typeConfig)\n      );\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div className={styles.result_name}>\n          {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        </div>\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport { getAllErrors } from 'components/flow/actions/helpers';\nimport { HeaderEntry } from 'components/flow/routers/webhook/WebhookRouterForm';\nimport styles from 'components/flow/routers/webhook/WebhookRouterForm.module.scss';\nimport FormElement from 'components/form/FormElement';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport * as React from 'react';\nimport { StringEntry, ValidationFailure } from 'store/nodeEditor';\nimport { HeaderName, validate } from 'store/validators';\n\n// TODO: move this into webhook router component\nexport interface Header {\n  uuid: string;\n  name: string;\n  value: string;\n}\n\nexport interface HeaderElementProps {\n  entry: HeaderEntry;\n  index: number;\n  onRemove: (header: Header) => void;\n  onChange: (header: Header, validationFailures: ValidationFailure[]) => void;\n  empty?: boolean;\n}\n\ninterface HeaderElementState {\n  name: StringEntry;\n  value: StringEntry;\n}\n\nexport const headerContainerSpecId = 'header-container';\nexport const nameContainerSpecId = 'name-container';\nexport const valueConatainerSpecId = 'value-container';\nexport const removeIcoSpecId = 'remove-icon';\n\nexport const HEADER_NAME_ERROR = 'HTTP headers must have a name';\nexport const NAME_PLACEHOLDER = 'Header Name';\nexport const VALUE_PLACEHOLDER = 'Value';\n\nexport default class HeaderElement extends React.Component<HeaderElementProps, HeaderElementState> {\n  constructor(props: HeaderElementProps) {\n    super(props);\n\n    const header = this.props.entry.value;\n    const name = header.name || '';\n    const value = header.value || '';\n\n    this.state = {\n      name: { value: name },\n      value: { value }\n    };\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private getHeader(): Header {\n    return {\n      name: this.state.name.value,\n      value: this.state.value.value,\n      uuid: this.props.entry.value.uuid\n    };\n  }\n\n  private handleChangeName(value: string): void {\n    const name = validate('Header name', value, [HeaderName]);\n    this.setState({ name: { value: name.value } }, () =>\n      this.props.onChange(\n        this.getHeader(),\n        getAllErrors(this.state.value).concat(getAllErrors(name))\n      )\n    );\n  }\n\n  private handleChangeValue(value: string): void {\n    this.setState({ value: { value } }, () => {\n      const name = validate('Header name', this.state.name.value, [HeaderName]);\n      this.props.onChange(\n        this.getHeader(),\n        getAllErrors(this.state.value).concat(getAllErrors(name))\n      );\n    });\n  }\n\n  private handleRemove(): void {\n    this.props.onRemove(this.getHeader());\n  }\n\n  private getRemoveIco(): JSX.Element {\n    return (\n      <div className={styles.remove_ico} onClick={this.handleRemove} data-spec={removeIcoSpecId}>\n        <span className=\"fe-x\" />\n      </div>\n    );\n  }\n\n  public render(): JSX.Element {\n    const removeIco: JSX.Element = this.getRemoveIco();\n    return (\n      <FormElement name=\"Header\" entry={this.props.entry}>\n        <div className={styles.header} data-spec={headerContainerSpecId}>\n          <div className={styles.header_name} data-spec={nameContainerSpecId}>\n            <TextInputElement\n              placeholder={NAME_PLACEHOLDER}\n              name=\"name\"\n              onChange={this.handleChangeName}\n              entry={this.state.name}\n            />\n          </div>\n          <div className={styles.header_value} data-spec={valueConatainerSpecId}>\n            <TextInputElement\n              placeholder={VALUE_PLACEHOLDER}\n              name=\"value\"\n              onChange={this.handleChangeValue}\n              entry={this.state.value}\n              onFieldFailures={(validationFailures: ValidationFailure[]) => {\n                const name = validate('Header name', this.state.name.value, [HeaderName]);\n                this.props.onChange(\n                  this.getHeader(),\n                  validationFailures.concat(getAllErrors(name))\n                );\n              }}\n              autocomplete={true}\n            />\n          </div>\n          {removeIco}\n        </div>\n      </FormElement>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport HeaderElement, { Header } from 'components/flow/routers/webhook/header/HeaderElement';\nimport {\n  GET_METHOD,\n  METHOD_OPTIONS,\n  MethodOption,\n  Methods,\n  nodeToState,\n  stateToNode\n} from 'components/flow/routers/webhook/helpers';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport SelectElement from 'components/form/select/SelectElement';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport { DEFAULT_BODY } from 'components/nodeeditor/constants';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport FlipMove from 'react-flip-move';\nimport { FormEntry, FormState, mergeForm, StringEntry, ValidationFailure } from 'store/nodeEditor';\nimport {\n  Alphanumeric,\n  Required,\n  shouldRequireIf,\n  StartIsNonNumeric,\n  validate,\n  ValidURL\n} from 'store/validators';\nimport { createUUID } from 'utils';\n\nimport styles from './WebhookRouterForm.module.scss';\n\nexport interface HeaderEntry extends FormEntry {\n  value: Header;\n}\n\nexport interface MethodEntry extends FormEntry {\n  value: MethodOption;\n}\n\nexport interface WebhookRouterFormState extends FormState {\n  headers: HeaderEntry[];\n  method: MethodEntry;\n  url: StringEntry;\n  postBody: StringEntry;\n  resultName: StringEntry;\n}\n\nexport default class WebhookRouterForm extends React.Component<\n  RouterFormProps,\n  WebhookRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n    this.state = nodeToState(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleUpdate(\n    keys: {\n      method?: MethodOption;\n      url?: string;\n      postBody?: string;\n      header?: Header;\n      removeHeader?: Header;\n      validationFailures?: ValidationFailure[];\n      resultName?: string;\n    },\n    submitting = false\n  ): boolean {\n    const updates: Partial<WebhookRouterFormState> = {};\n\n    let ensureEmptyHeader = false;\n\n    if (keys.hasOwnProperty('method')) {\n      updates.method = { value: keys.method };\n\n      if (keys.method.value !== GET_METHOD.value) {\n        if (!this.state.postBody.value) {\n          updates.postBody = { value: DEFAULT_BODY };\n        }\n      } else {\n        updates.postBody = { value: null };\n      }\n    }\n\n    if (keys.hasOwnProperty('url')) {\n      updates.url = validate('URL', keys.url, [shouldRequireIf(submitting), ValidURL]);\n    }\n\n    if (keys.hasOwnProperty('resultName')) {\n      updates.resultName = validate('Result Name', keys.resultName, [shouldRequireIf(submitting)]);\n    }\n\n    if (keys.hasOwnProperty('postBody')) {\n      updates.postBody = { value: keys.postBody };\n    }\n\n    if (keys.hasOwnProperty('header')) {\n      updates.headers = [{ value: keys.header, validationFailures: keys.validationFailures }];\n      ensureEmptyHeader = true;\n    }\n\n    let toRemove: any[] = [];\n    if (keys.hasOwnProperty('removeHeader')) {\n      toRemove = [{ headers: [{ value: keys.removeHeader }] }];\n      ensureEmptyHeader = true;\n    }\n\n    const updated = mergeForm(this.state, updates, toRemove);\n\n    // update our form\n    this.setState(updated, () => {\n      // if we updated headers, check if we need a new one\n      if (ensureEmptyHeader) {\n        let needsHeader = true;\n        for (const header of this.state.headers) {\n          if (header.value.name.trim() === '') {\n            needsHeader = false;\n            break;\n          }\n        }\n\n        if (needsHeader) {\n          this.handleCreateHeader();\n        }\n      }\n    });\n    return updated.valid;\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate('Result Name', value, [Required, Alphanumeric, StartIsNonNumeric]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleMethodUpdate(method: MethodOption): boolean {\n    return this.handleUpdate({ method });\n  }\n\n  private handleUrlUpdate(url: string, submitting = false): boolean {\n    return this.handleUpdate({ url }, submitting);\n  }\n\n  private handleHeaderRemoved(removeHeader: Header): boolean {\n    return this.handleUpdate({ removeHeader });\n  }\n\n  private handleHeaderUpdated(header: Header, validationFailures: ValidationFailure[]): boolean {\n    return this.handleUpdate({ header, validationFailures });\n  }\n\n  private handleCreateHeader(): boolean {\n    return this.handleUpdate({\n      header: {\n        uuid: createUUID(),\n        name: '',\n        value: ''\n      }\n    });\n  }\n\n  private handlePostBodyUpdate(postBody: string): boolean {\n    return this.handleUpdate({ postBody });\n  }\n\n  private handleSave(): void {\n    // validate our url in case they haven't interacted\n    const valid = this.handleUpdate(\n      { url: this.state.url.value, resultName: this.state.resultName.value },\n      true\n    );\n\n    if (valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  private renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    const headerElements: JSX.Element[] = this.state.headers.map(\n      (header: HeaderEntry, index: number, arr: HeaderEntry[]) => {\n        return (\n          <div key={`header_${header.value.uuid}`}>\n            <HeaderElement\n              entry={header}\n              onRemove={this.handleHeaderRemoved}\n              onChange={this.handleHeaderUpdated}\n              index={index}\n            />\n          </div>\n        );\n      }\n    );\n\n    const tabs: Tab[] = [];\n    tabs.push({\n      name: 'HTTP Headers',\n      hasErrors: !!this.state.headers.find((header: HeaderEntry) => hasErrors(header)),\n      body: (\n        <>\n          <p className={styles.info}>\n            Add any additional headers below that you would like to send along with your request.\n          </p>\n          <FlipMove\n            easing=\"ease-out\"\n            enterAnimation=\"elevator\"\n            leaveAnimation=\"elevator\"\n            duration={100}\n          >\n            {headerElements}\n          </FlipMove>\n        </>\n      ),\n      checked: this.state.headers.length > 1\n    });\n\n    const method = this.state.method.value.value;\n    if (method === Methods.POST || method === Methods.PUT) {\n      tabs.push({\n        name: 'POST Body',\n        body: (\n          <div key=\"post_body\" className={styles.body_form}>\n            <h4>{this.state.method.value.label} Body</h4>\n            <p>Modify the body of your {this.state.method.value.label} request.</p>\n            <TextInputElement\n              __className={styles.req_body}\n              name=\"Body\"\n              showLabel={false}\n              entry={this.state.postBody}\n              onChange={this.handlePostBodyUpdate}\n              helpText={`Modify the body of the ${this.state.method.value.label} \n                        request that will be sent to your webhook.`}\n              onFieldFailures={(persistantFailures: ValidationFailure[]) => {\n                const postBody = { ...this.state.postBody, persistantFailures };\n                this.setState({\n                  postBody,\n                  valid: this.state.valid && !hasErrors(postBody)\n                });\n              }}\n              autocomplete={true}\n              textarea={true}\n            />\n          </div>\n        ),\n        checked: this.state.postBody.value !== DEFAULT_BODY\n      });\n    }\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={tabs}\n      >\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div className={styles.method}>\n          <SelectElement\n            name=\"MethodMap\"\n            entry={this.state.method}\n            onChange={this.handleMethodUpdate}\n            options={METHOD_OPTIONS}\n          />\n        </div>\n        <div className={styles.url}>\n          <TextInputElement\n            name=\"URL\"\n            placeholder=\"Enter a URL\"\n            entry={this.state.url}\n            onChange={this.handleUrlUpdate}\n            onFieldFailures={(persistantFailures: ValidationFailure[]) => {\n              const url = { ...this.state.url, persistantFailures };\n              this.setState({\n                url,\n                valid: this.state.valid && !hasErrors(url)\n              });\n            }}\n            autocomplete={true}\n          />\n        </div>\n        <div className={styles.instructions}>\n          <p>If your server responds with JSON, each property will be added to the Flow.</p>\n          <pre className={styles.code}>\n            {'{ \"product\": \"Solar Charging Kit\", \"stock level\": 32 }'}\n          </pre>\n          <p>\n            This response would add <span className={styles.example}>@webhook.product</span> and{' '}\n            <span className={styles.example}>@webhook[\"stock level\"]</span> for use in the flow.\n          </p>\n        </div>\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import AddLabelsComp from 'components/flow/actions/addlabels/AddLabels';\nimport AddLabelsForm from 'components/flow/actions/addlabels/AddLabelsForm';\nimport AddURNComp from 'components/flow/actions/addurn/AddURN';\nimport AddURNForm from 'components/flow/actions/addurn/AddURNForm';\nimport CallResthookComp from 'components/flow/actions/callresthook/CallResthook';\nimport CallWebhookComp from 'components/flow/actions/callwebhook/CallWebhook';\nimport AddGroupsForm from 'components/flow/actions/changegroups/addgroups/AddGroupsForm';\nimport ChangeGroupsComp from 'components/flow/actions/changegroups/ChangeGroups';\nimport RemoveGroupsForm from 'components/flow/actions/changegroups/removegroups/RemoveGroupsForm';\nimport MsgLocalizationForm from 'components/flow/actions/localization/MsgLocalizationForm';\nimport MissingComp from 'components/flow/actions/missing/Missing';\nimport PlayAudioComp from 'components/flow/actions/playaudio/PlayAudio';\nimport PlayAudioForm from 'components/flow/actions/playaudio/PlayAudioForm';\nimport SayMsgComp from 'components/flow/actions/saymsg/SayMsg';\nimport SayMsgForm from 'components/flow/actions/saymsg/SayMsgForm';\nimport SendBroadcastComp from 'components/flow/actions/sendbroadcast/SendBroadcast';\nimport SendBroadcastForm from 'components/flow/actions/sendbroadcast/SendBroadcastForm';\nimport SendEmailComp from 'components/flow/actions/sendemail/SendEmail';\nimport SendEmailForm from 'components/flow/actions/sendemail/SendEmailForm';\nimport SendMsgComp from 'components/flow/actions/sendmsg/SendMsg';\nimport SendMsgForm from 'components/flow/actions/sendmsg/SendMsgForm';\nimport SetRunResultComp from 'components/flow/actions/setrunresult/SetRunResult';\nimport SetRunResultForm from 'components/flow/actions/setrunresult/SetRunResultForm';\nimport StartFlowComp from 'components/flow/actions/startflow/StartFlow';\nimport StartSessionComp from 'components/flow/actions/startsession/StartSession';\nimport StartSessionForm from 'components/flow/actions/startsession/StartSessionForm';\nimport TransferAirtimeComp from 'components/flow/actions/transferairtime/TransferAirtime';\nimport UpdateContactComp from 'components/flow/actions/updatecontact/UpdateContact';\nimport UpdateContactForm from 'components/flow/actions/updatecontact/UpdateContactForm';\nimport AirtimeRouterForm from 'components/flow/routers/airtime/AirtimeRouterForm';\nimport DigitsRouterForm from 'components/flow/routers/digits/DigitsRouterForm';\nimport ExpressionRouterForm from 'components/flow/routers/expression/ExpressionRouterForm';\nimport FieldRouterForm from 'components/flow/routers/field/FieldRouterForm';\nimport GroupsRouterForm from 'components/flow/routers/groups/GroupsRouterForm';\nimport RouterLocalizationForm from 'components/flow/routers/localization/RouterLocalizationForm';\nimport MenuRouterForm from 'components/flow/routers/menu/MenuRouterForm';\nimport RandomRouterForm from 'components/flow/routers/random/RandomRouterForm';\nimport ResponseRouterForm from 'components/flow/routers/response/ResponseRouterForm';\nimport ResthookRouterForm from 'components/flow/routers/resthook/ResthookRouterForm';\nimport ResultRouterForm from 'components/flow/routers/result/ResultRouterForm';\nimport SubflowRouterForm from 'components/flow/routers/subflow/SubflowRouterForm';\nimport WaitRouterForm from 'components/flow/routers/wait/WaitRouterForm';\nimport WebhookRouterForm from 'components/flow/routers/webhook/WebhookRouterForm';\nimport { HIDDEN, ONLINE, SURVEY, TEXT_TYPES, Type, Types, VOICE } from 'config/interfaces';\nimport { HintTypes, RouterTypes } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\n\nconst dedupeTypeConfigs = (typeConfigs: Type[]) => {\n  const map: any = {};\n  return typeConfigs.filter(config => {\n    if (config.type === 'missing') {\n      return false;\n    }\n    const { name: key } = config;\n    return map[key] ? false : (map[key] = true);\n  });\n};\n\nexport interface TypeMap {\n  [propName: string]: Type;\n}\n\nexport type GetTypeConfig = (type: string) => Type;\n\nexport interface Scheme {\n  scheme: string;\n  name: string;\n}\n\nexport const SCHEMES: Scheme[] = [\n  { scheme: 'ext', name: 'External ID' },\n  { scheme: 'facebook', name: 'Facebook ID' },\n  { scheme: 'fcm', name: 'Firebase ID' },\n  { scheme: 'jiochat', name: 'Jiochat ID' },\n  { scheme: 'line', name: 'Line ID' },\n  { scheme: 'mailto', name: 'Email Address' },\n  { scheme: 'tel', name: 'Phone Number' },\n  { scheme: 'telegram', name: 'Telegram ID' },\n  { scheme: 'twitterid', name: 'Twitter ID' },\n  { scheme: 'wechat', name: 'Wechat ID' },\n  { scheme: 'whatsapp', name: 'Whatsapp Number' },\n  { scheme: 'viber', name: 'Viber ID' }\n];\n\nexport const typeConfigList: Type[] = [\n  {\n    type: Types.missing,\n    name: 'Missing',\n    description: ' ** Unsupported ** ',\n    component: MissingComp,\n    visibility: HIDDEN\n  },\n\n  {\n    type: Types.say_msg,\n    name: 'Play Message',\n    description: 'Play a message',\n    form: SayMsgForm,\n    localization: MsgLocalizationForm,\n    localizeableKeys: ['text', 'audio_url'],\n    component: SayMsgComp,\n    visibility: VOICE\n  },\n\n  {\n    type: Types.wait_for_menu,\n    name: 'Wait for Menu Selection',\n    description: 'Wait for menu selection',\n    form: MenuRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    visibility: VOICE\n  },\n  {\n    type: Types.wait_for_digits,\n    name: 'Wait for Digits',\n    description: 'Wait for multiple digits',\n    form: DigitsRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits', 'cases'],\n    visibility: VOICE\n  },\n\n  {\n    type: Types.send_msg,\n    name: 'Send Message',\n    description: 'Send the contact a message',\n    form: SendMsgForm,\n    localization: MsgLocalizationForm,\n    localizeableKeys: ['text', 'quick_replies'],\n    component: SendMsgComp\n  },\n  {\n    type: Types.wait_for_response,\n    name: 'Wait for Response',\n    description: 'Wait for the contact to respond',\n    form: ResponseRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits', 'cases'],\n    aliases: [RouterTypes.switch],\n    visibility: TEXT_TYPES\n  },\n\n  {\n    type: Types.send_broadcast,\n    name: 'Send Broadcast',\n    description: 'Send somebody else a message',\n    form: SendBroadcastForm,\n    localization: MsgLocalizationForm,\n    localizeableKeys: ['text'],\n    component: SendBroadcastComp\n  },\n  {\n    type: Types.add_input_labels,\n    name: 'Add Labels',\n    description: 'Label the incoming message',\n    form: AddLabelsForm,\n    component: AddLabelsComp\n  },\n  {\n    type: Types.add_contact_urn,\n    name: 'Add URN',\n    description: 'Add a URN for the contact',\n    form: AddURNForm,\n    component: AddURNComp\n  },\n  {\n    type: Types.add_contact_groups,\n    name: 'Add to Group',\n    description: 'Add the contact to a group',\n    form: AddGroupsForm,\n    component: ChangeGroupsComp\n  },\n  {\n    type: Types.remove_contact_groups,\n    name: 'Remove from Group',\n    description: 'Remove the contact from a group',\n    form: RemoveGroupsForm,\n    component: ChangeGroupsComp\n  },\n  {\n    type: Types.set_contact_field,\n    aliases: [Types.set_contact_name, Types.set_contact_language, Types.set_contact_channel],\n    name: 'Update Contact',\n    description: 'Update the contact',\n    form: UpdateContactForm,\n    component: UpdateContactComp\n  },\n  {\n    type: Types.send_email,\n    name: 'Send Email',\n    description: 'Send an email',\n    form: SendEmailForm,\n    component: SendEmailComp,\n    visibility: ONLINE\n  },\n  {\n    type: Types.set_run_result,\n    name: 'Save Flow Result',\n    description: 'Save a result for this flow',\n    form: SetRunResultForm,\n    component: SetRunResultComp\n  },\n\n  {\n    type: Types.play_audio,\n    name: 'Play Recording',\n    description: 'Play a contact recording',\n    form: PlayAudioForm,\n    component: PlayAudioComp,\n    visibility: VOICE\n  },\n\n  {\n    type: Types.call_webhook,\n    name: 'Call Webhook',\n    description: 'Call a webhook',\n    form: WebhookRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    component: CallWebhookComp,\n    aliases: [Types.split_by_webhook],\n    visibility: ONLINE\n  },\n  {\n    type: Types.call_resthook,\n    name: 'Call Zapier',\n    description: 'Call Zapier',\n    form: ResthookRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    component: CallResthookComp,\n    aliases: [Types.split_by_resthook],\n    visibility: ONLINE\n  },\n  {\n    type: Types.enter_flow,\n    name: 'Enter a Flow',\n    description: 'Enter another flow',\n    form: SubflowRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    component: StartFlowComp,\n    aliases: [Types.split_by_subflow]\n  },\n  {\n    type: Types.start_session,\n    name: 'Start Somebody Else',\n    description: 'Start somebody else in a flow',\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    form: StartSessionForm,\n    component: StartSessionComp,\n    visibility: ONLINE\n  },\n  {\n    type: Types.transfer_airtime,\n    name: 'Send Airtime',\n    description: 'Send the contact airtime',\n    form: AirtimeRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    component: TransferAirtimeComp,\n    aliases: [Types.split_by_airtime]\n  },\n\n  /** Routers */\n\n  {\n    type: Types.wait_for_audio,\n    name: 'Wait for Audio',\n    description: 'Wait for an audio recording',\n    form: WaitRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    visibility: SURVEY\n  },\n  {\n    type: Types.wait_for_image,\n    name: 'Wait for Image',\n    description: 'Wait for an image',\n    form: WaitRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    visibility: SURVEY\n  },\n  {\n    type: Types.wait_for_video,\n    name: 'Wait for Video',\n    description: 'Wait for a video',\n    form: WaitRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    visibility: SURVEY\n  },\n  {\n    type: Types.wait_for_location,\n    name: 'Wait for Location',\n    description: 'Wait for location GPS coordinates',\n    form: WaitRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    visibility: SURVEY\n  },\n  {\n    type: Types.split_by_expression,\n    name: 'Split by Expression',\n    description: 'Split by a custom expression',\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits', 'cases'],\n    form: ExpressionRouterForm\n  },\n  {\n    type: Types.split_by_contact_field,\n    name: 'Split by Contact Field',\n    description: 'Split by a contact field',\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits', 'cases'],\n    form: FieldRouterForm\n  },\n  {\n    type: Types.split_by_run_result,\n    aliases: [Types.split_by_run_result_delimited],\n    name: 'Split by Flow Result',\n    description: 'Split by a result in the flow',\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits', 'cases'],\n    form: ResultRouterForm\n  },\n  {\n    type: Types.split_by_random,\n    name: 'Split Randomly',\n    description: 'Split by random chance',\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    form: RandomRouterForm\n  },\n  {\n    type: Types.split_by_groups,\n    name: 'Split by Group Membership',\n    description: 'Split by group membership',\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    form: GroupsRouterForm\n  }\n\n  // {type: 'random', name: 'Random Split', description: 'Split them up randomly', form: RandomRouterForm}\n];\n\nexport const configsToDisplay = dedupeTypeConfigs(typeConfigList);\n\nexport const typeConfigMap: TypeMap = typeConfigList.reduce((map: TypeMap, typeConfig: Type) => {\n  map[typeConfig.type] = typeConfig;\n  if (typeConfig.aliases) {\n    typeConfig.aliases.forEach((alias: string) => (map[alias] = typeConfig));\n  }\n  return map;\n}, {});\n\n/**\n * Shortcut for constant lookup of type config in type configs map\n * @param {string} type - The type of the type config to return, e.g. 'send_msg'\n * @returns {Object} - The type config found at typeConfigs[type] or -1\n */\nexport const getTypeConfig = (type: Types | RouterTypes): Type => {\n  let config = typeConfigMap[type];\n\n  if (!config) {\n    config = typeConfigMap.missing;\n  }\n  return config;\n};\n\nexport const getType = (renderNode: RenderNode): any => {\n  const wait = renderNode.node.router.wait;\n  if (wait && wait.hint) {\n    switch (wait.hint.type) {\n      case HintTypes.digits:\n        if (wait.hint.count === 1) {\n          return Types.wait_for_menu;\n        }\n        return Types.wait_for_digits;\n      case HintTypes.audio:\n        return Types.wait_for_audio;\n      case HintTypes.image:\n        return Types.wait_for_image;\n      case HintTypes.location:\n        return Types.wait_for_location;\n      case HintTypes.video:\n        return Types.wait_for_video;\n    }\n  }\n  return renderNode.ui.type;\n};\n","import { getActionUUID } from 'components/flow/actions/helpers';\nimport { CHANNEL_PROPERTY, LANGUAGE_PROPERTY, NAME_PROPERTY } from 'components/flow/props';\nimport { Types } from 'config/interfaces';\nimport { getTypeConfig } from 'config/typeConfigs';\nimport {\n  Channel,\n  Field,\n  Language,\n  SetContactAttribute,\n  SetContactChannel,\n  SetContactField,\n  SetContactLanguage,\n  SetContactName\n} from 'flowTypes';\nimport { Asset, AssetType, REMOVE_VALUE_ASSET } from 'store/flowContext';\nimport { AssetEntry, FormState, NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nexport interface UpdateContactFormState extends FormState {\n  type: Types;\n  name: StringEntry;\n  channel: AssetEntry;\n  language: AssetEntry;\n  field: AssetEntry;\n  fieldValue: StringEntry;\n}\n\nexport const initializeForm = (settings: NodeEditorSettings): UpdateContactFormState => {\n  const state: UpdateContactFormState = {\n    type: Types.set_contact_name,\n    valid: false,\n    name: { value: '' },\n    channel: { value: null },\n    language: { value: null },\n    field: { value: NAME_PROPERTY },\n    fieldValue: { value: '' }\n  };\n\n  if (settings.originalAction) {\n    const originalType = settings.originalAction.type;\n    // these have aliases, so compare the config we resolve to\n    if (getTypeConfig(originalType) === getTypeConfig(Types.set_contact_field)) {\n      state.type = originalType;\n\n      switch (originalType) {\n        case Types.set_contact_field:\n          const fieldAction = settings.originalAction as SetContactField;\n          state.field = { value: fieldToAsset(fieldAction.field) };\n          state.fieldValue = { value: fieldAction.value };\n          state.valid = true;\n          return state;\n        case Types.set_contact_channel:\n          const channelAction = settings.originalAction as SetContactChannel;\n          state.field = { value: CHANNEL_PROPERTY };\n          state.channel = { value: channelToAsset(channelAction.channel) };\n          state.valid = true;\n          return state;\n        case Types.set_contact_language:\n          const languageAction = settings.originalAction as SetContactLanguage;\n          state.field = { value: LANGUAGE_PROPERTY };\n          state.valid = true;\n          state.language = {\n            value: languageToAsset({\n              iso: languageAction.language,\n              name: languageAction.language\n            })\n          };\n          return state;\n        case Types.set_contact_name:\n          const nameAction = settings.originalAction as SetContactName;\n          state.valid = true;\n          state.name = {\n            value: nameAction.name\n          };\n          return state;\n      }\n    }\n  }\n\n  // default is updating name\n  return state;\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  state: UpdateContactFormState\n): SetContactAttribute => {\n  /* istanbul ignore else */\n  if (state.type === Types.set_contact_field) {\n    return {\n      uuid: getActionUUID(settings, Types.set_contact_field),\n      type: state.type,\n      field: assetToField(state.field.value),\n      value: state.fieldValue.value\n    };\n  } else if (state.type === Types.set_contact_channel) {\n    return {\n      uuid: getActionUUID(settings, Types.set_contact_channel),\n      type: state.type,\n      channel: assetToChannel(state.channel.value)\n    };\n  } else if (state.type === Types.set_contact_language) {\n    return {\n      uuid: getActionUUID(settings, Types.set_contact_language),\n      type: state.type,\n      language: assetToLanguage(state.language.value)\n    };\n  } else if (state.type === Types.set_contact_name) {\n    return {\n      uuid: getActionUUID(settings, Types.set_contact_name),\n      type: state.type,\n      name: state.name.value\n    };\n  }\n};\n\nexport const sortFieldsAndProperties = (a: Asset, b: Asset): number => {\n  // Name always goes first\n  /* istanbul ignore else */\n  if (a === NAME_PROPERTY && b !== NAME_PROPERTY) {\n    return -1;\n  } else if (b === NAME_PROPERTY && a !== NAME_PROPERTY) {\n    return 1;\n  }\n\n  if (a.type === b.type) {\n    return a.name.localeCompare(b.name);\n  }\n\n  if (a.type === AssetType.Scheme) {\n    return 1;\n  }\n\n  // go with alpha-sort for everthing else\n  else if (a.type !== b.type) {\n    if (a.type === AssetType.ContactProperty) {\n      return -1;\n    }\n\n    if (b.type === AssetType.ContactProperty) {\n      return 1;\n    }\n  }\n  // non-name non-fields go last\n  return a.name.localeCompare(b.name);\n};\n\nexport const fieldToAsset = (field: Field = { key: '', name: '' }): Asset => ({\n  id: field.key,\n  name: field.name,\n  type: AssetType.Field\n});\n\nexport const assetToField = (asset: Asset): Field => ({\n  key: asset.id,\n  name: asset.name\n});\n\nexport const assetToChannel = (asset: Asset): any => {\n  if (asset.id === REMOVE_VALUE_ASSET.id) {\n    return {};\n  }\n\n  return {\n    uuid: asset.id,\n    name: asset.name\n  };\n};\n\nexport const assetToLanguage = (asset: Asset): string => {\n  if (asset.id === REMOVE_VALUE_ASSET.id) {\n    return '';\n  }\n  return asset.id;\n};\n\nexport const languageToAsset = ({ iso, name }: Language) => {\n  if (!iso || iso.length === 0) {\n    return REMOVE_VALUE_ASSET;\n  }\n\n  return {\n    id: iso,\n    name,\n    type: AssetType.Language\n  };\n};\n\nexport const channelToAsset = ({ uuid, name }: Channel) => {\n  if (!uuid) {\n    return REMOVE_VALUE_ASSET;\n  }\n  return {\n    id: uuid,\n    name,\n    type: AssetType.Language\n  };\n};\n\n/* export const createNewOption = composeCreateNewOption({\n    idCb: label => snakify(label),\n    type: AssetType.Field\n});*/\n","import { FlowPosition } from 'flowTypes';\nimport ActionTypes, { UpdateEditorState } from 'store/actionTypes';\nimport Constants from 'store/constants';\nimport { Asset, RenderNode } from 'store/flowContext';\n\n// tslint:disable:no-shadowed-variable\nexport interface DragSelection {\n  startX?: number;\n  startY?: number;\n  currentX?: number;\n  currentY?: number;\n}\n\nexport interface DebugState {\n  showUUIDs: boolean;\n}\n\nexport interface CanvasPositions {\n  [uuid: string]: FlowPosition;\n}\n\nexport interface Activity {\n  nodes: { [uuid: string]: number };\n  segments: { [exitToNodeKey: string]: number };\n  recentMessages?: { [key: string]: RecentMessage[] };\n  is_starting?: boolean;\n}\n\nexport interface RecentMessage {\n  sent: Date;\n  text: string;\n}\n\nexport interface EditorState {\n  currentRevision: number | null;\n  simulating: boolean;\n  language: Asset | null;\n  translating: boolean;\n  fetchingFlow: boolean;\n  ghostNode: RenderNode | null;\n  containerOffset: { left: number; top: number };\n  dragActive: boolean;\n  dragStartTime: number;\n  dragDownPosition: FlowPosition | null;\n  dragNodeUUID: string | null;\n  dragGroup: boolean;\n  dragSelection: DragSelection | null;\n  debug?: DebugState | null;\n\n  modalMessage?: ModalMessage;\n  saving?: boolean;\n\n  // the currently shown activity, can be\n  // simulation or live\n  activity: Activity;\n\n  // the current live activity\n  liveActivity: Activity;\n\n  // interval in millis we should refresh activity\n  activityInterval: number;\n\n  // is our page visible or tabbed away\n  visible: boolean;\n}\n\nexport interface ModalMessage {\n  title: string;\n  body: string;\n}\n\nexport const EMPTY_DRAG_STATE: any = {\n  dragStartTime: 0,\n  dragDownPosition: null,\n  dragActive: false,\n  dragNodeUUID: null,\n  dragGroup: false,\n  dragSelection: null\n};\n\n// Initial state\nexport const initialState: EditorState = {\n  containerOffset: { top: 0, left: 0 },\n  currentRevision: null,\n  simulating: false,\n  translating: false,\n  language: null,\n  fetchingFlow: false,\n  dragStartTime: 0,\n  dragDownPosition: null,\n  dragActive: false,\n  dragNodeUUID: null,\n  dragGroup: false,\n  dragSelection: null,\n  ghostNode: null,\n  debug: null,\n\n  activity: { segments: {}, nodes: {} },\n  liveActivity: { segments: {}, nodes: {} },\n  activityInterval: 5000,\n  visible: true\n};\n\n// Action Creator\nexport const updateEditorState = (editorState: EditorState): UpdateEditorState => ({\n  type: Constants.UPDATE_EDITOR_STATE,\n  payload: {\n    editorState\n  }\n});\n\n/* Reducer */\nexport const editorState = (editorState: EditorState = initialState, action: ActionTypes) => {\n  switch (action.type) {\n    case Constants.UPDATE_EDITOR_STATE:\n      return action.payload!.editorState;\n    default:\n      return editorState;\n  }\n};\n\n// export our reducer\nexport default editorState;\n","import { determineTypeConfig } from 'components/flow/helpers';\nimport { getResultName } from 'components/flow/node/helpers';\nimport { getSwitchRouter } from 'components/flow/routers/helpers';\nimport { Revision } from 'components/revisions/RevisionExplorer';\nimport { FlowTypes, Type, Types } from 'config/interfaces';\nimport { getTypeConfig } from 'config/typeConfigs';\nimport { createAssetStore, getFlowDefinition, saveRevision } from 'external';\nimport isEqual from 'fast-deep-equal';\nimport {\n  Action,\n  AnyAction,\n  Category,\n  Dimensions,\n  Endpoints,\n  Exit,\n  FlowDefinition,\n  FlowNode,\n  SendMsg,\n  SetContactField,\n  SetRunResult,\n  StickyNote\n} from 'flowTypes';\nimport mutate from 'immutability-helper';\nimport { Dispatch } from 'redux';\nimport { CanvasPositions, EditorState, EMPTY_DRAG_STATE, updateEditorState } from 'store/editor';\nimport {\n  Asset,\n  AssetStore,\n  DEFAULT_LANGUAGE,\n  RenderNode,\n  RenderNodeMap,\n  updateAssets,\n  updateBaseLanguage,\n  updateContactFields,\n  updateDefinition,\n  updateNodes\n} from 'store/flowContext';\nimport {\n  createEmptyNode,\n  fetchFlowActivity,\n  getActionIndex,\n  getCurrentDefinition,\n  getFlowComponents,\n  getLocalizations,\n  getNode,\n  guessNodeType,\n  mergeAssetMaps\n} from 'store/helpers';\nimport * as mutators from 'store/mutators';\nimport {\n  NodeEditorSettings,\n  updateNodeEditorSettings,\n  updateTypeConfig,\n  updateUserAddingAction\n} from 'store/nodeEditor';\nimport AppState from 'store/state';\nimport { createUUID, NODE_SPACING, timeEnd, timeStart } from 'utils';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport type DispatchWithState = Dispatch<AppState>;\n\nexport type GetState = () => AppState;\n\nexport type Thunk<T> = (dispatch: DispatchWithState, getState?: GetState) => T;\n\nexport type AsyncThunk = Thunk<Promise<void>>;\n\nexport type OnAddToNode = (node: FlowNode) => Thunk<void>;\n\nexport type HandleTypeConfigChange = (typeConfig: Type) => Thunk<void>;\n\nexport type OnOpenNodeEditor = (settings: NodeEditorSettings) => Thunk<void>;\n\nexport type OnUpdateCanvasPositions = (positions: CanvasPositions) => Thunk<RenderNodeMap>;\n\nexport type OnRemoveNodes = (nodeUUIDs: string[]) => Thunk<RenderNodeMap>;\n\nexport type AddAsset = (assetType: string, asset: Asset) => Thunk<void>;\n\nexport type RemoveNode = (nodeToRemove: FlowNode) => Thunk<RenderNodeMap>;\n\nexport type UpdateDimensions = (uuid: string, dimensions: Dimensions) => Thunk<void>;\n\nexport type FetchFlow = (\n  endpoints: Endpoints,\n  uuid: string,\n  onLoad: () => void\n) => Thunk<Promise<void>>;\n\nexport type LoadFlowDefinition = (\n  definition: FlowDefinition,\n  assetStore: AssetStore\n) => Thunk<Promise<void>>;\n\nexport type CreateNewRevision = () => Thunk<void>;\n\nexport type NoParamsAC = () => Thunk<void>;\n\nexport type UpdateConnection = (source: string, target: string) => Thunk<RenderNodeMap>;\n\nexport type OnConnectionDrag = (event: ConnectionEvent, flowType: FlowTypes) => Thunk<void>;\n\nexport type OnUpdateLocalizations = (\n  language: string,\n  changes: LocalizationUpdates\n) => Thunk<FlowDefinition>;\n\nexport type UpdateSticky = (stickyUUID: string, sticky: StickyNote) => Thunk<void>;\n\nexport type OnUpdateAction = (\n  action: AnyAction,\n  onUpdated?: (dispatch: DispatchWithState, getState: GetState) => void\n) => Thunk<RenderNodeMap>;\n\nexport type ActionAC = (nodeUUID: string, action: AnyAction) => Thunk<RenderNodeMap>;\n\nexport type DisconnectExit = (nodeUUID: string, exitUUID: string) => Thunk<RenderNodeMap>;\n\nexport type HandleLanguageChange = (language: Asset) => Thunk<void>;\n\nexport type MergeEditorState = (state: Partial<EditorState>) => Thunk<EditorState>;\n\nexport interface ReplaceAction {\n  nodeUUID: string;\n  actionUUID: string;\n}\n\nexport type OnUpdateRouter = (node: RenderNode) => Thunk<RenderNodeMap>;\n\nexport interface Connection {\n  previousConnection: Connection;\n}\n\nexport interface ConnectionEvent {\n  connection: Connection;\n  source: Element;\n  target: Element;\n  sourceId: string;\n  targetId: string;\n  suspendedElementId: string;\n  endpoints: any[];\n}\n\nexport interface ErrorMessage {\n  status: string;\n  description: string;\n}\n\nexport type LocalizationUpdates = Array<{ uuid: string; translations?: any }>;\nconst QUIET_SAVE = 2000;\n\nlet markDirty: (quiet?: number) => void = () => {};\nlet lastDirtyAttempt: any = null;\nlet postingRevision = false;\n\nexport const createDirty = (\n  revisionsEndpoint: string,\n  dispatch: DispatchWithState,\n  getState: GetState\n) => (quiet: number = QUIET_SAVE) => {\n  if (lastDirtyAttempt) {\n    window.clearTimeout(lastDirtyAttempt);\n  }\n\n  const {\n    flowContext: { definition, nodes, assetStore },\n    editorState: { currentRevision }\n  } = getState();\n\n  dispatch(mergeEditorState({ saving: true }));\n\n  // make sure we have the most current revision number we know about\n  const newDefinition = getCurrentDefinition(definition, nodes, true);\n  newDefinition.revision = currentRevision;\n\n  if (postingRevision) {\n    lastDirtyAttempt = window.setTimeout(() => {\n      markDirty();\n    }, QUIET_SAVE);\n    return;\n  }\n\n  lastDirtyAttempt = window.setTimeout(() => {\n    postingRevision = true;\n    saveRevision(revisionsEndpoint, newDefinition).then(\n      (revision: Revision) => {\n        definition.revision = revision.revision;\n        dispatch(updateDefinition(definition));\n\n        const updatedAssets = mutators.addRevision(assetStore, revision);\n        dispatch(updateAssets(updatedAssets));\n        dispatch(\n          mergeEditorState({\n            currentRevision: revision.revision,\n            saving: false\n          })\n        );\n        postingRevision = false;\n      },\n      (error: any) => {\n        const errorMessage = error.response.data as ErrorMessage;\n\n        const body =\n          (errorMessage && errorMessage.description) ||\n          'Hmm, we ran into a problem trying to save your changes. ' +\n            'It could just be that your internet connection is not working ' +\n            'well at the moment. Perhaps wait a minute or so and try again. It may also ' +\n            \"be that we encountered a problem we didn't anticipate. \" +\n            \"If your connection is good and you still can't save your \" +\n            'changes, please contact support so we can help you out.';\n        dispatch(\n          mergeEditorState({\n            modalMessage: {\n              title: \"Uh oh, we couldn't save your changes\",\n              body\n            },\n            saving: false\n          })\n        );\n        postingRevision = false;\n      }\n    );\n  }, quiet);\n};\n\nexport const mergeEditorState = (changes: Partial<EditorState>) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): EditorState => {\n  const { editorState } = getState();\n  const updated = mutate(editorState, { $merge: changes });\n  dispatch(updateEditorState(updated));\n  return updated;\n};\n\nexport const createNewRevision = () => (dispatch: DispatchWithState, getState: GetState): void => {\n  // mark us dirty with no quiet period\n  markDirty(0);\n};\n\nexport const loadFlowDefinition = (\n  definition: FlowDefinition,\n  assetStore: AssetStore,\n  onLoad: () => void\n) => (dispatch: DispatchWithState, getState: GetState): void => {\n  // first see if we need our asset store initialized\n  const {\n    editorState: { fetchingFlow }\n  } = getState();\n\n  if (!fetchingFlow) {\n    // mark us as underway\n    dispatch(mergeEditorState({ fetchingFlow: true }));\n  }\n\n  // while we don't officially support doing it, lets make a best effort to load\n  // definitions that don't have _ui information (created outside of the editor)\n  definition.localization = definition.localization || {};\n  definition._ui = definition._ui || { nodes: {}, languages: [], stickies: {} };\n\n  // make sure we have a ui entry for each node\n  let currentTop = 0;\n  for (const node of definition.nodes) {\n    if (!definition._ui.nodes[node.uuid]) {\n      definition._ui.nodes[node.uuid] = {\n        position: { left: 0, top: currentTop },\n        type: guessNodeType(node)\n      };\n      currentTop += 150;\n    }\n  }\n\n  // add assets we found in our flow to our asset store\n  const components = getFlowComponents(definition);\n  mergeAssetMaps(assetStore.fields.items, components.fields);\n  mergeAssetMaps(assetStore.groups.items, components.groups);\n  mergeAssetMaps(assetStore.labels.items, components.labels);\n  mergeAssetMaps(assetStore.results.items, components.results);\n\n  // initialize our language\n  let language: Asset;\n  if (definition.language) {\n    language = assetStore.languages.items[definition.language];\n  }\n\n  if (!language) {\n    language = DEFAULT_LANGUAGE;\n    dispatch(mergeEditorState({ language: DEFAULT_LANGUAGE }));\n    mergeAssetMaps(assetStore.languages.items, { base: DEFAULT_LANGUAGE });\n  }\n\n  dispatch(updateBaseLanguage(language));\n\n  // store our flow definition without any nodes\n  dispatch(updateDefinition(mutators.pruneDefinition(definition)));\n  dispatch(updateNodes(components.renderNodeMap));\n\n  // finally update our assets, and mark us as fetched\n  dispatch(updateAssets(assetStore));\n  dispatch(mergeEditorState({ language, fetchingFlow: false }));\n\n  // fire our callback for who is embedding us\n  if (onLoad) {\n    onLoad();\n  }\n};\n\n/**\n * Fetches a flow. Fetches all assets as well if the haven't been initialized yet\n * @param endpoints where our assets live\n * @param uuid the uuid for the flow to fetch\n */\nexport const fetchFlow = (endpoints: Endpoints, uuid: string, onLoad: () => void) => async (\n  dispatch: DispatchWithState,\n  getState: GetState\n) => {\n  // mark us as underway\n  dispatch(mergeEditorState({ fetchingFlow: true }));\n\n  // first see if we need our asset store initialized\n  let {\n    flowContext: { assetStore }\n  } = getState();\n\n  if (!Object.keys(assetStore).length) {\n    assetStore = await createAssetStore(endpoints);\n  }\n\n  fetchFlowActivity(endpoints.activity, dispatch, getState, uuid);\n  (window as any).triggerActivityUpdate = () => {\n    fetchFlowActivity(endpoints.activity, dispatch, getState, uuid);\n  };\n\n  const definition = await getFlowDefinition(assetStore.revisions);\n\n  dispatch(loadFlowDefinition(definition, assetStore, onLoad));\n  dispatch(mergeEditorState({ currentRevision: definition.revision }));\n\n  markDirty = createDirty(assetStore.revisions.endpoint, dispatch, getState);\n};\n\nexport const addAsset: AddAsset = (assetType: string, asset: Asset) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): void => {\n  const {\n    flowContext: { assetStore }\n  } = getState();\n\n  const updated = mutate(assetStore, {\n    [assetType]: { items: { $merge: { [asset.id]: asset } } }\n  });\n\n  dispatch(updateAssets(updated));\n};\n\nexport const handleLanguageChange: HandleLanguageChange = language => (dispatch, getState) => {\n  const {\n    flowContext: { baseLanguage },\n    editorState: { translating, language: currentLanguage }\n  } = getState();\n\n  // determine translating state\n  if (!isEqual(language, baseLanguage)) {\n    if (!translating) {\n      dispatch(mergeEditorState({ translating: true }));\n    }\n  } else {\n    dispatch(mergeEditorState({ translating: false }));\n  }\n\n  // update language\n  if (!isEqual(language, currentLanguage)) {\n    dispatch(mergeEditorState({ language }));\n  }\n};\n\nexport const onUpdateLocalizations = (language: string, changes: LocalizationUpdates) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): FlowDefinition => {\n  const {\n    flowContext: { definition }\n  } = getState();\n  const updated = mutators.updateLocalization(definition, language, changes);\n  dispatch(updateDefinition(updated));\n\n  markDirty();\n  return updated;\n};\n\nexport const updateExitDestination = (nodeUUID: string, exitUUID: string, destination: string) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const {\n    flowContext: { nodes }\n  } = getState();\n  const updated = mutators.updateConnection(nodes, nodeUUID, exitUUID, destination);\n  dispatch(updateNodes(updated));\n  markDirty();\n  return updated;\n};\n\nexport const disconnectExit = (nodeUUID: string, exitUUID: string) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => dispatch(updateExitDestination(nodeUUID, exitUUID, null));\n\nexport const updateConnection = (source: string, target: string) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const [nodeUUID, exitUUID] = source.split(':');\n  return dispatch(updateExitDestination(nodeUUID, exitUUID, target));\n};\n\nexport const removeNode = (node: FlowNode) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  // Remove result name if node has one\n  const {\n    flowContext: { nodes, assetStore }\n  } = getState();\n\n  // update asset store to remove results that no longer exist\n  if (node.router && node.router.result_name) {\n    const updatedAssets = mutators.removeResultFromStore(node.router.result_name, assetStore, {\n      nodeUUID: node.uuid\n    });\n    dispatch(updateAssets(updatedAssets));\n  }\n\n  const updated = mutators.removeNode(nodes, node.uuid);\n  dispatch(updateNodes(updated));\n  markDirty();\n  return updated;\n};\n\nexport const removeAction = (nodeUUID: string, action: AnyAction) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const {\n    flowContext: { nodes, assetStore }\n  } = getState();\n  const renderNode = nodes[nodeUUID];\n\n  // update asset store to remove results that no longer exist\n  if (action.type === Types.set_run_result) {\n    const resultAction = action as SetRunResult;\n    const updatedAssets = mutators.removeResultFromStore(resultAction.name, assetStore, {\n      nodeUUID,\n      actionUUID: action.uuid\n    });\n    dispatch(updateAssets(updatedAssets));\n  }\n\n  // If it's our last action, then nuke the node\n  if (renderNode.node.actions.length === 1) {\n    const updated = dispatch(removeNode(renderNode.node));\n    markDirty();\n    return updated;\n  } else {\n    // Otherwise, just remove that action\n    const updated = mutators.removeAction(nodes, nodeUUID, action.uuid);\n    dispatch(updateNodes(updated));\n    markDirty();\n    return updated;\n  }\n};\n\nexport const moveActionUp = (nodeUUID: string, action: AnyAction) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const {\n    flowContext: { nodes }\n  } = getState();\n  const updated = mutators.moveActionUp(nodes, nodeUUID, action.uuid);\n  dispatch(updateNodes(updated));\n  markDirty();\n  return updated;\n};\n\n/**\n * Splices a router into a list of actions creating up to three nodes where there\n * was once one node.\n * @param nodeUUID the node to replace\n * @param node the new node being added (shares the previous node uuid)\n * @param type the type of the new router\n * @param previousAction the previous action that is being replaced with our router\n * @returns a list of RenderNodes that were created\n */\nexport const spliceInRouter = (\n  newRouterNode: RenderNode,\n  previousAction: { nodeUUID: string; actionUUID: string }\n) => (dispatch: DispatchWithState, getState: GetState): RenderNodeMap => {\n  const {\n    flowContext: { nodes }\n  } = getState();\n  const previousNode = nodes[previousAction.nodeUUID];\n\n  // remove our old node, we'll make new ones\n  let updatedNodes = nodes;\n  updatedNodes = mutators.removeNode(updatedNodes, previousNode.node.uuid, false);\n\n  newRouterNode.node = mutators.uniquifyNode(newRouterNode.node);\n\n  const actionIdx = getActionIndex(previousNode.node, previousAction.actionUUID);\n\n  // we need to splice a wait node where our previousAction was\n  const topActions: Action[] =\n    actionIdx > 0 ? [...previousNode.node.actions.slice(0, actionIdx)] : [];\n  const bottomActions: Action[] = previousNode.node.actions.slice(\n    actionIdx + 1,\n    previousNode.node.actions.length\n  );\n\n  // tslint:disable-next-line:prefer-const\n  let { left, top } = previousNode.ui.position;\n\n  let topNode: RenderNode;\n  let bottomNode: RenderNode;\n\n  // add our top node if we have one\n  if (topActions.length > 0) {\n    topNode = {\n      node: {\n        uuid: createUUID(),\n        actions: topActions,\n        exits: [\n          {\n            uuid: createUUID(),\n            destination_uuid: null\n          }\n        ]\n      },\n      ui: { position: { left, top } },\n      inboundConnections: { ...previousNode.inboundConnections }\n    };\n\n    updatedNodes = mutators.mergeNode(updatedNodes, topNode);\n    top += NODE_SPACING;\n\n    // update our routerNode for the presence of a top node\n    newRouterNode.inboundConnections = {\n      [topNode.node.exits[0].uuid]: topNode.node.uuid\n    };\n    newRouterNode.ui.position.top += NODE_SPACING;\n  } else {\n    newRouterNode.inboundConnections = { ...previousNode.inboundConnections };\n  }\n\n  // now add our routerNode\n  updatedNodes = mutators.mergeNode(updatedNodes, newRouterNode);\n\n  // add our bottom\n  if (bottomActions.length > 0) {\n    bottomNode = {\n      node: {\n        uuid: createUUID(),\n        actions: bottomActions,\n        exits: [\n          {\n            uuid: createUUID(),\n            destination_uuid: previousNode.node.exits[0].destination_uuid\n          }\n        ]\n      },\n      ui: {\n        position: { left, top }\n      },\n      inboundConnections: {\n        [newRouterNode.node.exits[0].uuid]: newRouterNode.node.uuid\n      }\n    };\n    updatedNodes = mutators.mergeNode(updatedNodes, bottomNode);\n  } else {\n    // if we don't have a bottom, route our routerNode to the previous destination\n    updatedNodes = mutators.updateConnection(\n      updatedNodes,\n      newRouterNode.node.uuid,\n      newRouterNode.node.exits[0].uuid,\n      previousNode.node.exits[0].destination_uuid\n    );\n  }\n\n  dispatch(updateNodes(updatedNodes));\n\n  markDirty();\n  return updatedNodes;\n};\n\nexport const handleTypeConfigChange = (typeConfig: Type) => (dispatch: DispatchWithState) => {\n  // TODO: Generate suggested result name if user is changing to a `wait_for_response` router.\n  dispatch(updateTypeConfig(typeConfig));\n};\n\nexport const resetNodeEditingState = () => (dispatch: DispatchWithState, getState: GetState) => {\n  dispatch(mergeEditorState({ ghostNode: null }));\n  dispatch(updateNodeEditorSettings(null));\n};\n\nexport const onUpdateAction = (\n  action: AnyAction,\n  onUpdated?: (dispatch: DispatchWithState, getState: GetState) => void\n) => (dispatch: DispatchWithState, getState: GetState) => {\n  timeStart('onUpdateAction');\n\n  const {\n    nodeEditor: { userAddingAction, settings },\n    flowContext: { nodes, contactFields, assetStore }\n  } = getState();\n\n  if (settings == null || settings.originalNode == null) {\n    throw new Error('Need originalNode in settings to update an action');\n  }\n  const { originalNode, originalAction } = settings;\n\n  let updatedAssets = assetStore;\n\n  // remove our result reference\n  if (originalAction && originalAction.type === Types.set_run_result) {\n    const { name: resultName } = originalAction as SetRunResult;\n    updatedAssets = mutators.removeResultFromStore(resultName, updatedAssets, {\n      nodeUUID: originalNode.node.uuid,\n      actionUUID: action.uuid\n    });\n  }\n\n  let updatedNodes = nodes;\n  const creatingNewNode = !!(originalNode !== null && originalNode.ghost);\n\n  let nodeUUID: string = null;\n\n  if (creatingNewNode) {\n    const newNode: RenderNode = {\n      node: {\n        uuid: createUUID(),\n        actions: [action],\n        exits: [{ uuid: createUUID(), destination_uuid: null }]\n      },\n      ui: { position: originalNode.ui.position, type: Types.execute_actions },\n      inboundConnections: originalNode.inboundConnections\n    };\n    updatedNodes = mutators.mergeNode(nodes, newNode);\n\n    nodeUUID = newNode.node.uuid;\n  } else {\n    nodeUUID = originalNode.node.uuid;\n\n    if (userAddingAction) {\n      updatedNodes = mutators.addAction(nodes, originalNode.node.uuid, action);\n    } else if (originalNode.node.hasOwnProperty('router')) {\n      updatedNodes = mutators.spliceInAction(nodes, originalNode.node.uuid, action);\n    } else {\n      updatedNodes = mutators.updateAction(nodes, originalNode.node.uuid, action, originalAction);\n    }\n  }\n\n  dispatch(updateNodes(updatedNodes));\n  dispatch(updateUserAddingAction(false));\n\n  // Add result to store.\n  if (action.type === Types.set_run_result) {\n    const { name: resultName } = action as SetRunResult;\n    updatedAssets = mutators.addResultToStore(resultName, updatedAssets, {\n      nodeUUID,\n      actionUUID: action.uuid\n    });\n    dispatch(updateAssets(updatedAssets));\n  }\n\n  // Add contact field to our store.\n  if (action.type === Types.set_contact_field) {\n    const { field } = action as SetContactField;\n    dispatch(updateContactFields({ ...contactFields, [field.key]: field.name }));\n  }\n\n  markDirty();\n\n  timeEnd('onUpdateAction');\n\n  if (onUpdated) {\n    onUpdated(dispatch, getState);\n  }\n  return updatedNodes;\n};\n\n/**\n * Opens the NodeEditor in the state for adding to a provided node\n * @param node the node to add to\n */\nexport const onAddToNode = (node: FlowNode) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n) => {\n  const {\n    flowContext: { nodes }\n  } = getState();\n\n  // TODO: remove the need for this once we all have formHelpers\n  const newAction: SendMsg = {\n    uuid: createUUID(),\n    type: Types.send_msg,\n    text: ''\n  };\n\n  dispatch(\n    updateNodeEditorSettings({\n      originalNode: getNode(nodes, node.uuid),\n      originalAction: newAction,\n      showAdvanced: false\n    })\n  );\n\n  markDirty();\n  dispatch(updateUserAddingAction(true));\n  dispatch(handleTypeConfigChange(getTypeConfig(Types.send_msg)));\n  dispatch(mergeEditorState(EMPTY_DRAG_STATE));\n};\n\nexport const onRemoveNodes = (uuids: string[]) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const {\n    flowContext: { nodes, definition }\n  } = getState();\n\n  let updatedNodes = nodes;\n  let updatedDefinition = definition;\n  let didNodes = false;\n  let didDef = false;\n\n  uuids.forEach((uuid: string) => {\n    if (uuid in updatedNodes) {\n      updatedNodes = mutators.removeNode(updatedNodes, uuid, true);\n      didNodes = true;\n    } else if (uuid in updatedDefinition._ui.stickies) {\n      updatedDefinition = mutators.updateStickyNote(updatedDefinition, uuid, null);\n      didDef = true;\n    }\n  });\n\n  if (didNodes) {\n    dispatch(updateNodes(updatedNodes));\n  }\n\n  if (didDef) {\n    dispatch(updateDefinition(updatedDefinition));\n  }\n\n  if (didDef || didNodes) {\n    markDirty();\n  }\n\n  return nodes;\n};\n\nexport const onUpdateCanvasPositions = (positions: CanvasPositions) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const {\n    flowContext: { nodes, definition }\n  } = getState();\n\n  let updatedDefinition = definition;\n  let updatedNodes = nodes;\n\n  let updatedNodePosition = false;\n  let updatedStickyPosition = false;\n\n  for (const uuid in positions) {\n    if (updatedNodes[uuid]) {\n      updatedNodes = mutators.updatePosition(updatedNodes, uuid, positions[uuid]);\n      updatedNodePosition = true;\n    } else if (updatedDefinition._ui.stickies[uuid]) {\n      updatedDefinition = mutators.updateStickyNotePosition(\n        updatedDefinition,\n        uuid,\n        positions[uuid]\n      );\n      updatedStickyPosition = true;\n    }\n  }\n\n  let updated = false;\n\n  if (updatedNodePosition) {\n    updated = true;\n    dispatch(updateNodes(updatedNodes));\n  }\n\n  if (updatedStickyPosition) {\n    updated = true;\n    dispatch(updateDefinition(updatedDefinition));\n  }\n\n  if (updated) {\n    markDirty();\n  }\n\n  return updatedNodes;\n};\n\n/**\n * Called when a connection begins to be dragged from an endpoint both\n * when a new connection is desired or when an existing one is being moved.\n * @param event\n */\nexport const onConnectionDrag = (event: ConnectionEvent, flowType: FlowTypes) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n) => {\n  const {\n    flowContext: { nodes, assetStore }\n  } = getState();\n\n  // We finished dragging a ghost node, create the spec for our new ghost component\n  const [fromNodeUUID, fromExitUUID] = event.sourceId.split(':');\n\n  const fromNode = nodes[fromNodeUUID];\n\n  const names = Object.keys(assetStore.results ? assetStore.results.items : {});\n\n  let resultCount = names.length + 1;\n  let key = `result_${resultCount}`;\n\n  const hasResult = names.find((name: string) => name === key);\n  while (hasResult) {\n    resultCount++;\n    key = `result_${resultCount}`;\n  }\n\n  // set our ghost node\n  const ghostNode = createEmptyNode(fromNode, fromExitUUID, resultCount, flowType);\n  ghostNode.inboundConnections = { [fromExitUUID]: fromNodeUUID };\n  dispatch(mergeEditorState({ ghostNode }));\n};\n\nexport const updateSticky = (uuid: string, sticky: StickyNote) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): void => {\n  const {\n    flowContext: { definition }\n  } = getState();\n\n  const updated = mutators.updateStickyNote(definition, uuid, sticky);\n  dispatch(updateDefinition(updated));\n  markDirty();\n};\n\nexport const onUpdateRouter = (renderNode: RenderNode) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const {\n    flowContext: { nodes, assetStore },\n    nodeEditor: {\n      settings: { originalNode, originalAction }\n    }\n  } = getState();\n\n  let updated = nodes;\n  if (originalNode) {\n    const previousPosition = originalNode.ui.position;\n    renderNode.ui.position = previousPosition;\n  }\n\n  if (originalNode.ghost) {\n    renderNode.inboundConnections = originalNode.inboundConnections;\n    const { left, top } = originalNode.ui.position;\n    renderNode.ui.position = { left, top };\n    renderNode.node = mutators.uniquifyNode(renderNode.node);\n  }\n\n  // update our results\n  const resultName = getResultName(renderNode.node);\n  if (resultName) {\n    let updatedAssets = assetStore;\n\n    // remove our original result name\n    const originalResultName = getResultName(originalNode.node);\n    if (originalResultName) {\n      updatedAssets = mutators.removeResultFromStore(originalResultName, updatedAssets, {\n        nodeUUID: originalNode.node.uuid\n      });\n    }\n\n    updatedAssets = mutators.addFlowResult(updatedAssets, renderNode.node);\n    dispatch(updateAssets(updatedAssets));\n  }\n\n  if (\n    originalNode &&\n    originalAction &&\n    !originalNode.ghost &&\n    !getSwitchRouter(originalNode.node)\n  ) {\n    const actionToSplice = originalNode.node.actions.find(\n      (action: Action) => action.uuid === originalAction.uuid\n    );\n\n    if (actionToSplice) {\n      // if we are splicing using the original top\n      renderNode.ui.position.top = originalNode.ui.position.top;\n\n      return dispatch(\n        spliceInRouter(renderNode, {\n          nodeUUID: originalNode.node.uuid,\n          actionUUID: actionToSplice.uuid\n        })\n      );\n    }\n\n    // didn't recognize that action, let's add a new router node\n    // if we are appendeng in, see if we need to route through\n    const switchRouter = getSwitchRouter(renderNode.node);\n    if (switchRouter) {\n      const defaultCategory = switchRouter.categories.find(\n        (cat: Category) => cat.uuid === switchRouter.default_category_uuid\n      );\n      const exitToUpdate = renderNode.node.exits.find(\n        (exit: Exit) => exit.uuid === defaultCategory.exit_uuid\n      );\n\n      exitToUpdate.destination_uuid = originalNode.node.exits[0].destination_uuid;\n    }\n\n    renderNode.inboundConnections = {\n      [originalNode.node.exits[0].uuid]: originalNode.node.uuid\n    };\n    renderNode.node = mutators.uniquifyNode(renderNode.node);\n    renderNode.ui.position.top += NODE_SPACING;\n    updated = mutators.mergeNode(updated, renderNode);\n  } else {\n    updated = mutators.mergeNode(updated, renderNode);\n  }\n\n  dispatch(updateNodes(updated));\n\n  markDirty();\n  return updated;\n};\n\nexport const onOpenNodeEditor = (settings: NodeEditorSettings) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n) => {\n  const {\n    flowContext: {\n      definition: { localization }\n    },\n    editorState: { language, translating }\n  } = getState();\n\n  const { originalNode: renderNode } = settings;\n  let { originalAction: action } = settings;\n\n  const node = renderNode.node;\n\n  // stuff our localization objects in our settings\n  settings.localizations = [];\n  if (translating) {\n    let actionToTranslate = action;\n\n    // TODO: this is a hack, would be nice to find how to make that area respond differently\n    // if they clicked just below the actions, treat it as the last action\n    if (!actionToTranslate && node.actions.length > 0) {\n      actionToTranslate = node.actions[node.actions.length - 1];\n      if (\n        actionToTranslate.type !== Types.send_msg &&\n        actionToTranslate.type !== Types.send_broadcast\n      ) {\n        return;\n      }\n    }\n\n    const translations = localization[language.id];\n    settings.localizations.push(\n      ...getLocalizations(node, actionToTranslate, language, translations)\n    );\n  }\n\n  // Account for hybrids or clicking on the empty exit table\n  if (!action && node.actions.length > 0) {\n    action = node.actions[node.actions.length - 1];\n  }\n\n  const typeConfig = determineTypeConfig(settings);\n  dispatch(handleTypeConfigChange(typeConfig));\n  dispatch(updateNodeEditorSettings(settings));\n  dispatch(mergeEditorState(EMPTY_DRAG_STATE));\n};\n","import { fieldToAsset } from 'components/flow/actions/updatecontact/helpers';\nimport { getResultName } from 'components/flow/node/helpers';\nimport { DefaultExitNames } from 'components/flow/routers/constants';\nimport { getSwitchRouter } from 'components/flow/routers/helpers';\nimport { GROUPS_OPERAND } from 'components/nodeeditor/constants';\nimport { FlowTypes, Types } from 'config/interfaces';\nimport { getActivity } from 'external';\nimport {\n  AddLabels,\n  AnyAction,\n  Category,\n  ChangeGroups,\n  FlowDefinition,\n  FlowNode,\n  FlowPosition,\n  HintTypes,\n  RouterTypes,\n  SetContactField,\n  SetRunResult,\n  StickyNote,\n  SwitchRouter,\n  UIMetaData,\n  Wait,\n  WaitTypes\n} from 'flowTypes';\nimport Localization, { LocalizedObject } from 'services/Localization';\nimport { Activity, EditorState } from 'store/editor';\nimport { Asset, AssetMap, AssetType, RenderNode, RenderNodeMap } from 'store/flowContext';\nimport { addResult } from 'store/mutators';\nimport { DispatchWithState, GetState, mergeEditorState } from 'store/thunks';\nimport { createUUID, snakify } from 'utils';\n\nexport interface Bounds {\n  left: number;\n  top: number;\n  right: number;\n  bottom: number;\n}\n\ninterface Reflow {\n  uuid: string;\n  bounds: Bounds;\n}\n\n// track if we have an active timeout before issuing a new one\nlet activityTimeout: any = null;\n\nexport const getNodeWithAction = (nodes: RenderNodeMap, actionUUID: string): RenderNode => {\n  for (const nodeUUID of Object.keys(nodes)) {\n    const renderNode = nodes[nodeUUID];\n    for (const action of renderNode.node.actions) {\n      if (action.uuid === actionUUID) {\n        return renderNode;\n      }\n    }\n  }\n};\n\nexport const getNode = (nodes: RenderNodeMap, nodeUUID: string) => {\n  const node = nodes[nodeUUID];\n  if (!node) {\n    throw new Error('Cannot find node ' + nodeUUID);\n  }\n  return node;\n};\n\nexport const getExitIndex = (node: FlowNode, exitUUID: string) => {\n  for (const [exitIdx, exit] of node.exits.entries()) {\n    if (exit.uuid === exitUUID) {\n      return exitIdx;\n    }\n  }\n  throw new Error('Cannot find exit ' + exitUUID);\n};\n\nexport const getActionIndex = (node: FlowNode, actionUUID: string) => {\n  for (const [actionIdx, action] of node.actions.entries()) {\n    if (action.uuid === actionUUID) {\n      return actionIdx;\n    }\n  }\n  throw new Error('Cannot find action ' + actionUUID);\n};\n\nexport const getSuggestedResultName = (count: number) => `Result ${count}`;\n\nexport const hasRouter = (renderNode: RenderNode): boolean => {\n  return !!(renderNode && renderNode.node.router);\n};\n\nexport const hasWait = (renderNode: RenderNode): boolean => {\n  return !!(renderNode.node.router && renderNode.node.router.wait);\n};\n\nexport const hasLoopSplit = (renderNode: RenderNode): boolean => {\n  return (\n    hasWait(renderNode) ||\n    renderNode.ui.type === Types.split_by_expression ||\n    renderNode.ui.type === Types.split_by_subflow\n  );\n};\n\n/**\n * Follows every path from fromNodeUUID to toNodeUUID and throws\n * an error if we hit ourselves again without hitting a wait\n * @param nodes the entire node map\n * @param fromNodeUUID which node we are originating from\n * @param toNodeUUID where we are trying to go\n * @param path the path we have tried so far\n */\nexport const detectLoops = (\n  nodes: RenderNodeMap,\n  fromNodeUUID: string,\n  toNodeUUID: string,\n  path: string[] = []\n): void => {\n  const fromNode = nodes[fromNodeUUID];\n  const toNode = nodes[toNodeUUID];\n\n  if (fromNodeUUID === toNodeUUID) {\n    throw new Error(\"Flow loop detected, can't point to self\");\n  }\n\n  if (hasLoopSplit(toNode) || hasLoopSplit(fromNode)) {\n    return;\n  }\n\n  if (path.length === 0) {\n    path.push(fromNodeUUID);\n    for (const exit of toNode.node.exits) {\n      if (exit.destination_uuid) {\n        detectLoops(nodes, toNode.node.uuid, exit.destination_uuid, path);\n      }\n    }\n    return;\n  }\n\n  // we're back where we started\n  if (toNodeUUID === path[0]) {\n    throw new Error('Flow loop detected, route through a wait first');\n  }\n\n  // add us to the path\n  path.push(toNodeUUID);\n\n  // follow each of our exits\n  for (const exit of toNode.node.exits) {\n    if (exit.destination_uuid) {\n      detectLoops(nodes, toNodeUUID, exit.destination_uuid, path);\n    }\n  }\n\n  return;\n};\n\nexport const getLocalizations = (\n  node: FlowNode,\n  action: AnyAction,\n  language: Asset,\n  translations?: { [uuid: string]: any }\n): LocalizedObject[] => {\n  const localizations: LocalizedObject[] = [];\n\n  // Account for localized cases\n  if (node.router && node.router.type === RouterTypes.switch) {\n    const router = node.router as SwitchRouter;\n\n    router.cases.forEach(kase =>\n      localizations.push(Localization.translate(kase, language, translations))\n    );\n  }\n\n  if (action) {\n    localizations.push(Localization.translate(action, language, translations));\n  }\n\n  // Account for localized categories\n  if (node.router) {\n    node.router.categories.forEach(category => {\n      if (category.name) {\n        localizations.push(Localization.translate(category, language, translations));\n      }\n    });\n  }\n\n  return localizations;\n};\n\nexport const getUniqueDestinations = (node: FlowNode): string[] => {\n  const destinations: any = {};\n  for (const exit of node.exits) {\n    if (exit.destination_uuid) {\n      destinations[exit.destination_uuid] = true;\n    }\n  }\n  return Object.keys(destinations);\n};\n\nexport const getCurrentDefinition = (\n  definition: FlowDefinition,\n  nodeMap: RenderNodeMap,\n  includeUI: boolean = true\n): FlowDefinition => {\n  const renderNodes = getOrderedNodes(nodeMap);\n  const nodes: FlowNode[] = [];\n  renderNodes.forEach((renderNode: RenderNode) => nodes.push(renderNode.node));\n\n  // tslint:disable-next-line:variable-name\n  const uiNodes: any = {};\n  for (const uuid of Object.keys(nodeMap)) {\n    uiNodes[uuid] = nodeMap[uuid].ui;\n  }\n\n  const result = {\n    ...definition,\n    nodes\n  };\n\n  if (includeUI) {\n    // tslint:disable-next-line:variable-name\n    result._ui = {\n      nodes: uiNodes,\n      stickies: definition._ui.stickies,\n      languages: definition._ui.languages\n    } as UIMetaData;\n  }\n\n  return result;\n};\n\nexport const newPosition = (left: number, top: number): FlowPosition => {\n  return { left, top };\n};\n\nexport const addPosition = (a: FlowPosition, b: FlowPosition): FlowPosition => {\n  const width = a.right - a.left;\n  const height = a.bottom - a.top;\n\n  // we allow dragging out of bounds\n  const top = a.top + b.top;\n  const left = a.left + b.left;\n\n  if (width && height) {\n    return {\n      left,\n      top,\n      right: left + width,\n      bottom: top + height\n    };\n  }\n\n  return { top, left };\n};\n\nexport const subtractPosition = (a: FlowPosition, b: FlowPosition): FlowPosition => {\n  return { left: a.left - b.left, top: a.top - b.top };\n};\n\nexport const getOrderedNodes = (nodes: RenderNodeMap): RenderNode[] => {\n  const sorted: RenderNode[] = [];\n  Object.keys(nodes).forEach((nodeUUID: string) => {\n    sorted.push(nodes[nodeUUID]);\n  });\n  return sorted.sort((a: RenderNode, b: RenderNode) => {\n    let diff = a.ui.position.top - b.ui.position.top;\n    if (diff === 0) {\n      diff = a.ui.position.left - b.ui.position.left;\n    }\n    return diff;\n  });\n};\n\nexport const getCollisions = (\n  nodes: RenderNodeMap,\n  stickies: { [key: string]: StickyNote },\n  box: FlowPosition\n): { [uuid: string]: FlowPosition } => {\n  const collisions: any = {};\n  for (const nodeUUID of Object.keys(nodes)) {\n    const node = nodes[nodeUUID];\n    if (collides(box, node.ui.position)) {\n      collisions[node.node.uuid] = node.ui.position;\n    }\n  }\n\n  for (const uuid in stickies) {\n    const sticky = stickies[uuid];\n    if (collides(box, sticky.position)) {\n      collisions[uuid] = sticky.position;\n    }\n  }\n\n  return collisions;\n};\n\nexport const collides = (a: FlowPosition, b: FlowPosition) => {\n  // don't bother with collision if we don't have full dimensions\n  /* istanbul ignore next */\n  if (!a.bottom || !b.bottom) {\n    return false;\n  }\n\n  return !(b.left > a.right || b.right < a.left || b.top > a.bottom || b.bottom < a.top);\n};\n\n/**\n * Gets the first collsion in the node map returning the original node,\n * the node it collides with and optionally an additional node it\n * collides with if inserting between two nodes\n * @param nodes\n */\nexport const getCollision = (nodes: RenderNodeMap): RenderNode[] => {\n  const sortedNodes = getOrderedNodes(nodes);\n\n  for (let i = 0; i < sortedNodes.length; i++) {\n    const current = sortedNodes[i];\n    if (i + 1 < sortedNodes.length) {\n      for (let j = i + 1; j < sortedNodes.length; j++) {\n        const other = sortedNodes[j];\n        if (collides(current.ui.position, other.ui.position)) {\n          // if the next node collides too, include it\n          // to deal with inserting between two closely\n          // positioned nodes\n          if (j + 1 < sortedNodes.length) {\n            const cascaded = sortedNodes[j + 1];\n            if (collides(other.ui.position, cascaded.ui.position)) {\n              return [current, other, cascaded];\n            }\n          }\n          return [current, other];\n        }\n      }\n    }\n  }\n  return [];\n};\n\nexport const createEmptyNode = (\n  fromNode: RenderNode,\n  fromExitUUID: string,\n  suggestedResultNameCount: number,\n  flowType: FlowTypes\n): RenderNode => {\n  const emptyNode: FlowNode = {\n    uuid: createUUID(),\n    actions: [],\n    exits: [\n      {\n        uuid: createUUID(),\n        destination_uuid: null\n      }\n    ]\n  };\n\n  let type = Types.execute_actions;\n\n  // Add an action next if we are coming from a router\n  if (!fromNode || hasRouter(fromNode)) {\n    const replyType = flowType === FlowTypes.VOICE ? Types.say_msg : Types.send_msg;\n    const replyAction = {\n      uuid: createUUID(),\n      text: '',\n      type: replyType\n    };\n\n    emptyNode.actions.push(replyAction);\n  } else {\n    // Otherwise we are going to a switch\n    const categories: Category[] = [\n      {\n        uuid: createUUID(),\n        name: DefaultExitNames.All_Responses,\n        exit_uuid: emptyNode.exits[0].uuid\n      }\n    ];\n\n    const wait: Wait = { type: WaitTypes.msg };\n    type = Types.wait_for_response;\n    if (flowType === FlowTypes.VOICE) {\n      wait.hint = { type: HintTypes.digits, count: 1 };\n    }\n\n    emptyNode.router = {\n      type: RouterTypes.switch,\n      result_name: getSuggestedResultName(suggestedResultNameCount),\n      default_category_uuid: categories[0].uuid,\n      categories,\n      wait,\n      cases: []\n    } as SwitchRouter;\n  }\n\n  let inboundConnections = {};\n  if (fromNode) {\n    inboundConnections = { [fromExitUUID]: fromNode.node.uuid };\n  }\n\n  return {\n    node: emptyNode,\n    ui: { position: { left: 0, top: 0 }, type },\n    inboundConnections,\n    ghost: true\n  };\n};\n\nexport interface FlowComponents {\n  renderNodeMap: RenderNodeMap;\n  groups: AssetMap;\n  fields: AssetMap;\n  labels: AssetMap;\n  results: AssetMap;\n}\n\nexport const isGroupAction = (actionType: string) => {\n  return (\n    actionType === Types.add_contact_groups ||\n    actionType === Types.remove_contact_groups ||\n    actionType === Types.send_broadcast\n  );\n};\n\n/**\n * This isn't necessarily supported, but lets make a best effort to guess node\n * types from cues within the definition if somebody loads a flow without _ui details.\n * @param node\n */\nexport const guessNodeType = (node: FlowNode) => {\n  // router based nodes\n  if (node.router) {\n    // hybrid nodes\n    if (node.actions.length === 1) {\n      if (node.actions[0].type === Types.call_webhook) {\n        return Types.split_by_webhook;\n      }\n\n      if (node.actions[0].type === Types.transfer_airtime) {\n        return Types.split_by_airtime;\n      }\n\n      if (node.actions[0].type === Types.call_resthook) {\n        return Types.split_by_resthook;\n      }\n\n      if (node.actions[0].type === Types.enter_flow) {\n        return Types.split_by_subflow;\n      }\n    }\n\n    if (node.router.wait) {\n      return Types.wait_for_response;\n    }\n\n    if (node.router.type === RouterTypes.random) {\n      return Types.split_by_random;\n    }\n\n    const switchRouter = getSwitchRouter(node);\n    if (switchRouter) {\n      if (switchRouter.operand === GROUPS_OPERAND) {\n        return Types.split_by_groups;\n      }\n    }\n\n    return Types.split_by_expression;\n  }\n\n  return Types.execute_actions;\n};\n\nexport const generateResultQuery = (resultName: string) => `@run.results.${snakify(resultName)}`;\n\n/**\n * Converts a list of assets to a map keyed by their id\n */\nexport const assetListToMap = (assets: Asset[]): AssetMap => {\n  const assetMap: any = {};\n  for (const asset of assets) {\n    assetMap[asset.id] = asset;\n  }\n  return assetMap;\n};\n\nexport const assetMapToList = (assets: AssetMap): any[] => {\n  return Object.keys(assets).map(key => {\n    const asset = assets[key];\n    return { uuid: asset.id, name: asset.name };\n  });\n};\n\n/**\n * Processes an initial FlowDefinition for details necessary for the editor\n */\nexport const getFlowComponents = ({ nodes, _ui }: FlowDefinition): FlowComponents => {\n  const renderNodeMap: RenderNodeMap = {};\n\n  // initialize our nodes\n  const pointerMap: { [uuid: string]: { [uuid: string]: string } } = {};\n\n  const groups: AssetMap = {};\n  const fields: AssetMap = {};\n  const labels: AssetMap = {};\n  let results: AssetMap = {};\n\n  for (const node of nodes) {\n    if (!node.actions) {\n      node.actions = [];\n    }\n\n    const ui = _ui.nodes[node.uuid];\n    renderNodeMap[node.uuid] = {\n      node,\n      ui,\n      inboundConnections: {}\n    };\n\n    const resultName = getResultName(node);\n    if (resultName) {\n      results = addResult(resultName, results, { nodeUUID: node.uuid });\n    }\n\n    // if we are split by group, look at our categories for groups\n    if (ui.type === Types.split_by_groups) {\n      const router = getSwitchRouter(node);\n\n      for (const kase of router.cases) {\n        const groupUUID = kase.arguments[0];\n        const category = router.categories.find((cat: Category) => {\n          return cat.uuid === kase.category_uuid;\n        });\n\n        /* istanbul ignore else */\n        if (category) {\n          groups[groupUUID] = {\n            name: category.name,\n            id: groupUUID,\n            type: AssetType.Group\n          };\n        }\n      }\n    }\n\n    for (const action of node.actions) {\n      if (isGroupAction(action.type)) {\n        const groupsToChange = (action as ChangeGroups).groups;\n        if (groupsToChange) {\n          for (const group of groupsToChange) {\n            groups[group.uuid] = {\n              name: group.name,\n              id: group.uuid,\n              type: AssetType.Group\n            };\n          }\n        }\n      } else if (action.type === Types.set_contact_field) {\n        const fieldAction = action as SetContactField;\n        fields[fieldAction.field.key] = {\n          name: fieldAction.field.name,\n          id: fieldAction.field.key,\n          type: AssetType.Field\n        };\n      } else if (action.type === Types.add_input_labels) {\n        for (const label of (action as AddLabels).labels) {\n          labels[label.uuid] = {\n            name: label.name,\n            id: label.uuid,\n            type: AssetType.Label\n          };\n        }\n      } else if (action.type === Types.set_run_result) {\n        const resultAction = action as SetRunResult;\n        const key = snakify(resultAction.name);\n\n        if (key in results) {\n          results[key].references.push({\n            nodeUUID: node.uuid,\n            actionUUID: action.uuid\n          });\n        } else {\n          results[key] = {\n            name: resultAction.name,\n            id: key,\n            type: AssetType.Result,\n            references: [{ nodeUUID: node.uuid, actionUUID: action.uuid }]\n          };\n        }\n      }\n    }\n\n    for (const exit of node.exits) {\n      if (exit.destination_uuid) {\n        let pointers: { [uuid: string]: string } = pointerMap[exit.destination_uuid];\n\n        if (!pointers) {\n          pointers = {};\n        }\n\n        pointers[exit.uuid] = node.uuid;\n        pointerMap[exit.destination_uuid] = pointers;\n      }\n    }\n  }\n\n  // store our pointers with their associated nodes\n  for (const nodeUUID of Object.keys(pointerMap)) {\n    renderNodeMap[nodeUUID].inboundConnections = pointerMap[nodeUUID];\n  }\n\n  return { renderNodeMap, groups, fields, labels, results };\n};\n\n/**\n * Extracts contact fields from a list of nodes\n */\nexport const extractContactFields = (nodes: FlowNode[]): Asset[] =>\n  nodes.reduce((fieldList, { actions }) => {\n    actions.forEach(action => {\n      if (action.type === Types.set_contact_field) {\n        fieldList.push(fieldToAsset((action as SetContactField).field));\n      }\n    });\n    return fieldList;\n  }, []);\n\n/** Adds all the items from toAdd if that don't already exist in assets */\nexport const mergeAssetMaps = (assets: AssetMap, toAdd: AssetMap): void => {\n  Object.keys(toAdd).forEach((key: string) => {\n    assets[key] = assets[key] || toAdd[key];\n  });\n};\n\nexport const fetchFlowActivity = (\n  endpoint: string,\n  dispatch: DispatchWithState,\n  getState: GetState,\n  uuid: string\n): void => {\n  const {\n    editorState: { simulating, activityInterval, visible }\n  } = getState();\n\n  if (visible) {\n    getActivity(endpoint, uuid).then((activity: Activity) => {\n      // every interval we back off a bit up to 5 minutes\n      if (activity) {\n        const updates: Partial<EditorState> = {\n          liveActivity: activity,\n          activityInterval: Math.min(60000 * 5, activityInterval + 200)\n        };\n\n        if (!simulating) {\n          updates.activity = activity;\n        }\n\n        dispatch(mergeEditorState(updates));\n\n        if (activityTimeout) {\n          window.clearTimeout(activityTimeout);\n        }\n\n        activityTimeout = window.setTimeout(() => {\n          fetchFlowActivity(endpoint, dispatch, getState, uuid);\n        }, activityInterval);\n      }\n    });\n  } else {\n    if (activityTimeout) {\n      window.clearTimeout(activityTimeout);\n    }\n\n    activityTimeout = window.setTimeout(() => {\n      fetchFlowActivity(endpoint, dispatch, getState, uuid);\n    }, 1000);\n  }\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport { Dimensions, FlowPosition } from 'flowTypes';\nimport * as React from 'react';\nimport { newPosition } from 'store/helpers';\n\nimport styles from './CanvasDraggable.module.scss';\n\nexport interface CanvasDraggableProps {\n  position: FlowPosition;\n  uuid: string;\n  ele: (selected: boolean) => JSX.Element;\n\n  selected?: boolean;\n\n  onAnimated?: (uuid: string) => void;\n  updateDimensions?: (uuid: string, position: Dimensions) => void;\n  onDragStart?: (uuid: string, clickedPosition: FlowPosition) => void;\n  onDragStop?: () => void;\n}\n\nexport class CanvasDraggable extends React.PureComponent<CanvasDraggableProps, {}> {\n  private ele!: HTMLDivElement;\n\n  constructor(props: CanvasDraggableProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^handle/, 'ref']\n    });\n  }\n\n  private ref(ref: HTMLDivElement): any {\n    return (this.ele = ref);\n  }\n\n  public componentDidMount(): void {\n    if (this.ele) {\n      if (this.props.updateDimensions) {\n        this.props.updateDimensions(this.props.uuid, {\n          width: this.ele.clientWidth || this.props.position.right - this.props.position.left,\n          height: this.ele.clientHeight || this.props.position.bottom - this.props.position.top\n        });\n      }\n    }\n  }\n\n  public componentDidUpdate(prevProps: CanvasDraggableProps): void {\n    if (this.ele) {\n      if (this.ele.clientWidth && this.ele.clientHeight) {\n        if (this.props.updateDimensions) {\n          this.props.updateDimensions(this.props.uuid, {\n            width: this.ele.clientWidth,\n            height: this.ele.clientHeight\n          });\n        }\n      }\n    }\n  }\n\n  public render(): JSX.Element {\n    const classes = [styles.draggable];\n\n    if (this.props.selected) {\n      classes.push(styles.selected);\n    }\n\n    const handleAnimated = () => {\n      if (this.props.onAnimated) {\n        this.props.onAnimated(this.props.uuid);\n      }\n    };\n\n    return (\n      <div\n        data-testid={'draggable_' + this.props.uuid}\n        onTransitionEnd={handleAnimated}\n        ref={this.ref}\n        className={classes.join(' ')}\n        style={{\n          left: this.props.position.left,\n          top: this.props.position.top\n        }}\n        onMouseDown={(event: React.MouseEvent<HTMLDivElement>) => {\n          // ignore right clicks\n          if (event.nativeEvent.which === 3) {\n            return;\n          }\n          if (this.props.onDragStart) {\n            this.props.onDragStart(\n              this.props.uuid,\n              newPosition(\n                event.pageX - this.props.position.left,\n                event.pageY - this.props.position.top\n              )\n            );\n          }\n        }}\n        onMouseUp={(event: React.MouseEvent<HTMLDivElement>) => {\n          if (event.nativeEvent.which === 3) {\n            return;\n          }\n          if (this.props.onDragStop) {\n            this.props.onDragStop();\n          }\n        }}\n      >\n        {this.props.ele(this.props.selected!)}\n      </div>\n    );\n  }\n}\n","import { FlowPosition } from 'flowTypes';\nimport { CanvasPositions } from 'store/editor';\nimport {\n  MAX_REFLOW_ATTEMPTS,\n  NODE_SPACING,\n  set,\n  snapPositionToGrid,\n  timeEnd,\n  timeStart\n} from 'utils';\n\nconst mutate = require('immutability-helper');\n\nexport const collides = (a: FlowPosition, b: FlowPosition, fudge: number) => {\n  // don't bother with collision if we don't have full dimensions\n  /* istanbul ignore next */\n  if (!a.bottom || !b.bottom) {\n    return false;\n  }\n\n  a.bottom += fudge;\n\n  return !(b.left > a.right! || b.right! < a.left || b.top > a.bottom || b.bottom < a.top);\n};\n\nexport const getDraggablesInBox = (\n  positions: CanvasPositions,\n  box: FlowPosition\n): { [uuid: string]: FlowPosition } => {\n  const collisions: any = {};\n  for (const nodeUUID of Object.keys(positions)) {\n    const position = positions[nodeUUID];\n    if (collides(box, position, 0)) {\n      collisions[nodeUUID] = position;\n    }\n  }\n  return collisions;\n};\n\ninterface DraggablePosition extends FlowPosition {\n  uuid: string;\n}\n\nexport const getOrderedDraggables = (positions: CanvasPositions): DraggablePosition[] => {\n  const sorted: DraggablePosition[] = [];\n  Object.keys(positions).forEach((uuid: string) => {\n    sorted.push({ ...positions[uuid], uuid });\n  });\n  return sorted.sort((a: DraggablePosition, b: DraggablePosition) => {\n    let diff = a.top - b.top;\n    if (diff === 0) {\n      diff = a.left - b.left;\n    }\n    return diff;\n  });\n};\n\n/**\n * Gets the first collsion in the node map returning the original node,\n * the node it collides with and optionally an additional node it\n * collides with if inserting between two nodes\n * @param nodes\n */\nconst getFirstCollision = (\n  positions: CanvasPositions,\n  changed: string[],\n  fudge: number\n): DraggablePosition[] => {\n  const sortedDraggables = getOrderedDraggables(positions);\n\n  for (let i = 0; i < sortedDraggables.length; i++) {\n    const current = sortedDraggables[i];\n\n    if (i + 1 < sortedDraggables.length) {\n      for (let j = i + 1; j < sortedDraggables.length; j++) {\n        const other = sortedDraggables[j];\n\n        if (collides(current, other, fudge)) {\n          // if the next node collides too, include it\n          // to deal with inserting between two closely\n          // positioned nodes\n          if (j + 1 < sortedDraggables.length) {\n            const cascaded = sortedDraggables[j + 1];\n            if (collides(other, cascaded, fudge)) {\n              return [current, other, cascaded];\n            }\n          }\n\n          if (\n            !!changed.find((uuid: string) => other.uuid === uuid) &&\n            !!!changed.find((uuid: string) => current.uuid === uuid)\n          ) {\n            return [other, current];\n          }\n\n          return [current, other];\n        }\n      }\n    }\n  }\n  return [];\n};\n\nconst setTop = (position: FlowPosition, newTop: number) => {\n  return snapPositionToGrid({\n    top: newTop,\n    left: position.left,\n    bottom: newTop + (position.bottom! - position.top),\n    right: position.right\n  });\n};\n\n/**\n * Reflow positions to account for any collisions\n * @param positions\n */\nexport const reflow = (\n  positions: CanvasPositions,\n  fudge: number\n): { positions: CanvasPositions; changed: string[] } => {\n  let newPositions = positions;\n  const changed: string[] = [];\n\n  // if for some reason we can't reflow, don't blow up\n  let attempts = 0;\n\n  timeStart('reflow');\n\n  let collision = getFirstCollision(positions, changed, fudge);\n  while (collision.length > 0 && attempts < MAX_REFLOW_ATTEMPTS) {\n    attempts++;\n    if (collision.length) {\n      const [top, bottom, cascade] = collision;\n      newPositions = mutate(newPositions, {\n        [bottom.uuid]: set(setTop(bottom, top.bottom! + NODE_SPACING))\n      });\n      changed.push(bottom.uuid);\n\n      if (cascade) {\n        // start with the top of the bottom node\n        let cascadeTop = top.bottom! + NODE_SPACING;\n\n        // and add its height\n        cascadeTop += bottom.bottom! - bottom.top;\n        newPositions = mutate(newPositions, {\n          [cascade.uuid]: set(setTop(cascade, cascadeTop))\n        });\n\n        changed.push(cascade.uuid);\n      }\n    }\n\n    collision = getFirstCollision(newPositions, changed, fudge);\n  }\n\n  timeEnd('reflow');\n\n  return { positions: newPositions, changed };\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport { CanvasDraggable, CanvasDraggableProps } from 'components/canvas/CanvasDraggable';\nimport { getDraggablesInBox, reflow } from 'components/canvas/helpers';\nimport { DRAG_THRESHOLD } from 'components/flow/Flow';\nimport { Dimensions, FlowPosition } from 'flowTypes';\nimport mutate from 'immutability-helper';\nimport React from 'react';\nimport { CanvasPositions, DragSelection } from 'store/editor';\nimport { addPosition } from 'store/helpers';\nimport { MergeEditorState } from 'store/thunks';\nimport { COLLISION_FUDGE, snapPositionToGrid } from 'utils';\n\nimport styles from './Canvas.module.scss';\n\nexport const CANVAS_PADDING = 300;\nexport const REFLOW_QUIET = 200;\n\nexport interface CanvasProps {\n  uuid: string;\n  dragActive: boolean;\n  draggingNew: boolean;\n  draggables: CanvasDraggableProps[];\n  onDragging: (draggedUUIDs: string[]) => void;\n  onUpdatePositions: (positions: CanvasPositions) => void;\n  onRemoveNodes: (nodeUUIDs: string[]) => void;\n  mergeEditorState: MergeEditorState;\n}\n\ninterface CanvasState {\n  dragDownPosition: FlowPosition | null;\n  dragUUID: string | null;\n  dragGroup: boolean;\n  dragSelection: DragSelection | null;\n  uuid: string;\n  positions: CanvasPositions;\n  selected: CanvasPositions;\n  height: number;\n}\n\nexport class Canvas extends React.PureComponent<CanvasProps, CanvasState> {\n  private ele!: HTMLDivElement;\n  private parentOffset!: FlowPosition;\n  private isScrolling: any;\n\n  private reflowTimeout: any;\n\n  // when auto scrolling we need to move dragged elements\n  private lastX!: number | null;\n  private lastY!: number | null;\n\n  // did we just select something\n  private justSelected = false;\n\n  constructor(props: CanvasProps) {\n    super(props);\n\n    let height = document.documentElement.clientHeight;\n\n    const positions: { [uuid: string]: FlowPosition } = {};\n    this.props.draggables.forEach((draggable: CanvasDraggableProps) => {\n      positions[draggable.uuid] = draggable.position;\n      if (draggable.position.bottom) {\n        height = Math.max(height, draggable.position.bottom + CANVAS_PADDING);\n      }\n    });\n\n    this.state = {\n      height,\n      dragDownPosition: null,\n      dragUUID: null,\n      dragGroup: false,\n      dragSelection: null,\n      uuid: this.props.uuid,\n      selected: {},\n      positions\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/, /^render/]\n    });\n  }\n\n  private handleWindowResize(): void {\n    const windowHeight = document.documentElement.clientHeight;\n    this.setState({ height: Math.max(windowHeight, this.state.height) });\n  }\n\n  public componentDidMount(): void {\n    let offset = { left: 0, top: 0 };\n    /* istanbul ignore next */\n    if (this.ele) {\n      offset = this.ele.getBoundingClientRect();\n    }\n    this.parentOffset = { left: offset.left, top: offset.top + window.scrollY };\n\n    window.addEventListener('resize', this.handleWindowResize);\n    document.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  private handleKeyDown(event: any): void {\n    if (this.state.selected && event.key === 'Backspace') {\n      const nodeUUIDs = Object.keys(this.state.selected);\n      if (nodeUUIDs.length > 0) {\n        this.props.onRemoveNodes(Object.keys(this.state.selected));\n      }\n    }\n  }\n\n  public componentWillUnmount(): void {\n    window.removeEventListener('resize', this.handleWindowResize);\n    document.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  public componentDidUpdate(prevProps: CanvasProps): void {\n    let updated = false;\n    let updatedPositions = this.state.positions;\n\n    // are we being given something new\n    this.props.draggables.forEach((draggable: CanvasDraggableProps) => {\n      if (!this.state.positions[draggable.uuid]) {\n        updatedPositions = mutate(updatedPositions, {\n          $merge: { [draggable.uuid]: draggable.position }\n        });\n        updated = true;\n      }\n    });\n\n    // have we removed something\n    Object.keys(updatedPositions).forEach((uuid: string) => {\n      if (\n        !this.props.draggables.find((draggable: CanvasDraggableProps) => draggable.uuid === uuid)\n      ) {\n        updatedPositions = mutate(updatedPositions, { $unset: [[uuid]] } as any);\n        updated = true;\n      }\n    });\n\n    if (updated) {\n      this.setState({ positions: updatedPositions });\n    }\n  }\n\n  public renderSelectionBox(): JSX.Element | null {\n    const drag = this.state.dragSelection;\n\n    if (drag && drag.startX && drag.startY && drag.currentX && drag.currentY) {\n      const left = Math.min(drag.startX, drag.currentX);\n      const top = Math.min(drag.startY, drag.currentY);\n      const width = Math.max(drag.startX, drag.currentX) - left;\n      const height = Math.max(drag.startY, drag.currentY) - top;\n      if (this.state.dragSelection && this.state.dragSelection.startX) {\n        return <div className={styles.drag_selection} style={{ left, top, width, height }} />;\n      }\n    }\n\n    return null;\n  }\n\n  private isClickOnCanvas(event: React.MouseEvent<HTMLDivElement>): boolean {\n    // ignore right clicks\n    if (event.nativeEvent.which === 3) {\n      return false;\n    }\n    return (event.target as any).id === this.state.uuid;\n  }\n\n  private handleMouseDown(event: React.MouseEvent<HTMLDivElement>): void {\n    // ignore right clicks\n    if (event.nativeEvent.which === 3) {\n      return;\n    }\n\n    this.justSelected = false;\n    if (this.isClickOnCanvas(event)) {\n      this.setState({\n        dragSelection: {\n          startX: event.pageX - this.parentOffset.left,\n          startY: event.pageY - this.parentOffset.top,\n          currentX: event.pageX - this.parentOffset.left,\n          currentY: event.pageY - this.parentOffset.top\n        }\n      });\n    }\n  }\n\n  private handleMouseMove(event: React.MouseEvent<HTMLDivElement>): void {\n    if (this.props.draggingNew) {\n      this.lastX = event.pageX;\n      this.lastY = event.pageY;\n      this.updateStateWithScroll(event.clientY, event.pageY);\n      return;\n    }\n\n    if (this.state.dragSelection && this.state.dragSelection.startX) {\n      const drag = this.state.dragSelection;\n\n      if (drag && drag.startX && drag.startY && drag.currentX && drag.currentY) {\n        const left = Math.min(drag.startX, drag.currentX);\n        const top = Math.min(drag.startY, drag.currentY);\n        const right = Math.max(drag.startX, drag.currentX);\n        const bottom = Math.max(drag.startY, drag.currentY);\n\n        const selected = getDraggablesInBox(this.state.positions, {\n          left,\n          top,\n          right,\n          bottom\n        });\n\n        this.setState({\n          dragSelection: {\n            startX: drag.startX,\n            startY: drag.startY,\n            currentX: event.pageX - this.parentOffset.left,\n            currentY: event.pageY - this.parentOffset.top\n          }\n        });\n\n        this.setState({ selected });\n\n        if (Object.keys(selected).length > 0) {\n          this.justSelected = true;\n        }\n      }\n    }\n\n    if (this.state.dragUUID) {\n      this.updatePositions(event.pageX, event.pageY, event.clientY, false);\n    }\n  }\n\n  private scrollCanvas(amount: number): void {\n    if (!this.isScrolling) {\n      this.isScrolling = true;\n\n      let speed = amount;\n      if (window.scrollY + amount < 0) {\n        speed = 0;\n      }\n\n      this.isScrolling = window.setInterval(() => {\n        if (this.lastX && this.lastY) {\n          // as we scroll we need to move our dragged items along with us\n          this.updatePositions(this.lastX, this.lastY + speed, 0, false);\n          window.scrollBy(0, speed);\n        }\n      }, 30);\n    }\n  }\n\n  private handleMouseUpCapture(event: React.MouseEvent<HTMLDivElement>): void {\n    // ignore right clicks\n    if (event.nativeEvent.which === 3) {\n      return;\n    }\n\n    this.lastX = null;\n    this.lastY = null;\n    if (this.state.dragUUID) {\n      this.setState({\n        dragDownPosition: null,\n        dragSelection: null,\n        dragUUID: null\n      });\n    }\n\n    if (!this.justSelected) {\n      this.props.mergeEditorState({\n        dragActive: false\n      });\n\n      this.setState({ selected: {} });\n    }\n\n    if (this.state.dragSelection && this.state.dragSelection.startX) {\n      this.setState({\n        dragSelection: {\n          startX: undefined,\n          startY: undefined,\n          currentX: undefined,\n          currentY: undefined\n        }\n      });\n    }\n\n    this.justSelected = false;\n  }\n\n  public handleUpdateDimensions(uuid: string, dimensions: Dimensions): void {\n    let pos = this.state.positions[uuid];\n    if (!pos) {\n      pos = this.props.draggables.find((item: CanvasDraggableProps) => item.uuid === uuid)!\n        .position;\n    }\n\n    const newPosition = {\n      left: pos.left,\n      top: pos.top,\n      right: pos.left + dimensions.width,\n      bottom: pos.top + dimensions.height\n    };\n\n    if (newPosition.bottom !== pos.bottom || newPosition.right !== pos.right) {\n      if (newPosition.right !== pos.right || newPosition.bottom !== pos.bottom) {\n        this.setState((prevState: CanvasState) => {\n          const newPositions = mutate(prevState.positions, {\n            $merge: {\n              [uuid]: newPosition\n            }\n          });\n\n          return {\n            positions: newPositions,\n            height: Math.max(newPosition.bottom + CANVAS_PADDING, prevState.height)\n          };\n        });\n\n        this.markReflow();\n      }\n    }\n  }\n\n  public doReflow(): void {\n    const { positions, changed } = reflow(this.state.positions, COLLISION_FUDGE);\n    if (changed) {\n      this.setState({ positions });\n\n      if (changed) {\n        this.props.onUpdatePositions(\n          changed.reduce((results: CanvasPositions, uuid: string) => {\n            results[uuid] = positions[uuid];\n            return results;\n          }, {})\n        );\n      }\n    }\n\n    this.props.onDragging(changed);\n  }\n\n  private markReflow(): void {\n    if (this.reflowTimeout) {\n      clearTimeout(this.reflowTimeout);\n    }\n\n    this.reflowTimeout = setTimeout(() => {\n      // only reflow if we aren't dragging\n      if (!this.state.dragUUID) {\n        this.doReflow();\n      }\n    }, REFLOW_QUIET);\n  }\n\n  /**\n   * Updates the state of the canvas, expanding and scrolling as needed\n   * @param windowY the mouse position in the viewport\n   * @param pageY the mouse position in the full canvas\n   * @param otherState optional state to set\n   */\n  private updateStateWithScroll(\n    windowY: number,\n    pageY: number,\n    otherState: Partial<CanvasState> = {}\n  ): void {\n    const viewportHeight = document.documentElement.clientHeight;\n\n    this.setState(\n      (prevState: CanvasState) => {\n        return {\n          ...(otherState as CanvasState),\n          height: Math.max(pageY + CANVAS_PADDING, prevState.height)\n        };\n      },\n      () => {\n        // check if we need to scroll our canvas\n\n        if (!this.isScrolling && windowY !== 0) {\n          if (windowY + 100 > viewportHeight) {\n            this.scrollCanvas(15);\n          } else if (windowY < 100) {\n            this.scrollCanvas(-15);\n          }\n        }\n        // if we are scrolling but given a clientY then user is mousing\n        else if (windowY !== 0 && (windowY > 100 && windowY + 100 < viewportHeight)) {\n          window.clearInterval(this.isScrolling);\n          this.isScrolling = null;\n        }\n      }\n    );\n  }\n\n  private updatePositions(pageX: number, pageY: number, clientY: number, snap: boolean): void {\n    if (this.state.dragUUID) {\n      const { dragUUID } = this.state;\n\n      // save off the last update, if we scroll on the user's behalf we'll need this\n      this.lastX = pageX;\n      this.lastY = pageY;\n\n      const startPosition = this.props.dragActive\n        ? this.state.selected[dragUUID]\n        : this.state.positions[dragUUID];\n\n      if (this.state.dragDownPosition) {\n        const xd =\n          pageX - this.parentOffset.left - this.state.dragDownPosition.left - startPosition.left;\n\n        const yd =\n          pageY - this.parentOffset.top - this.state.dragDownPosition.top - startPosition.top;\n\n        let lowestNode: number | undefined = 0;\n        if (this.props.dragActive) {\n          const delta = { left: xd, top: yd };\n          const prevState = this.state;\n          const uuids = Object.keys(prevState.selected);\n          let newPositions = prevState.positions;\n          uuids.forEach((uuid: string) => {\n            let newPosition = addPosition(prevState.selected[uuid], delta);\n            if (snap) {\n              newPosition = snapPositionToGrid(newPosition);\n            }\n\n            if (newPosition && newPosition.bottom! > lowestNode!) {\n              lowestNode = newPosition.bottom;\n            }\n\n            newPositions = mutate(newPositions, {\n              $merge: { [uuid]: newPosition }\n            });\n          });\n\n          this.props.onDragging(uuids);\n          this.updateStateWithScroll(clientY, lowestNode, {\n            positions: newPositions\n          });\n        } else {\n          if (Math.abs(xd) + Math.abs(yd) > DRAG_THRESHOLD) {\n            let selected = this.state.selected;\n            if (!(this.state.dragUUID in selected)) {\n              selected = { [dragUUID]: this.state.positions[dragUUID] };\n            }\n\n            this.props.mergeEditorState({\n              dragActive: true\n            });\n\n            this.setState({ selected });\n          }\n        }\n      }\n    }\n  }\n\n  private handleDragStart(uuid: string, position: FlowPosition): void {\n    this.setState({\n      dragUUID: uuid,\n      dragDownPosition: {\n        left: position.left - this.parentOffset.left,\n        top: position.top - this.parentOffset.top\n      }\n    });\n  }\n\n  /** Gets all the positions for nodes that were dragged */\n  private getSelectedPositions(): CanvasPositions {\n    return Object.keys(this.state.selected).reduce((result: CanvasPositions, uuid: string) => {\n      result[uuid] = this.state.positions[uuid];\n      return result;\n    }, {});\n  }\n\n  private handleDragStop(): void {\n    if (this.state.dragUUID) {\n      this.updatePositions(this.lastX!, this.lastY!, 0, true);\n    }\n\n    this.props.onUpdatePositions(this.getSelectedPositions());\n    this.setState({\n      dragUUID: null,\n      dragDownPosition: null,\n      dragSelection: null\n    });\n\n    this.markReflow();\n\n    this.props.mergeEditorState({\n      dragActive: false\n    });\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div className={styles.canvas_container}>\n        <div\n          data-testid=\"canvas\"\n          style={{ height: this.state.height }}\n          id={this.state.uuid}\n          ref={(ele: HTMLDivElement) => {\n            this.ele = ele;\n          }}\n          className={styles.canvas}\n          onMouseDown={this.handleMouseDown}\n          onMouseMove={this.handleMouseMove}\n          onMouseUp={this.handleMouseUpCapture}\n        >\n          {this.props.draggables.map((draggable: CanvasDraggableProps) => {\n            const pos = this.state.positions[draggable.uuid] || draggable.position;\n            return (\n              <CanvasDraggable\n                onAnimated={(uuid: string) => {\n                  this.props.onDragging([uuid]);\n                }}\n                key={'draggable_' + draggable.uuid}\n                uuid={draggable.uuid}\n                updateDimensions={this.handleUpdateDimensions}\n                position={pos}\n                selected={!!this.state.selected[draggable.uuid]}\n                ele={draggable.ele}\n                onDragStart={this.handleDragStart}\n                onDragStop={this.handleDragStop}\n              />\n            );\n          })}\n          {this.props.children}\n          {this.renderSelectionBox()}\n        </div>\n      </div>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport styles from 'components/counter/Counter.module.scss';\nimport * as React from 'react';\nimport { addCommas } from 'utils';\n\nexport interface CounterProps {\n  keepVisible: boolean;\n  containerStyle: string;\n  countStyle: string;\n  count: number;\n  onClick?: () => void;\n  onMouseEnter?: () => void;\n  onMouseLeave?: () => void;\n}\n\nexport default class Counter extends React.Component<CounterProps> {\n  private ele!: HTMLDivElement;\n\n  constructor(props: CounterProps) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/^handle/, /^get/]\n    });\n  }\n\n  public componentDidMount(): void {\n    this.handleScrollIntoView();\n  }\n\n  public componentDidUpdate(prevProps: CounterProps): void {\n    if (prevProps.count !== this.props.count) {\n      this.handleScrollIntoView();\n    }\n  }\n\n  private handleScrollIntoView(): void {\n    if (!!this.ele) {\n      if (this.props.count > 0 && this.props.keepVisible) {\n        window.setTimeout(() => {\n          window.scrollTo({\n            top: this.ele.getBoundingClientRect().top - 200 + window.scrollY,\n            behavior: 'smooth'\n          });\n        }, 200);\n      }\n    }\n  }\n\n  private handleMouseEvent(event: React.MouseEvent<HTMLDivElement>, callback: () => void): void {\n    event.preventDefault();\n    event.stopPropagation();\n    if (callback) {\n      callback();\n    }\n  }\n\n  private handleMouseEnter(event: React.MouseEvent<HTMLDivElement>): void {\n    this.handleMouseEvent(event, this.props.onMouseEnter!);\n  }\n\n  private handleMouseLeave(event: React.MouseEvent<HTMLDivElement>): void {\n    this.handleMouseEvent(event, this.props.onMouseLeave!);\n  }\n\n  private handleClick(event: React.MouseEvent<HTMLDivElement>): void {\n    this.handleMouseEvent(event, this.props.onClick!);\n  }\n\n  public render(): JSX.Element | null {\n    const count = addCommas(this.props.count);\n    return (\n      <div\n        ref={(ele: HTMLDivElement) => {\n          this.ele = ele;\n        }}\n        className={\n          styles.counter +\n          ' ' +\n          this.props.containerStyle +\n          ' ' +\n          (this.props.onClick ? styles.clickable : '') +\n          ' ' +\n          (this.props.count > 0 ? styles.visible : '')\n        }\n        onClick={this.handleClick}\n        data-spec=\"counter-outter\"\n      >\n        <div\n          onMouseEnter={this.handleMouseEnter}\n          onMouseLeave={this.handleMouseLeave}\n          className={this.props.countStyle}\n          data-spec=\"counter-inner\"\n        >\n          {count}\n        </div>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { createClickHandler } from 'utils';\n\nimport styles from './TitleBar.module.scss';\n\nexport interface TitleBarProps {\n  title: string;\n  onRemoval(event: React.MouseEvent<HTMLElement>): any;\n  __className?: string;\n  showRemoval?: boolean;\n  showMove?: boolean;\n  onMoveUp?(event: React.MouseEvent<HTMLElement>): any;\n  shouldCancelClick?: () => boolean;\n}\n\ninterface TitleBarState {\n  confirmingRemoval: boolean;\n}\n\nexport const confirmationTime = 2000;\n\nexport const titlebarContainerSpecId = 'titlebar-container';\nexport const titlebarSpecId = 'titlebar';\nexport const moveIconSpecId = 'move-icon';\nexport const moveSpecId = 'move';\nexport const removeIconSpecId = 'remove-icon';\nexport const confirmationSpecId = 'confirmation';\nexport const confirmRemovalSpecId = 'confirm-removal';\n\n/**\n * Simple title bar with confirmation removal\n */\nexport default class TitleBar extends React.Component<TitleBarProps, TitleBarState> {\n  private confirmationTimeout: number;\n\n  constructor(props: TitleBarProps) {\n    super(props);\n\n    this.state = {\n      confirmingRemoval: false\n    };\n\n    this.handleConfirmRemoval = this.handleConfirmRemoval.bind(this);\n  }\n\n  public componentWillUnmount(): void {\n    if (this.confirmationTimeout) {\n      window.clearTimeout(this.confirmationTimeout);\n    }\n  }\n\n  public handleMouseUpCapture(event: React.MouseEvent<HTMLElement>): void {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  public handleConfirmRemoval(event: React.MouseEvent<HTMLElement>): void {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    this.setState({\n      confirmingRemoval: true\n    });\n\n    this.confirmationTimeout = window.setTimeout(\n      () =>\n        this.setState({\n          confirmingRemoval: false\n        }),\n      confirmationTime\n    );\n  }\n\n  private getMoveArrow(): JSX.Element {\n    let moveArrow: JSX.Element = null;\n\n    if (this.props.showMove) {\n      moveArrow = (\n        <div\n          className={styles.up_button}\n          {...createClickHandler(\n            this.props.onMoveUp,\n            this.props.shouldCancelClick,\n            this.handleMouseUpCapture\n          )}\n          data-testid={moveIconSpecId}\n        >\n          <span className=\"fe-arrow-up\" />\n        </div>\n      );\n    } else {\n      moveArrow = <div className={styles.up_button} data-spec={moveSpecId} />;\n    }\n\n    return moveArrow;\n  }\n\n  private getRemove(): JSX.Element {\n    let remove: JSX.Element = null;\n\n    if (this.props.showRemoval) {\n      remove = (\n        <div\n          className={styles.remove_button}\n          {...createClickHandler(\n            this.handleConfirmRemoval,\n            this.props.shouldCancelClick,\n            this.handleMouseUpCapture\n          )}\n          data-testid={removeIconSpecId}\n        >\n          <span className=\"fe-x\" />\n        </div>\n      );\n    }\n\n    return remove;\n  }\n\n  private getConfirmationEl(): JSX.Element {\n    let confirmation: JSX.Element;\n\n    if (this.state.confirmingRemoval) {\n      confirmation = (\n        <div className={styles.remove_confirm} data-spec={confirmationSpecId}>\n          <div\n            className={styles.remove_button}\n            {...createClickHandler(\n              this.props.onRemoval,\n              this.props.shouldCancelClick,\n              this.handleMouseUpCapture\n            )}\n            data-testid={confirmRemovalSpecId}\n          >\n            <span className=\"fe-x\" />\n          </div>\n          Remove?\n        </div>\n      );\n    }\n\n    return confirmation;\n  }\n\n  public render(): JSX.Element {\n    const confirmation: JSX.Element = this.getConfirmationEl();\n    const moveArrow: JSX.Element = this.getMoveArrow();\n    const remove: JSX.Element = this.getRemove();\n    return (\n      <div className={styles.titlebar} data-spec={titlebarContainerSpecId}>\n        <div className={`${this.props.__className} ${styles.normal}`} data-spec={titlebarSpecId}>\n          {moveArrow}\n          {remove}\n          {this.props.title}\n        </div>\n        {confirmation}\n      </div>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport shared from 'components/shared.module.scss';\nimport TitleBar from 'components/titlebar/TitleBar';\nimport { ConfigProviderContext, fakePropType } from 'config/ConfigProvider';\nimport { Types } from 'config/interfaces';\nimport { getTypeConfig } from 'config/typeConfigs';\nimport { Action, AnyAction, Endpoints, LocalizationMap } from 'flowTypes';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Asset, RenderNode } from 'store/flowContext';\nimport AppState from 'store/state';\nimport {\n  ActionAC,\n  DispatchWithState,\n  moveActionUp,\n  OnOpenNodeEditor,\n  onOpenNodeEditor,\n  removeAction\n} from 'store/thunks';\nimport { createClickHandler, getLocalization } from 'utils';\n\nimport styles from './Action.module.scss';\n\nexport interface ActionWrapperPassedProps {\n  first: boolean;\n  action: AnyAction;\n  localization: LocalizationMap;\n  selected: boolean;\n  render: (action: AnyAction, endpoints: Endpoints) => React.ReactNode;\n}\n\nexport interface ActionWrapperStoreProps {\n  renderNode: RenderNode;\n  language: Asset;\n  translating: boolean;\n  onOpenNodeEditor: OnOpenNodeEditor;\n  removeAction: ActionAC;\n  moveActionUp: ActionAC;\n}\n\nexport type ActionWrapperProps = ActionWrapperPassedProps & ActionWrapperStoreProps;\n\nexport const actionContainerSpecId = 'action-container';\nexport const actionOverlaySpecId = 'action-overlay';\nexport const actionInteractiveDivSpecId = 'interactive-div';\nexport const actionBodySpecId = 'action-body';\n\nconst cx: any = classNames.bind({ ...shared, ...styles });\n\n// Note: this needs to be a ComponentClass in order to work w/ react-flip-move\nexport class ActionWrapper extends React.Component<ActionWrapperProps> {\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: ActionWrapperProps, context: ConfigProviderContext) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleActionClicked(event: React.MouseEvent<HTMLElement>): void {\n    const target = event.target as any;\n\n    const showAdvanced =\n      target && target.attributes && target.getAttribute('data-advanced') === 'true';\n\n    this.props.onOpenNodeEditor({\n      originalNode: this.props.renderNode,\n      originalAction: this.props.action,\n      showAdvanced\n    });\n  }\n\n  public handleRemoval(event: React.MouseEvent<HTMLDivElement>): void {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    this.props.removeAction(this.props.renderNode.node.uuid, this.props.action);\n  }\n\n  public handleMoveUp(event: React.MouseEvent<HTMLDivElement>): void {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    this.props.moveActionUp(this.props.renderNode.node.uuid, this.props.action);\n  }\n\n  public getAction(): Action {\n    // if we are translating, us our localized version\n    if (this.props.translating) {\n      const localization = getLocalization(\n        this.props.action,\n        this.props.localization,\n        this.props.language\n      );\n      return localization.getObject() as AnyAction;\n    }\n\n    return this.props.action;\n  }\n\n  private getClasses(): string {\n    const localizedKeys = [];\n    let missingLocalization = false;\n\n    if (this.props.translating) {\n      if (\n        this.props.action.type === Types.send_msg ||\n        this.props.action.type === Types.send_broadcast ||\n        this.props.action.type === Types.say_msg\n      ) {\n        localizedKeys.push('text');\n      }\n\n      if (localizedKeys.length !== 0) {\n        const localization = getLocalization(\n          this.props.action,\n          this.props.localization,\n          this.props.language\n        );\n\n        if (localization.isLocalized()) {\n          for (const key of localizedKeys) {\n            if (!(key in localization.localizedKeys)) {\n              missingLocalization = true;\n              break;\n            }\n          }\n        } else {\n          missingLocalization = true;\n        }\n      }\n    }\n\n    const notLocalizable = this.props.translating && localizedKeys.length === 0;\n\n    return cx({\n      [styles.action]: true,\n      [styles.has_router]:\n        this.props.renderNode.node.hasOwnProperty('router') &&\n        this.props.renderNode.node.router !== null,\n      [styles.translating]: this.props.translating,\n      [styles.not_localizable]: notLocalizable,\n      [styles.missing_localization]: missingLocalization,\n      [styles.localized]: !notLocalizable && !missingLocalization\n    });\n  }\n\n  public render(): JSX.Element {\n    const { name } = getTypeConfig(this.props.action.type);\n    const classes = this.getClasses();\n    const actionToInject = this.getAction();\n    const titleBarClass = (shared as any)[this.props.action.type] || shared.missing;\n    const actionClass = (styles as any)[this.props.action.type] || styles.missing;\n    const showRemoval = !this.props.translating;\n    const showMove = !this.props.first && !this.props.translating;\n\n    return (\n      <div\n        id={`action-${this.props.action.uuid}`}\n        className={classes}\n        data-spec={actionContainerSpecId}\n      >\n        <div className={styles.overlay} data-spec={actionOverlaySpecId} />\n        <div\n          {...createClickHandler(this.handleActionClicked, () => this.props.selected)}\n          data-spec={actionInteractiveDivSpecId}\n        >\n          <TitleBar\n            __className={titleBarClass}\n            title={name}\n            onRemoval={this.handleRemoval}\n            showRemoval={showRemoval}\n            showMove={showMove}\n            onMoveUp={this.handleMoveUp}\n            shouldCancelClick={() => this.props.selected}\n          />\n          <div className={styles.body + ' ' + actionClass} data-spec={actionBodySpecId}>\n            {this.props.render(actionToInject, this.context.config.endpoints)}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n/* istanbul ignore next */\nconst mapStateToProps = ({\n  flowContext: {\n    definition: { localization }\n  },\n  editorState: { language, translating }\n}: AppState) => ({\n  language,\n  translating,\n  localization\n});\n\n/* istanbul ignore next */\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators(\n    {\n      onOpenNodeEditor,\n      removeAction,\n      moveActionUp\n    },\n    dispatch\n  );\n\nconst ConnectedActionWrapper = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ActionWrapper);\n\nexport default ConnectedActionWrapper;\n","import * as React from 'react';\n\nimport styles from './DragHelper.module.scss';\n\ninterface DragHelperState {\n  visible: boolean;\n}\n\nexport default class DragHelper extends React.Component<{}, DragHelperState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      visible: false\n    };\n  }\n\n  public componentDidMount(): void {\n    window.setTimeout(() => {\n      if (!this.state.visible) {\n        this.setState({ visible: true });\n      }\n    }, 100);\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div className={styles.drag_helper + ' ' + (this.state.visible ? styles.visible : '')}>\n        <div className={styles.arrow}>\n          <div className={styles.tail} />\n          <div className={styles.head} />\n        </div>\n        <div className={styles.help_text}>\n          To connect nodes, <span className={styles.bold}>drag</span> from the red circle.\n        </div>\n      </div>\n    );\n  }\n}\n","import { Exit } from 'flowTypes';\n\nexport const getExitActivityKey = (exit: Exit) => {\n  return exit.uuid + ':' + exit.destination_uuid;\n};\n","import * as React from 'react';\nimport { range } from 'utils';\n\nimport styles from './Loading.module.scss';\n\nexport interface LoadingProps {\n  size: number;\n  units: number;\n  color: string;\n  square?: boolean;\n}\n\ninterface Color {\n  r: number;\n  g: number;\n  b: number;\n}\n\ninterface LoadingState {\n  color: Color;\n}\n\nconst hexToRgb = (hex: string): Color => {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result\n    ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16)\n      }\n    : null;\n};\n\nexport default class Loading extends React.Component<LoadingProps, LoadingState> {\n  constructor(props: LoadingProps) {\n    super(props);\n\n    this.state = {\n      color: hexToRgb(props.color)\n    };\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div\n        className={styles.loading}\n        style={{\n          width: this.props.size * this.props.units * 2,\n          height: this.props.size\n        }}\n      >\n        {range(0, this.props.units).map((num: number) => (\n          <div\n            key={`ball_${num}`}\n            style={{\n              borderRadius: this.props.square ? '0' : '50%',\n              width: this.props.size,\n              height: this.props.size,\n              margin: this.props.size / 3,\n              animationDelay: `-${1 - num * (1 / this.props.units)}s`,\n              background: `rgba(${this.state.color.r},${this.state.color.g},${\n                this.state.color.b\n              }, ${1 - num * (1 / this.props.units)})`\n            }}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport Counter from 'components/counter/Counter';\nimport DragHelper from 'components/draghelper/DragHelper';\nimport { getExitActivityKey } from 'components/flow/exit/helpers';\nimport Loading from 'components/loading/Loading';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Cancel, getRecentMessages } from 'external';\nimport { Category, Exit, FlowNode, LocalizationMap } from 'flowTypes';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { RecentMessage } from 'store/editor';\nimport { Asset } from 'store/flowContext';\nimport AppState from 'store/state';\nimport { DisconnectExit, disconnectExit, DispatchWithState } from 'store/thunks';\nimport { createClickHandler, getLocalization, renderIf } from 'utils';\n\nimport styles from './Exit.module.scss';\n\nexport interface ExitPassedProps {\n  exit: Exit;\n  categories: Category[];\n  node: FlowNode;\n  showDragHelper: boolean;\n  plumberMakeSource: (id: string) => void;\n  plumberRemove: (id: string) => void;\n  plumberConnectExit: (node: FlowNode, exit: Exit) => void;\n  plumberUpdateClass: (\n    node: FlowNode,\n    exit: Exit,\n    className: string,\n    confirmDelete: boolean\n  ) => void;\n}\n\nexport interface ExitStoreProps {\n  translating: boolean;\n  dragging: boolean;\n  language: Asset;\n  localization: LocalizationMap;\n  disconnectExit: DisconnectExit;\n  segmentCount: number;\n  recentMessages: RecentMessage[];\n}\n\nexport type ExitProps = ExitPassedProps & ExitStoreProps;\n\nexport interface ExitState {\n  confirmDelete: boolean;\n  recentMessages: RecentMessage[];\n  fetchingRecentMessages: boolean;\n  showDragHelper: boolean;\n}\n\nconst cx: any = classNames.bind(styles);\n\nexport class ExitComp extends React.PureComponent<ExitProps, ExitState> {\n  private timeout: number;\n  private hideDragHelper: number;\n  private pendingMessageFetch: Cancel = {};\n  private ele: HTMLDivElement;\n\n  constructor(props: ExitProps) {\n    super(props);\n\n    this.state = {\n      confirmDelete: false,\n      recentMessages: null,\n      fetchingRecentMessages: false,\n      showDragHelper: props.showDragHelper\n    };\n\n    bindCallbacks(this, {\n      include: [/^on/, /^get/, /^handle/, /^connect/]\n    });\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  public getSourceId(): string {\n    return `${this.props.node.uuid}:${this.props.exit.uuid}`;\n  }\n\n  public handleDisconnect(): void {\n    this.setState({ showDragHelper: false });\n  }\n\n  public componentDidMount(): void {\n    this.props.plumberMakeSource(this.getSourceId());\n\n    if (this.ele) {\n      this.ele.addEventListener('disconnect', this.handleDisconnect);\n    }\n\n    if (this.props.exit.destination_uuid) {\n      this.connect();\n    }\n  }\n\n  public componentDidUpdate(prevProps: ExitProps): void {\n    if (\n      !this.props.exit.destination_uuid ||\n      this.props.exit.destination_uuid !== prevProps.exit.destination_uuid\n    ) {\n      this.connect();\n      if (this.state.confirmDelete) {\n        this.setState({ confirmDelete: false });\n      }\n    }\n\n    this.props.plumberUpdateClass(\n      this.props.node,\n      this.props.exit,\n      'confirm-delete',\n      this.state.confirmDelete\n    );\n  }\n\n  public componentWillUnmount(): void {\n    if (this.props.exit.destination_uuid) {\n      this.props.plumberRemove(this.getSourceId());\n    }\n\n    if (this.ele) {\n      this.ele.removeEventListener('disconnect', this.handleDisconnect);\n    }\n  }\n\n  private handleMouseDown(event: React.MouseEvent<HTMLElement>): void {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  private handleClick(event: React.MouseEvent<HTMLElement>): void {\n    if (!this.props.translating) {\n      if (this.props.exit.destination_uuid) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.setState(\n          {\n            confirmDelete: true\n          },\n          () => {\n            this.timeout = window.setTimeout(() => {\n              this.setState({\n                confirmDelete: false\n              });\n            }, 2000);\n          }\n        );\n      } else {\n        event.preventDefault();\n        event.stopPropagation();\n        if (!this.state.showDragHelper) {\n          this.setState({ showDragHelper: true }, () => {\n            if (this.hideDragHelper) {\n              window.clearTimeout(this.hideDragHelper);\n            }\n            this.hideDragHelper = window.setTimeout(() => {\n              this.setState({ showDragHelper: false });\n            }, 3000);\n          });\n        }\n      }\n    }\n  }\n\n  private onDisconnect(event: React.MouseEvent<HTMLElement>): void {\n    if (this.timeout) {\n      window.clearTimeout(this.timeout);\n    }\n\n    if (this.hideDragHelper) {\n      window.clearTimeout(this.hideDragHelper);\n    }\n\n    this.props.disconnectExit(this.props.node.uuid, this.props.exit.uuid);\n  }\n\n  private connect(): void {\n    this.props.plumberConnectExit(this.props.node, this.props.exit);\n  }\n\n  private handleShowRecentMessages(): void {\n    if (this.props.recentMessages) {\n      this.setState({ recentMessages: this.props.recentMessages });\n      return;\n    }\n\n    this.setState({ fetchingRecentMessages: true }, () => {\n      getRecentMessages(\n        this.context.config.endpoints.recents,\n        this.props.exit,\n        this.pendingMessageFetch\n      )\n        .then((recentMessages: RecentMessage[]) => {\n          this.setState({ recentMessages, fetchingRecentMessages: false });\n        })\n        .catch(() => {\n          // we may have been canceled\n        });\n    });\n  }\n\n  private handleHideRecentMessages(): void {\n    if (this.pendingMessageFetch.reject) {\n      this.pendingMessageFetch.reject();\n      this.pendingMessageFetch = {};\n    }\n\n    this.setState({ fetchingRecentMessages: false, recentMessages: null });\n  }\n\n  private getSegmentCount(): JSX.Element {\n    // Only exits with a destination have activity\n    if (this.props.exit.destination_uuid) {\n      const key = `count:${this.props.exit.uuid}:${this.props.exit.destination_uuid}`;\n      return (\n        <div style={{ position: 'relative' }}>\n          <Counter\n            key={key}\n            count={this.props.segmentCount}\n            containerStyle={styles.activity}\n            countStyle={styles.count}\n            keepVisible={false}\n            onMouseEnter={this.handleShowRecentMessages}\n            onMouseLeave={this.handleHideRecentMessages}\n          />\n          {this.getRecentMessages()}\n        </div>\n      );\n    }\n    return null;\n  }\n\n  public getName(): { name: string; localized?: boolean } {\n    if (this.props.translating) {\n      let name: string = '';\n      let delim: string = '';\n\n      let localized: boolean = false;\n\n      this.props.categories.forEach((category: Category) => {\n        const localization = getLocalization(\n          category,\n          this.props.localization,\n          this.props.language\n        );\n\n        localized = localized || 'name' in localization.localizedKeys;\n        const localizedObject = localization.getObject() as Category;\n        name += delim + localizedObject.name;\n        delim = ', ';\n      });\n\n      return { name, localized };\n    } else {\n      return {\n        name: this.props.categories.map((category: Category) => category.name).join(', ')\n      };\n    }\n  }\n\n  private getRecentMessages(): JSX.Element {\n    if (this.state.fetchingRecentMessages || this.state.recentMessages !== null) {\n      const recentMessages = this.state.recentMessages || [];\n      const hasRecents = recentMessages.length !== 0;\n\n      const recentStyles = [styles.recent_messages];\n\n      let title = 'Recent Messages';\n      if (!hasRecents && !this.state.fetchingRecentMessages) {\n        title = 'No Recent Messages';\n        recentStyles.push(styles.no_recents);\n      }\n\n      return (\n        <div className={recentStyles.join(' ')}>\n          <div className={styles.title}>{title}</div>\n          {recentMessages.map((recentMessage: RecentMessage, idx: number) => (\n            <div key={'recent_' + idx} className={styles.message}>\n              <div className={styles.text}>{recentMessage.text}</div>\n              <div className={styles.sent}>{recentMessage.sent.toLocaleString()}</div>\n            </div>\n          ))}\n          {this.state.recentMessages === null ? (\n            <div className={styles.loading}>\n              <Loading size={10} units={6} color=\"#999999\" />\n            </div>\n          ) : null}\n        </div>\n      );\n    }\n    return null;\n  }\n\n  public render(): JSX.Element {\n    const { name, localized } = this.getName();\n\n    const nameStyle = name ? styles.name : '';\n    const connected = this.props.exit.destination_uuid ? ' jtk-connected' : '';\n    const dragNodeClasses = cx(styles.endpoint, connected);\n    const confirmDelete =\n      this.state.confirmDelete && this.props.exit.hasOwnProperty('destination_uuid');\n    const confirm: JSX.Element = confirmDelete ? (\n      <div\n        className={styles.confirm_x + ' fe-x'}\n        {...createClickHandler(this.onDisconnect, () => this.props.dragging)}\n      />\n    ) : null;\n    const exitClasses: string = cx({\n      [styles.exit]: true,\n      'plumb-exit': true,\n      [styles.translating]: this.props.translating,\n      [styles.unnamed_exit]: name == null,\n      [styles.missing_localization]: name && this.props.translating && !localized,\n      [styles.confirm_delete]: confirmDelete\n    });\n    const activity = this.getSegmentCount();\n    return (\n      <div className={exitClasses}>\n        {name ? <div className={nameStyle}>{name}</div> : null}\n        <div\n          ref={(ref: HTMLDivElement) => (this.ele = ref)}\n          {...createClickHandler(\n            this.handleClick,\n            () => {\n              return this.props.dragging;\n            },\n            this.handleMouseDown\n          )}\n          id={`${this.props.node.uuid}:${this.props.exit.uuid}`}\n          className={dragNodeClasses}\n        >\n          {confirm}\n        </div>\n        {activity}\n        {renderIf(this.state.showDragHelper)(<DragHelper />)}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (\n  {\n    flowContext: {\n      definition: { localization }\n    },\n    editorState: { translating, language, dragActive, activity }\n  }: AppState,\n  props: ExitPassedProps\n) => {\n  // see if we have some passed in (simulated) messages\n  let recentMessages: RecentMessage[] = null;\n  const key = getExitActivityKey(props.exit);\n  if (key in (activity.recentMessages || {})) {\n    recentMessages = activity.recentMessages[key];\n  }\n\n  const segmentCount = activity.segments[getExitActivityKey(props.exit)] || 0;\n  return {\n    dragging: dragActive,\n    segmentCount,\n    translating,\n    language,\n    localization,\n    recentMessages\n  };\n};\n\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators({ disconnectExit }, dispatch);\n\nconst ConnectedExit = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExitComp);\n\nexport default ConnectedExit;\n","import { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport Counter from 'components/counter/Counter';\nimport ActionWrapper from 'components/flow/actions/action/Action';\nimport ExitComp from 'components/flow/exit/Exit';\nimport { getCategoriesForExit, getResultName } from 'components/flow/node/helpers';\nimport { getSwitchRouter } from 'components/flow/routers/helpers';\nimport shared from 'components/shared.module.scss';\nimport TitleBar from 'components/titlebar/TitleBar';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Types } from 'config/interfaces';\nimport { getOperatorConfig } from 'config/operatorConfigs';\nimport { getType, getTypeConfig } from 'config/typeConfigs';\nimport { AnyAction, Exit, FlowDefinition, FlowNode, SwitchRouter } from 'flowTypes';\nimport * as React from 'react';\nimport FlipMove from 'react-flip-move';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { DebugState } from 'store/editor';\nimport { AssetMap, RenderNode } from 'store/flowContext';\nimport AppState from 'store/state';\nimport {\n  DispatchWithState,\n  MergeEditorState,\n  mergeEditorState,\n  OnAddToNode,\n  onAddToNode,\n  OnOpenNodeEditor,\n  onOpenNodeEditor,\n  RemoveNode,\n  removeNode\n} from 'store/thunks';\nimport { ClickHandler, createClickHandler } from 'utils';\n\nimport styles from './Node.module.scss';\n\nexport interface NodePassedProps {\n  nodeUUID: string;\n  plumberMakeTarget: (id: string) => void;\n  plumberRecalculate: (id: string) => void;\n  plumberMakeSource: (id: string) => void;\n  plumberRemove: (id: string) => void;\n  plumberConnectExit: (node: FlowNode, exit: Exit) => void;\n  plumberUpdateClass: (\n    node: FlowNode,\n    exit: Exit,\n    className: string,\n    confirmDelete: boolean\n  ) => void;\n  startingNode: boolean;\n  onlyNode: boolean;\n  selected: boolean;\n  ghostRef?: any;\n  ghost?: boolean;\n}\n\nexport interface NodeStoreProps {\n  results: AssetMap;\n  activeCount: number;\n  containerOffset: { top: number; left: number };\n  translating: boolean;\n  simulating: boolean;\n  debug: DebugState;\n  renderNode: RenderNode;\n  definition: FlowDefinition;\n  onAddToNode: OnAddToNode;\n  onOpenNodeEditor: OnOpenNodeEditor;\n  removeNode: RemoveNode;\n  mergeEditorState: MergeEditorState;\n}\n\nexport type NodeProps = NodePassedProps & NodeStoreProps;\n\nconst cx: any = classNames.bind({ ...shared, ...styles });\n\n/**\n * A single node in the rendered flow\n */\nexport class NodeComp extends React.Component<NodeProps> {\n  public ele: HTMLDivElement;\n  private firstAction: any;\n  private clicking: boolean;\n  private events: ClickHandler;\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: NodeProps) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/Ref$/, /^on/, /^get/, /^handle/]\n    });\n\n    this.events = createClickHandler(this.onClick, this.handleShouldCancelClick);\n  }\n\n  private handleShouldCancelClick(): boolean {\n    return this.props.selected;\n  }\n\n  private eleRef(ref: HTMLDivElement): HTMLDivElement {\n    return (this.ele = ref);\n  }\n\n  private getGhostListener(): any {\n    return (e: MouseEvent) => {\n      // move our ghost node into position\n      const width = this.ele.getBoundingClientRect().width;\n      const left = e.pageX - width / 2 - 15;\n      const top = e.pageY + this.ele.scrollTop - (this.props.containerOffset.top + 20);\n      const style = this.ele.style;\n      style.left = left + 'px';\n      style.top = top + 'px';\n\n      // Hide ourselves if there's a drop target\n      style.visibility = document.querySelector('.plumb-drop-hover') ? 'hidden' : 'visible';\n    };\n  }\n\n  public componentDidMount(): void {\n    // Make ourselves a target\n    this.props.plumberMakeTarget(this.props.renderNode.node.uuid);\n\n    // Move our drag node around as necessary\n    if (this.props.ghost) {\n      // We store our listener on the window so flow can remove it\n      // this is a bit hacky but allows us to remove our dependency on jquery\n      // TODO: rework ghost node to manage its location like other nodes\n      const ghostListener: any = this.getGhostListener();\n      (window as any).ghostListener = ghostListener;\n      document.addEventListener('mousemove', ghostListener);\n    }\n  }\n\n  public componentDidUpdate(prevProps: NodeProps): void {\n    // when our exits change, we need to recalculate the endpoints\n    if (!this.props.ghost) {\n      try {\n        this.props.plumberRecalculate(this.props.renderNode.node.uuid);\n        for (const exit of this.props.renderNode.node.exits) {\n          this.props.plumberRecalculate(this.props.renderNode.node.uuid + ':' + exit.uuid);\n        }\n      } catch (error) {\n        // console.log(error);\n      }\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this.props.plumberRemove(this.props.renderNode.node.uuid);\n  }\n\n  /* istanbul ignore next */\n  private handleUUIDClicked(event: React.MouseEvent<HTMLDivElement>): void {\n    const selection = window.getSelection();\n    const range = document.createRange();\n    range.selectNodeContents(event.currentTarget);\n    selection.removeAllRanges();\n    selection.addRange(range);\n    document.execCommand('copy');\n    selection.removeAllRanges();\n    console.log(event.currentTarget.textContent + ' copied to clipboard.');\n  }\n\n  private handleAddToNode(): void {\n    this.props.onAddToNode(this.props.renderNode.node);\n  }\n\n  // Applies only to router nodes;\n  // ./Action/Action handles click logic for Action nodes.\n  private onClick(event: React.MouseEvent<HTMLElement>): void {\n    this.props.onOpenNodeEditor({\n      originalNode: this.props.renderNode\n    });\n  }\n\n  private handleRemoval(event: React.MouseEvent<HTMLElement>): void {\n    event.preventDefault();\n    event.stopPropagation();\n    this.props.removeNode(this.props.renderNode.node);\n  }\n\n  private getExits(): JSX.Element[] {\n    if (this.props.renderNode.node.exits) {\n      return this.props.renderNode.node.exits.map((exit: Exit, idx: number) => (\n        <ExitComp\n          key={exit.uuid}\n          node={this.props.renderNode.node}\n          categories={getCategoriesForExit(this.props.renderNode, exit)}\n          exit={exit}\n          showDragHelper={this.props.onlyNode && idx === 0}\n          plumberMakeSource={this.props.plumberMakeSource}\n          plumberRemove={this.props.plumberRemove}\n          plumberConnectExit={this.props.plumberConnectExit}\n          plumberUpdateClass={this.props.plumberUpdateClass}\n        />\n      ));\n    }\n    return [];\n  }\n\n  private isSelected(): boolean {\n    return this.props.selected;\n  }\n\n  private hasMissing(): boolean {\n    // see if we are splitting on a missing result\n    if (\n      this.props.renderNode.ui.type === Types.split_by_run_result ||\n      this.props.renderNode.ui.type === Types.split_by_run_result_delimited\n    ) {\n      if (!(this.props.renderNode.ui.config.operand.id in this.props.results)) {\n        return true;\n      }\n    }\n\n    if (this.props.renderNode.node.router) {\n      const kases = (this.props.renderNode.node.router as SwitchRouter).cases || [];\n      for (const kase of kases) {\n        if (!getOperatorConfig(kase.type)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  private isStartNodeVisible(): boolean {\n    return this.props.startingNode;\n  }\n\n  /* istanbul ignore next */\n  private renderDebug(): JSX.Element {\n    if (this.props.debug) {\n      if (this.props.debug.showUUIDs) {\n        return (\n          <span\n            id={`uuid-${this.props.renderNode.node.uuid}`}\n            onClick={this.handleUUIDClicked}\n            className={styles.uuid}\n          >\n            {this.props.renderNode.node.uuid}\n          </span>\n        );\n      }\n    }\n  }\n\n  public render(): JSX.Element {\n    const actions: JSX.Element[] = [];\n\n    let actionList: JSX.Element = null;\n    if (this.props.renderNode.node.actions) {\n      // Save the first reference off to manage our clicks\n      let firstRef: { ref: (ref: any) => any } | {} = {\n        ref: (ref: any) => (this.firstAction = ref)\n      };\n\n      this.props.renderNode.node.actions.forEach((action: AnyAction, idx: number) => {\n        const actionConfig = getTypeConfig(action.type);\n\n        if (actionConfig.hasOwnProperty('component') && actionConfig.component) {\n          const { component: ActionDiv } = actionConfig;\n          actions.push(\n            <ActionWrapper\n              {...firstRef}\n              key={action.uuid}\n              renderNode={this.props.renderNode}\n              selected={this.props.selected}\n              action={action}\n              first={idx === 0}\n              render={(anyAction: AnyAction) => <ActionDiv {...anyAction} />}\n            />\n          );\n        }\n\n        firstRef = {};\n      });\n\n      actionList =\n        actions.length > 0 ? (\n          <FlipMove enterAnimation=\"fade\" leaveAnimation=\"fade\" duration={300} easing=\"ease-out\">\n            {actions}\n          </FlipMove>\n        ) : null;\n    }\n\n    let header: JSX.Element = null;\n    let addActions: JSX.Element = null;\n    let summary: JSX.Element = null;\n\n    // Router node display logic\n    if (this.props.renderNode.ui.type !== Types.execute_actions) {\n      let type = this.props.renderNode.node.router.type;\n\n      if (this.props.renderNode.ui.type) {\n        type = getType(this.props.renderNode);\n      }\n\n      const config = getTypeConfig(type);\n\n      // let { name: title } = config;\n\n      let title: string = null;\n\n      const switchRouter = getSwitchRouter(this.props.renderNode.node);\n      if (switchRouter) {\n        if (this.props.renderNode.ui.type === Types.split_by_contact_field) {\n          title = `Split by ${this.props.renderNode.ui.config.operand.name}`;\n        } else {\n          if (this.props.renderNode.ui.type === Types.split_by_expression) {\n            title = 'Split by Expression';\n          } else if (this.props.renderNode.ui.type === Types.wait_for_response) {\n            title = 'Wait for Message';\n          }\n        }\n\n        const resultName = getResultName(this.props.renderNode.node);\n        if (resultName) {\n          summary = (\n            <div {...this.events} className={styles.save_result}>\n              <div className={styles.save_as}>Save as </div>\n              <div className={styles.result_name}>{resultName}</div>\n            </div>\n          );\n        }\n      }\n\n      if (\n        title === null &&\n        (this.props.renderNode.ui.type === Types.split_by_run_result ||\n          this.props.renderNode.ui.type === Types.split_by_run_result_delimited)\n      ) {\n        if (this.props.renderNode.ui.config.operand.id in this.props.results) {\n          title = `Split by ${this.props.results[this.props.renderNode.ui.config.operand.id].name}`;\n        } else {\n          title = `Missing ${this.props.renderNode.ui.config.operand.id}`;\n        }\n      }\n\n      if (title === null) {\n        title = config.name;\n      }\n\n      if (!this.props.renderNode.node.actions || !this.props.renderNode.node.actions.length) {\n        // Router headers are introduced here while action headers are introduced in ./Action/Action\n\n        header = (\n          // Wrap in a relative parent so it honors node clipping\n          <div style={{ position: 'relative' }}>\n            <div {...this.events}>\n              <TitleBar\n                __className={(shared as any)[this.hasMissing() ? 'missing' : config.type]}\n                showRemoval={!this.props.translating}\n                onRemoval={this.handleRemoval}\n                shouldCancelClick={this.handleShouldCancelClick}\n                title={title}\n              />\n            </div>\n          </div>\n        );\n      }\n    } else {\n      // Don't show add actions option if we are translating\n      if (!this.props.translating) {\n        addActions = (\n          <div\n            className={styles.add}\n            {...createClickHandler(this.handleAddToNode, this.handleShouldCancelClick)}\n          >\n            <span className=\"fe-add\" />\n          </div>\n        );\n      }\n    }\n\n    const exits: JSX.Element[] = this.getExits();\n\n    const classes = cx({\n      'plumb-drag': true,\n      [styles.ghost]: this.props.ghost,\n      [styles.flow_start]: this.isStartNodeVisible(),\n      [styles.selected]: this.isSelected()\n    });\n\n    const uuid: JSX.Element = this.renderDebug();\n\n    const renderedNode = (\n      <div\n        id={this.props.renderNode.node.uuid}\n        className={`${styles.node_container} ${classes}`}\n        ref={this.eleRef}\n      >\n        <div className={styles.node}>\n          {this.isStartNodeVisible() ? (\n            <div className={styles.flow_start_message}>Flow Start</div>\n          ) : null}\n\n          {uuid}\n          <Counter\n            count={this.props.activeCount}\n            containerStyle={styles.active}\n            countStyle={''}\n            keepVisible={this.props.simulating}\n            onClick={() => {\n              if (this.context.config.onActivityClicked) {\n                this.context.config.onActivityClicked(this.props.nodeUUID, this.props.activeCount);\n              }\n            }}\n          />\n\n          <div className={styles.cropped}>\n            {header}\n            {actionList}\n            {summary}\n          </div>\n\n          <div className={`${styles.exit_table}`}>\n            <div className={styles.exits} {...this.events}>\n              {exits}\n            </div>\n            {addActions}\n          </div>\n        </div>\n      </div>\n    );\n    return renderedNode;\n  }\n}\n\nconst mapStateToProps = (\n  {\n    flowContext: {\n      nodes,\n      definition,\n      assetStore: {\n        results: { items }\n      }\n    },\n    editorState: { translating, debug, ghostNode, simulating, containerOffset, activity }\n  }: AppState,\n  props: NodePassedProps\n) => {\n  let renderNode: RenderNode = null;\n\n  // if we match our ghost node use that\n  if (ghostNode && ghostNode.node.uuid === props.nodeUUID) {\n    renderNode = ghostNode;\n  }\n\n  // otherwise look up our node from the list\n  else if (props.nodeUUID in nodes) {\n    renderNode = nodes[props.nodeUUID];\n  }\n\n  if (!renderNode) {\n    throw Error(\"Couldn't find node for \" + props.nodeUUID);\n  }\n\n  const activeCount = activity.nodes[props.nodeUUID] || 0;\n\n  return {\n    results: items,\n    activeCount,\n    containerOffset,\n    translating,\n    debug,\n    definition,\n    renderNode,\n    simulating\n  };\n};\n\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators(\n    {\n      onAddToNode,\n      onOpenNodeEditor,\n      removeNode,\n      mergeEditorState\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  null,\n  { withRef: true }\n)(NodeComp);\n","import Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { MediaPlayer } from 'components/mediaplayer/MediaPlayer';\nimport Modal from 'components/modal/Modal';\nimport styles from 'components/simulator/LogEvent.module.scss';\nimport { Types } from 'config/interfaces';\nimport { Flow, Group } from 'flowTypes';\nimport * as React from 'react';\nimport { createUUID } from 'utils';\n\nconst MAP_THUMB = require('static/images/map.jpg');\n\ninterface MsgProps {\n  text: string;\n  uuid: string;\n  urn: string;\n  attachments?: string[];\n  quick_replies?: string[];\n}\n\nexport interface EventProps {\n  step_uuid: string;\n  uuid?: string;\n  created_on?: string;\n  type?: string;\n  field?: { key: string; name: string };\n  field_uuid?: string;\n  result_name?: string;\n  text?: string;\n  name?: string;\n  value?: { text: string };\n  body?: string;\n  addresses?: string[];\n  subject?: string;\n  url?: string;\n  status?: string;\n  status_code?: number;\n  request?: string;\n  response?: string;\n  resthook?: string;\n  base_language?: string;\n  language?: string;\n  translations?: { [lang: string]: { [text: string]: string } };\n  groups?: Group[];\n  flow?: Flow;\n  groups_added?: Group[];\n  groups_removed?: Group[];\n  msg?: MsgProps;\n}\n\ninterface LogEventState {\n  detailsVisible: boolean;\n}\n\nexport enum Direction {\n  MT,\n  MO\n}\n\nconst getStyleForDirection = (direction: Direction): string => {\n  return direction === Direction.MO ? styles.msg_received : styles.send_msg;\n};\n\nconst renderError = (error: string): JSX.Element => {\n  return (\n    <div className={styles.error}>\n      <span>Error: {error}</span>\n    </div>\n  );\n};\n\nconst renderInfo = (info: string): JSX.Element => {\n  return (\n    <div className={styles.info}>\n      <span>{info}</span>\n    </div>\n  );\n};\n\nconst renderAttachment = (attachment: string): JSX.Element => {\n  const idx = attachment.indexOf(':');\n  if (idx > -1) {\n    const type = attachment.substr(0, idx);\n    const url = attachment.substr(idx + 1);\n    if (type.startsWith('audio')) {\n      return (\n        <div className={styles.audio_attachment}>\n          <div className={styles.media_player}>\n            <MediaPlayer url={url} />\n          </div>\n          <div className={styles.audio_text}>Audio Recording</div>\n        </div>\n      );\n    } else if (type.startsWith('image')) {\n      return <img src={url} alt=\"Attachment\" />;\n    } else if (type.startsWith('geo')) {\n      return <img src={MAP_THUMB} alt=\"Attachment\" />;\n    } else if (type.startsWith('video')) {\n      return (\n        <div className={styles.video_attachment}>\n          <video controls={true} src={url} />\n        </div>\n      );\n    }\n  }\n  return null;\n};\n\nconst renderMessage = (text: string, attachments: string[], direction: Direction): JSX.Element => {\n  const attaches = attachments || [];\n  return (\n    <div className={getStyleForDirection(direction)}>\n      {attaches.map((attachment: string) => (\n        <div key={text + attachment}>{renderAttachment(attachment)}</div>\n      ))}\n      {text\n        ? text.split('\\n').map((item, key) => {\n            return (\n              <div key={createUUID()} className={styles.msg_text}>\n                {item}\n              </div>\n            );\n          })\n        : null}\n    </div>\n  );\n};\n\n/**\n * Viewer for log events\n */\nexport default class LogEvent extends React.Component<EventProps, LogEventState> {\n  constructor(props: EventProps) {\n    super(props);\n    this.state = {\n      detailsVisible: false\n    };\n\n    this.showDetails = this.showDetails.bind(this);\n    this.getButtons = this.getButtons.bind(this);\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: {\n        name: 'Ok',\n        onClick: () => {\n          this.setState({ detailsVisible: false });\n        }\n      }\n    };\n  }\n\n  private showDetails(): void {\n    this.setState({ detailsVisible: true });\n  }\n\n  private renderGroupChange(): JSX.Element {\n    const groups = this.props.groups_added || this.props.groups_removed;\n    let groupText = this.props.groups_added ? 'Added to ' : 'Removed from ';\n    let delim = ' ';\n    groups.forEach(group => {\n      groupText += `${delim}\"${group.name}\"`;\n      delim = ', ';\n    });\n\n    return renderInfo(groupText);\n  }\n\n  private renderEmail(): JSX.Element {\n    return this.renderClickable(\n      <div className={styles.info + ' ' + styles.email}>\n        {`Sent email to \"${this.props.addresses.join(', ')}\" with subject \"${this.props.subject}\n                \"`}\n      </div>,\n      <Dialog\n        title=\"Email Details\"\n        headerClass={Types.send_email}\n        buttons={this.getButtons()}\n        noPadding={true}\n      >\n        <div className={styles.email_details}>\n          <div className={styles.to}>To: {this.props.addresses.join(', ')}</div>\n          <div className={styles.subject}>Subject: {this.props.subject}</div>\n          <div className={styles.body}>{this.props.body}</div>\n        </div>\n      </Dialog>\n    );\n  }\n\n  private renderWebhook(): JSX.Element {\n    return this.renderClickable(\n      <div className={styles.info + ' ' + styles.webhook}>\n        <span>Called webhook {this.props.url}</span>\n      </div>,\n      <Dialog\n        title=\"Webhook Details\"\n        headerClass={Types.call_webhook}\n        buttons={this.getButtons()}\n        noPadding={true}\n      >\n        <div className={styles.webhook_details}>\n          <div className={''}>{this.props.request}</div>\n          <div className={styles.response}>{this.props.response}</div>\n        </div>\n      </Dialog>\n    );\n  }\n\n  private renderClickable(element: JSX.Element, details: JSX.Element): JSX.Element {\n    return (\n      <div>\n        <div className={styles.has_detail} onClick={this.showDetails}>\n          {element}\n        </div>\n        <Modal show={this.state.detailsVisible}>\n          <div className={styles.event_viewer}>{details}</div>\n        </Modal>\n      </div>\n    );\n  }\n\n  public renderLogEvent(): JSX.Element {\n    switch (this.props.type) {\n      case 'msg_received':\n        return renderMessage(this.props.msg.text, this.props.msg.attachments, Direction.MO);\n      case 'msg_created':\n        return renderMessage(this.props.msg.text, this.props.msg.attachments, Direction.MT);\n      case 'ivr_created':\n        return renderMessage(this.props.msg.text, this.props.msg.attachments, Direction.MT);\n      case 'error':\n        return renderError(this.props.text);\n      case 'msg_wait':\n        return renderInfo('Waiting for reply');\n      case 'contact_groups_changed':\n        return this.renderGroupChange();\n      case 'contact_urns_changed':\n        return renderInfo('Added a URN for the contact');\n      case 'contact_field_changed':\n        return renderInfo(`Set contact \"${this.props.field.name}\" to \"${this.props.value.text}\"`);\n      case 'run_result_changed':\n        return renderInfo(`Set result \"${this.props.name}\" to \"${this.props.value}\"`);\n      case 'contact_name_changed':\n        return renderInfo(`Set contact name to \"${this.props.name}\"`);\n      case 'email_created':\n        return this.renderEmail();\n      case 'broadcast_created':\n        return renderMessage(\n          this.props.translations[this.props.base_language].text,\n          this.props.msg ? this.props.msg.attachments : [],\n          Direction.MT\n        );\n      case 'resthook_called':\n        return renderInfo(`Trigerred flow event ${this.props.resthook}`);\n      case 'webhook_called':\n        return this.renderWebhook();\n      case 'flow_entered':\n        return renderInfo(`Entered flow ${this.props.flow.name}`);\n      case 'session_triggered':\n        return renderInfo(`Started somebody else in ${this.props.flow.name}`);\n      case 'contact_language_changed':\n        return renderInfo(`Set preferred language to ${this.props.language}`);\n      case 'info':\n        return renderInfo(this.props.text);\n      case 'environment_refreshed':\n        return null;\n    }\n\n    // should only get here if we are get an unexpected event\n    console.log('Simulator render missing', this.props);\n    return null;\n  }\n\n  public render(): JSX.Element {\n    return <div className={styles.evt}>{this.renderLogEvent()}</div>;\n  }\n}\n","import * as React from 'react';\nimport ReactModal from 'react-modal';\n\ninterface CustomStyles {\n  content: { [cssProperty: string]: string | number };\n}\n\nexport interface ModalProps {\n  show: boolean;\n  onClose?(): void;\n\n  onModalOpen?: any;\n  width?: string;\n}\n\n// A base modal for displaying messages or performing single button actions\nexport default class Modal extends React.Component<ModalProps> {\n  public render(): JSX.Element {\n    const customStyles: CustomStyles = {\n      content: {\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        marginTop: '40px',\n        bottom: 'initial',\n        padding: 'none',\n        borderRadius: 'none',\n        outline: 'none',\n        width: this.props.width ? this.props.width : '700px',\n        border: 'none'\n      }\n    };\n    return (\n      <ReactModal\n        ariaHideApp={false}\n        isOpen={this.props.show}\n        onAfterOpen={this.props.onModalOpen}\n        onRequestClose={this.props.onClose}\n        style={customStyles}\n        shouldCloseOnOverlayClick={false}\n        contentLabel=\"Modal\"\n      >\n        {this.props.children}\n      </ReactModal>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { getDraggedFrom } from 'components/helpers';\nimport Modal from 'components/modal/Modal';\nimport { Type } from 'config/interfaces';\nimport { Action, AnyAction, FlowDefinition } from 'flowTypes';\nimport { UpdateUserAddingAction } from 'store/actionTypes';\nimport { Asset, AssetStore, RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, updateUserAddingAction } from 'store/nodeEditor';\nimport AppState from 'store/state';\nimport {\n  AddAsset,\n  addAsset,\n  DispatchWithState,\n  GetState,\n  HandleTypeConfigChange,\n  handleTypeConfigChange,\n  LocalizationUpdates,\n  MergeEditorState,\n  mergeEditorState,\n  NoParamsAC,\n  onUpdateAction,\n  OnUpdateAction,\n  OnUpdateLocalizations,\n  onUpdateLocalizations,\n  OnUpdateRouter,\n  onUpdateRouter,\n  resetNodeEditingState\n} from 'store/thunks';\n\nexport type UpdateLocalizations = (language: string, changes: LocalizationUpdates) => void;\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport interface NodeEditorPassedProps {\n  plumberConnectExit: Function;\n  plumberRepaintForDuration: Function;\n}\n\nexport interface NodeEditorStoreProps {\n  assetStore: AssetStore;\n  addAsset: AddAsset;\n  language: Asset;\n  definition: FlowDefinition;\n  translating: boolean;\n  typeConfig: Type;\n  settings: NodeEditorSettings;\n  nodes: { [uuid: string]: RenderNode };\n  handleTypeConfigChange: HandleTypeConfigChange;\n  resetNodeEditingState: NoParamsAC;\n  mergeEditorState: MergeEditorState;\n  onUpdateLocalizations: OnUpdateLocalizations;\n  onUpdateAction: OnUpdateAction;\n  onUpdateRouter: OnUpdateRouter;\n  updateUserAddingAction: UpdateUserAddingAction;\n}\n\nexport type NodeEditorProps = NodeEditorPassedProps & NodeEditorStoreProps;\n\nexport interface FormProps {\n  // our two ways of updating\n  updateRouter(renderNode: RenderNode): void;\n  updateAction(action: AnyAction): void;\n\n  addAsset(assetType: string, asset: Asset): void;\n\n  assetStore: AssetStore;\n\n  nodeSettings?: NodeEditorSettings;\n  typeConfig?: Type;\n  onTypeChange?(config: Type): void;\n  onClose?(canceled: boolean): void;\n}\n\nexport interface LocalizationProps {\n  nodeSettings?: NodeEditorSettings;\n  typeConfig?: Type;\n  onClose?(canceled: boolean): void;\n\n  updateLocalizations: UpdateLocalizations;\n  language: Asset;\n}\n\nexport class NodeEditor extends React.Component<NodeEditorProps> {\n  constructor(props: NodeEditorProps) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/^close/, /^update/, /^handle/]\n    });\n  }\n\n  private updateLocalizations(language: string, changes: LocalizationUpdates): void {\n    this.props.onUpdateLocalizations(language, changes);\n  }\n\n  public close(canceled: boolean): void {\n    // Make sure we re-wire the old connection\n    if (canceled) {\n      const dragPoint = getDraggedFrom(this.props.settings.originalNode);\n      if (dragPoint) {\n        const renderNode = this.props.nodes[dragPoint.nodeUUID];\n        for (const exit of renderNode.node.exits) {\n          if (exit.uuid === dragPoint.exitUUID) {\n            // TODO: should this just be taking literal uuids instead of objects?\n            this.props.plumberConnectExit(renderNode.node, exit);\n            break;\n          }\n        }\n      }\n    }\n\n    this.props.resetNodeEditingState();\n    this.props.updateUserAddingAction(false);\n  }\n\n  private updateAction(\n    action: Action,\n    onUpdated?: (dispatch: DispatchWithState, getState: GetState) => void\n  ): void {\n    this.props.onUpdateAction(action, onUpdated);\n  }\n\n  private updateRouter(renderNode: RenderNode): void {\n    this.props.onUpdateRouter(renderNode);\n  }\n\n  private handleAddAsset(assetType: string, asset: Asset): void {\n    this.props.addAsset(assetType, asset);\n  }\n\n  public render(): JSX.Element {\n    if (this.props.settings) {\n      const { typeConfig } = this.props;\n\n      // see if we should use the localization form\n      if (this.props.translating) {\n        const { localization: LocalizationForm } = typeConfig;\n\n        if (LocalizationForm) {\n          const localizationProps: LocalizationProps = {\n            updateLocalizations: this.updateLocalizations,\n            nodeSettings: this.props.settings,\n            typeConfig: this.props.typeConfig,\n            onClose: this.close,\n            language: this.props.language\n          };\n\n          return (\n            <Modal width=\"600px\" show={true}>\n              <LocalizationForm {...{ ...localizationProps }} />\n            </Modal>\n          );\n        }\n      }\n\n      const { form: Form } = typeConfig;\n      const formProps: FormProps = {\n        assetStore: this.props.assetStore,\n        addAsset: this.handleAddAsset,\n        updateAction: this.updateAction,\n        updateRouter: this.updateRouter,\n        nodeSettings: this.props.settings,\n        typeConfig: this.props.typeConfig,\n        onTypeChange: this.props.handleTypeConfigChange,\n        onClose: this.close\n      };\n\n      return (\n        <Modal width=\"600px\" show={true}>\n          <Form {...{ ...formProps }} />\n        </Modal>\n      );\n    }\n    return null;\n  }\n}\n\n/* istanbul ignore next */\nconst mapStateToProps = ({\n  flowContext: { definition, nodes, assetStore },\n  editorState: { language, translating },\n  nodeEditor: { typeConfig, settings }\n}: AppState) => ({\n  language,\n  definition,\n  nodes,\n  translating,\n  typeConfig,\n  settings,\n  assetStore\n});\n\n/* istanbul ignore next */\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators(\n    {\n      addAsset,\n      resetNodeEditingState,\n      mergeEditorState,\n      handleTypeConfigChange,\n      onUpdateLocalizations,\n      onUpdateAction,\n      onUpdateRouter,\n      updateUserAddingAction\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NodeEditor);\n","import { EventProps } from 'components/simulator/LogEvent';\nimport { FlowDefinition } from 'flowTypes';\nimport { AssetStore, AssetType } from 'store/flowContext';\nimport { assetMapToList } from 'store/helpers';\nimport { createUUID } from 'utils';\n\nconst SIMULATOR_CHANNEL = {\n  uuid: createUUID(),\n  name: 'Simulator',\n  address: '+12065550000',\n  schemes: ['tel'],\n  roles: ['send', 'receive']\n};\n\ninterface SimAsset {\n  type: AssetType;\n  url: string;\n  content: any;\n}\n\nexport const getTime = (): string => {\n  const now = new Date();\n  const mins = now.getMinutes();\n  let minStr = '' + mins;\n  if (mins < 10) {\n    minStr = '0' + mins;\n  }\n  return Math.abs(12 - now.getHours()) + ':' + minStr;\n};\n\nexport const getSimulationAssets = (assets: AssetStore, flow: FlowDefinition): any => {\n  const simAssets: SimAsset[] = [];\n\n  // our group set asset\n  simAssets.push({\n    type: AssetType.Group,\n    url: assets.groups.endpoint,\n    content: assetMapToList(assets.groups.items)\n  });\n\n  // our fields\n  simAssets.push({\n    type: AssetType.Field,\n    url: assets.fields.endpoint,\n    content: assetMapToList(assets.fields.items)\n  });\n\n  // our labels\n  simAssets.push({\n    type: AssetType.Label,\n    url: assets.labels.endpoint,\n    content: assetMapToList(assets.labels.items)\n  });\n\n  // our channels\n  simAssets.push({\n    type: AssetType.Channel,\n    url: assets.channels.endpoint,\n    content: [SIMULATOR_CHANNEL]\n  });\n\n  simAssets.push({\n    type: AssetType.Flow,\n    url: assets.flows.endpoint + `${flow.uuid}/`,\n    content: flow\n  });\n\n  const payload = {\n    assets: simAssets,\n    asset_server: {\n      type_urls: {\n        [AssetType.Flow]: assets.flows.endpoint,\n        [AssetType.Field]: assets.fields.endpoint,\n        [AssetType.Channel]: assets.channels.endpoint,\n        [AssetType.Group]: assets.groups.endpoint,\n        [AssetType.Label]: assets.labels.endpoint\n      }\n    }\n  };\n\n  return payload;\n};\n\nexport const isMessage = (event: EventProps): boolean => {\n  return !!['msg_created', 'msg_received', 'ivr_created'].find(type => type === event.type);\n};\n\nexport const isMT = (event: EventProps): boolean => {\n  return !!['msg_created', 'ivr_created'].find(type => type === event.type);\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as axios from 'axios';\nimport { getTime, isMessage, isMT } from 'components/simulator/helpers';\nimport LogEvent, { EventProps } from 'components/simulator/LogEvent';\nimport styles from 'components/simulator/Simulator.module.scss';\nimport { ConfigProviderContext, fakePropType } from 'config/ConfigProvider';\nimport { getURL } from 'external';\nimport { FlowDefinition, Group, Wait } from 'flowTypes';\nimport update from 'immutability-helper';\nimport { ReactNode } from 'react';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Activity, RecentMessage } from 'store/editor';\nimport { AssetStore, RenderNodeMap } from 'store/flowContext';\nimport { getCurrentDefinition } from 'store/helpers';\nimport AppState from 'store/state';\nimport { DispatchWithState, MergeEditorState } from 'store/thunks';\nimport { createUUID } from 'utils';\n\nconst MESSAGE_DELAY_MS = 200;\n\nconst MAP_THUMB = require('static/images/map.jpg');\nconst IMAGE_A = 'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_image_a.jpg';\nconst IMAGE_B = 'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_image_b.jpg';\nconst IMAGE_C = 'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_image_c.jpg';\nconst AUDIO_A = 'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_audio_a.mp3';\nconst VIDEO_A = 'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_video_a.mp4';\n\nconst VIDEO_A_THUMB =\n  'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_video_a_thumb.jpg';\n\ninterface PostMessage {\n  text: string;\n  uuid: string;\n  urn: string;\n  attachments: string[];\n}\n\ninterface Message {\n  text: string;\n  inbound: boolean;\n}\n\nexport interface SimulatorStoreProps {\n  nodes: RenderNodeMap;\n  definition: FlowDefinition;\n  assetStore: AssetStore;\n\n  activity: Activity;\n\n  // TODO: take away responsibility of simulator for resetting this\n  liveActivity: Activity;\n}\n\nexport interface SimulatorPassedProps {\n  mergeEditorState: MergeEditorState;\n}\n\nexport type SimulatorProps = SimulatorStoreProps & SimulatorPassedProps;\n\nenum DrawerType {\n  audio = 'audio',\n  images = 'images',\n  videos = 'videos',\n  location = 'location',\n  digit = 'digit',\n  digits = 'digits',\n  quickReplies = 'quickReplies'\n}\n\ninterface SimulatorState {\n  visible: boolean;\n  session?: Session;\n  contact: Contact;\n  channel: string;\n  events: EventProps[];\n  active: boolean;\n  time: string;\n\n  keypadEntry: string;\n\n  quickReplies?: string[];\n\n  // are we currently simulating a sprint\n  sprinting: boolean;\n\n  // is our drawer open\n  drawerOpen: boolean;\n\n  // what type of drawer are we looking at\n  drawerType?: DrawerType;\n\n  // how tall our drawer is\n  drawerHeight: number;\n\n  // is our attachment type selection open\n  attachmentOptionsVisible: boolean;\n\n  // are we at a wait hint, ie, a forced attachment\n  waitingForHint: boolean;\n}\n\ninterface Contact {\n  uuid: string;\n  urns: string[];\n  fields: {};\n  groups: Group[];\n}\n\ninterface Step {\n  arrived_on: Date;\n  uuid: string;\n  exit_uuid: string;\n  node_uuid: string;\n}\n\ninterface Run {\n  path: Step[];\n  flow_uuid: string;\n  status: string;\n  events?: EventProps[];\n  wait?: Wait;\n}\n\ninterface RunContext {\n  contact: Contact;\n  session: Session;\n  events: EventProps[];\n}\n\ninterface Session {\n  runs: Run[];\n  contact: Contact;\n  input?: any;\n  wait?: Wait;\n}\n\n/**\n * Our dev console for simulating or testing expressions\n */\nexport class Simulator extends React.Component<SimulatorProps, SimulatorState> {\n  private debug: Session[] = [];\n  private flows: FlowDefinition[] = [];\n  private currentFlow: string;\n  private inputBox: HTMLInputElement;\n\n  private drawerEle: HTMLDivElement;\n\n  // marks the bottom of our chat\n  private bottom: any;\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: SimulatorProps, context: ConfigProviderContext) {\n    super(props);\n    this.state = {\n      active: false,\n      visible: false,\n      events: [],\n      contact: {\n        uuid: createUUID(),\n        urns: ['tel:+12065551212'],\n        fields: {},\n        groups: []\n      },\n      keypadEntry: '',\n      drawerHeight: 0,\n      channel: createUUID(),\n      time: getTime(),\n      waitingForHint: false,\n      drawerOpen: false,\n      attachmentOptionsVisible: false,\n      sprinting: false\n    };\n    this.bottomRef = this.bottomRef.bind(this);\n    this.inputBoxRef = this.inputBoxRef.bind(this);\n    this.currentFlow = this.props.definition.uuid;\n\n    bindCallbacks(this, {\n      include: [/^on/, /^get/, /^handle/]\n    });\n  }\n\n  private bottomRef(ref: any): void {\n    return (this.bottom = ref);\n  }\n\n  private inputBoxRef(ref: any): void {\n    this.inputBox = ref;\n  }\n\n  private updateActivity(recentMessages: { [key: string]: RecentMessage[] } = {}): void {\n    if (this.state.session) {\n      let lastExit: string = null;\n      const paths: { [key: string]: number } = {};\n      const active: { [nodeUUID: string]: number } = {};\n      let activeFlow: string;\n\n      for (const run of this.state.session.runs) {\n        let finalStep: Step = null;\n\n        for (const step of run.path) {\n          if (lastExit) {\n            const key = lastExit + ':' + step.node_uuid;\n            let pathCount = paths[key];\n            if (!pathCount) {\n              pathCount = 0;\n            }\n            paths[key] = ++pathCount;\n          }\n          lastExit = step.exit_uuid;\n          finalStep = step;\n        }\n\n        if (run.status === 'waiting' && finalStep) {\n          let count = active[finalStep.node_uuid];\n          if (!count) {\n            count = 0;\n          }\n          active[finalStep.node_uuid] = ++count;\n          activeFlow = run.flow_uuid;\n        }\n      }\n\n      const simulatedMessages = this.props.activity.recentMessages || {};\n\n      for (const key in recentMessages) {\n        let messages = simulatedMessages[key] || [];\n        messages = recentMessages[key].concat(messages);\n        simulatedMessages[key] = messages;\n      }\n\n      const activity: Activity = {\n        segments: paths,\n        nodes: active,\n        recentMessages: simulatedMessages\n      };\n\n      this.props.mergeEditorState({ activity });\n\n      if (activeFlow && activeFlow !== this.currentFlow) {\n        this.currentFlow = activeFlow;\n      }\n    }\n  }\n\n  private updateEvents(\n    events: EventProps[],\n    session: Session,\n    recentMessages: { [key: string]: RecentMessage[] },\n    callback: () => void\n  ): void {\n    if (events && events.length > 0) {\n      const toAdd = [];\n\n      let quickReplies: string[] = null;\n\n      let messageFound = false;\n      while (events.length > 0 && !messageFound) {\n        const event = events.shift();\n\n        if (isMessage(event)) {\n          messageFound = true;\n\n          // if it's a message add it to our recent messages\n          let fromUUID = '';\n          let toUUID = '';\n\n          // work backwards, since our events are recent\n          for (let i = session.runs.length - 1; i >= 0; i--) {\n            const path = session.runs[i].path;\n\n            // start at the penultimate node since we have nowhere to render recent messages for the last node\n            for (let j = path.length - 2; j >= 0; j--) {\n              if (path[j].uuid === event.step_uuid) {\n                fromUUID = path[j].exit_uuid;\n                toUUID = path[j + 1].node_uuid;\n                break;\n              }\n            }\n\n            if (fromUUID && toUUID) {\n              const key = `${fromUUID}:${toUUID}`;\n              const msg: RecentMessage = {\n                sent: new Date(event.created_on),\n                text: event.msg.text\n              };\n\n              if (key in recentMessages) {\n                recentMessages[key].unshift(msg);\n              } else {\n                recentMessages[key] = [msg];\n              }\n            }\n          }\n\n          if (isMT(event)) {\n            // save off any quick replies we might have\n            if (event.msg.quick_replies) {\n              quickReplies = event.msg.quick_replies;\n            }\n          }\n        }\n\n        toAdd.push(event);\n      }\n\n      const newEvents = update(this.state.events, {\n        $push: toAdd\n      }) as EventProps[];\n      const newState: Partial<SimulatorState> = { events: newEvents };\n\n      if (quickReplies !== null) {\n        newState.quickReplies = quickReplies;\n      }\n\n      this.scrollToBottom();\n\n      this.setState(newState as SimulatorState, () => {\n        if (events.length === 0) {\n          callback();\n        } else {\n          window.setTimeout(() => {\n            this.updateEvents(events, session, recentMessages, callback);\n          }, MESSAGE_DELAY_MS);\n        }\n      });\n    } else {\n      callback();\n    }\n  }\n\n  private updateRunContext(runContext: RunContext, msg?: PostMessage): void {\n    const wasJustActive = this.state.active || (runContext.events && runContext.events.length > 0);\n    this.setState({ quickReplies: [] }, () => {\n      if (!runContext.events || (runContext.events.length === 0 && msg)) {\n        const runs = runContext.session.runs;\n        const run = runs[runs.length - 1];\n        const step = run.path[run.path.length - 1];\n\n        runContext.events = [\n          {\n            msg: {\n              uuid: createUUID(),\n              urn: this.state.contact.urns[0],\n              text: msg.text,\n              attachments: msg.attachments\n            },\n            type: 'msg_created',\n            created_on: new Date().toISOString(),\n            step_uuid: step.uuid\n          }\n        ];\n      }\n\n      const newlyRecentMessages = {};\n\n      this.updateEvents(runContext.events, runContext.session, newlyRecentMessages, () => {\n        let active = false;\n        for (const run of runContext.session.runs) {\n          if (run.status === 'waiting') {\n            active = true;\n            break;\n          }\n        }\n\n        let newEvents = this.state.events;\n        if (!active && wasJustActive) {\n          newEvents = update(this.state.events, {\n            $push: [\n              {\n                type: 'info',\n                text: 'Exited flow',\n                created_on: new Date()\n              } as any\n            ]\n          }) as EventProps[];\n        }\n\n        const waitingForHint =\n          runContext.session &&\n          runContext.session.wait &&\n          runContext.session.wait.hint !== undefined;\n\n        let drawerType = null;\n        if (waitingForHint) {\n          switch (runContext.session.wait.hint.type) {\n            case 'audio':\n              drawerType = DrawerType.audio;\n              break;\n            case 'video':\n              drawerType = DrawerType.videos;\n              break;\n            case 'image':\n              drawerType = DrawerType.images;\n              break;\n            case 'location':\n              drawerType = DrawerType.location;\n              break;\n            case 'digits':\n              drawerType = DrawerType.digit;\n              if (runContext.session.wait.hint.count !== 1) {\n                drawerType = DrawerType.digits;\n              }\n              break;\n            default:\n              console.log('Unknown hint', runContext.session.wait.hint.type);\n          }\n        }\n\n        let drawerOpen = waitingForHint;\n\n        // if we have quick replies, open our drawe with attachment options\n        if (!drawerType && this.hasQuickReplies()) {\n          drawerType = DrawerType.quickReplies;\n          drawerOpen = true;\n        }\n\n        this.setState(\n          {\n            active,\n            sprinting: false,\n            session: runContext.session,\n            events: newEvents,\n            drawerOpen,\n            drawerType,\n            waitingForHint\n          },\n          () => {\n            this.updateActivity(newlyRecentMessages);\n            this.handleFocusUpdate();\n          }\n        );\n      });\n    });\n  }\n\n  private startFlow(): void {\n    // reset our events and contact\n    this.setState(\n      {\n        sprinting: true,\n        drawerOpen: false,\n        attachmentOptionsVisible: false,\n        events: []\n      },\n      () => {\n        const now = new Date().toISOString();\n        const body: any = {\n          contact: this.state.contact,\n          flow: getCurrentDefinition(this.props.definition, this.props.nodes, false),\n          trigger: {\n            type: 'manual',\n            environment: {\n              date_format: 'DD-MM-YYYY',\n              time_format: 'hh:mm',\n              timezone: 'America/New_York',\n              languages: []\n            },\n            contact: {\n              uuid: createUUID(),\n              urns: ['tel:+12065551212'],\n              fields: {},\n              groups: [],\n              created_on: now\n            },\n            flow: {\n              uuid: this.props.definition.uuid,\n              name: this.props.definition.name\n            },\n            params: {},\n            triggered_on: now\n          }\n        };\n\n        axios.default\n          .post(getURL(this.context.config.endpoints.simulateStart), JSON.stringify(body, null, 2))\n          .then((response: axios.AxiosResponse) => {\n            this.updateRunContext(response.data as RunContext);\n          });\n      }\n    );\n  }\n\n  private resume(text: string, attachment?: string): void {\n    if ((!text || text.trim().length === 0) && !attachment) {\n      return;\n    }\n\n    if (text === '\\\\debug') {\n      console.log(JSON.stringify(this.debug, null, 2));\n      return;\n    }\n\n    if (text === '\\\\recalc') {\n      console.log('recal..');\n      // this.props.plumberRepaint();\n      return;\n    }\n\n    this.setState({ sprinting: true, attachmentOptionsVisible: false, drawerOpen: false }, () => {\n      const now = new Date().toISOString();\n\n      const msg: PostMessage = {\n        text,\n        uuid: createUUID(),\n        urn: this.state.session.contact.urns[0],\n        attachments: attachment ? [attachment] : []\n      };\n\n      const body: any = {\n        flow: getCurrentDefinition(this.props.definition, this.props.nodes, false),\n        session: this.state.session,\n        resume: {\n          type: 'msg',\n          msg,\n          resumed_on: now,\n          contact: this.state.session.contact\n        }\n      };\n\n      axios.default\n        .post(getURL(this.context.config.endpoints.simulateResume), JSON.stringify(body, null, 2))\n        .then((response: axios.AxiosResponse) => {\n          this.updateRunContext(response.data as RunContext, msg);\n        })\n        .catch(error => {\n          if (error.response.status) {\n          }\n          const events = update(this.state.events, {\n            $push: [\n              {\n                type: 'error',\n                text:\n                  error.response.status > 499\n                    ? 'Server error, try again later'\n                    : error.response.data.error\n              } as any\n            ]\n          }) as EventProps[];\n          this.setState({ events });\n        });\n    });\n  }\n\n  private onReset(event: any): void {\n    this.startFlow();\n  }\n\n  private scrollToBottom(delay?: number): void {\n    const wait = delay || 0;\n    if (this.bottom) {\n      window.setTimeout(() => {\n        if (this.bottom) {\n          this.bottom.scrollIntoView(false);\n        }\n      }, wait);\n    }\n  }\n\n  public componentDidUpdate(prevProps: SimulatorProps, prevState: SimulatorState): void {\n    if (this.drawerEle !== null) {\n      if (\n        prevState.drawerHeight !== this.drawerEle.clientHeight ||\n        prevState.drawerOpen !== this.state.drawerOpen\n      ) {\n        this.setState({ drawerHeight: this.drawerEle.clientHeight }, () => {\n          this.scrollToBottom(800);\n        });\n      }\n    }\n  }\n\n  private onKeyUp(event: any): void {\n    if (event.key === 'Enter') {\n      const ele = event.target;\n      const text = ele.value;\n      ele.value = '';\n      this.resume(text);\n    }\n  }\n\n  private onToggle(event: any): void {\n    const newVisible = !this.state.visible;\n\n    this.props.mergeEditorState({ simulating: newVisible });\n\n    this.setState({ visible: newVisible }, () => {\n      // clear our viewing definition\n      if (!this.state.visible) {\n        window.setTimeout(() => {\n          this.props.mergeEditorState({ activity: this.props.liveActivity });\n        }, 500);\n      } else {\n        this.updateActivity();\n\n        // start our flow if we haven't already\n        if (this.state.events.length === 0) {\n          this.startFlow();\n        }\n\n        this.handleFocusUpdate();\n      }\n    });\n  }\n\n  private handleFocusUpdate(): void {\n    if (this.inputBox) {\n      this.inputBox.focus();\n    }\n  }\n\n  private sendAttachment(attachment: string): void {\n    this.setState({ drawerOpen: false, attachmentOptionsVisible: false }, () => {\n      window.setTimeout(() => {\n        this.resume(null, attachment);\n      }, 200);\n    });\n  }\n\n  private getImageDrawer(): JSX.Element {\n    return (\n      <div className={styles.drawer_items}>\n        <div\n          className={styles.drawer_item}\n          onClick={() => {\n            this.sendAttachment('image/jpeg:' + IMAGE_A);\n          }}\n        >\n          <img src={IMAGE_A} alt=\"Attachment\" />\n        </div>\n        <div\n          className={styles.drawer_item}\n          onClick={() => {\n            this.sendAttachment('image/jpeg:' + IMAGE_B);\n          }}\n        >\n          <img src={IMAGE_B} alt=\"Attachment\" />\n        </div>\n        <div\n          className={styles.drawer_item}\n          onClick={() => {\n            this.sendAttachment('image/jpeg:' + IMAGE_C);\n          }}\n        >\n          <img src={IMAGE_C} alt=\"Attachment\" />\n        </div>\n      </div>\n    );\n  }\n\n  public getLocationDrawer(): JSX.Element {\n    return (\n      <div\n        className={styles.map_thumb}\n        onClick={() => {\n          this.sendAttachment('geo:2.904194,-79.003418');\n        }}\n      >\n        <img src={MAP_THUMB} alt=\"Attachment\" />\n      </div>\n    );\n  }\n\n  private getAudioDrawer(): JSX.Element {\n    return (\n      <div\n        className={styles.audio_picker}\n        onClick={() => {\n          this.sendAttachment('audio/mp3:' + AUDIO_A);\n        }}\n      >\n        <div className={styles.audio_icon + ' fe-mic'} />\n        <div className={styles.audio_message}>Upload Audio</div>\n      </div>\n    );\n  }\n\n  private getVideoDrawer(): JSX.Element {\n    return (\n      <div className={styles.drawer_items}>\n        <div\n          className={styles.drawer_item}\n          onClick={() => {\n            this.sendAttachment('video/mp4:' + VIDEO_A);\n          }}\n        >\n          <img src={VIDEO_A_THUMB} alt=\"Attachment\" />\n        </div>\n        <div\n          className={styles.drawer_item}\n          onClick={() => {\n            this.sendAttachment('video/mp4:' + VIDEO_A);\n          }}\n        >\n          <img src={VIDEO_A_THUMB} alt=\"Attachment\" />\n        </div>\n        <div\n          className={styles.drawer_item}\n          onClick={() => {\n            this.sendAttachment('video/mp4:' + VIDEO_A);\n          }}\n        >\n          <img src={VIDEO_A_THUMB} alt=\"Attachment\" />\n        </div>\n      </div>\n    );\n  }\n\n  private getQuickRepliesDrawer(): JSX.Element {\n    return (\n      <div className={styles.quick_replies}>\n        {this.state.quickReplies.map(reply => (\n          <div\n            className={styles.quick_reply}\n            onClick={() => {\n              this.resume(reply);\n            }}\n            key={`reply_${reply}`}\n          >\n            {reply}\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  private handleKeyPress(btn: string, multiple: boolean): void {\n    if (!multiple) {\n      this.resume(btn);\n    } else {\n      if (btn === '#') {\n        this.resume(this.state.keypadEntry);\n        this.setState({ keypadEntry: '' });\n      } else {\n        this.setState((prevState: SimulatorState) => {\n          return { keypadEntry: prevState.keypadEntry += btn };\n        });\n      }\n    }\n  }\n\n  private getKeyRow(keys: string[], multiple: boolean): JSX.Element {\n    return (\n      <div className={styles.row}>\n        {keys.map((key: string) => {\n          return (\n            <div\n              key={'btn_' + key}\n              onClick={() => {\n                this.handleKeyPress(key, multiple);\n              }}\n              className={styles.key}\n            >\n              {key}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  private getKeypadDrawer(multiple: boolean): JSX.Element {\n    return (\n      <div className={styles.keypad}>\n        {multiple ? <div className={styles.keypad_entry}>{this.state.keypadEntry}</div> : null}\n        <div className={styles.keys}>\n          {this.getKeyRow(['1', '2', '3'], multiple)}\n          {this.getKeyRow(['4', '5', '6'], multiple)}\n          {this.getKeyRow(['7', '8', '9'], multiple)}\n          {this.getKeyRow(['*', '0', '#'], multiple)}\n        </div>\n      </div>\n    );\n  }\n\n  private getDrawerContents(): JSX.Element {\n    switch (this.state.drawerType) {\n      case DrawerType.location:\n        return this.getLocationDrawer();\n      case DrawerType.audio:\n        return this.getAudioDrawer();\n      case DrawerType.images:\n        return this.getImageDrawer();\n      case DrawerType.videos:\n        return this.getVideoDrawer();\n      case DrawerType.quickReplies:\n        return this.getQuickRepliesDrawer();\n      case DrawerType.digits:\n      case DrawerType.digit:\n        return this.getKeypadDrawer(this.state.drawerType === DrawerType.digits);\n    }\n    return null;\n  }\n\n  private handleDrawerRef(ref: HTMLDivElement): HTMLDivElement {\n    return (this.drawerEle = ref);\n  }\n\n  public getDrawer(): JSX.Element {\n    const style: any = {};\n\n    if (this.state.drawerOpen) {\n      style.bottom = 50;\n\n      // are we being forced open\n      if (this.state.waitingForHint) {\n        style.bottom = 25;\n        style.zIndex = 150;\n        style.paddingBottom = 10;\n      }\n    } else {\n      style.bottom = -this.state.drawerHeight;\n    }\n\n    return (\n      <div\n        ref={this.handleDrawerRef}\n        style={style}\n        className={\n          styles.drawer +\n          ' ' +\n          (this.state.drawerOpen ? styles.drawer_visible : '') +\n          ' ' +\n          (this.state.attachmentOptionsVisible ? '' : styles.forced)\n        }\n      >\n        {this.getDrawerContents()}\n      </div>\n    );\n  }\n\n  private hasQuickReplies(): boolean {\n    return (this.state.quickReplies || []).length > 0;\n  }\n\n  private handleHideAttachments(): void {\n    this.setState(\n      {\n        attachmentOptionsVisible: false,\n        drawerOpen: false\n      },\n      () => {\n        if (this.hasQuickReplies()) {\n          window.setTimeout(() => {\n            this.showAttachmentDrawer(DrawerType.quickReplies);\n          }, 300);\n        }\n      }\n    );\n  }\n\n  private getAttachmentButton(icon: string, drawerType: DrawerType): JSX.Element {\n    return (\n      <div\n        className={icon}\n        onClick={() => {\n          this.showAttachmentDrawer(drawerType);\n        }}\n      />\n    );\n  }\n\n  private getAttachmentOptions(): JSX.Element {\n    return (\n      <div\n        className={\n          styles.attachment_buttons +\n          ' ' +\n          (this.state.attachmentOptionsVisible ? styles.visible : '')\n        }\n      >\n        <div className=\"fe-x\" onClick={this.handleHideAttachments} />\n        {this.getAttachmentButton('fe-picture2', DrawerType.images)}\n        {this.getAttachmentButton('fe-video', DrawerType.videos)}\n        {this.getAttachmentButton('fe-mic', DrawerType.audio)}\n        {this.getAttachmentButton('fe-map-marker', DrawerType.location)}\n      </div>\n    );\n  }\n\n  private handleHideAttachmentDrawer(): void {\n    this.setState({ drawerOpen: false });\n  }\n\n  private showAttachmentDrawer(drawerType: DrawerType): void {\n    // if we are already open but a different type, hide ourselves and reopen with the new type\n    if (this.state.drawerOpen) {\n      // if that type is already open, its a noop\n      if (drawerType === this.state.drawerType) {\n        return;\n      }\n\n      this.handleHideAttachmentDrawer();\n      window.setTimeout(() => {\n        this.showAttachmentDrawer(drawerType);\n      }, 300);\n    } else {\n      this.setState((prevState: SimulatorState) => {\n        return { drawerOpen: true, drawerType };\n      });\n    }\n  }\n\n  public render(): ReactNode {\n    const messages: JSX.Element[] = [];\n    for (const event of this.state.events) {\n      messages.push(<LogEvent {...event} key={event.type + '_' + String(event.created_on)} />);\n    }\n\n    const simHidden = !this.state.visible ? styles.sim_hidden : '';\n    const tabHidden = this.state.visible ? styles.tab_hidden : '';\n\n    const messagesStyle: any = {\n      height: 366 - (this.state.drawerOpen ? this.state.drawerHeight - 20 : 0)\n    };\n\n    // if attachments are forced open, account for missing attachment choice panel\n    if (this.state.drawerOpen && this.state.waitingForHint) {\n      messagesStyle.height += 25;\n    }\n\n    return (\n      <div className={styles.sim_container}>\n        <div>\n          <div id=\"simulator\" className={styles.simulator + ' ' + simHidden} key={'sim'}>\n            <div className={styles.screen}>\n              <div className={styles.header}>\n                <div className={styles.close + ' fe-x'} onClick={this.onToggle} />\n              </div>\n              <div className={styles.messages} style={messagesStyle}>\n                {messages}\n                <div\n                  id=\"bottom\"\n                  style={{ float: 'left', clear: 'both', marginTop: 20 }}\n                  ref={this.bottomRef}\n                />\n              </div>\n              <div className={styles.controls}>\n                <input\n                  ref={this.inputBoxRef}\n                  type=\"text\"\n                  onKeyUp={this.onKeyUp}\n                  disabled={this.state.sprinting}\n                  placeholder={this.state.active ? 'Enter message' : 'Press home to start again'}\n                />\n                <div className={styles.show_attachments_button}>\n                  <div\n                    className=\"fe-paperclip\"\n                    onClick={() => {\n                      this.setState({\n                        attachmentOptionsVisible: true,\n                        drawerOpen: false\n                      });\n                    }}\n                  />\n                </div>\n              </div>\n              {this.getAttachmentOptions()}\n              {this.getDrawer()}\n              <div className={styles.footer}>\n                <span\n                  className={\n                    styles.reset + ' ' + (this.state.active ? styles.active : styles.inactive)\n                  }\n                  onClick={this.onReset}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={styles.simulator_tab + ' ' + tabHidden} onClick={this.onToggle}>\n          <div className={styles.simulator_tab_icon + ' fe-smartphone'} />\n          <div className={styles.simulator_tab_text}>\n            Run in\n            <br />\n            Simulator\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n/* istanbul ignore next */\nconst mapStateToProps = ({\n  flowContext: { definition, nodes, assetStore },\n  editorState: { liveActivity, activity }\n}: AppState) => ({\n  liveActivity,\n  activity,\n  assetStore,\n  definition,\n  nodes\n});\n\n/* istanbul ignore next */\nconst mapDispatchToProps = (dispatch: DispatchWithState) => bindActionCreators({}, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Simulator);\n","import { react as bindCallbacks } from 'auto-bind';\nimport { FlowDefinition, StickyNote } from 'flowTypes';\nimport * as React from 'react';\nimport TextareaAutosize from 'react-autosize-textarea/lib';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { DragEvent } from 'services/Plumber';\nimport AppState from 'store/state';\nimport { DispatchWithState, UpdateSticky, updateSticky } from 'store/thunks';\nimport { CONFIRMATION_TIME, QUIET_NOTE, snapToGrid } from 'utils';\n\nimport styles from './Sticky.module.scss';\n\ntype DragFunction = (event: DragEvent) => void;\nexport const STICKY_SPEC_ID: string = 'sticky-container';\nexport const STICKY_TITLE = 'New Note';\nexport const STICKY_BODY = '...';\n\nexport interface StickyPassedProps {\n  uuid: string;\n  sticky: StickyNote;\n  selected: boolean;\n}\n\nexport interface StickyStoreProps {\n  definition: FlowDefinition;\n  updateSticky: UpdateSticky;\n}\n\nexport type StickyProps = StickyPassedProps & StickyStoreProps;\n\n/**\n * We have internal state to track as the user types so\n * we can debounce updates to the store.\n */\ninterface StickyState {\n  title: string;\n  body: string;\n  color: string;\n  showConfirmation: boolean;\n}\n\nconst COLOR_OPTIONS: any = {\n  yellow: styles.yellow,\n  blue: styles.blue,\n  green: styles.green,\n  purple: styles.purple,\n  gray: styles.gray\n};\n\nexport class Sticky extends React.Component<StickyProps, StickyState> {\n  private dragging = false;\n  private ele: HTMLDivElement;\n  private debounceTextChanges: number;\n  private showConfirmation: number;\n\n  public DEFUALT_TITLE = 'New Note';\n  public DEFUALT_BODY = '...';\n\n  constructor(props: StickyProps & StickyStoreProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^on/, /^get/, /^is/, /^handle/]\n    });\n\n    this.state = {\n      title: this.props.sticky.title,\n      body: this.props.sticky.body,\n      color: this.props.sticky.color,\n      showConfirmation: false\n    };\n  }\n\n  private isSelected(): boolean {\n    return this.props.selected;\n  }\n\n  private onRef(ref: HTMLDivElement): HTMLDivElement {\n    return (this.ele = ref);\n  }\n\n  public componentWillUnmount(): void {\n    if (this.showConfirmation) {\n      window.clearTimeout(this.showConfirmation);\n    }\n\n    if (this.debounceTextChanges) {\n      window.clearTimeout(this.debounceTextChanges);\n    }\n  }\n\n  public handleDrag(event: DragEvent): void {\n    // noop\n  }\n\n  public handleDragStop(event: DragEvent): void {\n    // snap us to the same grid\n    const { left, top } = snapToGrid(event.finalPos[0], event.finalPos[1]);\n    this.ele.style.left = `${left}px`;\n    this.ele.style.top = `${top}px`;\n\n    this.props.sticky.position = { left, top };\n    this.props.updateSticky(this.props.uuid, this.props.sticky);\n  }\n\n  private onUpdateText(): void {\n    if (this.debounceTextChanges) {\n      window.clearTimeout(this.debounceTextChanges);\n    }\n\n    this.debounceTextChanges = window.setTimeout(() => {\n      const updated = { ...this.props.sticky };\n      updated.title = this.state.title;\n      updated.body = this.state.body;\n      this.props.updateSticky(this.props.uuid, updated);\n      this.debounceTextChanges = null;\n    }, QUIET_NOTE);\n  }\n\n  private handleChangeTitle(event: React.FormEvent<HTMLTextAreaElement>): void {\n    this.setState({ title: event.currentTarget.value });\n    this.onUpdateText();\n  }\n\n  private handleChangeBody(event: React.FormEvent<HTMLTextAreaElement>): void {\n    this.setState({ body: event.currentTarget.value });\n    this.onUpdateText();\n  }\n\n  public handleClickRemove(event: React.MouseEvent<HTMLDivElement>): void {\n    if (this.state.showConfirmation) {\n      this.props.updateSticky(this.props.uuid, null);\n    } else {\n      this.setState({ showConfirmation: true });\n      this.showConfirmation = window.setTimeout(() => {\n        this.setState({ showConfirmation: false });\n      }, CONFIRMATION_TIME);\n    }\n  }\n\n  private handleChangeColor(color: string): void {\n    this.props.sticky.color = color;\n    this.props.updateSticky(this.props.uuid, this.props.sticky);\n    this.setState({ color });\n  }\n\n  private handleSelectForValue(element: HTMLTextAreaElement, text: string): void {\n    if (element.value === text) {\n      window.setTimeout(() => {\n        element.select();\n      }, 0);\n    }\n  }\n\n  private handleTitleFocused(e: React.FocusEvent<HTMLTextAreaElement>): void {\n    this.handleSelectForValue(e.currentTarget, STICKY_TITLE);\n  }\n\n  private handleBodyFocused(e: React.FocusEvent<HTMLTextAreaElement>): void {\n    this.handleSelectForValue(e.currentTarget, STICKY_BODY);\n  }\n\n  private getColorChooser(): JSX.Element {\n    return (\n      <div className={styles.color_chooser_container}>\n        <div className={styles.color_chooser}>\n          {Object.keys(COLOR_OPTIONS).map((color: string) => {\n            return (\n              <div\n                key={this.props.uuid + color}\n                onClick={() => {\n                  this.handleChangeColor(color);\n                }}\n                className={styles.color_option + ' ' + COLOR_OPTIONS[color]}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  public render(): JSX.Element {\n    // add our removal class if necessary\n    const titleClasses = [styles.title_wrapper];\n    if (this.state.showConfirmation) {\n      titleClasses.push(styles.removal);\n    }\n\n    const containerClasses = [styles.sticky_container];\n    if (!this.props.sticky.color) {\n      this.props.sticky.color = 'yellow';\n    }\n\n    const stickyClasses = [styles.sticky];\n    if (this.isSelected()) {\n      stickyClasses.push(styles.selected);\n    }\n\n    containerClasses.push(COLOR_OPTIONS[this.props.sticky.color]);\n    const colorChooser = this.getColorChooser();\n\n    return (\n      <div\n        key={this.props.uuid}\n        className={containerClasses.join(' ')}\n        data-spec={STICKY_SPEC_ID}\n        ref={this.onRef}\n        id={this.props.uuid}\n      >\n        <div className={stickyClasses.join(' ')}>\n          <div className={titleClasses.join(' ')}>\n            <div className={styles.remove_button} onClick={this.handleClickRemove}>\n              <span className=\"fe-x\" />\n            </div>\n            <div className={styles.confirmation}>Remove?</div>\n            <TextareaAutosize\n              className={styles.title}\n              value={this.state.title}\n              onChange={this.handleChangeTitle}\n              onFocusCapture={this.handleTitleFocused}\n            />\n          </div>\n          <div className={styles.body_wrapper}>\n            <TextareaAutosize\n              className={styles.body}\n              value={this.state.body}\n              onChange={this.handleChangeBody}\n              onFocusCapture={this.handleBodyFocused}\n            />\n            {colorChooser}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n/* istanbul ignore next */\nconst mapStateToProps = ({ flowContext: { definition } }: AppState) => ({\n  definition\n});\n\n/* istanbul ignore next */\nconst mapDispatchToProps = (dispatch: DispatchWithState) => {\n  return bindActionCreators({ updateSticky }, dispatch);\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  null,\n  { withRef: false }\n)(Sticky);\n","import { Exit, FlowNode } from 'flowTypes';\nimport { GRID_SIZE } from 'utils';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nconst {\n  jsPlumb: { importDefaults }\n} = require('../../node_modules/jsplumb/dist/js/jsplumb');\nexport interface DragEvent {\n  el: Element;\n  pos: number[];\n  finalPos: number[];\n  e: MouseEvent;\n  clientX: number;\n  clientY: number;\n  target: Element;\n}\n\nexport interface PendingConnections {\n  [id: string]: {\n    source: string;\n    target: string;\n    className: string;\n    slot: number;\n    totalSlots: number;\n  };\n}\n\nexport const REPAINT_DURATION = 600;\nexport const TARGET_DEFAULTS = {\n  anchor: ['Continuous', { shape: 'Dot', faces: ['top', 'left', 'right'] }],\n  endpoint: [\n    'Dot',\n    {\n      radius: 13,\n      cssClass: 'plumb-endpoint',\n      hoverClass: 'plumb-endpoint-hover'\n    }\n  ],\n  dropOptions: {\n    tolerance: 'touch',\n    hoverClass: 'plumb-drop-hover',\n    isTarget: false\n  },\n  dragAllowedWhenFull: false,\n  deleteEndpointsOnEmpty: true,\n  isTarget: false\n};\n\nexport const SOURCE_DEFAULTS = {\n  anchor: 'BottomCenter',\n  maxConnections: 1,\n  dragAllowedWhenFull: false,\n  deleteEndpointsOnEmpty: true,\n  isSource: true\n};\n\nexport const getAnchor = (sourceEle: any, targetEle: any): any[] => {\n  return [\n    'Continuous',\n    {\n      shape: 'Dot',\n      faces:\n        sourceEle.getBoundingClientRect().bottom + GRID_SIZE / 3 <\n        targetEle.getBoundingClientRect().top\n          ? ['top']\n          : ['right', 'left']\n    }\n  ];\n};\n\nconst defaultConnector = [\n  'Flowchart',\n  {\n    stub: 12,\n    midpoint: 0.75,\n    alwaysRespectStubs: false,\n    gap: [0, 5],\n    cornerRadius: 3\n  }\n];\n\n/* istanbul ignore next */\nexport default class Plumber {\n  public jsPlumb: any;\n\n  // we batch up connections to apply them together\n  private pendingConnections: PendingConnections = {};\n  private pendingConnectionTimeout: any;\n\n  private animateInterval: any = null;\n\n  constructor() {\n    this.jsPlumb = importDefaults({\n      DragOptions: { cursor: 'pointer', zIndex: 1000 },\n      DropOptions: { tolerance: 'touch', hoverClass: 'plumb-hover' },\n      Endpoint: 'Blank',\n      EndpointStyle: { strokeStyle: 'transparent' },\n      PaintStyle: { strokeWidth: 3.5 },\n      ConnectionsDetachable: true,\n      Connector: defaultConnector,\n      ConnectionOverlays: [\n        [\n          'PlainArrow',\n          {\n            location: 0.999,\n            width: 12,\n            length: 12,\n            cssClass: 'jtk-arrow'\n          }\n        ]\n      ],\n      Container: 'editor-container'\n    });\n\n    this.debug = this.debug.bind(this);\n    this.setSourceEnabled = this.setSourceEnabled.bind(this);\n    this.makeSource = this.makeSource.bind(this);\n    this.makeTarget = this.makeTarget.bind(this);\n    this.connectExit = this.connectExit.bind(this);\n    this.setDragSelection = this.setDragSelection.bind(this);\n    this.clearDragSelection = this.clearDragSelection.bind(this);\n    this.removeFromDragSelection = this.removeFromDragSelection.bind(this);\n    this.cancelDurationRepaint = this.cancelDurationRepaint.bind(this);\n    this.remove = this.remove.bind(this);\n    this.repaintForDuration = this.repaintForDuration.bind(this);\n    this.repaintFor = this.repaintFor.bind(this);\n    this.handlePendingConnections = this.handlePendingConnections.bind(this);\n    this.checkForPendingConnections = this.checkForPendingConnections.bind(this);\n    this.connect = this.connect.bind(this);\n    this.bind = this.bind.bind(this);\n    this.repaint = this.repaint.bind(this);\n    this.recalculate = this.recalculate.bind(this);\n    this.recalculateUUIDs = this.recalculateUUIDs.bind(this);\n    this.reset = this.reset.bind(this);\n    this.updateClass = this.updateClass.bind(this);\n\n    // if our browser resizes, make sure to repaint accordingly\n    window.onresize = () => this.jsPlumb.repaintEverything();\n  }\n\n  public debug(): any {\n    return this.jsPlumb;\n  }\n\n  public setSourceEnabled(uuid: string, enabled: boolean): void {\n    this.jsPlumb.setSourceEnabled(uuid, enabled);\n  }\n\n  public makeSource(uuid: string): any {\n    return this.jsPlumb.makeSource(uuid, SOURCE_DEFAULTS);\n  }\n\n  public makeTarget(uuid: string): void {\n    this.jsPlumb.makeTarget(uuid, TARGET_DEFAULTS);\n  }\n\n  public connectExit(node: FlowNode, exit: Exit, className: string = null): void {\n    this.connect(\n      `${node.uuid}:${exit.uuid}`,\n      exit.destination_uuid,\n      className,\n      node.exits.findIndex((e: Exit) => e.uuid === exit.uuid),\n      node.exits.length\n    );\n  }\n\n  public updateClass(node: FlowNode, exit: Exit, className: string, add: boolean): void {\n    const source = `${node.uuid}:${exit.uuid}`;\n    const connection = this.jsPlumb.select({ source });\n    if (add) {\n      connection.addClass(className);\n    } else {\n      connection.removeClass(className);\n    }\n  }\n\n  public removeFromDragSelection(uuid: string): void {\n    this.jsPlumb.removeFromDragSelection(uuid);\n  }\n\n  public setDragSelection(selected: { [uuid: string]: boolean }): void {\n    this.cancelDurationRepaint();\n    this.jsPlumb.clearDragSelection();\n\n    Object.keys(selected).forEach(uuid => this.jsPlumb.addToDragSelection(uuid));\n  }\n\n  public clearDragSelection(): void {\n    this.jsPlumb.clearDragSelection();\n  }\n\n  public cancelDurationRepaint(): void {\n    if (this.animateInterval) {\n      window.clearInterval(this.animateInterval);\n      this.animateInterval = null;\n    }\n  }\n\n  public repaintForDuration(duration: number = REPAINT_DURATION): void {\n    this.cancelDurationRepaint();\n    const pause = 10;\n    const newDuration = duration / pause;\n\n    let cycles = 0;\n    this.animateInterval = window.setInterval(() => {\n      // TODO: optimize this to paint as little as possible\n      // this.revalidate(uuid);\n      this.jsPlumb.repaintEverything();\n\n      if (cycles++ > newDuration) {\n        window.clearInterval(this.animateInterval);\n      }\n    }, pause);\n  }\n\n  public repaintFor(millis: number): void {\n    window.setInterval(() => {\n      this.jsPlumb.repaintEverything();\n    }, 1);\n  }\n\n  private handlePendingConnections(): void {\n    const targets: { [id: string]: boolean } = {};\n\n    this.jsPlumb.batch(() => {\n      const batch = Object.keys(this.pendingConnections).length;\n      if (batch > 1) {\n        console.log('batching ' + batch + ' connections');\n      }\n\n      for (const key in this.pendingConnections) {\n        if (this.pendingConnections.hasOwnProperty(key)) {\n          const connection = this.pendingConnections[key];\n          const { source, target, className, slot, totalSlots } = connection;\n\n          const anchors = target\n            ? [\n                'Bottom',\n                getAnchor(document.getElementById(source), document.getElementById(target))\n              ]\n            : [];\n\n          if (source != null) {\n            // any existing connections for our source need to be deleted\n            this.jsPlumb.select({ source }).delete({ fireEvent: false });\n\n            const start = totalSlots < 5 ? 0.75 : 0.35;\n            let midpoint = start + slot * 0.15;\n            const exitMiddle = totalSlots / 2;\n            if (slot > exitMiddle) {\n              midpoint = start - 0.05 + (totalSlots - slot) * 0.15;\n            }\n\n            // add reasonable boundaries for midpoints\n            midpoint = Math.max(Math.min(0.9, midpoint), 0.1);\n\n            const connector: any = [...defaultConnector];\n            connector[1].midpoint = midpoint;\n\n            // now make our new connection\n            if (target != null) {\n              // don't allow manual detachments if our connection is styled\n              if (className) {\n                this.jsPlumb.connect({\n                  source,\n                  target,\n                  anchors,\n                  fireEvent: false,\n                  cssClass: className,\n                  detachable: false,\n                  connector\n                });\n              } else {\n                this.jsPlumb.connect({\n                  source,\n                  target,\n                  anchors,\n                  fireEvent: false,\n                  cssClass: className,\n                  connector\n                });\n              }\n            }\n          }\n\n          if (target != null) {\n            targets[target] = true;\n          }\n\n          delete this.pendingConnections[key];\n        }\n      }\n    });\n\n    // revalidate the targets that we updated\n    for (const target in targets) {\n      if (targets.hasOwnProperty('target')) {\n        this.recalculate(target);\n      }\n    }\n  }\n\n  private checkForPendingConnections(): void {\n    if (this.pendingConnectionTimeout) {\n      window.clearTimeout(this.pendingConnectionTimeout);\n    }\n\n    this.pendingConnectionTimeout = window.setTimeout(() => {\n      this.handlePendingConnections();\n    }, 0);\n  }\n\n  public connect(\n    source: string,\n    target: string,\n    className: string = null,\n    slot: number = 0,\n    totalSlots: number = 0\n  ): void {\n    this.pendingConnections[`${source}:${target}:${className}`] = {\n      source,\n      target,\n      className,\n      slot,\n      totalSlots\n    };\n    this.checkForPendingConnections();\n  }\n\n  public bind(event: string, onEvent: Function): void {\n    return this.jsPlumb.bind(event, onEvent);\n  }\n\n  public repaint(uuid?: string): void {\n    if (!uuid) {\n      this.jsPlumb.recalculateOffsets();\n      this.jsPlumb.repaintEverything();\n    } else {\n      this.jsPlumb.recalculateOffsets(uuid);\n      this.jsPlumb.repaint(uuid);\n    }\n  }\n\n  public remove(uuid: string): void {\n    if (this.jsPlumb.isSource(uuid)) {\n      this.jsPlumb.unmakeSource(uuid);\n      this.jsPlumb.remove(uuid);\n    } else if (this.jsPlumb.isTarget(uuid)) {\n      this.jsPlumb.deleteConnectionsForElement(uuid);\n    }\n  }\n\n  public recalculateUUIDs(uuids: string[]): void {\n    this.jsPlumb.batch(() => {\n      uuids.forEach((uuid: string) => {\n        const connections = this.jsPlumb\n          .getConnections({ target: uuid })\n          .concat(this.jsPlumb.getConnections({ source: uuid }));\n        for (const c of connections) {\n          c.endpoints[1].setAnchor(getAnchor(c.endpoints[0].element, c.endpoints[1].element));\n        }\n        this.jsPlumb.revalidate(uuid);\n      });\n    });\n  }\n\n  public recalculate(uuid?: string): void {\n    // window.setTimeout(() => {\n    this.jsPlumb.revalidate(uuid);\n    /*if (uuid) {\n            this.jsPlumb.recalculateOffsets(uuid);\n        } else {\n            this.jsPlumb.recalculateOffsets();\n        }\n        this.jsPlumb.repaint(uuid);*/\n    // }, 0);\n  }\n\n  public reset(): void {\n    // console.log(\"resetting plumbing\");\n    this.jsPlumb.reset();\n  }\n}\n","import { FlowStoreProps } from 'components/flow/Flow';\nimport { DebugState } from 'store/editor';\n\nconst mutate = require('immutability-helper');\n\n/* istanbul ignore next */\nexport default class Debug {\n  private props: FlowStoreProps;\n  private state: DebugState;\n\n  constructor(props: FlowStoreProps, initial: DebugState) {\n    this.props = props;\n    this.state = initial || { showUUIDs: false };\n  }\n\n  public showUUIDs(): DebugState {\n    const updated = mutate(this.state, { $merge: { showUUIDs: true } });\n    this.props.mergeEditorState({ debug: updated });\n    return updated;\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Button from 'components/button/Button';\nimport { Canvas } from 'components/canvas/Canvas';\nimport { CanvasDraggableProps } from 'components/canvas/CanvasDraggable';\nimport Node from 'components/flow/node/Node';\nimport { getDraggedFrom } from 'components/helpers';\nimport NodeEditor from 'components/nodeeditor/NodeEditor';\nimport Simulator from 'components/simulator/Simulator';\nimport Sticky, { STICKY_BODY, STICKY_TITLE } from 'components/sticky/Sticky';\nimport { ConfigProviderContext, fakePropType } from 'config/ConfigProvider';\nimport { Exit, FlowDefinition } from 'flowTypes';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Plumber from 'services/Plumber';\nimport { DragSelection, EditorState } from 'store/editor';\nimport { RenderNode } from 'store/flowContext';\nimport { createEmptyNode, detectLoops, getOrderedNodes } from 'store/helpers';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport AppState from 'store/state';\nimport {\n  ConnectionEvent,\n  DispatchWithState,\n  mergeEditorState,\n  MergeEditorState,\n  NoParamsAC,\n  onConnectionDrag,\n  OnConnectionDrag,\n  OnOpenNodeEditor,\n  onOpenNodeEditor,\n  onRemoveNodes,\n  OnRemoveNodes,\n  OnUpdateCanvasPositions,\n  onUpdateCanvasPositions,\n  resetNodeEditingState,\n  UpdateConnection,\n  updateConnection,\n  updateSticky,\n  UpdateSticky\n} from 'store/thunks';\nimport {\n  ACTIVITY_INTERVAL,\n  createUUID,\n  isRealValue,\n  NODE_PADDING,\n  renderIf,\n  snapToGrid,\n  timeEnd,\n  timeStart\n} from 'utils';\nimport Debug from 'utils/debug';\n\nimport styles from './Flow.module.scss';\n\ndeclare global {\n  interface Window {\n    fe: any;\n  }\n}\n\nexport interface FlowStoreProps {\n  editorState: Partial<EditorState>;\n  mergeEditorState: MergeEditorState;\n\n  definition: FlowDefinition;\n  nodes: { [uuid: string]: RenderNode };\n  dependencies: FlowDefinition[];\n  nodeEditorSettings: NodeEditorSettings;\n\n  updateConnection: UpdateConnection;\n  onOpenNodeEditor: OnOpenNodeEditor;\n  onUpdateCanvasPositions: OnUpdateCanvasPositions;\n  onRemoveNodes: OnRemoveNodes;\n  resetNodeEditingState: NoParamsAC;\n  onConnectionDrag: OnConnectionDrag;\n  updateSticky: UpdateSticky;\n}\n\nexport interface Translations {\n  [uuid: string]: any;\n}\n\nexport const DRAG_THRESHOLD = 3;\nexport const REPAINT_TIMEOUT = 500;\nexport const GHOST_POSITION_INITIAL = { left: -1000, top: -1000 };\n\nexport const nodeSpecId = 'node';\nexport const nodesContainerSpecId = 'node-container';\nexport const ghostNodeSpecId = 'ghost-node';\nexport const dragSelectSpecId = 'drag-select';\n\nexport const isDraggingBack = (event: ConnectionEvent) => {\n  return event.suspendedElementId === event.targetId && event.source !== null;\n};\n\nexport const getDragStyle = (drag: DragSelection) => {\n  const left = Math.min(drag.startX, drag.currentX);\n  const top = Math.min(drag.startY, drag.currentY);\n  const width = Math.max(drag.startX, drag.currentX) - left;\n  const height = Math.max(drag.startY, drag.currentY) - top;\n  return {\n    left,\n    top,\n    width,\n    height\n  };\n};\n\nexport class Flow extends React.Component<FlowStoreProps, {}> {\n  private Plumber: Plumber;\n  private ele: HTMLDivElement;\n  private nodeContainerUUID: string;\n\n  // Refs\n  private ghost: any;\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: FlowStoreProps, context: ConfigProviderContext) {\n    super(props, context);\n\n    this.nodeContainerUUID = createUUID();\n\n    this.Plumber = new Plumber();\n\n    /* istanbul ignore next */\n    if (context.config.debug) {\n      window.fe = new Debug(props, this.props.editorState.debug);\n    }\n\n    bindCallbacks(this, {\n      include: [/Ref$/, /^on/, /^is/, /^get/]\n    });\n\n    timeStart('RenderAndPlumb');\n  }\n\n  private onRef(ref: HTMLDivElement): HTMLDivElement {\n    return (this.ele = ref);\n  }\n\n  private ghostRef(ref: any): any {\n    return (this.ghost = ref);\n  }\n\n  public componentDidMount(): void {\n    this.Plumber.bind('connection', (event: ConnectionEvent) =>\n      this.props.updateConnection(event.sourceId, event.targetId)\n    );\n    this.Plumber.bind('beforeDrag', (event: ConnectionEvent) => {\n      this.beforeConnectionDrag(event);\n    });\n\n    this.Plumber.bind('connectionDrag', (event: ConnectionEvent) => {\n      this.props.onConnectionDrag(event, this.context.config.flowType);\n    });\n\n    this.Plumber.bind('connectionDragStop', (event: ConnectionEvent) =>\n      this.onConnectorDrop(event)\n    );\n    this.Plumber.bind(\n      'beforeStartDetach',\n      (event: ConnectionEvent) => !this.props.editorState.translating\n    );\n    this.Plumber.bind('beforeDetach', (event: ConnectionEvent) => true);\n    this.Plumber.bind('beforeDrop', (event: ConnectionEvent) => this.onBeforeConnectorDrop(event));\n\n    let offset = { left: 0, top: 0 };\n\n    /* istanbul ignore next */\n    if (this.ele) {\n      offset = this.ele.getBoundingClientRect();\n    }\n\n    this.props.mergeEditorState({\n      containerOffset: { left: offset.left, top: offset.top + window.scrollY }\n    });\n\n    timeEnd('RenderAndPlumb');\n\n    // deals with safari load rendering throwing\n    // off the jsplumb offsets\n    window.setTimeout(() => this.Plumber.repaint(), REPAINT_TIMEOUT);\n  }\n\n  public componentWillUnmount(): void {\n    this.Plumber.reset();\n  }\n\n  public componentWillUpdate(prevProps: FlowStoreProps): void {\n    if (\n      prevProps.editorState.activityInterval === this.props.editorState.activityInterval &&\n      this.props.editorState.activityInterval !== ACTIVITY_INTERVAL\n    ) {\n      this.props.mergeEditorState({ activityInterval: ACTIVITY_INTERVAL });\n    }\n  }\n\n  /**\n   * Called right before a connector is dropped onto a new node\n   */\n  private onBeforeConnectorDrop(event: ConnectionEvent): boolean {\n    this.props.resetNodeEditingState();\n    const fromNodeUUID = event.sourceId.split(':')[0];\n    try {\n      detectLoops(this.props.nodes, fromNodeUUID, event.targetId);\n    } catch {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Called the moment a connector is done dragging, whether it is dropped on an\n   * existing node or on to empty space.\n   */\n  private onConnectorDrop(event: ConnectionEvent): boolean {\n    const { ghostNode } = this.props.editorState;\n    // Don't show the node editor if we a dragging back to where we were\n    if (isRealValue(ghostNode) && !isDraggingBack(event)) {\n      // Wire up the drag from to our ghost node\n      this.Plumber.recalculate(ghostNode.node.uuid);\n\n      const dragPoint = getDraggedFrom(ghostNode);\n      this.Plumber.connect(dragPoint.nodeUUID + ':' + dragPoint.exitUUID, ghostNode.node.uuid);\n\n      // Save our position for later\n      const { left, top } = (this.ghost &&\n        snapToGrid(\n          this.ghost.wrappedInstance.ele.offsetLeft,\n          this.ghost.wrappedInstance.ele.offsetTop\n        )) || { left: 0, top: 0 };\n\n      this.props.editorState.ghostNode.ui.position = { left, top };\n      let originalAction = null;\n      if (ghostNode.node.actions && ghostNode.node.actions.length === 1) {\n        originalAction = ghostNode.node.actions[0];\n      }\n\n      // Bring up the node editor\n      this.props.onOpenNodeEditor({\n        originalNode: ghostNode,\n        originalAction\n      });\n    }\n\n    /* istanbul ignore next */\n    document.removeEventListener('mousemove', (window as any).ghostListener);\n\n    return true;\n  }\n\n  private beforeConnectionDrag(event: ConnectionEvent): boolean {\n    if (event.source) {\n      event.source.dispatchEvent(new Event('disconnect'));\n    }\n    return !this.props.editorState.translating;\n  }\n\n  private getNodes(): CanvasDraggableProps[] {\n    const onlyNode = Object.keys(this.props.nodes).length === 1;\n    return getOrderedNodes(this.props.nodes).map((renderNode: RenderNode, idx: number) => {\n      return {\n        uuid: renderNode.node.uuid,\n        position: renderNode.ui.position,\n        ele: (selected: boolean) => (\n          <Node\n            onlyNode={onlyNode}\n            startingNode={idx === 0}\n            selected={selected}\n            key={renderNode.node.uuid}\n            data-spec={nodeSpecId}\n            nodeUUID={renderNode.node.uuid}\n            plumberMakeTarget={this.Plumber.makeTarget}\n            plumberRemove={this.Plumber.remove}\n            plumberRecalculate={this.Plumber.recalculate}\n            plumberMakeSource={this.Plumber.makeSource}\n            plumberConnectExit={this.Plumber.connectExit}\n            plumberUpdateClass={this.Plumber.updateClass}\n          />\n        )\n      };\n    });\n  }\n\n  private getStickies(): CanvasDraggableProps[] {\n    const stickyMap = this.props.definition._ui.stickies || {};\n    return Object.keys(stickyMap).map(uuid => {\n      return {\n        uuid,\n        ele: (selected: boolean) => (\n          <Sticky key={uuid} uuid={uuid} sticky={stickyMap[uuid]} selected={selected} />\n        ),\n        position: stickyMap[uuid].position\n      };\n    });\n  }\n\n  private getDragNode(): JSX.Element {\n    return isRealValue(this.props.editorState.ghostNode) ? (\n      <div\n        data-spec={ghostNodeSpecId}\n        key={this.props.editorState.ghostNode.node.uuid}\n        style={{ position: 'absolute', display: 'block', visibility: 'hidden' }}\n      >\n        <Node\n          onlyNode={false}\n          selected={false}\n          startingNode={false}\n          ref={this.ghostRef}\n          ghost={true}\n          nodeUUID={this.props.editorState.ghostNode.node.uuid}\n          plumberMakeTarget={this.Plumber.makeTarget}\n          plumberRemove={this.Plumber.remove}\n          plumberRecalculate={this.Plumber.recalculate}\n          plumberMakeSource={this.Plumber.makeSource}\n          plumberConnectExit={this.Plumber.connectExit}\n          plumberUpdateClass={this.Plumber.updateClass}\n        />\n      </div>\n    ) : null;\n  }\n\n  private getSimulator(): JSX.Element {\n    return renderIf(this.context.config.endpoints && this.context.config.endpoints.simulateStart)(\n      <Simulator key=\"simulator\" mergeEditorState={this.props.mergeEditorState} />\n    );\n  }\n\n  private getNodeEditor(): JSX.Element {\n    return renderIf(this.props.nodeEditorSettings !== null)(\n      <NodeEditor\n        key=\"node-editor\"\n        plumberConnectExit={this.Plumber.connectExit}\n        plumberRepaintForDuration={this.Plumber.repaintForDuration}\n      />\n    );\n  }\n\n  private isClickOnCanvas(event: React.MouseEvent<HTMLDivElement>): boolean {\n    // TODO: not sure the TS-safe way to access id here\n    return (event.target as any).id === this.nodeContainerUUID;\n  }\n\n  private onDoubleClick(event: React.MouseEvent<HTMLDivElement>): void {\n    if (this.isClickOnCanvas(event)) {\n      const { left, top } = snapToGrid(\n        event.pageX - this.props.editorState.containerOffset.left - 100 + NODE_PADDING,\n        event.pageY - this.props.editorState.containerOffset.top - NODE_PADDING * 2 - 40\n      );\n\n      this.props.updateSticky(createUUID(), {\n        position: { left, top },\n        title: STICKY_TITLE,\n        body: STICKY_BODY\n      });\n    }\n  }\n\n  private getEmptyFlow(): JSX.Element {\n    return (\n      <div key=\"create_node\" className={styles.empty_flow}>\n        <h1>Let's get started</h1>\n        <div>\n          We recommend starting your flow by sending a message. This message will be sent to anybody\n          right after they join the flow. This is your chance to send a single message or ask them a\n          question.\n        </div>\n\n        <Button\n          name=\"Create Message\"\n          onClick={() => {\n            const emptyNode = createEmptyNode(null, null, 1, this.context.config.flowType);\n            this.props.onOpenNodeEditor({\n              originalNode: emptyNode,\n              originalAction: emptyNode.node.actions[0]\n            });\n          }}\n        />\n      </div>\n    );\n  }\n\n  public render(): JSX.Element {\n    const nodes = this.getNodes();\n\n    let children = [];\n\n    if (nodes.length === 0) {\n      children = [this.getEmptyFlow()];\n    } else {\n      children = [this.getSimulator(), this.getDragNode()];\n    }\n\n    const draggables = this.getStickies().concat(nodes);\n\n    return (\n      <div onDoubleClick={this.onDoubleClick} ref={this.onRef}>\n        <Canvas\n          draggingNew={!!this.props.editorState.ghostNode}\n          onDragging={(uuids: string[]) => {\n            uuids.forEach((uuid: string) => {\n              if (uuid in this.props.nodes) {\n                this.props.nodes[uuid].node.exits.forEach((exit: Exit) => {\n                  if (exit.destination_uuid) {\n                    uuids.push(uuid + ':' + exit.uuid);\n                  }\n                });\n              }\n            });\n            this.Plumber.recalculateUUIDs(uuids);\n          }}\n          uuid={this.nodeContainerUUID}\n          dragActive={this.props.editorState.dragActive}\n          mergeEditorState={this.props.mergeEditorState}\n          onRemoveNodes={this.props.onRemoveNodes}\n          draggables={draggables}\n          onUpdatePositions={this.props.onUpdateCanvasPositions}\n        >\n          {children}\n          {this.getNodeEditor()}\n        </Canvas>\n      </div>\n    );\n  }\n}\n\n/* istanbul ignore next */\nconst mapStateToProps = ({\n  flowContext: { definition, dependencies, nodes },\n  // tslint:disable-next-line: no-shadowed-variable\n  editorState,\n  nodeEditor: { settings }\n}: AppState) => {\n  return {\n    nodeEditorSettings: settings,\n    definition,\n    nodes,\n    dependencies,\n    editorState: editorState as Partial<EditorState>\n  };\n};\n\n/* istanbul ignore next */\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators(\n    {\n      mergeEditorState,\n      resetNodeEditingState,\n      onConnectionDrag,\n      onOpenNodeEditor,\n      onUpdateCanvasPositions,\n      onRemoveNodes,\n      updateConnection,\n      updateSticky\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Flow);\n","import { react as bindCallbacks } from 'auto-bind';\nimport { ConfigProviderContext } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Asset, Assets } from 'store/flowContext';\nimport AppState from 'store/state';\nimport { DispatchWithState, HandleLanguageChange, handleLanguageChange } from 'store/thunks';\n\nimport styles from './LanguageSelector.module.scss';\n\nexport interface LanguageSelectorProps {\n  language: Asset;\n  languages: Assets;\n  handleLanguageChange: HandleLanguageChange;\n}\n\nexport const containerClasses = 'language-selector';\n\nexport class LanguageSelector extends React.Component<LanguageSelectorProps> {\n  constructor(props: LanguageSelectorProps, context: ConfigProviderContext) {\n    super(props, context);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public handleLanguageChanged(language: Asset): void {\n    this.props.handleLanguageChange(language);\n  }\n\n  public handleLanguageSort(a: Asset, b: Asset): number {\n    if (a.id === 'base') {\n      return -1;\n    }\n\n    if (b.id === 'base') {\n      return 1;\n    }\n\n    if (a.order !== undefined && b.order !== undefined) {\n      return a.order - b.order;\n    }\n\n    return a.name.localeCompare(b.name);\n  }\n\n  public render(): JSX.Element {\n    if (!this.props.language) {\n      return null;\n    }\n\n    const languages = Object.keys(this.props.languages.items)\n      .map((iso: string) => this.props.languages.items[iso])\n      .sort(this.handleLanguageSort);\n\n    if (languages.length === 1) {\n      return null;\n    }\n\n    return (\n      <div className={containerClasses}>\n        {languages.map((lang: Asset, idx: number) => {\n          return (\n            <div key={'lang_' + lang.id} className={styles.language}>\n              {idx > 0 ? <div className={styles.separator}>|</div> : null}\n              <div\n                className={\n                  styles.language_link +\n                  ' ' +\n                  (this.props.language.id === lang.id ? styles.active : '')\n                }\n                onClick={() => {\n                  this.handleLanguageChanged(lang);\n                }}\n              >\n                {lang.name}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\n/* istanbul ignore next */\nconst mapStateToProps = ({ flowContext: { assetStore }, editorState: { language } }: AppState) => ({\n  languages: assetStore.languages,\n  language\n});\n\n/* istanbul ignore next */\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators(\n    {\n      handleLanguageChange\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LanguageSelector);\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\n\nimport styles from './PopTab.module.scss';\n\nexport interface PopTabProps {\n  color: string;\n  icon: string;\n  label: string;\n  header: string;\n  top: string;\n  visible: boolean;\n  onShow: () => void;\n  onHide: () => void;\n}\n\nexport interface PopTabState {\n  width: number;\n}\n\nexport class PopTab extends React.Component<PopTabProps, PopTabState> {\n  private poppedEle: HTMLDivElement;\n\n  constructor(props: PopTabProps) {\n    super(props);\n    this.state = { width: 400 };\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public componentDidUpdate(): void {\n    if (this.state.width !== this.poppedEle.offsetWidth) {\n      this.setState({ width: this.poppedEle.offsetWidth });\n    }\n  }\n\n  private handlePoppedRef(ref: HTMLDivElement): HTMLDivElement {\n    return (this.poppedEle = ref);\n  }\n\n  private handleTabClick(): void {\n    this.props.onShow();\n  }\n\n  private handleClose(): void {\n    this.props.onHide();\n  }\n  public render(): JSX.Element {\n    return (\n      <div\n        className={styles.pop_wrapper + ' ' + (this.props.visible ? styles.visible : '')}\n        style={{\n          right: -this.state.width,\n          top: this.props.top\n        }}\n      >\n        <div className={styles.tab_wrapper}>\n          <div\n            className={styles.tab}\n            style={{ background: this.props.color }}\n            onClick={this.handleTabClick}\n          >\n            <div className={styles.icon}>\n              <span className={this.props.icon} />\n            </div>\n            <div className={styles.label}>{this.props.label}</div>\n          </div>\n        </div>\n        <div\n          ref={this.handlePoppedRef}\n          className={styles.popped}\n          style={{\n            borderColor: this.props.color,\n            right: this.props.visible ? 15 + this.state.width : 0,\n            top: -100\n          }}\n        >\n          <div className={styles.header} style={{ background: this.props.color }}>\n            <div className={styles.close + ' fe-x'} onClick={this.handleClose} />\n            <div className={styles.header_label}>{this.props.header}</div>\n          </div>\n          <>{this.props.children}</>\n        </div>\n      </div>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport { PopTab } from 'components/poptab/PopTab';\nimport dateFormat from 'dateformat';\nimport { getAssets, getFlowDefinition } from 'external';\nimport { FlowDefinition } from 'flowTypes';\nimport React from 'react';\nimport { Asset, AssetStore } from 'store/flowContext';\nimport { renderIf } from 'utils';\n\nimport styles from './RevisionExplorer.module.scss';\n\nconst cx: any = classNames.bind(styles);\n\nexport interface User {\n  email: string;\n  name: string;\n}\n\nexport interface Revision {\n  id: number;\n  version: string;\n  revision: number;\n  created_on: string;\n  user: User;\n  current: boolean;\n}\n\nexport interface RevisionExplorerProps {\n  simulating: boolean;\n  assetStore: AssetStore;\n  loadFlowDefinition: (definition: FlowDefinition, assetStore: AssetStore) => void;\n  createNewRevision: () => void;\n  utc?: boolean;\n}\n\nexport interface RevisionExplorerState {\n  revisions: Asset[];\n  revision: Asset;\n  definition: FlowDefinition;\n  visible: boolean;\n}\n\nexport class RevisionExplorer extends React.Component<\n  RevisionExplorerProps,\n  RevisionExplorerState\n> {\n  constructor(props: RevisionExplorerProps) {\n    super(props);\n    this.state = {\n      revisions: [],\n      revision: null,\n      definition: null,\n      visible: false\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public handleUpdateRevisions(): Promise<void> {\n    if (this.props.assetStore !== null) {\n      const assets = this.props.assetStore.revisions;\n      return getAssets(assets.endpoint, assets.type, assets.id || 'id').then(\n        (remoteAssets: Asset[]) => {\n          if (remoteAssets.length > 0) {\n            remoteAssets[0].content.current = true;\n          }\n          this.setState({ revisions: remoteAssets });\n        }\n      );\n    }\n  }\n\n  public handleTabClicked(): void {\n    this.setState(\n      (prevState: RevisionExplorerState) => {\n        return { visible: !prevState.visible };\n      },\n      () => {\n        if (this.state.visible) {\n          this.handleUpdateRevisions();\n        } else {\n          if (this.state.revision && this.state.revision.id !== this.state.revisions[0].id) {\n            getFlowDefinition(this.props.assetStore.revisions, this.state.revisions[0].id).then(\n              (definition: FlowDefinition) => {\n                this.props.loadFlowDefinition(definition, this.props.assetStore);\n                this.setState({ revision: null });\n              }\n            );\n          }\n        }\n      }\n    );\n  }\n\n  public onRevisionClicked = (\n    revision: Asset\n  ): ((event: React.MouseEvent<HTMLDivElement>) => void) => {\n    return (event: React.MouseEvent<HTMLDivElement>) => {\n      event.stopPropagation();\n      event.preventDefault();\n      getFlowDefinition(this.props.assetStore.revisions, revision.id).then(\n        (definition: FlowDefinition) => {\n          this.props.loadFlowDefinition(definition, this.props.assetStore);\n          this.setState({ revision });\n        }\n      );\n    };\n  };\n\n  public onRevertClicked = (\n    revision: Asset\n  ): ((event: React.MouseEvent<HTMLDivElement>) => void) => {\n    return (event: React.MouseEvent<HTMLDivElement>) => {\n      event.stopPropagation();\n      event.preventDefault();\n      this.props.createNewRevision();\n      this.setState({ visible: false, revision: null });\n    };\n  };\n\n  public render(): JSX.Element {\n    const classes = cx({\n      [styles.visible]: this.state.visible,\n      [styles.simulating]: this.props.simulating\n    });\n\n    return (\n      <div className={classes}>\n        <div className={styles.mask} />\n        <PopTab\n          header=\"Revisions\"\n          color=\"#8e5ea7\"\n          icon=\"fe-time\"\n          label=\"Revision History\"\n          top=\"360px\"\n          visible={this.state.visible}\n          onShow={this.handleTabClicked}\n          onHide={this.handleTabClicked}\n        >\n          <div className={styles.explorer_wrapper}>\n            <div className={styles.explorer}>\n              <div className={styles.revisions}>\n                {this.state.revisions.map((asset: Asset) => {\n                  const revision = asset.content as Revision;\n\n                  const isSelected = this.state.revision && asset.id === this.state.revision.id;\n\n                  const selectedClass = revision.current || isSelected ? styles.selected : '';\n\n                  return (\n                    <div\n                      className={styles.revision + ' ' + selectedClass}\n                      key={'revision_' + asset.id}\n                      onClick={this.onRevisionClicked(asset)}\n                    >\n                      {renderIf(revision.current)(\n                        <div className={styles.button + ' ' + styles.current}>current</div>\n                      )}\n                      {renderIf(isSelected && !revision.current)(\n                        <div onClick={this.onRevertClicked(asset)} className={styles.button}>\n                          revert\n                        </div>\n                      )}\n                      <div className={styles.created_on}>\n                        {dateFormat(\n                          new Date(revision.created_on),\n                          'mmmm d, yyyy, h:MM TT',\n                          this.props.utc\n                        )}\n                      </div>\n                      <div className={styles.email}>\n                        {revision.user.name || revision.user.email}\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        </PopTab>\n      </div>\n    );\n  }\n}\n","import ConfigProvider from 'config/ConfigProvider';\nimport { getOperatorConfig, operatorConfigList } from 'config/operatorConfigs';\nimport { getTypeConfig, typeConfigList } from 'config/typeConfigs';\n\nexport { typeConfigList, getTypeConfig, operatorConfigList, getOperatorConfig };\n\nexport default ConfigProvider;\n","import { combineReducers } from 'redux';\nimport editorState from 'store/editor';\nimport flowContext from 'store/flowContext';\nimport nodeEditor from 'store/nodeEditor';\n\nexport default combineReducers({\n  flowContext,\n  editorState,\n  nodeEditor\n});\n","import { EditorState, initialState as editorState } from 'store/editor';\nimport { FlowContext, initialState as flowContext } from 'store/flowContext';\nimport { initialState as nodeEditor, NodeEditor } from 'store/nodeEditor';\n\nexport default interface AppState {\n  flowContext: FlowContext;\n  editorState: EditorState;\n  nodeEditor: NodeEditor;\n}\n\nexport const initialState: AppState = {\n  flowContext,\n  editorState,\n  nodeEditor\n};\n","import { applyMiddleware, createStore, Middleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from 'store/rootReducer';\nimport AppState, { initialState } from 'store/state';\n\nconst middlewares: Middleware[] = [thunk];\n\nexport default (state: AppState = initialState) => {\n  const store = createStore(\n    rootReducer,\n    state,\n    composeWithDevTools(applyMiddleware(...middlewares))\n  );\n\n  /* istanbul ignore next */\n  if (module.hot) {\n    module.hot.accept('./rootReducer', () => {\n      const { default: nextRootReducer } = require('./rootReducer');\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Button, { ButtonTypes } from 'components/button/Button';\nimport Dialog from 'components/dialog/Dialog';\nimport { Fixy } from 'components/fixy/Fixy';\nimport ConnectedFlow from 'components/flow/Flow';\nimport styles from 'components/index.module.scss';\nimport ConnectedLanguageSelector from 'components/languageselector/LanguageSelector';\nimport Loading from 'components/loading/Loading';\nimport Modal from 'components/modal/Modal';\nimport { RevisionExplorer } from 'components/revisions/RevisionExplorer';\nimport ConfigProvider from 'config';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { FlowDefinition, FlowEditorConfig } from 'flowTypes';\nimport * as React from 'react';\nimport { connect, Provider as ReduxProvider } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport createStore from 'store/createStore';\nimport { ModalMessage } from 'store/editor';\nimport { Asset, Assets, AssetStore, RenderNodeMap } from 'store/flowContext';\nimport { getCurrentDefinition } from 'store/helpers';\nimport AppState from 'store/state';\nimport {\n  CreateNewRevision,\n  createNewRevision,\n  DispatchWithState,\n  FetchFlow,\n  fetchFlow,\n  LoadFlowDefinition,\n  loadFlowDefinition,\n  MergeEditorState,\n  mergeEditorState\n} from 'store/thunks';\nimport { ACTIVITY_INTERVAL, downloadJSON, renderIf } from 'utils';\nimport { fetchFunctions } from 'utils/completion';\n\nconst { default: PageVisibility } = require('react-page-visibility');\n\nexport interface FlowEditorContainerProps {\n  config: FlowEditorConfig;\n}\n\nexport interface FlowEditorStoreProps {\n  assetStore: AssetStore;\n  language: Asset;\n  languages: Assets;\n  simulating: boolean;\n  translating: boolean;\n  fetchingFlow: boolean;\n  definition: FlowDefinition;\n  dependencies: FlowDefinition[];\n  fetchFlow: FetchFlow;\n  loadFlowDefinition: LoadFlowDefinition;\n  createNewRevision: CreateNewRevision;\n  mergeEditorState: MergeEditorState;\n  nodes: RenderNodeMap;\n  modalMessage: ModalMessage;\n  saving: boolean;\n}\n\nconst hotStore = createStore();\n\n// Root container, wires up context-providers\nexport const FlowEditorContainer: React.SFC<FlowEditorContainerProps> = ({ config }) => {\n  fetchFunctions(config.endpoints);\n\n  return (\n    <ConfigProvider config={{ ...config }}>\n      <ReduxProvider store={hotStore}>\n        <ConnectedFlowEditor />\n      </ReduxProvider>\n    </ConfigProvider>\n  );\n};\n\nexport const contextTypes = {\n  config: fakePropType\n};\n\nexport const editorContainerSpecId = 'editor-container';\nexport const editorSpecId = 'editor';\n\n/**\n * The main editor view for editing a flow\n */\nexport class FlowEditor extends React.Component<FlowEditorStoreProps> {\n  public static contextTypes = contextTypes;\n\n  constructor(props: FlowEditorStoreProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public componentDidMount(): void {\n    this.props.fetchFlow(\n      this.context.config.endpoints,\n      this.context.config.flow,\n      this.context.config.onLoad\n    );\n  }\n\n  private handleDownloadClicked(): void {\n    downloadJSON(getCurrentDefinition(this.props.definition, this.props.nodes), 'definition');\n  }\n\n  private handleVisibilityChanged(visible: boolean): void {\n    this.props.mergeEditorState({\n      visible,\n      activityInterval: ACTIVITY_INTERVAL\n    });\n  }\n\n  public getAlertModal(): JSX.Element {\n    if (!this.props.modalMessage) {\n      return null;\n    }\n\n    return (\n      <Modal width=\"600px\" show={true}>\n        <Dialog\n          className={styles.alert_modal}\n          title={this.props.modalMessage.title}\n          headerClass=\"alert\"\n          buttons={{\n            primary: {\n              name: 'Ok',\n              onClick: () => {\n                this.props.mergeEditorState({ modalMessage: null });\n              }\n            }\n          }}\n        >\n          <div className={styles.alert_body}>{this.props.modalMessage.body}</div>\n        </Dialog>\n      </Modal>\n    );\n  }\n\n  public getSavingIndicator(): JSX.Element {\n    if (!this.props.saving) {\n      return null;\n    }\n\n    return (\n      <div className={styles.saving}>\n        <Fixy>\n          <Loading units={5} color=\"#3498db\" size={7} />\n        </Fixy>\n      </div>\n    );\n  }\n\n  public getFooter(): JSX.Element {\n    return !this.props.fetchingFlow && this.context.config.showDownload ? (\n      <div className={styles.footer}>\n        <div className={styles.download_button}>\n          <Button name=\"Download\" onClick={this.handleDownloadClicked} type={ButtonTypes.primary} />\n        </div>\n      </div>\n    ) : null;\n  }\n\n  public render(): JSX.Element {\n    return (\n      <PageVisibility onChange={this.handleVisibilityChanged}>\n        <div\n          id={editorContainerSpecId}\n          className={this.props.translating ? styles.translating : undefined}\n          data-spec={editorContainerSpecId}\n        >\n          {this.getFooter()}\n          {this.getAlertModal()}\n          <div className={styles.editor} data-spec={editorSpecId}>\n            {renderIf(this.props.languages && Object.keys(this.props.languages.items).length > 0)(\n              <ConnectedLanguageSelector />\n            )}\n\n            {this.getSavingIndicator()}\n\n            {renderIf(this.props.definition && this.props.language && !this.props.fetchingFlow)(\n              <ConnectedFlow />\n            )}\n\n            <RevisionExplorer\n              simulating={this.props.simulating}\n              loadFlowDefinition={this.props.loadFlowDefinition}\n              createNewRevision={this.props.createNewRevision}\n              assetStore={this.props.assetStore}\n            />\n          </div>\n        </div>\n      </PageVisibility>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  flowContext: { definition, dependencies, nodes, assetStore },\n  editorState: { translating, language, fetchingFlow, simulating, modalMessage, saving }\n}: AppState) => {\n  const languages = assetStore ? assetStore.languages : null;\n\n  return {\n    modalMessage,\n    saving,\n    simulating,\n    assetStore,\n    translating,\n    language,\n    fetchingFlow,\n    definition,\n    dependencies,\n    nodes,\n    languages\n  };\n};\n\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators(\n    {\n      fetchFlow,\n      loadFlowDefinition,\n      createNewRevision,\n      mergeEditorState\n    },\n    dispatch\n  );\n\nexport const ConnectedFlowEditor = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FlowEditor);\n\nexport default FlowEditorContainer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './global.module.scss';\nimport 'static/fonts/floweditor/style.css';\n\nimport FlowEditor from 'components';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nwindow.showFlowEditor = (ele, config) => {\n  ReactDOM.render(<FlowEditor config={config} />, ele);\n};\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"count\":\"CharCount_count__ABAEX\",\"tooltip\":\"CharCount_tooltip__1p2RV\",\"fine_print\":\"CharCount_fine_print__RYzHy\",\"divider\":\"CharCount_divider__3pF0R\",\"tooltip_text\":\"CharCount_tooltip_text__3ruDu\",\"unicode\":\"CharCount_unicode__1nLUL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"MediaPlayer_player__gYGWS\",\"playing\":\"MediaPlayer_playing__2Jrw_\",\"button\":\"MediaPlayer_button__rRXz1\",\"circles\":\"MediaPlayer_circles__1pr_0\",\"circle_background\":\"MediaPlayer_circle_background__OMPcS\",\"circle_foreground\":\"MediaPlayer_circle_foreground__1L6K9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"translating_categories\":\"RouterLocalizationForm_translating_categories__34-3g\",\"translating_category\":\"RouterLocalizationForm_translating_category__1GtBO\",\"translating_from\":\"RouterLocalizationForm_translating_from__1jvjb\",\"translating_to\":\"RouterLocalizationForm_translating_to__1m7uk\",\"translating_operator_title\":\"RouterLocalizationForm_translating_operator_title__3vA3V\",\"translating_operator_instructions\":\"RouterLocalizationForm_translating_operator_instructions___Yv3N\",\"translating_operator_container\":\"RouterLocalizationForm_translating_operator_container__39jsM\",\"translating_operator\":\"RouterLocalizationForm_translating_operator__AgpTS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"titlebar\":\"TitleBar_titlebar__1_zDw\",\"normal\":\"TitleBar_normal__z0QaD\",\"remove_confirm\":\"TitleBar_remove_confirm__3ywj-\",\"remove_button\":\"TitleBar_remove_button__2lO9D\",\"up_button\":\"TitleBar_up_button__2Imiq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"drag_helper\":\"DragHelper_drag_helper__a_fFa\",\"visible\":\"DragHelper_visible__1Z4lg\",\"arrow\":\"DragHelper_arrow__YH1ED\",\"tail\":\"DragHelper_tail__12x7O\",\"help_text\":\"DragHelper_help_text__2luNE\",\"head\":\"DragHelper_head__3ViUG\",\"bold\":\"DragHelper_bold__2v--u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"editor\":\"components_editor__36a9s\",\"translating\":\"components_translating__1uBgy\",\"footer\":\"components_footer__1OFgP\",\"download_button\":\"components_download_button__392jz\",\"alert_body\":\"components_alert_body__2Bxt0\",\"alert_modal\":\"components_alert_modal__3xFu-\",\"saving\":\"components_saving__1mebj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"CheckboxElement_label__3vFGD\",\"title\":\"CheckboxElement_title__3QShp\",\"description\":\"CheckboxElement_description__3BguK\",\"description_solo\":\"CheckboxElement_description_solo__2o0rh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"quick_replies\":\"SendMsg_quick_replies__2bre8\",\"attachment\":\"SendMsg_attachment__1JoQl\",\"summary\":\"SendMsg_summary__2c05X\",\"whatsapp\":\"SendMsg_whatsapp__2O95I\",\"line\":\"SendMsg_line__LMI4I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_element\":\"CurrencyElement_form_element__F0wio\",\"transfer\":\"CurrencyElement_transfer__1IAVm\",\"currency\":\"CurrencyElement_currency__278L2\",\"amount\":\"CurrencyElement_amount__fJKsJ\",\"remove\":\"CurrencyElement_remove__3D5_y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"btn\":\"Button_btn__1hdG6\",\"disabled\":\"Button_disabled__xk6Qi\",\"primary\":\"Button_primary__3PDu-\",\"active\":\"Button_active__3BxT0\",\"secondary\":\"Button_secondary__1LfJY\",\"tertiary\":\"Button_tertiary__3UJsa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"message\":\"AssetSelector_message__1viBV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"pill\":\"Pill_pill__3FyMl\",\"clickable\":\"Pill_clickable__24gn3\",\"icon\":\"Pill_icon__QZrb0\",\"large\":\"Pill_large__3mcHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"recipients\":\"SendBroadcast_recipients__1ZSQV\",\"node\":\"SendBroadcast_node__26RLX\",\"to\":\"SendBroadcast_to__25_7K\",\"name\":\"SendBroadcast_name__RNJWu\",\"icon\":\"SendBroadcast_icon__2YfpF\",\"more\":\"SendBroadcast_more__11MJm\",\"message\":\"SendBroadcast_message__6ZIco\",\"line\":\"SendBroadcast_line__3Dm3R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"lead_in\":\"MenuRouterForm_lead_in__253j6\",\"digit\":\"MenuRouterForm_digit__ruJhi\",\"category\":\"MenuRouterForm_category__2Khjv\",\"menu\":\"MenuRouterForm_menu__OrNSa\",\"menu_option\":\"MenuRouterForm_menu_option__2e-jl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"lead_in\":\"RandomRouterForm_lead_in__2iUt2\",\"bucket_select\":\"RandomRouterForm_bucket_select__5jt8Q\",\"bucket_list\":\"RandomRouterForm_bucket_list__14I85\",\"bucket_name\":\"RandomRouterForm_bucket_name__t3I5z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timeout_control_container\":\"TimeoutControl_timeout_control_container__ChGjA\",\"left_section\":\"TimeoutControl_left_section__23W9H\",\"label\":\"TimeoutControl_label__3L-JA\",\"checkbox\":\"TimeoutControl_checkbox__NYV4k\",\"drop_down\":\"TimeoutControl_drop_down__2Yy9r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"language\":\"LanguageSelector_language__3Q3TZ\",\"language_link\":\"LanguageSelector_language_link__32yIO\",\"active\":\"LanguageSelector_active__3RqNy\",\"separator\":\"LanguageSelector_separator__2oanc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ele\":\"SendEmailForm_ele__2CvL5\",\"subject\":\"SendEmailForm_subject__U7jTR\",\"message\":\"SendEmailForm_message__1k6GE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SetRunResultForm_form__HNnt4\",\"name\":\"SetRunResultForm_name__1aW9R\",\"value\":\"SetRunResultForm_value__36pab\",\"category\":\"SetRunResultForm_category__TuHWy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"node\":\"StartSession_node__d1IsL\",\"to\":\"StartSession_to__2uqPY\",\"name\":\"StartSession_name__HfSVl\",\"icon\":\"StartSession_icon__1l-0q\",\"more\":\"StartSession_more__8uoUD\",\"message\":\"StartSession_message__1KRsK\",\"flow\":\"StartSession_flow__zPhXS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"canvas_container\":\"Canvas_canvas_container__oR3SR\",\"canvas\":\"Canvas_canvas__XH7zY\",\"drag_selection\":\"Canvas_drag_selection__3wxA2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"counter\":\"Counter_counter__1_pCt\",\"visible\":\"Counter_visible__3Avdq\",\"clickable\":\"Counter_clickable__3pprF\"};"],"sourceRoot":""}