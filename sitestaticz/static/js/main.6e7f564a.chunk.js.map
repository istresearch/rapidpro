{"version":3,"sources":["components/form/textinput/UnicodeList.module.scss","components/flow/actions/addurn/AddURNForm.module.scss","components/form/multichoice/MultiChoice.module.scss","components/flow/actions/saymsg/SayMsg.module.scss","components/flow/actions/transferairtime/TransferAirtime.module.scss","components/form/optionaltext/OptionalTextInput.module.scss","components/form/ValidationFailures.module.scss","components/flow/routers/caselist/CaseList.module.scss","components/flow/routers/field/FieldRouterForm.module.scss","components/canvas/CanvasDraggable.module.scss","components/simulator/Simulator.module.scss","static/images/map.jpg","components/nodeeditor/TypeList.module.scss","components/flow/actions/changegroups/removegroups/RemoveGroupsForm.module.scss","components/flow/actions/updatecontact/UpdateContactForm.module.scss","components/flow/routers/airtime/AirtimeRouterForm.module.scss","components/flow/routers/digits/DigitsRouterForm.module.scss","components/flow/routers/resthook/ResthookRouterForm.module.scss","components/flow/routers/wait/WaitRouterForm.module.scss","components/flow/routers/classify/ClassifyRouterForm.module.scss","components/loading/Loading.module.scss","components/flow/Flow.module.scss","global.module.scss","components/simulator/LogEvent.module.scss","components/dialog/Dialog.module.scss","components/form/textinput/TextInputElement.module.scss","components/flow/exit/Exit.module.scss","components/sticky/Sticky.module.scss","flowTypes.ts","services/Localization.ts","utils/index.tsx","components/button/Button.tsx","components/dialog/Dialog.tsx","store/constants.ts","components/fixy/Fixy.tsx","store/flowContext.ts","config/interfaces.ts","components/flow/actions/helpers.tsx","components/flow/props.ts","config/ConfigProvider.tsx","components/flow/actions/addlabels/AddLabels.tsx","components/form/assetselector/helpers.ts","components/form/FormElement.tsx","store/currencies.ts","external/index.ts","utils/reactselect.ts","utils/completion.ts","config/i18n/index.js","components/form/assetselector/AssetSelector.tsx","components/form/assetselector/widgets.tsx","config/helpers.ts","components/nodeeditor/TypeList.tsx","store/validators.ts","store/nodeEditor.ts","components/flow/actions/addlabels/helpers.ts","components/flow/actions/addlabels/AddLabelsForm.tsx","components/flow/actions/addurn/helpers.ts","components/flow/actions/addurn/AddURN.tsx","components/form/textinput/constants.ts","components/form/select/SelectElement.tsx","components/form/textinput/UnicodeList.tsx","components/form/textinput/CharCount.tsx","components/form/textinput/ExcellentParser.ts","components/form/textinput/helpers.ts","components/form/textinput/TextInputElement.tsx","components/flow/actions/addurn/AddURNForm.tsx","components/flow/actions/callresthook/CallResthook.tsx","components/flow/actions/callwebhook/CallWebhook.tsx","components/flow/actions/changegroups/helpers.ts","components/flow/actions/changegroups/addgroups/helpers.ts","components/flow/actions/changegroups/addgroups/AddGroupsForm.tsx","components/flow/actions/changegroups/ChangeGroups.tsx","components/form/checkbox/CheckboxElement.tsx","components/flow/actions/changegroups/removegroups/helpers.ts","components/flow/actions/changegroups/removegroups/RemoveGroupsForm.tsx","components/flow/actions/localization/helpers.ts","components/flow/helpers.ts","components/flow/actions/localization/KeyLocalizationForm.tsx","components/pill/Pill.tsx","components/form/multichoice/MultiChoice.tsx","components/uploadbutton/UploadButton.tsx","components/flow/actions/localization/MsgLocalizationForm.tsx","components/flow/actions/missing/Missing.tsx","components/flow/actions/playaudio/PlayAudio.tsx","components/flow/actions/playaudio/helpers.ts","components/flow/actions/playaudio/PlayAudioForm.tsx","components/mediaplayer/MediaPlayer.tsx","components/flow/actions/saymsg/SayMsg.tsx","components/flow/actions/saymsg/helpers.ts","components/flow/actions/saymsg/SayMsgForm.tsx","components/flow/actions/sendbroadcast/SendBroadcast.tsx","components/flow/actions/sendbroadcast/helpers.ts","components/flow/actions/sendbroadcast/SendBroadcastForm.tsx","components/flow/actions/sendemail/SendEmail.tsx","components/form/select/tags/TaggingElement.tsx","components/flow/actions/sendemail/helpers.ts","components/flow/actions/sendemail/SendEmailForm.tsx","components/flow/actions/sendmsg/SendMsg.tsx","components/flow/actions/sendmsg/helpers.ts","components/flow/actions/sendmsg/SendMsgForm.tsx","components/flow/actions/setrunresult/SetRunResult.tsx","components/flow/actions/setrunresult/helpers.ts","components/flow/actions/setrunresult/SetRunResultForm.tsx","components/flow/actions/startflow/StartFlow.tsx","components/flow/actions/startsession/StartSession.tsx","components/flow/actions/startsession/helpers.ts","components/flow/actions/startsession/StartSessionForm.tsx","components/flow/routers/constants.ts","components/flow/actions/transferairtime/TransferAirtime.tsx","components/flow/actions/updatecontact/UpdateContact.tsx","components/helpers.ts","components/flow/routers/helpers.ts","components/flow/node/helpers.ts","store/mutators.ts","components/flow/actions/updatecontact/UpdateContactForm.tsx","components/flow/routers/airtime/currency/CurrencyElement.tsx","components/form/optionaltext/OptionalTextInput.tsx","components/flow/routers/widgets.tsx","components/form/ValidationFailures.tsx","components/flow/routers/airtime/helpers.ts","components/flow/routers/airtime/AirtimeRouterForm.tsx","config/operatorConfigs.ts","components/flow/routers/case/helpers.ts","components/flow/routers/case/CaseElement.tsx","components/flow/routers/caselist/helpers.ts","components/flow/routers/caselist/CaseList.tsx","components/nodeeditor/constants.ts","components/flow/routers/digits/helpers.ts","components/flow/routers/digits/DigitsRouterForm.tsx","components/flow/routers/expression/helpers.ts","components/flow/routers/expression/ExpressionRouterForm.tsx","components/flow/routers/field/helpers.ts","components/flow/routers/field/FieldRouterForm.tsx","components/flow/routers/groups/helpers.ts","components/flow/routers/localization/helpers.ts","components/flow/routers/groups/GroupsRouterForm.tsx","components/flow/routers/localization/RouterLocalizationForm.tsx","components/flow/routers/menu/helpers.ts","components/flow/routers/menu/MenuRouterForm.tsx","components/flow/routers/random/helpers.ts","components/flow/routers/random/RandomRouterForm.tsx","components/flow/routers/response/helpers.ts","components/flow/routers/response/ResponseRouterForm.tsx","components/form/timeout/TimeoutControl.tsx","components/flow/routers/resthook/helpers.ts","components/flow/routers/resthook/ResthookRouterForm.tsx","components/flow/routers/result/helpers.ts","components/flow/routers/result/ResultRouterForm.tsx","components/flow/routers/subflow/helpers.ts","components/flow/routers/subflow/SubflowRouterForm.tsx","components/flow/routers/wait/helpers.ts","components/flow/routers/webhook/helpers.ts","components/flow/routers/wait/WaitRouterForm.tsx","components/flow/routers/webhook/header/HeaderElement.tsx","components/flow/routers/webhook/WebhookRouterForm.tsx","components/flow/actions/callclassifier/CallClassifier.tsx","config/index.ts","components/flow/routers/classify/helpers.ts","components/flow/routers/classify/ClassifyRouterForm.tsx","config/typeConfigs.ts","components/flow/actions/updatecontact/helpers.ts","store/editor.ts","store/thunks.ts","store/helpers.ts","components/canvas/CanvasDraggable.tsx","components/canvas/helpers.ts","components/canvas/Canvas.tsx","components/counter/Counter.tsx","components/titlebar/TitleBar.tsx","components/flow/actions/action/Action.tsx","components/draghelper/DragHelper.tsx","components/flow/exit/helpers.ts","components/loading/Loading.tsx","components/flow/exit/Exit.tsx","components/flow/node/Node.tsx","components/modal/Modal.tsx","components/nodeeditor/NodeEditor.tsx","components/simulator/LogEvent.tsx","components/simulator/helpers.ts","components/simulator/Simulator.tsx","components/sticky/Sticky.tsx","services/Plumber.ts","utils/debug.ts","components/flow/Flow.tsx","components/languageselector/LanguageSelector.tsx","components/poptab/PopTab.tsx","components/revisions/RevisionExplorer.tsx","store/rootReducer.ts","store/state.ts","store/createStore.ts","components/index.tsx","serviceWorker.js","index.js","components/flow/node/Node.module.scss","components/flow/routers/case/CaseElement.module.scss","components/flow/actions/action/Action.module.scss","components/flow/routers/webhook/WebhookRouterForm.module.scss","components/revisions/RevisionExplorer.module.scss","components/form/FormElement.module.scss","components/flow/actions/sendmsg/SendMsgForm.module.scss","components/flow/routers/result/ResultRouterForm.module.scss","components/titlebar/TitleBar.module.scss","components/poptab/PopTab.module.scss","components/shared.module.scss","components/form/textinput/CharCount.module.scss","components/mediaplayer/MediaPlayer.module.scss","components/flow/routers/localization/RouterLocalizationForm.module.scss","components/draghelper/DragHelper.module.scss","components/index.module.scss","components/form/assetselector/AssetSelector.module.scss","components/form/checkbox/CheckboxElement.module.scss","components/flow/actions/sendmsg/SendMsg.module.scss","components/flow/routers/airtime/currency/CurrencyElement.module.scss","components/button/Button.module.scss","components/pill/Pill.module.scss","components/flow/actions/sendbroadcast/SendBroadcast.module.scss","components/flow/routers/menu/MenuRouterForm.module.scss","components/flow/routers/random/RandomRouterForm.module.scss","components/form/timeout/TimeoutControl.module.scss","components/languageselector/LanguageSelector.module.scss","variables.module.scss","components/flow/actions/sendemail/SendEmailForm.module.scss","components/flow/actions/setrunresult/SetRunResultForm.module.scss","components/flow/actions/startsession/StartSession.module.scss","components/canvas/Canvas.module.scss","components/counter/Counter.module.scss"],"names":["module","exports","unicode_char","unicode_list","scheme_selection","path","grid_size","node_spacing","node_padding","background-size","chosen","item","text","recording","code","amount","optional_text_input","toggle_link","errors","error","case_list","kase","lead_in","field_select","draggable","selected","sim_container","simulator","sim_hidden","screen","header","close","time","battery","wifi","footer","reset","inactive","active","messages","controls","show_attachments_button","attachment_buttons","visible","drawer","drawer_visible","forced","drawer_header","map_thumb","audio_picker","audio_icon","audio_message","keypad","keypad_entry","keys","row","key","drawer_items","drawer_item","simulator_tab","tab_hidden","simulator_tab_icon","simulator_tab_text","detail_webhook_called","quick_replies","quick_reply","__webpack_require__","p","type_list","checkbox","value","result_name","link","loading","pulse","empty_flow","evt","fadein","msg_text","ivr_msg","send_msg","msg_received","image_attachment","info","email","webhook","video_attachment","audio_attachment","media_player","audio_text","email_details","to","subject","body","webhook_details","response","event_viewer","has_detail","classification","clickable","dialog","header_overlay","header_icon","title","barber","iconed","title_container","content","gutter","buttons","left_buttons","right_buttons","tabs","tab","tab_icon","option_list","option_summary","option_signature","option","first_option","fn_marker","function_help","completion_container","options_wrapper","fn_container","option_name","option_examples","example_header","example","fn_signature","wrapper","help","hidden","textinput","exit","translating","unnamed_exit","endpoint","missing_localization","name","activity","count","confirm_delete","confirm_x","recent_messages","no_recents","message","sent","yellow","color_option","sticky","blue","purple","gray","green","color_chooser_container","color_chooser","sticky_container","removal","title_wrapper","remove_button","confirmation","body_wrapper","RouterTypes","WaitTypes","HintTypes","ContactProperties","ValueType","StartFlowArgs","StartFlowExitNames","WebhookExitNames","TransferAirtimeExitNames","LocalizedObject","object","_ref","id","Object","classCallCheck","this","localizedKeys","localizedObject","localized","iso","language","createClass","assign","Array","isArray","length","Localization","translations","uuid","values","forEach","addTranslation","ButtonTypes","SNAKED_CHARS","GRID_SIZE","parseInt","variables","NODE_SPACING","NODE_PADDING","snapToGrid","left","top","leftAdjust","topAdjust","Math","max","snapPositionToGrid","position","right","bottom","snakify","toLowerCase","trim","replace","titleCase","str","s","charAt","toUpperCase","substr","getSelectClass","hasErrorType","exps","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","exp","match","err","return","createClickHandler","onClick","shouldCancelClick","arguments","onMouseDown","event","onMouseUp","getLocalization","obj","localization","translate","emphasize","react","className","renderIf","predicate","then","otherwise","isRealValue","timeStart","process","set","val","$set","merge","$merge","unset","$unset","push","arr","$push","splice","$splice","createUUID","generateUUID","range","start","end","from","v","k","pluralize","noun","suffix","concat","hasString","names","find","HeaderStyle","Button","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","bindCallbacks","assertThisInitialized","include","setState","_this$props","onRef","type","disabled","leftSpacing","topSpacing","iconName","ref","style","marginLeft","marginTop","handleMouseDown","handleMouseUp","styles","btn","paddingRight","React","Constants","Dialog","tabFocus","primaryButton","activeTab","index","_this2","window","setTimeout","foundTab","hasErrors","shiftKey","preventDefault","stopPropagation","target","blur","click","focus","console","log","document","addEventListener","handleKey","capture","clearTimeout","removeEventListener","_this3","rightButtons","primary","secondary","tertiary","Button_Button","handlePrimaryButton","leftButtons","_this4","headerClasses","headerClass","shared","headerIcon","headerStyle","BARBER","activeClasses","_this$getButtons","getButtons","join","map","icon","checked","subtitle","noPadding","children","Fixy","_React$PureComponent","ele","fixed","inherits","scrollY","handleScroll","getBoundingClientRect","AssetType","FlowTypes","Types","Operators","FeatureFilter","REMOVE_VALUE_ASSET","Remove","DEFAULT_LANGUAGE","Language","initialState","definition","dependencies","baseLanguage","contactFields","nodes","assetStore","updateDefinition","UPDATE_DEFINITION","payload","updateNodes","UPDATE_NODES","updateAssets","assets","UPDATE_ASSET_MAP","combineReducers","action","UPDATE_DEPENDENCIES","UPDATE_BASE_LANGUAGE","UPDATE_CONTACT_FIELDS","require","getActionUUID","nodeSettings","currentType","originalAction","getRecipients","groups","group","Group","contacts","contact","Contact","legacy_vars","expression","Expression","renderAssetList","endpoints","reduce","elements","asset","idx","renderAsset","node_asset","node_group","Label","node_label","Flow","e","href","editor","rel","getAllErrors","entry","validationFailures","persistantFailures","getExpressions","filter","getRecipientsByAsset","NAME_PROPERTY","Name","ContactProperty","CHANNEL_PROPERTY","Channel","LANGUAGE_PROPERTY","HIDDEN","NONE","VOICE","SURVEY","TEXT_TYPES","MESSAGE","ONLINE","fakePropType","isRequired","SINGLE_CHILD_ERROR","VALID_CHILD_ERROR","ConfigProvider","Error","config","only","childContextTypes","assetService","AddLabelsComp","context","labels","label","contextTypes","sortByName","a","b","localeCompare","cx","classNames","bind","FormElement","showLabel","helpText","help_text","getMergedErrors","hideError","failure","_cx","defineProperty","send_msg_error","sendMsgError","arrow_up","error_list","_cx2","getName","getHelpText","errorsToDisplay","getErrors","border","invalid","__className","currencies","ARS","Currency","AUD","BIF","BRL","CAD","CDF","CLP","COP","DJF","DOP","DZD","EUR","GBP","GHS","GNF","KES","LBP","LKR","LRD","MWK","MXN","NAD","NPR","NZD","PHP","PKR","RUB","RWF","SDG","SGD","SLL","SOS","SRD","SVC","TND","TRY","TZS","UGX","USD","UYU","UZS","VEF","XCD","YER","ZAR","ZMW","ZWL","axios","defaults","headers","post","responseType","getCookie","cookie","split","indexOf","fetchAsset","Promise","resolve","reject","getAssets","results","getAssetPage","url","get","data","result","resultToAsset","order","catch","asyncToGenerator","regenerator_default","mark","_callee","pageUrl","assetPage","wrap","_context","prev","abrupt","stop","_x","_x2","_x3","apply","idKey","assetType","isMatch","input","shouldExclude","inputLower","includes","searchAssetMap","query","additionalOptions","search","matches","createAssetStore","channels","getURL","items","classifiers","Classifier","languages","flows","fields","Field","globals","Global","revisions","Revision","Result","recipients","URN","resthooks","Resthook","templates","Template","prefetched","fetches","storeId","store","assetListToMap","all","getFunctions","getCompletionSchema","getFlowDefinition","_callee2","revisionToLoad","_context2","t0","endsWith","startsWith","location","protocol","hostname","port","getBaseURL","large","placeholder","reactselect_objectSpread","color","singleValue","multiValue","caretColor","marginBottom","boxShadow","control","borderColor","transition","&:hover","messageStyle","borderBottom","borderBottomRightRadius","borderBottomLeftRadius","getErroredSelect","baseControl","small","maxHeight","minHeight","fontSize","lineHeight","menuList","indicatorsContainer","height","valueContainer","tagging","backgroundColor","functions","signature","getCompletions","completion","dotQuery","parts","currentProps","schema","root","prefix","part","shift","nextProp","prop","nextType","types","properties","property_template","template","summary","resources","translation","en","es","i18n","use","LanguageDetector","initReactI18next","init","fallbackLng","interpolation","AssetOption","isDisabled","innerRef","innerProps","chunk_80640036_browser_esm","Option","Scheme","status","getIconForAssetType","AssetSelector","lastCreation","defaultOptions","menuOpen","isLoading","onChange","callback","options","completions","localMatches","onFilter","sort","sortFunction","encodeURIComponent","remoteAssets","remoteMatches","removalAsset","valueClearable","seen","hasOwnProperty","uniqueBy","existing","createAssetFromInput","createPrefix","inputValue","now","Date","getTime","csrf","X-CSRFToken","postNewAsset","onAssetCreated","non_field_errors","erroredControl","getErroredControl","AssetSelector_objectSpread","fallbackPlaceholder","t","toLocaleLowerCase","multi","commonAttributes","selection","captureMenuScroll","components","getStyle","handleChanged","onMenuOpen","handleMenuOpen","onMenuClose","handleMenuClose","onBlur","handleClearMessage","menuShouldBlockScroll","isMulti","isClearable","formClearable","isSearchable","searchable","getOptionValue","getOptionLabel","FormElement_FormElement","react_select_browser_esm","isValidNewOption","handleCheckValid","formatCreateLabel","handleCreatePrompt","getNewOptionData","handleGetNewOptionData","onCreateOption","handleCreateOption","dist_react_select_browser_esm","cacheOptions","loadOptions","handleLoadOptions","noOptionsMessage","nextProps","prevState","filterVisibility","filters","visibility","findIndex","ft","flowType","TypeList","typeConfigs","initialType","handleChangeType","configsToDisplay","react_select_dist_react_select_browser_esm","description","getTypeConfigs","mergeForm","form","toMerge","toRemove","updated","_i","_Object$keys","_loop","isEntry","existingIdx","mutate","remove","_i3","_Object$keys3","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_loop2","_iterator3","removeKeys","valid","_i2","_Object$keys2","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","typeConfig","userAddingAction","settings","updateNodeEditorSettings","UPDATE_NODE_EDITOR_SETTINGS","updateUserAddingAction","UPDATE_USER_ADDING_ACTION","UPDATE_TYPE_CONFIG","REGEX_URL","RegExp","fromRegex","regex","inputAsString","test","failures","validate","validators","allFailures","validateFunc","validation","Empty","Required","Regex","inputString","MoreThan","checkName","parseFloat","shouldRequireIf","required","HeaderName","headerUtils","MaxOfTenItems","StartIsNonNumeric","ValidURL","Numeric","Alphanumeric","NumOrExp","initializeForm","add_input_labels","getAsset","AddLabelsForm","formState","handleLabelsChanged","newAction","updateAction","onClose","submitting","updates","handleSave","addAsset","Dialog_Dialog","TypeList_TypeList","onTypeChange","data-spec","dist_es","i18nKey","AssetSelector_AssetSelector","handleCreateAssetFromInput","handleLabelCreated","getSchemeObject","scheme","SCHEMES","getSchemeSelectOption","schemeToSelectOption","add_contact_urn","AddURNComp","schemeObject","schemeName","KeyValues","SelectElement","SelectElement_objectSpread","UnicodeList","num","unicodeChars","chars","data-testid","char","CharCount","hasUnicode","toolTipTextClasses","tooltip_text","unicode","react_default","createElement","tooltip","divider","textinput_UnicodeList","fine_print","GSM","0","1","2","3","4","5","6","7","8","9","\n","\f","\r"," ","!","\"","#","$","%","&","'","(",")","*","+",",","-",".","/",":",";","<","=",">","?","@","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","[","\\","]","^","_","c","d","f","g","h","i","j","l","m","n","o","q","r","u","w","x","y","z","{","|","}","~","¡","£","¤","¥","§","¿","Ä","Å","Æ","Ç","É","Ñ","Ö","Ø","Ü","ß","à","ä","å","æ","è","é","ì","ñ","ò","ö","ø","ù","ü","Γ","Δ","Θ","Λ","Ξ","Π","Σ","Φ","Ψ","Ω","€","isValidStart","partialExpression","allowedTopLevels","allowIncomplete","substring","topLevel","allowed","isWordChar","ch","isInStringLiteral","numQuotes","ExcellentParser","expressionPrefix","textToCaret","expressions","findExpressions","lastExpression","closed","neededParentheses","fragment","skipChar","inQuotes","prependFlag","pos","pop","identifier","parenthesesLevel","re","exec","currentExpression","nextCh","nextNextCh","getUnicodeChars","msg","getMsgStats","newVal","constructor","stats","characterCount","Count","ReactMarkdown","caretCoordinates","completionVisible","selectedOptionIndex","TextInputElement_objectSpread","TextInputElement","_React$Component","selectedEl","textEl","parser","nextCaret","completionSchema","initial","SMS","selectionStart","selectionEnd","checkForMissingFields","focusInput","previous","scrollIntoView","autocomplete","KEY_ENTER","onEnter","KEY_SPACE","ctrlKey","reevaluate","currentTarget","KEY_P","setSelection","KEY_UP","KEY_N","KEY_DOWN","KEY_AT","getCaretCoordinates","KEY_ESC","KEY_TAB","caret","newValue","parens","newCaret","fn","toConsumableArray","KEY_BACKSPACE","executeQuery","force","_event$currentTarget","KEY_F","KEY_B","KEY_RIGHT","KEY_LEFT","_event$currentTarget2","onFieldFailures","missingFields","getContactFields","field","_this5","expressionContext","includeFunctions","functionQuery","functionContext","fns","curr","_ref$currentTarget","_getMsgStats","selectedIdx","showSummary","numExamples","getCompletionName","examples","source","slice","getCompletionSignature","_this6","optionClasses","selectedElRef","getOption","scrollTop","textElClasses","showInvalid","textarea","textElRef","handleClick","handleChange","handleBlur","onKeyDown","handleKeyDown","onKeyUp","handleKeyUp","maxLength","_cx3","completionClasses","fnClasses","getOptions","charCount","textinput_CharCount","send_broadcast","showFn","getTextElement","getScroll","ConnectedTextInputElement","connect","_ref2","flowContext","_ref2$editorState","editorState","nodeEditor","forwardRef","AddURNForm","handlePathChanged","SelectElement_SelectElement","handleSchemeChanged","textinput_TextInputElement","AddURNForm_objectSpread","CallResthookComp","resthook","CallWebhookComp","excludeDynamicGroups","mapGroupsToAssets","mapAssetsToGroups","searchResults","add_contact_groups","AddGroupsForm","handleGroupsChanged","handleGroupAdded","getContentMarkup","remove_contact_groups","specId","getRemoveAllMarkup","ChangeGroupsComp","getChangeGroupsMarkup","CheckboxElement","checkboxIcon","labelClassName","checkboxClassName","description_solo","removeAll","all_groups","LABEL","REMOVE_FROM_ALL","REMOVE_FROM_ALL_DESC","RemoveGroupsForm","groupValidators","handleUpdate","CheckboxElement_CheckboxElement","handleRemoveAllUpdate","initializeLocalizedKeyForm","keyValues","localizations","getObject","getTypeConfig","localizeableKeys","initializeLocalizedForm","say_msg","isLocalized","quickReplies","audio","audio_url","determineTypeConfig","renderNode","originalNode","node","actions","getType","missing","router","KeyLocalizationForm","KeyLocalizationForm_objectSpread","updateLocalizations","base","translate_from","handleKeyUpdate","Pill","pillStyles","pill","data-advanced","advanced","MultiChoiceInput","currentInput","onEntryChanged","newItem","onItemAdded","pill_Pill","onRemoved","getChosenItems","handleInputChanged","handleValidateEmpty","handleAddItem","MultiChoice_objectSpread","UploadButton","filePicker","onUploadChanged","files","FormData","append","display","handleUploadFile","removeText","handleRemoveUpload","uploadText","MsgLocalizationForm","_this$state","handleQuickRepliesUpdate","newQuickReply","newReplies","reply","MsgLocalizationForm_objectSpread","MultiChoice_MultiChoiceInput","handleRemoveQuickReply","handleAddQuickReply","onFieldErrors","handleQuickReplyFieldFailures","audioButton","UploadButton_UploadButton","attachments","handleAudioChanged","handleMessageUpdate","MissingComp","PlayAudioComp","play_audio","PlayAudioForm","handleAudioUpdate","PlayAudioForm_objectSpread","MediaPlayer","stroke","radius","radiusNormalized","circumference","PI","durationSeconds","currentSeconds","playing","progress","currentTime","duration","ended","floor","triggered","handleTogglePlay","pause","play","prevProps","strokeDashoffset","player","width","handleRef","onTimeUpdate","handleTimeUpdate","src","circles","circle_background","fill","strokeWidth","cy","circle_foreground","strokeDasharray","button","PLACEHOLDER","SayMsgComp","MediaPlayer_MediaPlayer","SayMsgForm","SayMsgForm_objectSpread","handleUploadChanged","SendBroadcastComp","line","SendBroadcastForm","handleRecipientsChanged","SendBroadcastForm_objectSpread","SendEmailComp","TaggingElement","tags","tag","optionsToTags","onCheckValid","tagsToOptions","handleUpdateTags","prompt","createPrompt","Component","send_email","addresses","EMAIL_PATTERN","SendEmailForm","TaggingElement_TaggingElement","handleSubjectChanged","SendEmailForm_objectSpread","handleBodyChanged","SendMsgComp","replies","attachment","templating","whatsapp","templateVariables","attachmentString","splitPoint","uploaded","msgTemplate","quickReplyEntry","sendAll","all_urns","TYPE_OPTIONS","NEW_TYPE_OPTIONS","SendMsgForm","stateToForm","handleTemplateChanged","variable","stateToAction","SendMsgForm_objectSpread","url_attachment","type_choice","upload","open","remove_upload","handleAttachmentRemoved","renderUpload","renderAttachment","emptyOption","templateTranslation","variable_count","updatedText","_this7","handleShouldExcludeTemplate","template_text","handleTemplateVariableChanged","handleTemplateFieldFailures","handleQuickReplyEntry","renderAttachments","handleSendAllUpdate","hasFeature","HAS_WHATSAPP","renderTemplateConfig","handleFieldFailures","getResultNameMarkup","SetRunResultComp","getSavePlaceholder","getClearPlaceholder","set_run_result","category","SetRunResultForm","snaked","handleNameUpdate","resultFormat","handleValueUpdate","SetRunResultForm_objectSpread","handleCategoryUpdate","StartFlowComp","_ref$flow","flow","StartSessionComp","create_contact","contact_query","start_session","startType","START_TYPE_CREATE","START_TYPE_QUERY","START_TYPE_ASSETS","contactQuery","DefaultExitNames","START_TYPE_OPTIONS","StartSessionForm","handleStartTypeChanged","StartSessionForm_objectSpread","handleContactQueryChanged","handleFlowChanged","TransferAirtimeComp","transfer","details","amounts","withEmph","emph","renderSetText","emphasizeName","UpdateContactComp","set_contact_field","set_contact_channel","channel","set_contact_language","getLanguageForCode","set_contact_name","getDraggedFrom","ghostNode","ghost","exitUUIDs","inboundConnections","exitUUID","nodeUUID","ONLINE_PROPERTIES","OFFLINE_PROPERTIES","getContactProperties","isOnlineFlowType","WAIT_LABEL","GROUP_LABEL","createRenderNode","exits","ui","hasCases","cases","createCaseProps","categories","getCategories","matchingCategory","category_uuid","isRelativeDate","caseConfig","categoryName","operatorType","has_date_eq","has_date_gt","has_date_lt","isCategoryMatch","cat","getSwitchRouter","switch","resolveRoutes","newCases","hasTimeout","defaultCategoryName","resolved","originalRouter","previousCategories","newCase","previousCase","previousCategory","helpers_objectSpread","previousExit","exit_uuid","categorizeCases","resolvedDefaultCategory","Other","All_Responses","_getDefaultRoute","defaultCategory","default_category_uuid","defaultExit","getDefaultRoute","_getTimeoutRoute","timeoutCategory","timeoutExit","wait","timeout","No_Response","getTimeoutRoute","createWebhookBasedNode","useCategoryTest","previousRouter","destination_uuid","Success","Failure","has_category","has_only_text","operand","splitType","split_by_webhook","call_resthook","split_by_resthook","transfer_airtime","split_by_airtime","getCategoriesForExit","getResultName","switchRouter","random","call_webhook","uniquifyNode","newNode","removeResultFromStore","resultName","reference","filteredRefs","references","actionUUID","removeResultReference","addResult","updateConnection","fromNodeUUID","fromExitUUID","destinationNodeUUID","updatedNodes","fromNode","getNode","exitIdx","getExitIndex","previousDestination","mergeNode","removeNode","spliceInAction","previousNode","otherExit","getDefaultExit","destination","execute_actions","remap","nodeToRemove","detectLoops","_unused","updatePosition","snap","adjusted","updateStickyNotePosition","stickyUUID","_ui","stickies","lastPos","updateStickyNote","UpdateContactForm","fieldValue","dispatch","getState","assetMap","mutators","handlePropertyChange","handleLanguageUpdate","handleChannelUpdate","onUpdated","UpdateContactForm_objectSpread","handleFieldValueUpdate","value_type","sortFieldsAndProperties","handleFieldAdded","getValueWidget","CurrencyElement","isNaN","Number","currency","amountInput","handleAmountChanged","removeIco","onRemove","form_element","exclude","airtime","handleCurrencyChanged","OptionalTextInput","editing","handleTextChanged","handleEditingChanged","toggleText","createResultNameInput","OptionalTextInput_OptionalTextInput","ValidationFailures","nodeToState","getOriginalAction","AirtimeRouterForm","updateRouter","stateToNode","CurrencyElement_CurrencyElement","handleTransferChanged","handleRemoved","renderAmount","form_ValidationFailures","renderAmounts","handleUpdateResultName","intentOperatorList","has_top_intent","verboseName","operands","has_intent","operatorConfigList","has_any_word","has_all_words","has_phrase","has_only_phrase","has_beginning","has_text","has_number","has_number_between","has_number_lt","has_number_lte","has_number_eq","has_number_gte","has_number_gt","has_date","has_time","has_group","has_phone","has_email","has_state","has_district","has_ward","has_error","has_value","has_pattern","operatorConfigMap","operatorConfig","getOperatorConfig","arg1","arg2","argument","min","district","intent","confidence","categoryNameEdited","pre","validateCase","classifier","exitEdited","exitName","intentValidators","intents","getCategoryName","today","op","days","abs","words","firstWord","slicedToArray","CaseElement","operators","previousProps","filterOperators","_this8","_this9","_this10","getArgumentArray","getCaseProps","_this11","handleIntentChanged","_this12","handleMinChanged","data-draggable","handleMaxChanged","handleIntentMenuOpened","handleIntentMenuClosed","handleConfidenceChanged","handleStateChanged","handleDistrictChanged","relative_date","handleArgumentChanged","CaseElement_objectSpread","kaseError","dnd_icon","choice","menuPlacement","getOperators","handleOperatorChanged","multi_operand","single_operand","renderArguments","categorize_as","handleExitChanged","remove_icon","handleRemoveClicked","DragCursor","CaseList","sortableItem","SortableElement","caseProps","CaseElement_CaseElement","handleRemoveCase","handleUpdateCase","sortableList","SortableContainer","currentCases","shouldCancelStart","hasEmptyCase","createEmptyCase","ensureEmptyCase","removeCase","onCasesUpdated","oldIndex","_ref3","newIndex","_ref4","arrayMove","onSortEnd","handleSortEnd","HTMLElement","dataset","DEFAULT_BODY","initialCases","wait_for_digits","_resolveRoutes","optionalRouter","digits_helpers_objectSpread","hint","digits","wait_for_response","DigitsRouterForm","CaseList_CaseList","handleCasesUpdated","renderEdit","InputToFocus","split_by_expression","expression_helpers_objectSpread","ExpressionRouterForm","handleOperandUpdated","getRoutableFields","split_by_contact_field","field_helpers_objectSpread","FieldRouterForm","handleFieldChanged","LocalizedType","split_by_groups","extractGroups","groupsToCases","GroupsRouterForm","getLocalizedObjects","localizedType","filtered","Case","hasLocalizableCases","original","_nodeSettings$localiz","RouterLocalizationForm","Category","arg","originalCase","orginalArgument","translating_operator_container","translating_operator","translating_from","translating_to","handleUpdateCaseArgument","originalCategory","translating_category","handleUpdateCategoryName","renderCases","renderCategories","menu","wait_for_menu","originalCases","menuToCases","menu_helpers_objectSpread","previousCases","MenuRouterForm","menu_option","digit","handleMenuChanged","renderOption","renderMenu","BUCKET_OPTIONS","bucketOption","buckets","split_by_random","fillOutCategories","bucketChoice","newExit","random_helpers_objectSpread","RandomRouterForm","RandomRouterForm_objectSpread","bucket_name","handleBucketNameChanged","OPTIONS","bucket_select","handleBucketsChanged","bucket_list","renderBucketNames","seconds","response_helpers_objectSpread","TIMEOUT_OPTIONS","DEFAULT_TIMEOUT","TimeoutControl","entries","isChecked","onChanged","timeout_control_container","left_section","getInstructions","handleChecked","drop_down","getSelected","handleTimeoutChanged","ResponseRouterForm","invalidCase","TimeoutControl_TimeoutControl","handleUpdateTimeout","resthookAsset","ResthookRouterForm","handleResthookChanged","FIELD_NUMBER_OPTIONS","DELIMITER_OPTIONS","getDelimiterOption","fieldNumber","delimiter","shouldDelimit","split_by_run_result","split_by_run_result_delimited","nodeType","result_helpers_objectSpread","ResultRouterForm","handleResultChanged","non_delimited","result_select","delimited","field_number","handleFieldNumberChanged","lead_in_sub","result_select_delimited","handleDelimiterChanged","should_delimit","handleShouldDelimitChanged","renderFieldDelimited","renderField","split_by_subflow","enter_flow","flowToAsset","assetToFlow","SubflowRouterForm","Complete","Expired","handleFilter","Methods","wait_for_audio","wait_for_image","image","wait_for_location","wait_for_video","video","wait_helpers_objectSpread","WaitRouterForm","NAME_PLACEHOLDER","VALUE_PLACEHOLDER","HeaderElement","getHeader","remove_ico","handleRemove","getRemoveIco","header_name","handleChangeName","header_value","handleChangeValue","GET_METHOD","GET","METHOD_OPTIONS","POST","PUT","method","postBody","WebhookRouterForm","ensureEmptyHeader","removeHeader","needsHeader","handleCreateHeader","headerElements","HeaderElement_HeaderElement","handleHeaderRemoved","handleHeaderUpdated","body_form","req_body","handlePostBodyUpdate","WebhookRouterForm_objectSpread","handleMethodUpdate","handleUrlUpdate","instructions","CallClassifierComp","call_classifier","hiddenCases","split_by_intent","_action$classifier","routes","route","existingCasePosition","every","_routes$cases$splice","existingCase","ensureRoute","routerResultName","actionResultName","ClassifyRouterForm","showTab","handleClassifierUpdated","typeConfigList","component","aliases","HAS_RESTHOOK","HAS_AIRTIME","HAS_CLASSIFIER","dedupeTypeConfigs","typeConfigMap","alias","originalType","fieldAction","fieldToAsset","channelAction","channelToAsset","languageAction","languageToAsset","nameAction","assetToField","assetToChannel","assetToLanguage","lang","EMPTY_DRAG_STATE","dragStartTime","dragDownPosition","dragActive","dragNodeUUID","dragGroup","dragSelection","containerOffset","currentRevision","simulating","fetchingFlow","debug","segments","liveActivity","activityInterval","UPDATE_EDITOR_STATE","markDirty","lastDirtyAttempt","postingRevision","createDirty","revisionsEndpoint","quiet","_getState","_getState$flowContext","mergeEditorState","saving","newDefinition","getCurrentDefinition","revision","saveRevision","updatedAssets","errorMessage","modalMessage","changes","updateEditorState","createNewRevision","loadFlowDefinition","onLoad","currentTop","guessNodeType","getFlowComponents","mergeAssetMaps","renderNodeMap","fetchFlow","forceSave","_getState4","fetchFlowActivity","triggerActivityUpdate","handleLanguageChange","_getState6","_getState6$editorStat","currentLanguage","isEqual","onUpdateLocalizations","newDef","normalizedTranslations","updateExitDestination","disconnectExit","_source$split","_source$split2","_getState9$flowContex","removeAction","_getState10$flowConte","actionIdx","getActionIndex","moveActionUp","actionAbove","handleTypeConfigChange","updateTypeConfig","resetNodeEditingState","onUpdateAction","_getState13","_getState13$nodeEdito","_getState13$flowConte","updateContactFields","thunks_objectSpread","onAddToNode","showAdvanced","onRemoveNodes","uuids","_getState15$flowConte","updatedDefinition","didNodes","didDef","onUpdateCanvasPositions","positions","_getState16$flowConte","updatedNodePosition","updatedStickyPosition","onConnectionDrag","_getState17$flowConte","_event$sourceId$split","sourceId","_event$sourceId$split2","resultCount","createEmptyNode","updateSticky","onUpdateRouter","newRouterNode","previousAction","_getState19","_getState19$flowConte","_getState19$nodeEdito","previousPosition","_originalNode$ui$posi","originalResultName","actionToSplice","topNode","bottomNode","topActions","bottomActions","_previousNode$ui$posi","onOpenNodeEditor","_getState20","_getState20$editorSta","_settings$localizatio","actionToTranslate","getLocalizations","activityTimeout","_ref6","_ref5","hasLoopSplit","hasWait","toNodeUUID","toNode","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","nodeMap","includeUI","renderNodes","getOrderedNodes","uiNodes","store_helpers_objectSpread","sorted","diff","suggestedResultNameCount","emptyNode","replyType","replyAction","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_ref7","actionType","pointerMap","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","groupUUID","_iterator9","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","groupsToChange","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","resultAction","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","pointers","_i4","_Object$keys4","toAdd","_getState$editorState","activityEndpoint","flowUUID","getActivity","CanvasDraggable","updateDimensions","clientWidth","clientHeight","classes","onTransitionEnd","onAnimated","tagName","nativeEvent","which","onDragStart","pageX","pageY","onDragStop","collides","fudge","getOrderedDraggables","canvas_helpers_objectSpread","getFirstCollision","changed","sortedDraggables","current","other","cascaded","_ret2","_ret","setTop","newTop","CANVAS_PADDING","Canvas","parentOffset","isScrolling","reflowTimeout","lastX","lastY","justSelected","documentElement","draggables","dragUUID","windowHeight","offset","handleWindowResize","updatedPositions","drag","startX","startY","currentX","currentY","drag_selection","mutable","isClickOnCanvas","draggingNew","updateStateWithScroll","clientY","box","collisions","getDraggablesInBox","updatePositions","speed","setInterval","scrollBy","dimensions","newPosition","markReflow","_reflow","newPositions","attempts","collision","_collision","_collision2","cascade","cascadeTop","reflow","onUpdatePositions","onDragging","doReflow","windowY","otherState","viewportHeight","Canvas_objectSpread","clearInterval","scrollCanvas","startPosition","xd","yd","lowestNode","delta","addPosition","DRAG_THRESHOLD","getSelectedPositions","canvas_container","canvas","onMouseMove","handleMouseMove","handleMouseUpCapture","CanvasDraggable_CanvasDraggable","handleUpdateDimensions","handleDragStart","handleDragStop","renderSelectionBox","PureComponent","Counter","handleScrollIntoView","keepVisible","scrollTo","behavior","handleMouseEvent","onMouseEnter","onMouseLeave","toString","counter","containerStyle","handleMouseEnter","handleMouseLeave","countStyle","TitleBar","confirmationTimeout","confirmingRemoval","handleConfirmRemoval","showMove","up_button","onMoveUp","showRemoval","remove_confirm","titletext","onRemoval","getConfirmationEl","moveArrow","getMoveArrow","getRemove","titlebar","normal","Action_objectSpread","ActionWrapper","attributes","getAttribute","missingLocalization","notLocalizable","has_router","not_localizable","getClasses","actionToInject","getAction","titleBarClass","actionClass","first","events","handleActionClicked","overlay","TitleBar_TitleBar","handleRemoval","handleMoveUp","render","ConnectedActionWrapper","_ref$editorState","bindActionCreators","DragHelper","drag_helper","arrow","tail","head","bold","getExitActivityKey","hexToRgb","hex","Loading","size","units","borderRadius","square","margin","animationDelay","background","ExitComp","hideDragHelper","pendingMessageFetch","confirmDelete","recentMessages","fetchingRecentMessages","showDragHelper","plumberMakeSource","getSourceId","handleDisconnect","plumberUpdateClass","plumberRemove","plumberConnectExit","recentsEndpoint","cancel","recents","Counter_Counter","segmentCount","handleShowRecentMessages","handleHideRecentMessages","getRecentMessages","delim","hasRecents","recentStyles","recentMessage","toLocaleString","Loading_Loading","_this$getName","nameStyle","connected","dragNodeClasses","confirm","onDisconnect","dragging","exitClasses","getSegmentCount","DragHelper_DragHelper","ConnectedExit","Node_objectSpread","NodeComp","firstAction","clicking","handleShouldCancelClick","querySelector","plumberMakeTarget","ghostListener","getGhostListener","plumberRecalculate","getSelection","createRange","selectNodeContents","removeAllRanges","addRange","execCommand","textContent","Exit","onlyNode","kases","startingNode","showUUIDs","handleUUIDClicked","actionList","firstRef","actionConfig","ActionDiv","Action","anyAction","react_flip_move_es","enterAnimation","leaveAnimation","easing","addActions","save_result","save_as","hasMissing","add","handleAddToNode","getExits","plumb-drag","flow_start","isStartNodeVisible","isSelected","immutable","renderDebug","node_container","eleRef","flow_start_message","activeCount","onActivityClicked","cropped","exit_table","_ref2$flowContext","_ref2$flowContext$ass","Modal","customStyles","marginRight","padding","outline","react_modal_lib_default","ariaHideApp","isOpen","show","onAfterOpen","onModalOpen","onRequestClose","shouldCloseOnOverlayClick","contentLabel","Direction","NodeEditor","canceled","dragPoint","LocalizationForm","localizationProps","Modal_Modal","NodeEditor_objectSpread","Form","formProps","handleAddAsset","_ref$flowContext","_ref$nodeEditor","mins","getMinutes","minStr","getHours","isMessage","isMT","MAP_THUMB","DrawerType","getStyleForDirection","direction","MO","renderError","renderInfo","renderMessage","attaches","alt","LogEvent","detailsVisible","showDetails","groups_added","groups_removed","groupText","renderClickable","request","http_logs","renderHTTPRequest","element","step_uuid","extra","toFixed","entities","entity","renderClassification","MT","renderGroupChange","renderEmail","base_language","renderWebhook","actual_amount","recipient","urn","renderLogEvent","IMAGE_A","IMAGE_B","IMAGE_C","VIDEO_A","VIDEO_A_THUMB","Simulator","currentFlow","inputBox","drawerEle","urns","keypadEntry","drawerHeight","waitingForHint","drawerOpen","attachmentOptionsVisible","sprinting","bottomRef","inputBoxRef","session","activeFlow","lastExit","paths","runs","run","finalStep","step","node_uuid","pathCount","flow_uuid","simulatedMessages","messageFound","fromUUID","toUUID","created_on","unshift","newState","update","scrollToBottom","updateEvents","runContext","wasJustActive","toISOString","newlyRecentMessages","newEvents","drawerType","videos","images","hasQuickReplies","updateActivity","handleFocusUpdate","trigger","environment","date_format","time_format","timezone","params","triggered_on","simulateStart","JSON","stringify","updateRunContext","resume","resumed_on","simulateResume","startFlow","delay","newVisible","sendAttachment","_this13","_this14","multiple","_this15","handleKeyPress","getKeyRow","getLocationDrawer","getAudioDrawer","getImageDrawer","getVideoDrawer","getQuickRepliesDrawer","getKeypadDrawer","zIndex","paddingBottom","handleDrawerRef","getDrawerContents","_this16","showAttachmentDrawer","_this17","handleHideAttachments","getAttachmentButton","_this18","handleHideAttachmentDrawer","_this19","LogEvent_LogEvent","String","simHidden","tabHidden","messagesStyle","onToggle","float","clear","getAttachmentOptions","getDrawer","onReset","STICKY_TITLE","STICKY_BODY","COLOR_OPTIONS","Sticky","debounceTextChanges","showConfirmation","DEFUALT_TITLE","DEFUALT_BODY","_snapToGrid","finalPos","Sticky_objectSpread","onUpdateText","select","handleSelectForValue","handleChangeColor","titleClasses","containerClasses","stickyClasses","colorChooser","getColorChooser","handleClickRemove","react_autosize_textarea_lib_default","handleChangeTitle","onFocusCapture","handleTitleFocused","handleChangeBody","handleBodyFocused","importDefaults","jsPlumb","TARGET_DEFAULTS","anchor","shape","faces","cssClass","hoverClass","dropOptions","tolerance","isTarget","dragAllowedWhenFull","deleteEndpointsOnEmpty","SOURCE_DEFAULTS","maxConnections","isSource","getAnchor","sourceEle","targetEle","defaultConnector","stub","midpoint","alwaysRespectStubs","gap","cornerRadius","Plumber","pendingConnections","pendingConnectionTimeout","animateInterval","DragOptions","cursor","DropOptions","Endpoint","EndpointStyle","strokeStyle","PaintStyle","ConnectionsDetachable","Connector","ConnectionOverlays","Container","setSourceEnabled","makeSource","makeTarget","connectExit","setDragSelection","clearDragSelection","removeFromDragSelection","cancelDurationRepaint","repaintForDuration","repaintFor","handlePendingConnections","checkForPendingConnections","repaint","recalculate","recalculateUUIDs","updateClass","onresize","repaintEverything","enabled","connection","addClass","removeClass","addToDragSelection","newDuration","cycles","millis","targets","batch","slot","totalSlots","anchors","getElementById","delete","fireEvent","connector","detachable","onEvent","recalculateOffsets","unmakeSource","deleteConnectionsForElement","connections","getConnections","setAnchor","revalidate","Debug","nodeContainerUUID","fe","targetId","beforeConnectionDrag","onConnectorDrop","onBeforeConnectorDrop","suspendedElementId","isDraggingBack","offsetLeft","offsetTop","dispatchEvent","Event","Node","stickyMap","sticky_Sticky","ghostRef","simulator_Simulator","nodeEditorSettings","nodeeditor_NodeEditor","plumberRepaintForDuration","getNodes","getEmptyFlow","getSimulator","getDragNode","getStickies","onDoubleClick","Canvas_Canvas","getNodeEditor","LanguageSelector","handleLanguageSort","separator","language_link","handleLanguageChanged","PopTab","poppedEle","offsetWidth","onShow","onHide","pop_wrapper","tab_wrapper","handleTabClick","handlePoppedRef","popped","handleClose","header_label","RevisionExplorer","onRevisionClicked","onRevertClicked","handleUpdateRevisions","mask","PopTab_PopTab","handleTabClicked","explorer_wrapper","explorer","selectedClass","dateFormat","utc","user","middlewares","thunk","PageVisibility","default","hotStore","createStore","rootReducer","composeWithDevTools","applyMiddleware","FlowEditor","_this$context$config","forceSaveOnLoad","dataStr","downloadAnchorNode","setAttribute","appendChild","downloadJSON","alert_modal","alert_body","Fixy_Fixy","showDownload","download_button","handleDownloadClicked","handleVisibilityChanged","getFooter","getAlertModal","languageselector_LanguageSelector","getSavingIndicator","flow_Flow","RevisionExplorer_RevisionExplorer","ConnectedFlowEditor","FlowEditorContainer","src_config","components_objectSpread","react_redux_es","Boolean","showFlowEditor","ReactDOM","src_components","navigator","serviceWorker","ready","registration","unregister","nondragged","drag_group","form_group","empty","translate_to","headers_title","quick_reply_summary","existing_quick_replies","existing_quick_reply","add_quick_replies","breaks","advanced_title","alert","translating_categories","translating_operator_title","translating_operator_instructions","more"],"mappings":"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","file":"static/js/main.6e7f564a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"unicode_char\":\"UnicodeList_unicode_char__3oGkq\",\"unicode_list\":\"UnicodeList_unicode_list__36pET\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scheme_selection\":\"AddURNForm_scheme_selection__3qqeb\",\"path\":\"AddURNForm_path__vTuFJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"chosen\":\"MultiChoice_chosen__3fQUn\",\"item\":\"MultiChoice_item__2hkE_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"text\":\"SayMsg_text__2WoYr\",\"recording\":\"SayMsg_recording__3JHw8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"code\":\"TransferAirtime_code__3WV9i\",\"amount\":\"TransferAirtime_amount__3mMNG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optional_text_input\":\"OptionalTextInput_optional_text_input__N6zb8\",\"toggle_link\":\"OptionalTextInput_toggle_link__3-B4a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"errors\":\"ValidationFailures_errors__3qGX8\",\"error\":\"ValidationFailures_error__2Q3Gg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"case_list\":\"CaseList_case_list__8CbuZ\",\"kase\":\"CaseList_kase__1FwXZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"lead_in\":\"FieldRouterForm_lead_in__ShYLI\",\"field_select\":\"FieldRouterForm_field_select__n0Csy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"draggable\":\"CanvasDraggable_draggable__cqsGq\",\"selected\":\"CanvasDraggable_selected__2GgF7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"sim_container\":\"Simulator_sim_container__H7rj0\",\"simulator\":\"Simulator_simulator__2tU1d\",\"sim_hidden\":\"Simulator_sim_hidden__1ggwF\",\"screen\":\"Simulator_screen__2Qp5p\",\"header\":\"Simulator_header__2r6Gy\",\"close\":\"Simulator_close__1RMuB\",\"time\":\"Simulator_time__3FKl6\",\"battery\":\"Simulator_battery__3Wa1Y\",\"wifi\":\"Simulator_wifi__2E-6D\",\"footer\":\"Simulator_footer__1_obl\",\"reset\":\"Simulator_reset__1A78l\",\"inactive\":\"Simulator_inactive__3bLl7\",\"active\":\"Simulator_active__1MwaM\",\"messages\":\"Simulator_messages__3Oalm\",\"controls\":\"Simulator_controls__1TlMu\",\"show_attachments_button\":\"Simulator_show_attachments_button__3LFcV\",\"attachment_buttons\":\"Simulator_attachment_buttons__hDIT5\",\"visible\":\"Simulator_visible__3BBvQ\",\"drawer\":\"Simulator_drawer__340zx\",\"drawer_visible\":\"Simulator_drawer_visible__1jBzI\",\"forced\":\"Simulator_forced__19aUl\",\"drawer_header\":\"Simulator_drawer_header__nlorO\",\"map_thumb\":\"Simulator_map_thumb__1zB9o\",\"audio_picker\":\"Simulator_audio_picker__V2K8X\",\"audio_icon\":\"Simulator_audio_icon__Ve23Y\",\"audio_message\":\"Simulator_audio_message___4Yvw\",\"keypad\":\"Simulator_keypad__29cCi\",\"keypad_entry\":\"Simulator_keypad_entry__2S4e_\",\"keys\":\"Simulator_keys__W8GcS\",\"row\":\"Simulator_row__mtRhr\",\"key\":\"Simulator_key__Wv2KS\",\"drawer_items\":\"Simulator_drawer_items__PYHpL\",\"drawer_item\":\"Simulator_drawer_item__yZRIg\",\"simulator_tab\":\"Simulator_simulator_tab__uRMHB\",\"tab_hidden\":\"Simulator_tab_hidden__1BDkU\",\"simulator_tab_icon\":\"Simulator_simulator_tab_icon__3cmxe\",\"simulator_tab_text\":\"Simulator_simulator_tab_text__1aI0Q\",\"detail_webhook_called\":\"Simulator_detail_webhook_called__1A8Iu\",\"quick_replies\":\"Simulator_quick_replies__3wan9\",\"quick_reply\":\"Simulator_quick_reply__sSRfK\"};","module.exports = __webpack_public_path__ + \"static/media/map.5e547148.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"type_list\":\"TypeList_type_list__3OATW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"RemoveGroupsForm_checkbox__3W5g6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"value\":\"UpdateContactForm_value__19Fyz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result_name\":\"AirtimeRouterForm_result_name__IPVnQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"lead_in\":\"DigitsRouterForm_lead_in__1_8u2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result_name\":\"ResthookRouterForm_result_name__dcAsY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"result_name\":\"WaitRouterForm_result_name__1QlYs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"link\":\"ClassifyRouterForm_link__20QgF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"loading\":\"Loading_loading__3-t_e\",\"pulse\":\"Loading_pulse__apphI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"empty_flow\":\"Flow_empty_flow__roKNh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"evt\":\"LogEvent_evt__1J8Uq\",\"fadein\":\"LogEvent_fadein__kgfF4\",\"msg_text\":\"LogEvent_msg_text__1HqoJ\",\"ivr_msg\":\"LogEvent_ivr_msg__2pGYZ\",\"send_msg\":\"LogEvent_send_msg__195Tn\",\"msg_received\":\"LogEvent_msg_received__gf2kP\",\"image_attachment\":\"LogEvent_image_attachment__2Ku4T\",\"error\":\"LogEvent_error__2oBQ9\",\"info\":\"LogEvent_info__12nsu\",\"email\":\"LogEvent_email__1XyUb\",\"webhook\":\"LogEvent_webhook__3jEK2\",\"video_attachment\":\"LogEvent_video_attachment__2xn3C\",\"audio_attachment\":\"LogEvent_audio_attachment__2iBWG\",\"media_player\":\"LogEvent_media_player__22CtH\",\"audio_text\":\"LogEvent_audio_text__3j-uW\",\"email_details\":\"LogEvent_email_details__1f2TW\",\"to\":\"LogEvent_to__H-JTa\",\"subject\":\"LogEvent_subject__mN7Lz\",\"body\":\"LogEvent_body__2hSdi\",\"webhook_details\":\"LogEvent_webhook_details__3mtJW\",\"response\":\"LogEvent_response__2oEy0\",\"event_viewer\":\"LogEvent_event_viewer__2D4uw\",\"has_detail\":\"LogEvent_has_detail__ZRVpP\",\"classification\":\"LogEvent_classification__2arCX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"clickable\":\"Dialog_clickable__1gSoh\",\"dialog\":\"Dialog_dialog__16A3R\",\"header\":\"Dialog_header__YD-Nm\",\"header_overlay\":\"Dialog_header_overlay__1Of6F\",\"header_icon\":\"Dialog_header_icon__2z4U8\",\"title\":\"Dialog_title__1IRe1\",\"barber\":\"Dialog_barber__3x6cp\",\"iconed\":\"Dialog_iconed__2eQKD\",\"title_container\":\"Dialog_title_container__2HiUa\",\"content\":\"Dialog_content__1YGhY\",\"footer\":\"Dialog_footer__3UylY\",\"gutter\":\"Dialog_gutter__1Xxy-\",\"buttons\":\"Dialog_buttons__1T0cB\",\"left_buttons\":\"Dialog_left_buttons__31hp_\",\"right_buttons\":\"Dialog_right_buttons__3NHBO\",\"tabs\":\"Dialog_tabs__2gLgU\",\"tab\":\"Dialog_tab__1x47g\",\"tab_icon\":\"Dialog_tab_icon__28etF\",\"active\":\"Dialog_active__3yOgq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"option_list\":\"TextInputElement_option_list__18zXF\",\"option_summary\":\"TextInputElement_option_summary__qaT6A\",\"option_signature\":\"TextInputElement_option_signature__3c1zs\",\"option\":\"TextInputElement_option__5N_r_\",\"selected\":\"TextInputElement_selected__2bCI1\",\"first_option\":\"TextInputElement_first_option__2owME\",\"fn_marker\":\"TextInputElement_fn_marker__38I-n\",\"function_help\":\"TextInputElement_function_help__2jwVQ\",\"completion_container\":\"TextInputElement_completion_container__3c00R\",\"options_wrapper\":\"TextInputElement_options_wrapper__2knDu\",\"fn_container\":\"TextInputElement_fn_container__3tmtw\",\"option_name\":\"TextInputElement_option_name__2G-0k\",\"option_examples\":\"TextInputElement_option_examples__2l6sa\",\"example_header\":\"TextInputElement_example_header__3a5qK\",\"example\":\"TextInputElement_example__3MAGO\",\"fn_signature\":\"TextInputElement_fn_signature__efYOL\",\"wrapper\":\"TextInputElement_wrapper__1q0lN\",\"help\":\"TextInputElement_help__1dGMQ\",\"hidden\":\"TextInputElement_hidden__3Xul8\",\"textinput\":\"TextInputElement_textinput__2eOxW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"exit\":\"Exit_exit__36tB1\",\"translating\":\"Exit_translating__mA2Hf\",\"unnamed_exit\":\"Exit_unnamed_exit__1H6-H\",\"endpoint\":\"Exit_endpoint__1D08c\",\"missing_localization\":\"Exit_missing_localization__h2WGJ\",\"name\":\"Exit_name__22WdX\",\"activity\":\"Exit_activity__11sTW\",\"count\":\"Exit_count__1tNM8\",\"confirm_delete\":\"Exit_confirm_delete__26Wo-\",\"confirm_x\":\"Exit_confirm_x__1AODA\",\"recent_messages\":\"Exit_recent_messages__1wUzf\",\"no_recents\":\"Exit_no_recents__R97kK\",\"title\":\"Exit_title__3Ugsu\",\"loading\":\"Exit_loading__37ssZ\",\"message\":\"Exit_message__Q_zU9\",\"text\":\"Exit_text__1-x4W\",\"sent\":\"Exit_sent__1DkCx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"yellow\":\"Sticky_yellow__39XW4\",\"color_option\":\"Sticky_color_option__32vU5\",\"sticky\":\"Sticky_sticky__3QUKK\",\"blue\":\"Sticky_blue__3s2JL\",\"purple\":\"Sticky_purple__278EO\",\"gray\":\"Sticky_gray__39re9\",\"green\":\"Sticky_green__3BQ0M\",\"color_chooser_container\":\"Sticky_color_chooser_container__2lT4F\",\"color_chooser\":\"Sticky_color_chooser__3Jbqj\",\"sticky_container\":\"Sticky_sticky_container__CAgg9\",\"selected\":\"Sticky_selected__1Ra33\",\"removal\":\"Sticky_removal__2Ktvw\",\"title_wrapper\":\"Sticky_title_wrapper__2QWs9\",\"remove_button\":\"Sticky_remove_button__2jDO8\",\"title\":\"Sticky_title__1kkPN\",\"confirmation\":\"Sticky_confirmation__wEJ6P\",\"body_wrapper\":\"Sticky_body_wrapper__3vHL0\",\"body\":\"Sticky_body__18mNO\"};","import { Methods } from 'components/flow/routers/webhook/helpers';\nimport { FlowTypes, Operators, Types } from 'config/interfaces';\n\nexport interface Languages {\n  [iso: string]: string;\n}\n\nexport interface Language {\n  name: string;\n  iso: string;\n}\n\nexport interface Environment {\n  date_format: string;\n  time_format: string;\n  timezone: string;\n  languages: string[];\n}\n\nexport interface Endpoints {\n  attachments: string;\n  resthooks: string;\n  recents: string;\n  fields: string;\n  globals: string;\n  groups: string;\n  recipients: string;\n  flows: string;\n  revisions: string;\n  activity: string;\n  labels: string;\n  channels: string;\n  classifiers: string;\n  environment: string;\n  languages: string;\n  templates: string;\n  completion: string;\n  functions: string;\n  simulateStart: string;\n  simulateResume: string;\n  editor: string;\n}\n\nexport interface FlowEditorConfig {\n  localStorage: boolean;\n  endpoints: Endpoints;\n  flow: string;\n  flowType: FlowTypes;\n  showTemplates?: boolean;\n  showDownload?: boolean;\n  mutable?: boolean;\n  debug?: boolean;\n  path?: string;\n  headers?: any;\n  onLoad?: () => void;\n  onActivityClicked?: (uuid: string) => void;\n\n  // whether to force a save on load\n  forceSaveOnLoad?: boolean;\n\n  filters?: string[];\n}\n\nexport interface LocalizationMap {\n  [lang: string]: {\n    [uuid: string]: any;\n  };\n}\n\nexport interface FlowDefinition {\n  localization: LocalizationMap;\n  language: string;\n  name: string;\n  nodes: FlowNode[];\n  uuid: string;\n  revision: number;\n  _ui: UIMetaData;\n}\n\nexport interface FlowNode {\n  uuid: string;\n  actions: Action[];\n  exits: Exit[];\n  router?: Router;\n}\n\nexport interface Exit {\n  uuid: string;\n  destination_uuid?: string;\n}\n\nexport enum RouterTypes {\n  switch = 'switch',\n  random = 'random'\n}\n\nexport interface Router {\n  type: RouterTypes;\n  result_name?: string;\n  categories: Category[];\n  wait?: Wait;\n}\n\nexport interface Channel {\n  uuid: string;\n  name: string;\n}\n\nexport interface Case {\n  uuid: string;\n  type: Operators;\n  category_uuid: string;\n  arguments?: string[];\n  omit_operand?: boolean;\n}\n\nexport interface Category {\n  uuid: string;\n  name: string;\n  exit_uuid: string;\n}\n\nexport interface TemplateTranslation {\n  language: string;\n  status: string;\n  content: string;\n}\n\nexport interface Template {\n  created_on: Date;\n  modified_on: Date;\n  translations: TemplateTranslation[];\n}\n\nexport interface SwitchRouter extends Router {\n  cases: Case[];\n  operand: string;\n  default_category_uuid: string;\n}\n\nexport enum WaitTypes {\n  msg = 'msg'\n}\n\nexport enum HintTypes {\n  digits = 'digits',\n  audio = 'audio',\n  image = 'image',\n  video = 'video',\n  location = 'location'\n}\n\nexport interface Hint {\n  type: HintTypes;\n  count?: number;\n}\n\nexport interface Timeout {\n  category_uuid: string;\n  seconds: number;\n}\n\nexport interface Wait {\n  type: WaitTypes;\n  timeout?: Timeout;\n  hint?: Hint;\n}\n\nexport interface Group {\n  uuid: string;\n  name: string;\n}\n\nexport interface Contact {\n  uuid: string;\n  name: string;\n}\n\nexport interface ChangeGroups extends Action {\n  groups: Group[];\n}\n\nexport interface RemoveFromGroups extends ChangeGroups {\n  all_groups: boolean;\n}\n\nexport interface Field {\n  key: string;\n  name: string;\n}\n\nexport interface Label {\n  uuid: string;\n  name: string;\n}\n\nexport interface Flow {\n  uuid: string;\n  name: string;\n}\n\nexport interface Action {\n  type: Types;\n  uuid: string;\n}\n\nexport interface SetContactField extends Action {\n  field: Field;\n  value: string;\n}\n\nexport interface SetContactName extends Action {\n  type: Types.set_contact_name;\n  name: string;\n}\n\nexport interface SetContactLanguage extends Action {\n  type: Types.set_contact_language;\n  language: string;\n}\n\nexport interface SetContactChannel extends Action {\n  type: Types.set_contact_channel;\n  channel: Channel;\n}\n\nexport type SetContactProperty = SetContactName | SetContactLanguage | SetContactChannel;\n\nexport type SetContactAttribute = SetContactField | SetContactProperty;\n\n// tslint:disable-next-line:no-empty-interface\nexport interface Missing extends Action {}\n\nexport interface RecipientsAction extends Action {\n  contacts: Contact[];\n  groups: Group[];\n  legacy_vars?: string[];\n}\n\nexport interface TemplateTranslation {\n  channel: Channel;\n  content: string;\n  language: string;\n  status: string;\n  variable_count: number;\n}\n\nexport interface TemplateOptions {\n  translations: TemplateTranslation[];\n}\n\nexport interface MsgTemplate {\n  name: string;\n  uuid: string;\n}\n\nexport interface MsgTemplating {\n  template: MsgTemplate;\n  variables: string[];\n}\n\nexport interface SendMsg extends Action {\n  text: string;\n  all_urns?: boolean;\n  quick_replies?: string[];\n  attachments?: string[];\n  templating?: MsgTemplating;\n}\n\nexport interface SayMsg extends Action {\n  text: string;\n  audio_url?: string;\n}\n\nexport interface PlayAudio extends Action {\n  audio_url: string;\n}\n\nexport interface BroadcastMsg extends RecipientsAction {\n  text: string;\n}\n\nexport interface AddLabels extends Action {\n  labels: Label[];\n}\n\nexport interface AddURN extends Action {\n  scheme: string;\n  path: string;\n}\n\nexport interface SetPreferredChannel extends Action {\n  language: string;\n}\n\nexport interface SendEmail extends Action {\n  subject: string;\n  body: string;\n  addresses: string[];\n}\n\nexport interface SetRunResult extends Action {\n  name: string;\n  value: string;\n  category?: string;\n}\n\nexport interface Headers {\n  [name: string]: string;\n}\n\nexport interface Classifier {\n  uuid: string;\n  name: string;\n}\n\nexport interface TransferAirtime extends Action {\n  amounts: { [name: string]: number };\n  result_name: string;\n}\n\nexport interface CallClassifier extends Action {\n  classifier: Classifier;\n  input: string;\n  result_name: string;\n}\n\nexport interface CallResthook extends Action {\n  resthook: string;\n  result_name: string;\n}\n\nexport interface CallWebhook extends Action {\n  url: string;\n  method: Methods;\n  result_name: string;\n  body?: string;\n  headers?: Headers;\n}\n\nexport interface StartFlow extends Action {\n  flow: Flow;\n}\n\nexport interface StartSession extends RecipientsAction {\n  flow: Flow;\n  create_contact?: boolean;\n  contact_query?: string;\n}\n\nexport interface UIMetaData {\n  nodes: { [key: string]: UINode };\n  languages: Array<{ [iso: string]: string }>;\n}\n\nexport interface FlowPosition {\n  left: number;\n  top: number;\n  right?: number;\n  bottom?: number;\n}\n\nexport interface Dimensions {\n  width: number;\n  height: number;\n}\n\nexport interface UIConfig {\n  [key: string]: any;\n}\n\nexport interface UINode {\n  position: FlowPosition;\n  // ui type, used for split by expression, contact field, etc\n  type?: Types;\n  config?: UIConfig;\n}\n\nexport interface StickyNote {\n  position: FlowPosition;\n  title: string;\n  body: string;\n  color?: string;\n}\n\nexport interface UIMetaData {\n  nodes: { [key: string]: UINode };\n  stickies: { [key: string]: StickyNote };\n}\n\nexport type AnyAction =\n  | Action\n  | ChangeGroups\n  | SetContactField\n  | SetContactName\n  | SetRunResult\n  | SendMsg\n  | SetPreferredChannel\n  | SendEmail\n  | CallClassifier\n  | CallWebhook\n  | StartFlow\n  | StartSession;\n\nexport enum ContactProperties {\n  UUID = 'uuid',\n  'Created By' = 'created_by',\n  'Modified By' = 'modified_by',\n  Org = 'org',\n  Name = 'name',\n  Language = 'language',\n  Timezone = 'timezone',\n  Channel = 'channel',\n  Email = 'email',\n  Mailto = 'mailto',\n  Phone = 'phone',\n  Groups = 'groups'\n}\n\nexport enum ValueType {\n  text = 'text',\n  numeric = 'numeric',\n  datetime = 'datetime',\n  state = 'state',\n  district = 'district',\n  ward = 'ward'\n}\n\nexport interface CreateOptions {\n  promptTextCreator?: any;\n  newOptionCreator?: any;\n  isValidNewOption?: any;\n  isOptionUnique?: any;\n  createNewOption?: any;\n  createPrompt?: string;\n}\n\nexport enum StartFlowArgs {\n  Complete = 'C',\n  Expired = 'E'\n}\n\nexport enum StartFlowExitNames {\n  Complete = 'Complete',\n  Expired = 'Expired'\n}\n\nexport enum WebhookExitNames {\n  Success = 'Success',\n  Failure = 'Failure'\n}\n\nexport enum TransferAirtimeExitNames {\n  Success = 'Success',\n  Failure = 'Failed'\n}\n","import { Action, Case, Category, Language } from 'flowTypes';\nimport { Asset } from 'store/flowContext';\n\nexport class LocalizedObject {\n  public localizedKeys: { [key: string]: boolean } = {};\n\n  private localizedObject: Action | Category | Case | any;\n  private localized: boolean = false;\n  private iso: string;\n  private name: string;\n  private language: Language;\n\n  constructor(object: Action | Category | Case, { id, name }: Asset) {\n    this.localizedObject = object;\n    this.iso = id;\n    this.language = { iso: this.iso, name };\n  }\n\n  public getLanguage(): Language {\n    if (!this.language) {\n      if (this.iso) {\n        this.language = { iso: this.iso, name: this.name };\n      }\n    }\n\n    return this.language;\n  }\n\n  public hasTranslation(key: string): boolean {\n    return key in this.localizedKeys;\n  }\n\n  // We use explicit any here to make this generic across all actions,\n  // note this means we'll attempt to set any property in our localization\n  // dictionary regardless of the object type\n  public addTranslation(key: string, value: any): void {\n    // localization shouldn't side-affect the original object\n    if (!this.localized) {\n      this.localizedObject = Object.assign({}, this.localizedObject);\n      this.localized = true;\n    }\n\n    if (Array.isArray(this.localizedObject[key])) {\n      this.localizedObject[key] = value;\n    } else {\n      if (value.length === 1) {\n        this.localizedObject[key] = value[0];\n      }\n    }\n\n    this.localizedKeys[key] = true;\n  }\n\n  public isLocalized(): boolean {\n    return this.localized;\n  }\n\n  public getObject(): Action | Case | Category {\n    return this.localizedObject;\n  }\n}\n\nexport default class Localization {\n  public static translate(\n    object: Action | Category | Case,\n    language: Asset,\n    translations?: { [uuid: string]: any }\n  ): LocalizedObject {\n    const localized: LocalizedObject = new LocalizedObject(object, language);\n\n    if (translations) {\n      if (object.uuid in translations) {\n        const values = translations[object.uuid];\n        // We don't want to side affect our action\n        Object.keys(values).forEach(key => {\n          return localized.addTranslation(key, values[key]);\n        });\n      }\n    }\n\n    return localized;\n  }\n}\n","import {\n  Action,\n  Case,\n  Category,\n  ContactProperties,\n  FlowPosition,\n  LocalizationMap\n} from 'flowTypes';\nimport { Query } from 'immutability-helper';\nimport * as React from 'react';\nimport Localization, { LocalizedObject } from 'services/Localization';\nimport { Asset } from 'store/flowContext';\nimport { FormEntry } from 'store/nodeEditor';\nimport { v4 as generateUUID } from 'uuid';\nimport variables from 'variables.module.scss';\n\nexport const V4_UUID = /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i;\nconst LABEL_CHARS = /^[a-zA-Z0-9-][a-zA-Z0-9- ]*$/;\nconst MAX_LABEL_LENGTH = 36;\nconst SNAKED_CHARS = /\\s+(?=\\S)/g;\n\nexport const MAX_REFLOW_ATTEMPTS = 100;\nexport const ACTIVITY_INTERVAL = 5000;\nexport const COLLISION_FUDGE = 5;\nexport const GRID_SIZE: number = parseInt(variables.grid_size, 10) || 20;\nexport const NODE_SPACING: number = parseInt(variables.node_spacing, 10) || 10;\nexport const NODE_PADDING: number = parseInt(variables.node_padding, 10) || 10;\nexport const QUIET_NOTE = 2000;\nexport const CONFIRMATION_TIME = 2000;\n\nexport interface BoolMap {\n  [key: string]: boolean;\n}\n\ninterface Bounds {\n  left: number;\n  top: number;\n  right: number;\n  bottom: number;\n}\n\nexport type LabelIdCb = (label?: string, labelKey?: string, valueKey?: string) => string;\n\n/**\n * Adjusts the left and top offsets to a grid\n * @param left horizontal offset\n * @param top vertical offset\n */\nexport const snapToGrid = (left: number, top: number): { left: number; top: number } => {\n  let leftAdjust = left % GRID_SIZE;\n  let topAdjust = top % GRID_SIZE;\n\n  if (leftAdjust > GRID_SIZE / 3) {\n    leftAdjust = GRID_SIZE - leftAdjust;\n  } else {\n    leftAdjust = leftAdjust * -1;\n  }\n\n  if (topAdjust > GRID_SIZE / 3) {\n    topAdjust = GRID_SIZE - topAdjust;\n  } else {\n    topAdjust = topAdjust * -1;\n  }\n\n  return {\n    left: Math.max(left + leftAdjust, 0),\n    top: Math.max(top + topAdjust, 0)\n  };\n};\n\n/**\n * Adjusts the position offsets to a grid\n */\nexport const snapPositionToGrid = (position: FlowPosition): FlowPosition => {\n  let leftAdjust = position.left % GRID_SIZE;\n  let topAdjust = position.top % GRID_SIZE;\n\n  if (leftAdjust > GRID_SIZE / 3) {\n    leftAdjust = GRID_SIZE - leftAdjust;\n  } else {\n    leftAdjust = leftAdjust * -1;\n  }\n\n  if (topAdjust > GRID_SIZE / 3) {\n    topAdjust = GRID_SIZE - topAdjust;\n  } else {\n    topAdjust = topAdjust * -1;\n  }\n\n  const left = Math.max(position.left + leftAdjust, 0);\n  const top = Math.max(position.top + topAdjust, 0);\n  const right = left + position.right - position.left;\n  const bottom = top + position.bottom - position.top;\n\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n};\n\n/**\n * Turns a string array into a bool map for constant lookup\n * @param {string[]} array - an array of strings, e.g. contact fields\n * @returns {object} A map of each string\n */\nexport const toBoolMap = (array: string[]): BoolMap =>\n  array.reduce(\n    (map: BoolMap, item: string) => ({\n      ...map,\n      [item]: true\n    }),\n    {}\n  );\n\n/**\n * Inserts commas into numbers where appropriate for better readability\n * @param {number} value - A number, e.g. 10000\n * @returns {string} A comma-separated string, e.g. 10,000\n */\nexport const addCommas = (value: number): string =>\n  value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\n/**\n * Replaces spaces with underscores\n * @param {string} value - A space-separated string to be snaked, e.g. a raw flow field name ('my flow field')\n * @returns {string} A snaked string, e.g. 'my_flow_field'\n */\nexport const snakify = (value: string): string =>\n  value\n    .toLowerCase()\n    .trim()\n    .replace(SNAKED_CHARS, '_');\n/**\n * Returns true if a given UUID matches v4 format\n * @param {string} uuid - A version 4 UUID (no braces, uppercase OK)\n * @returns {boolean}\n */\nexport const validUUID = (uuid: string): boolean => V4_UUID.test(uuid);\n\n/**\n * Returns a given string in title case, e.g. 'full name' becomes 'Full Name'\n * @param {string} str - string to be title-cased\n * @returns {string} Title-cased string\n */\nexport const titleCase = (str: string): string =>\n  str.replace(/\\b\\w+/g, s => s.charAt(0).toUpperCase() + s.substr(1).toLowerCase());\n\nexport const getSelectClassForEntry = (entry: FormEntry): string => {\n  if (entry && entry.validationFailures && entry.validationFailures.length > 0) {\n    return 'select-invalid';\n  }\n  return '';\n};\n\nexport const getSelectClass = (errors: number): string => {\n  if (errors === 0) {\n    return 'react-select select-base';\n  }\n  // We use a global selector here for react-select\n  return 'react-select select-base select-invalid';\n};\n\nexport const reorderList = (list: any[], startIndex: number, endIndex: number): any[] => {\n  const [removed] = list.splice(startIndex, 1);\n\n  list.splice(endIndex, 0, removed);\n\n  return list;\n};\n\n/**\n * Compares basic objects (no methods and DOM nodes; property order important)\n * @param {object} objA - basic object\n * @param {object} objB - basic object\n * @returns {boolean}\n */\nexport const jsonEqual = (objA: {}, objB: {}): boolean =>\n  JSON.stringify(objA) === JSON.stringify(objB);\n\n/**\n * Checks whether any of a list of error strings contain one or more queries.\n * Used to determine whether a particular error has been encountered.\n */\nexport const hasErrorType = (errors: string[], exps: RegExp[]): boolean => {\n  if (!errors.length) {\n    return false;\n  }\n  for (const error of errors) {\n    for (const exp of exps) {\n      if (error.match(exp)) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const getLocalizedObject = (localizations: LocalizedObject[]) => {\n  if (localizations && localizations.length) {\n    return localizations[0];\n  }\n};\n\nexport interface ClickHandler {\n  // onClick: (event: React.MouseEvent<HTMLDivElement>) => void;\n  onMouseDown: (event: React.MouseEvent<HTMLDivElement>) => void;\n  onMouseUp: (event: React.MouseEvent<HTMLDivElement>) => void;\n}\n\n/**\n * Creates a simple click handler via onMouseDown and onMouseUp.\n * This is a necessity in order to let jsPlumb manage our element dragging.\n * @param onClick\n */\nexport const createClickHandler = (\n  onClick: (event: React.MouseEvent<HTMLElement>) => void,\n  shouldCancelClick: () => boolean = null,\n  onMouseDown?: (event: React.MouseEvent<HTMLElement>) => void\n): any => {\n  return {\n    onMouseDown: (event: React.MouseEvent<HTMLElement>) => {\n      if (onMouseDown) {\n        onMouseDown(event);\n      }\n    },\n    onMouseUp: (event: React.MouseEvent<HTMLElement>) => {\n      if (!shouldCancelClick || !shouldCancelClick()) {\n        onClick(event);\n      }\n    }\n  };\n};\n\nexport const getLocalization = (\n  obj: Action | Category | Case,\n  localization: LocalizationMap,\n  language: Asset\n) => Localization.translate(obj, language, localization[language.id]);\n\n/** istanbul ignore next */\nexport const dump = (thing: any) => console.log(JSON.stringify(thing, null, 4));\n\n/**\n * Apply emphasis style\n */\nexport const emphasize = (text: string) => <span className=\"emph\">{text}</span>;\n\n/**\n * Does property exist in our ContactProperties enum?\n * @param {string} propertyToCheck - 'name' key on react-select AutoCompleteOption\n */\nexport const propertyExists = (propertyToCheck: string) => {\n  for (const property of Object.keys(ContactProperties)) {\n    if (property.toLowerCase() === propertyToCheck.toLowerCase().trim()) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Should x element be rendered?\n */\nexport const renderIf = (predicate: boolean) => (then: JSX.Element, otherwise?: JSX.Element) =>\n  predicate ? then : otherwise ? otherwise : null;\n\n/**\n * Does the label meet our length requirements?\n * @param {string} label - label created by react-select\n */\nexport const properLabelLength = (label: string = '') =>\n  label.length > 0 && label.length <= MAX_LABEL_LENGTH;\n\n/**\n * Does the label meet our character requirements?\n * @param {string} label\n */\nexport const containsOnlyLabelChars = (label: string = '') => LABEL_CHARS.test(label);\n\n/**\n * Does the label meet our length, character requirements?\n * @param {string} label - label created by react-select\n */\nexport const isValidLabel = (label: string) =>\n  properLabelLength(label) && containsOnlyLabelChars(label);\n\nexport const isRealValue = (obj: any) => obj !== null && obj !== undefined;\n\n/* istanbul ignore next */\nexport const timeStart = (name: string) =>\n  process.env.NODE_ENV === 'development' && console.time(name);\n\n/* istanbul ignore next */\nexport const timeEnd = (name: string) =>\n  process.env.NODE_ENV === 'development' && console.timeEnd(name);\n\nexport const capitalize = (str: string) =>\n  str.replace(/(?:^|\\s)\\S/g, captured => captured.toUpperCase());\n\nexport const set = (val: any): Query<any> => ({ $set: val });\n\nexport const setTrue = (): Query<true> => set(true);\n\nexport const setFalse = (): Query<false> => set(false);\n\nexport const setNull = (): Query<null> => set(null);\n\nexport const setEmpty = (): Query<string> => set('');\n\nexport const merge = (val: any): Query<any> => ({ $merge: val });\n\nexport const unset = (val: any): Query<any> => ({ $unset: val });\n\nexport const push = (arr: any[]): Query<any[]> => ({ $push: arr });\n\n// tslint:disable-next-line:array-type\nexport const splice = (arr: Array<Array<any>>): Query<Array<Array<any>>> => ({\n  $splice: arr\n});\n\nexport const optionExists = (newOptName: string, options: any[]) =>\n  options.find(({ name }) => name.toLowerCase().trim() === newOptName.toLowerCase().trim())\n    ? true\n    : false;\n\n/* export const isOptionUnique: IsOptionUniqueHandler = ({ option, options, labelKey, valueKey }) =>\n    !propertyExists(option.name) && !optionExists(option.name, options);\n\nexport const isValidNewOption: IsValidNewOptionHandler = ({ label }) => isValidLabel(label);\n*/\n/* export const composeCreateNewOption = ({\n    idCb,\n    type\n}: {\n    idCb: LabelIdCb;\n    type: AssetType;\n}): NewOptionCreatorHandler => ({ label, labelKey, valueKey }) => ({\n    id: idCb(label, labelKey, valueKey),\n    name: label,\n    type,\n    isNew: true\n});*/\n\n/**\n * Deduplicate values in an array.\n * Pass it a key to deduplicate based on obj key.\n */\nexport const uniqueBy = (a: any[], key: string): any[] => {\n  const seen: any = {};\n  return a.filter((item: any) => {\n    const k = item[key];\n    return seen.hasOwnProperty(k) ? false : (seen[k] = true);\n  });\n};\n\nexport const downloadJSON = (obj: any, name: string): void => {\n  const dataStr =\n    'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(obj, null, 2));\n  const downloadAnchorNode = document.createElement('a');\n  downloadAnchorNode.setAttribute('href', dataStr);\n  downloadAnchorNode.setAttribute('download', name + '.json');\n  document.body.appendChild(downloadAnchorNode); // required for firefox\n  downloadAnchorNode.click();\n  downloadAnchorNode.remove();\n};\n\nexport let createUUID = (): string => {\n  return generateUUID();\n};\n\nexport const seededUUIDs = (seed: number = 1): any => {\n  let current = seed;\n  const randomNext = () => {\n    const x = Math.sin(current++) * 10000;\n    return x - Math.floor(x);\n  };\n\n  const random = (min: number, max: number): number => {\n    return Math.floor(randomNext() * (max - min) + min);\n  };\n\n  return () => {\n    const randomSeed: number[] = [];\n    for (let idx = 0; idx < 16; idx++) {\n      randomSeed.push(random(0, 250));\n    }\n    return generateUUID({ random: randomSeed });\n  };\n};\n\nexport const range = (start: number, end: number) =>\n  Array.from({ length: end - start }, (v: number, k: number) => k + start);\n\nexport const pluralize = (count: number, noun: string, suffix: string = 's'): string =>\n  `${noun}${count !== 1 ? suffix : ''}`;\n\nexport const hasString = (names: string[], key: string): boolean =>\n  !!names.find((item: string) => item === key);\n\nexport const scalarArrayEquals = (a: any[], b: any[]) =>\n  a.every((value, index) => value === b[index]);\n\nexport const getURNPath = (urn: string) => {\n  return urn.split(':')[1];\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport { renderIf } from 'utils';\n\nimport styles from './Button.module.scss';\n\nexport enum ButtonTypes {\n  primary = 'primary',\n  secondary = 'secondary',\n  tertiary = 'tertiary'\n}\nexport interface ButtonProps {\n  name: string;\n  onClick: any;\n  disabled?: boolean;\n  type?: ButtonTypes;\n  leftSpacing?: boolean;\n  topSpacing?: boolean;\n  iconName?: string;\n  onRef?: (ele: any) => void;\n}\n\ninterface ButtonState {\n  active: boolean;\n}\n\nexport default class Button extends React.Component<ButtonProps, ButtonState> {\n  constructor(props: ButtonProps) {\n    super(props);\n    this.state = {\n      active: false\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleMouseDown(event: React.MouseEvent<HTMLDivElement>): void {\n    this.setState({ active: true });\n  }\n\n  private handleMouseUp(event: React.MouseEvent<HTMLDivElement>): void {\n    this.setState({ active: false });\n  }\n\n  public render(): JSX.Element {\n    const { onRef, name, onClick, type, disabled, leftSpacing, topSpacing, iconName } = this.props;\n\n    return (\n      <div\n        ref={onRef}\n        style={{\n          marginLeft: leftSpacing ? 10 : 0,\n          marginTop: topSpacing ? 10 : 0\n        }}\n        onClick={onClick}\n        onMouseDown={this.handleMouseDown}\n        onMouseUp={this.handleMouseUp}\n        className={`${styles.btn} ${styles[type!]} ${disabled ? styles.disabled : ''} ${\n          this.state.active ? styles.active : ''\n        }`}\n      >\n        {renderIf(iconName != null)(<span style={{ paddingRight: 4 }} className={iconName} />)}\n        {name}\n      </div>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Button, { ButtonProps, ButtonTypes } from 'components/button/Button';\nimport shared from 'components/shared.module.scss';\nimport * as React from 'react';\nimport { renderIf } from 'utils';\n\nimport styles from './Dialog.module.scss';\n\nexport enum HeaderStyle {\n  NORMAL = 'normal',\n  BARBER = 'barber'\n}\n\nexport interface ButtonSet {\n  primary: ButtonProps;\n  secondary?: ButtonProps;\n  tertiary?: ButtonProps;\n}\n\nexport interface Tab {\n  name: string;\n  body: JSX.Element;\n  hasErrors?: boolean;\n  icon?: string;\n  checked?: boolean;\n}\n\ninterface Buttons {\n  leftButtons: JSX.Element[];\n  rightButtons: JSX.Element[];\n}\n\nexport interface DialogProps {\n  title: string;\n  subtitle?: string;\n  headerIcon?: string;\n  headerClass?: string;\n  headerStyle?: HeaderStyle;\n  buttons?: ButtonSet;\n  gutter?: JSX.Element;\n  noPadding?: boolean;\n  tabs?: Tab[];\n  className?: string;\n}\n\nexport interface DialogState {\n  activeTab: number;\n}\n\n/**\n * A component that has a front and back and can flip back and forth between them\n */\nexport default class Dialog extends React.Component<DialogProps, DialogState> {\n  private tabFocus: any = null;\n  private primaryButton: any = null;\n\n  constructor(props: DialogProps) {\n    super(props);\n    this.state = {\n      activeTab: -1\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/, /^get/]\n    });\n  }\n\n  public showTab(index: number): void {\n    this.setState({ activeTab: index });\n  }\n\n  private handlePrimaryButton(onClick: any): void {\n    onClick();\n\n    this.tabFocus = window.setTimeout(() => {\n      let foundTab = false;\n      // focus on a tab with errors\n      (this.props.tabs || []).forEach((tab: Tab, index: number) => {\n        if (tab.hasErrors) {\n          this.setState({ activeTab: index });\n          foundTab = true;\n          return;\n        }\n      });\n\n      if (!foundTab) {\n        // or focus on the main content\n        this.setState({ activeTab: -1 });\n      }\n    }, 0);\n  }\n\n  private handleKey(event: KeyboardEvent): void {\n    if (event.key === 'Enter' && event.shiftKey) {\n      if (this.primaryButton) {\n        event.preventDefault();\n        event.stopPropagation();\n        (event.target as any).blur();\n        this.primaryButton.click();\n        (event.target as any).focus();\n      } else {\n        console.log('No primary button!');\n      }\n    }\n  }\n\n  public componentDidMount(): void {\n    window.document.addEventListener('keydown', this.handleKey, {\n      capture: true\n    });\n  }\n\n  public componentWillUnmount(): void {\n    window.clearTimeout(this.tabFocus);\n    window.document.removeEventListener('keydown', this.handleKey, {\n      capture: true\n    });\n  }\n\n  private getButtons(): Buttons {\n    const rightButtons: JSX.Element[] = [];\n    const buttons = this.props.buttons || {\n      primary: null,\n      secondary: null,\n      tertiary: null\n    };\n\n    if (buttons.secondary) {\n      rightButtons.push(<Button key={0} type={ButtonTypes.secondary} {...buttons.secondary} />);\n    }\n\n    if (buttons.primary) {\n      rightButtons.push(\n        <Button\n          key={'button_' + buttons.primary.name}\n          onRef={(ref: any) => {\n            this.primaryButton = ref;\n          }}\n          onClick={() => {\n            this.handlePrimaryButton(buttons.primary.onClick);\n          }}\n          leftSpacing={true}\n          name={buttons.primary.name}\n          disabled={buttons.primary.disabled}\n          type={ButtonTypes.primary}\n        />\n      );\n    }\n\n    const leftButtons: JSX.Element[] = [];\n\n    // Our left most button if we have one\n    if (buttons.tertiary) {\n      leftButtons.push(<Button key={0} type={ButtonTypes.tertiary} {...buttons.tertiary} />);\n    }\n\n    return {\n      leftButtons,\n      rightButtons\n    };\n  }\n\n  public render(): JSX.Element {\n    const headerClasses = [styles.header];\n\n    if (this.state.activeTab > -1) {\n      headerClasses.push(styles.clickable);\n    }\n\n    if (this.props.headerClass) {\n      headerClasses.push(shared[this.props.headerClass]);\n    }\n\n    if (this.props.headerIcon) {\n      headerClasses.push(styles.iconed);\n    }\n\n    if (this.props.headerStyle === HeaderStyle.BARBER) {\n      headerClasses.push(styles.barber);\n    }\n\n    const activeClasses = [styles.dialog];\n    const { leftButtons, rightButtons } = this.getButtons();\n\n    if (this.props.className) {\n      activeClasses.push(this.props.className);\n    }\n\n    return (\n      <div className={activeClasses.join(' ')}>\n        {(this.props.tabs || []).length > 0 ? (\n          <div className={styles.tabs}>\n            {(this.props.tabs || []).map((tab: Tab, index: number) => (\n              <div\n                key={'tab_' + tab.name}\n                className={styles.tab + ' ' + (index === this.state.activeTab ? styles.active : '')}\n                onClick={(evt: React.MouseEvent<HTMLDivElement>) => {\n                  evt.stopPropagation();\n                  this.setState({ activeTab: index });\n                }}\n              >\n                {tab.name} {tab.icon ? <span className={styles.tab_icon + ' ' + tab.icon} /> : null}\n                {tab.checked ? <span className={styles.tab_icon + ' fe-check'} /> : null}\n              </div>\n            ))}\n          </div>\n        ) : null}\n        <div\n          onClick={() => {\n            this.setState({ activeTab: -1 });\n          }}\n          className={headerClasses.join(' ')}\n        >\n          {this.state.activeTab > -1 ? <div className={styles.header_overlay} /> : null}\n          {renderIf(this.props.headerIcon !== undefined)(\n            <span className={`${styles.header_icon} ${this.props.headerIcon}`} />\n          )}\n          <div className={styles.title_container}>\n            <div className={styles.title}>{this.props.title}</div>\n            <div className={styles.subtitle}>{this.props.subtitle}</div>\n          </div>\n        </div>\n        <div className={this.props.noPadding ? '' : styles.content}>\n          {this.state.activeTab > -1\n            ? this.props.tabs![this.state.activeTab].body\n            : this.props.children}\n        </div>\n\n        <div className={styles.footer}>\n          <div className={styles.buttons}>\n            {renderIf(leftButtons.length > 0)(\n              <div className={styles.left_buttons}>{leftButtons}</div>\n            )}\n            {renderIf(this.props.gutter != null)(\n              <div className={styles.gutter}>{this.props.gutter}</div>\n            )}\n            <div className={styles.right_buttons}>{rightButtons}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","enum Constants {\n  UPDATE_EDITOR_STATE = 'UPDATE_EDITOR_STATE',\n  UPDATE_NODE_EDITOR_SETTINGS = 'UPDATE_NODE_EDITOR_SETTINGS',\n  UPDATE_TRANSLATING = 'UPDATE_TRANSLATING',\n  UPDATE_BASE_LANGUAGE = 'UPDATE_BASE_LANGUAGE',\n  UPDATE_LANGUAGES = 'UPDATE_LANGUAGES',\n  UPDATE_LANGUAGE = 'UPDATE_LANGUAGE',\n  UPDATE_FETCHING_FLOW = 'FETCHING_FLOW',\n  UPDATE_DEFINITION = 'UPDATE_DEFINITION',\n  UPDATE_NODE_DRAGGING = 'UPDATE_NODE_DRAGGING',\n  UPDATE_FLOWS = 'UPDATE_FLOWS',\n  UPDATE_DEPENDENCIES = 'UPDATE_DEPENDENCIES',\n  UPDATE_PENDING_CONNECTIONS = 'UPDATE_PENDING_CONNECTIONS',\n  REMOVE_PENDING_CONNECTION = 'REMOVE_PENDING_CONNECTION',\n  UPDATE_COMPONENTS = 'UPDATE_COMPONENTS',\n  UPDATE_CONTACT_FIELDS = 'UPDATE_CONTACT_FIELDS',\n  UPDATE_GROUPS = 'UPDATE_GROUPS',\n  UPDATE_RESULT_MAP = 'UPDATE_RESULT_MAP',\n  UPDATE_ASSET_MAP = 'UPDATE_ASSET_MAP',\n  UPDATE_NODES = 'UPDATE_NODES',\n  UPDATE_EXITS = 'UPDATE_EXITS',\n  UPDATE_NODE_EDITOR_OPEN = 'UPDATE_NODE_EDITOR_OPEN',\n  UPDATE_CREATE_NODE_POSITION = 'UPDATE_CREATE_NODE_POSITION',\n  UPDATE_DRAG_GROUP = 'UPDATE_DRAG_GROUP',\n  UPDATE_TYPE_CONFIG = 'UPDATE_TYPE_CONFIG',\n  UPDATE_USER_ADDING_ACTION = 'UPDATE_USER_ADDING_ACTION',\n  INCREMENT_SUGGESTED_RESULT_NAME_COUNT = 'INCREMENT_SUGGESTED_RESULT_NAME_COUNT'\n}\n\nexport default Constants;\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\n\n// tslint:disable-next-line: no-empty-interface\ninterface FixyProps {}\n\ninterface FixyState {\n  top: number;\n  fixed: boolean;\n}\n\nexport class Fixy extends React.PureComponent<FixyProps, FixyState> {\n  private ele!: HTMLDivElement | null;\n\n  constructor(props: FixyProps) {\n    super(props);\n    this.state = {\n      top: 0,\n      fixed: false\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleScroll(): void {\n    const fixed = window.scrollY > this.state.top;\n    this.setState({ fixed });\n  }\n\n  public componentWillUnmount(): void {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  public componentDidMount(): void {\n    const top = this.ele!.getBoundingClientRect().top + window.scrollY;\n    const fixed = window.scrollY > top;\n    this.setState({ top, fixed });\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  public render(): JSX.Element {\n    let styles: React.CSSProperties = { position: 'absolute' };\n    if (this.state.fixed) {\n      styles = {\n        position: 'fixed',\n        top: 0\n      };\n    }\n\n    return (\n      <div\n        ref={ele => {\n          this.ele = ele;\n        }}\n        style={styles}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","import { FlowDefinition, FlowNode, UINode } from 'flowTypes';\nimport { combineReducers } from 'redux';\nimport ActionTypes, {\n  UpdateAssetsAction,\n  UpdateBaseLanguageAction,\n  UpdateContactFieldsAction,\n  UpdateDefinitionAction,\n  UpdateDependenciesAction,\n  UpdateNodesAction\n} from 'store/actionTypes';\nimport Constants from 'store/constants';\n\n// tslint:disable:no-shadowed-variable\nexport interface RenderNodeMap {\n  [uuid: string]: RenderNode;\n}\n\nexport interface RenderNode {\n  ui: UINode;\n  node: FlowNode;\n  inboundConnections: { [nodeUUID: string]: string };\n  ghost?: boolean;\n}\n\nexport interface FunctionExample {\n  template: string;\n  output: string;\n}\n\nexport interface CompletionOption {\n  name?: string;\n  summary: string;\n\n  // functions\n  signature?: string;\n  detail?: string;\n  examples?: FunctionExample[];\n}\n\nexport interface ContactFields {\n  [snakedFieldName: string]: string;\n}\n\nexport enum AssetType {\n  Channel = 'channel',\n  Classifier = 'classifier',\n  Contact = 'contact',\n  ContactProperty = 'property',\n  Currency = 'currency',\n  Environment = 'environment',\n  Expression = 'expression',\n  Field = 'field',\n  Flow = 'flow',\n  Global = 'global',\n  Group = 'group',\n  Label = 'label',\n  Language = 'language',\n  Remove = 'remove',\n  Resthook = 'resthook',\n  Result = 'result',\n  Revision = 'revision',\n  Scheme = 'scheme',\n  Template = 'template',\n  URN = 'urn'\n}\n\nexport interface Reference {\n  nodeUUID: string;\n  actionUUID?: string;\n}\n\nexport interface Asset {\n  id: string;\n  name: string;\n  type: AssetType;\n\n  order?: number;\n  references?: Reference[];\n  isNew?: boolean;\n  content?: any;\n}\n\nexport const REMOVE_VALUE_ASSET = {\n  id: AssetType.Remove,\n  name: 'Remove Value',\n  type: AssetType.Remove\n};\n\nexport const DEFAULT_LANGUAGE = {\n  id: 'base',\n  name: 'Default',\n  type: AssetType.Language\n};\n\nexport interface AssetStore {\n  [assetType: string]: Assets;\n}\n\nexport interface AssetMap {\n  [id: string]: Asset;\n}\n\nexport interface Assets {\n  // our local cache of assets\n  items: AssetMap;\n\n  type: AssetType;\n\n  // an optional endpoint to search for more\n  endpoint?: string;\n\n  // option name for the id when fetching remotely\n  id?: string;\n\n  // have our assets already been loaded\n  prefetched?: boolean;\n}\n\nexport interface FlowContext {\n  dependencies: FlowDefinition[];\n  baseLanguage: Asset;\n  contactFields: ContactFields;\n  definition: FlowDefinition;\n  nodes: { [uuid: string]: RenderNode };\n  assetStore: AssetStore;\n}\n\n// Initial state\nexport const initialState: FlowContext = {\n  definition: null,\n  dependencies: null,\n  baseLanguage: null,\n  contactFields: {},\n  nodes: {},\n  assetStore: {}\n};\n\n// Action Creators\nexport const updateDefinition = (definition: FlowDefinition): UpdateDefinitionAction => ({\n  type: Constants.UPDATE_DEFINITION,\n  payload: {\n    definition\n  }\n});\n\nexport const updateNodes = (nodes: RenderNodeMap): UpdateNodesAction => ({\n  type: Constants.UPDATE_NODES,\n  payload: {\n    nodes\n  }\n});\n\nexport const updateDependencies = (dependencies: FlowDefinition[]): UpdateDependenciesAction => ({\n  type: Constants.UPDATE_DEPENDENCIES,\n  payload: {\n    dependencies\n  }\n});\n\nexport const updateBaseLanguage = (baseLanguage: Asset): UpdateBaseLanguageAction => ({\n  type: Constants.UPDATE_BASE_LANGUAGE,\n  payload: {\n    baseLanguage\n  }\n});\n\nexport const updateContactFields = (contactFields: ContactFields): UpdateContactFieldsAction => ({\n  type: Constants.UPDATE_CONTACT_FIELDS,\n  payload: {\n    contactFields\n  }\n});\n\nexport const updateAssets = (assets: AssetStore): UpdateAssetsAction => ({\n  type: Constants.UPDATE_ASSET_MAP,\n  payload: {\n    assets\n  }\n});\n\n// Reducers\nexport const definition = (\n  state: FlowDefinition = initialState.definition,\n  action: ActionTypes\n) => {\n  switch (action.type) {\n    case Constants.UPDATE_DEFINITION:\n      return action.payload.definition;\n    default:\n      return state;\n  }\n};\n\nexport const nodes = (state: {} = initialState.nodes, action: ActionTypes) => {\n  switch (action.type) {\n    case Constants.UPDATE_NODES:\n      return action.payload.nodes;\n    default:\n      return state;\n  }\n};\n\nexport const dependencies = (\n  state: FlowDefinition[] = initialState.dependencies,\n  action: ActionTypes\n) => {\n  switch (action.type) {\n    case Constants.UPDATE_DEPENDENCIES:\n      return action.payload.dependencies;\n    default:\n      return state;\n  }\n};\n\nexport const assetStore = (state: AssetStore = initialState.assetStore, action: ActionTypes) => {\n  switch (action.type) {\n    case Constants.UPDATE_ASSET_MAP:\n      return action.payload.assets;\n    default:\n      return state;\n  }\n};\n\nexport const baseLanguage = (state: Asset = initialState.baseLanguage, action: ActionTypes) => {\n  switch (action.type) {\n    case Constants.UPDATE_BASE_LANGUAGE:\n      return action.payload.baseLanguage;\n    default:\n      return state;\n  }\n};\n\nexport const contactFields = (\n  state: ContactFields = initialState.contactFields,\n  action: ActionTypes\n) => {\n  switch (action.type) {\n    case Constants.UPDATE_CONTACT_FIELDS:\n      return action.payload.contactFields;\n    default:\n      return state;\n  }\n};\n\n// Root reducer\nexport default combineReducers({\n  definition,\n  nodes,\n  dependencies,\n  assetStore,\n  baseLanguage,\n  contactFields\n});\n","export enum FlowTypes {\n  MESSAGE = 'message',\n  VOICE = 'voice',\n  SURVEY = 'message_offline',\n  NONE = '-'\n}\n\nexport enum Types {\n  execute_actions = 'execute_actions',\n  add_contact_urn = 'add_contact_urn',\n  add_contact_groups = 'add_contact_groups',\n  add_input_labels = 'add_input_labels',\n  remove_contact_groups = 'remove_contact_groups',\n  set_contact_channel = 'set_contact_channel',\n  set_contact_field = 'set_contact_field',\n  set_contact_name = 'set_contact_name',\n  set_contact_language = 'set_contact_language',\n  set_run_result = 'set_run_result',\n  call_classifier = 'call_classifier',\n  call_resthook = 'call_resthook',\n  call_webhook = 'call_webhook',\n  send_msg = 'send_msg',\n  send_email = 'send_email',\n  send_broadcast = 'send_broadcast',\n  enter_flow = 'enter_flow',\n  start_session = 'start_session',\n  transfer_airtime = 'transfer_airtime',\n  split_by_airtime = 'split_by_airtime',\n  split_by_expression = 'split_by_expression',\n  split_by_contact_field = 'split_by_contact_field',\n  split_by_run_result = 'split_by_run_result',\n  split_by_run_result_delimited = 'split_by_run_result_delimited',\n  split_by_groups = 'split_by_groups',\n  split_by_intent = 'split_by_intent',\n  split_by_random = 'split_by_random',\n  split_by_resthook = 'split_by_resthook',\n  split_by_subflow = 'split_by_subflow',\n  split_by_webhook = 'split_by_webhook',\n  wait_for_response = 'wait_for_response',\n  wait_for_menu = 'wait_for_menu',\n  wait_for_digits = 'wait_for_digits',\n  wait_for_audio = 'wait_for_audio',\n  wait_for_video = 'wait_for_video',\n  wait_for_location = 'wait_for_location',\n  wait_for_image = 'wait_for_image',\n  missing = 'missing',\n  say_msg = 'say_msg',\n  play_audio = 'play_audio'\n}\n\nexport enum Operators {\n  has_any_word = 'has_any_word',\n  has_all_words = 'has_all_words',\n  has_phrase = 'has_phrase',\n  has_only_phrase = 'has_only_phrase',\n  has_beginning = 'has_beginning',\n  has_text = 'has_text',\n  has_date = 'has_date',\n  has_date_lt = 'has_date_lt',\n  has_date_eq = 'has_date_eq',\n  has_date_gt = 'has_date_gt',\n  has_time = 'has_time',\n  has_number = 'has_number',\n  has_number_between = 'has_number_between',\n  has_number_lt = 'has_number_lt',\n  has_number_lte = 'has_number_lte',\n  has_number_eq = 'has_number_eq',\n  has_number_gte = 'has_number_gte',\n  has_number_gt = 'has_number_gt',\n  has_run_status = 'has_run_status',\n  has_only_text = 'has_only_text',\n  has_group = 'has_group',\n  has_phone = 'has_phone',\n  has_email = 'has_email',\n  has_value = 'has_value',\n  has_district = 'has_district',\n  has_state = 'has_state',\n  has_ward = 'has_ward',\n  has_pattern = 'has_pattern',\n  has_error = 'has_error',\n  has_intent = 'has_intent',\n  has_top_intent = 'has_top_intent',\n  has_category = 'has_category'\n}\n\nexport enum FeatureFilter {\n  HAS_RESTHOOK = 'resthook',\n  HAS_WHATSAPP = 'whatsapp',\n  HAS_AIRTIME = 'airtime',\n  HAS_CLASSIFIER = 'classifier'\n}\n\nexport interface FlowTypeVisibility {\n  visibility?: FlowTypes[];\n  filter?: FeatureFilter;\n}\n\nexport interface Type extends FlowTypeVisibility {\n  type: Types;\n  name: string;\n  description: string;\n  component?: any;\n  form?: React.ComponentClass<any>;\n  aliases?: string[];\n  localization?: React.ComponentClass<any>;\n  localizeableKeys?: string[];\n}\n\nexport interface Operator extends FlowTypeVisibility {\n  type: Operators;\n  verboseName: string;\n  operands: number;\n  categoryName?: string;\n}\n\nexport interface OperatorMap {\n  [propName: string]: Operator;\n}\n\nexport const HIDDEN = [FlowTypes.NONE];\nexport const VOICE = [FlowTypes.VOICE];\nexport const SURVEY = [FlowTypes.SURVEY];\nexport const TEXT_TYPES = [FlowTypes.MESSAGE, FlowTypes.SURVEY];\nexport const ONLINE = [FlowTypes.MESSAGE, FlowTypes.VOICE];\n","import { Contact, Endpoints, Group, RecipientsAction } from 'flowTypes';\nimport * as React from 'react';\nimport { Asset, AssetType } from 'store/flowContext';\nimport { FormEntry, NodeEditorSettings, ValidationFailure } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\n\nconst styles = require('components/shared.module.scss');\n\nexport const getActionUUID = (nodeSettings: NodeEditorSettings, currentType: string): string => {\n  if (nodeSettings.originalAction && nodeSettings.originalAction.type === currentType) {\n    return nodeSettings.originalAction.uuid;\n  }\n\n  return createUUID();\n};\n\nexport const getRecipients = (action: RecipientsAction): Asset[] => {\n  let selected = (action.groups || []).map((group: Group) => {\n    return { id: group.uuid, name: group.name, type: AssetType.Group };\n  });\n\n  selected = selected.concat(\n    (action.contacts || []).map((contact: Contact) => {\n      return { id: contact.uuid, name: contact.name, type: AssetType.Contact };\n    })\n  );\n\n  selected = selected.concat(\n    (action.legacy_vars || []).map((expression: string) => {\n      return { id: expression, name: expression, type: AssetType.Expression };\n    })\n  );\n\n  return selected;\n};\n\nexport const renderAssetList = (\n  assets: Asset[],\n  max: number = 10,\n  endpoints: Endpoints\n): JSX.Element[] => {\n  return assets.reduce((elements, asset, idx) => {\n    if (idx <= max - 1) {\n      elements.push(renderAsset(asset, endpoints));\n    } else if (idx > max - 1 && elements.length === max) {\n      elements.push(<div key=\"ellipses\">...</div>);\n    }\n    return elements;\n  }, []);\n};\n\nexport const renderAsset = (asset: Asset, endpoints: Endpoints) => {\n  switch (asset.type) {\n    case AssetType.Group:\n      return (\n        <div className={styles.node_asset} key={asset.id}>\n          <span className={`${styles.node_group} fe-group`} />\n          {asset.name}\n        </div>\n      );\n    case AssetType.Label:\n      return (\n        <div className={styles.node_asset} key={asset.id}>\n          <span className={`${styles.node_label} fe-label`} />\n          {asset.name}\n        </div>\n      );\n    case AssetType.Flow:\n      return (\n        <div className={styles.node_asset} key={asset.id}>\n          <span className={`${styles.node_label} fe-split`} />\n          <a\n            onMouseDown={(e: any) => {\n              e.preventDefault();\n              e.stopPropagation();\n            }}\n            onMouseUp={(e: any) => {\n              e.preventDefault();\n              e.stopPropagation();\n            }}\n            href={`${endpoints.editor}/${asset.id}`}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {asset.name}\n          </a>\n        </div>\n      );\n  }\n\n  return (\n    <div className={styles.node_asset} key={asset.id}>\n      {asset.name}\n    </div>\n  );\n};\n\nexport const getAllErrors = (entry: FormEntry): ValidationFailure[] => {\n  return (entry.validationFailures || []).concat(entry.persistantFailures || []);\n};\n\nexport const hasErrors = (entry: FormEntry): boolean => {\n  return getAllErrors(entry).length > 0;\n};\n\nexport const getExpressions = (assets: Asset[]): any[] => {\n  return assets\n    .filter((asset: Asset) => asset.type === AssetType.Expression)\n    .map((asset: Asset) => {\n      return asset.id;\n    });\n};\n\nexport const getRecipientsByAsset = (assets: Asset[], type: AssetType): any[] => {\n  return assets\n    .filter((asset: Asset) => asset.type === type)\n    .map((asset: Asset) => {\n      return { uuid: asset.id, name: asset.name };\n    });\n};\n","import { UpdateLocalizations } from 'components/nodeeditor/NodeEditor';\nimport { Type } from 'config/interfaces';\nimport { AnyAction, ContactProperties } from 'flowTypes';\nimport { Asset, AssetStore, AssetType, RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport { DispatchWithState, GetState } from 'store/thunks';\nimport { titleCase } from 'utils';\nimport { CompletionSchema } from 'utils/completion';\n\nexport interface ActionFormProps {\n  // action details\n  nodeSettings: NodeEditorSettings;\n  typeConfig: Type;\n  assetStore: AssetStore;\n  completionSchema: CompletionSchema;\n\n  addAsset(assetType: string, asset: Asset): void;\n\n  // update handlers\n  updateAction(\n    action: AnyAction,\n    onUpdated?: (dispatch: DispatchWithState, getState: GetState) => void\n  ): void;\n\n  // modal notifiers\n  onTypeChange(config: Type): void;\n  onClose(canceled: boolean): void;\n}\n\nexport interface RouterFormProps {\n  nodeSettings: NodeEditorSettings;\n  typeConfig: Type;\n\n  assetStore: AssetStore;\n\n  // update handlers\n  updateRouter(renderNode: RenderNode): void;\n\n  // modal notifiers\n  onTypeChange(config: Type): void;\n  onClose(canceled: boolean): void;\n}\n\nexport interface LocalizationFormProps {\n  language: Asset;\n  nodeSettings: NodeEditorSettings;\n  updateLocalizations(languageCode: string, localizations: any[]): UpdateLocalizations;\n  onClose(canceled: boolean): void;\n}\n\nexport const NAME_PROPERTY: Asset = {\n  name: titleCase(ContactProperties.Name),\n  id: ContactProperties.Name,\n  type: AssetType.ContactProperty\n};\n\nexport const CHANNEL_PROPERTY: Asset = {\n  name: titleCase(ContactProperties.Channel),\n  id: ContactProperties.Channel,\n  type: AssetType.ContactProperty\n};\n\nexport const LANGUAGE_PROPERTY: Asset = {\n  name: titleCase(ContactProperties.Language),\n  id: ContactProperties.Language,\n  type: AssetType.ContactProperty\n};\n","import { FlowEditorConfig } from 'flowTypes';\nimport * as React from 'react';\n\nexport const fakePropType: any = (): any => null;\nfakePropType.isRequired = (): any => null;\n\ninterface ConfigProviderProps {\n  config: FlowEditorConfig;\n  children: any;\n}\n\nexport interface ConfigProviderContext {\n  config: FlowEditorConfig;\n}\n\n// ----------------------------------------------------------------------------------------------\n\nexport const SINGLE_CHILD_ERROR = 'ConfigProvider expects only one child component.';\nexport const VALID_CHILD_ERROR =\n  'ConfigProvider expects a valid React element: https://reactjs.org/docs/react-api.html#isvalidelement';\n\nexport default class ConfigProvider extends React.Component<ConfigProviderProps> {\n  public static childContextTypes = {\n    config: fakePropType,\n    assetService: fakePropType\n  };\n\n  constructor(props: ConfigProviderProps) {\n    super(props);\n\n    if (React.Children.count(props.children) > 1) {\n      throw new Error(SINGLE_CHILD_ERROR);\n    } else if (!React.isValidElement(props.children)) {\n      throw new Error(VALID_CHILD_ERROR);\n    }\n  }\n\n  public getChildContext(): ConfigProviderContext {\n    return {\n      config: this.props.config\n    };\n  }\n\n  public render(): JSX.Element {\n    return React.Children.only(this.props.children);\n  }\n}\n","import * as React from 'react';\nimport { renderAssetList } from 'components/flow/actions/helpers';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { AddLabels } from 'flowTypes';\nimport { AssetType } from 'store/flowContext';\n\nexport const MAX_TO_SHOW = 3;\n\nconst AddLabelsComp: React.SFC<AddLabels> = ({ labels }, context: any): JSX.Element => (\n  <>\n    {renderAssetList(\n      labels.map(label => {\n        return { id: label.uuid, name: label.name, type: AssetType.Label };\n      }),\n      MAX_TO_SHOW,\n      context.config.endpoints\n    )}\n  </>\n);\n\nAddLabelsComp.contextTypes = {\n  config: fakePropType\n};\n\nexport default AddLabelsComp;\n","import { Template } from 'flowTypes';\nimport { Asset } from 'store/flowContext';\n\n/**\n * Sorts all search results by name\n */\nexport const sortByName = (a: Asset, b: Asset): number => {\n  if (a.type !== b.type) {\n    return b.type.localeCompare(a.type);\n  }\n\n  return a.name.localeCompare(b.name);\n};\n\nexport const hasPendingTranslation = (template: Template) => {\n  return !!template.translations.find(translation => translation.status === 'pending');\n};\n\nexport const hasUseableTranslation = (template: Template) => {\n  return !!template.translations.find(\n    translation => translation.status === 'pending' || translation.status === 'approved'\n  );\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport * as React from 'react';\nimport { FormEntry, ValidationFailure } from 'store/nodeEditor';\nimport { renderIf } from 'utils';\n\nimport styles from './FormElement.module.scss';\n\nconst cx: any = classNames.bind(styles);\n\nexport interface FormElementProps {\n  name: string;\n  helpText?: string | JSX.Element;\n  entry?: FormEntry;\n  showLabel?: boolean;\n  __className?: string;\n  border?: boolean;\n  sendMsgError?: boolean;\n  kaseError?: boolean;\n  attribError?: boolean;\n  hideError?: boolean;\n}\n\nexport default class FormElement extends React.PureComponent<FormElementProps> {\n  constructor(props: FormElementProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^get/, /^has/]\n    });\n  }\n  private getName(): JSX.Element {\n    return renderIf(\n      this.props.showLabel &&\n        this.props.name !== undefined &&\n        this.props.name !== null &&\n        this.props.name.length > 0\n    )(<div className={styles.label}>{this.props.name}</div>);\n  }\n\n  private getHelpText(): JSX.Element {\n    return renderIf(this.props.helpText != null)(\n      <div className={styles.help_text}>{this.props.helpText} </div>\n    );\n  }\n\n  private hasErrors(): boolean {\n    return this.getMergedErrors().length > 0;\n  }\n\n  private getMergedErrors(): ValidationFailure[] {\n    if (this.props.entry) {\n      return (this.props.entry.validationFailures || []).concat(\n        this.props.entry.persistantFailures || []\n      );\n    }\n    return [];\n  }\n\n  private getErrors(): JSX.Element {\n    if (this.hasErrors() && !this.props.hideError) {\n      const errors = this.getMergedErrors().map((failure, idx) => {\n        const className = cx({\n          [styles.error]: true,\n          [styles.send_msg_error]: this.props.sendMsgError === true\n        });\n        return (\n          <div key={idx} className={className}>\n            <div className={styles.arrow_up} />\n            <div>{failure.message}</div>\n          </div>\n        );\n      });\n      return <div className={styles.error_list}>{errors}</div>;\n    }\n    return null;\n  }\n\n  public render(): JSX.Element {\n    const name: JSX.Element = this.getName();\n    const helpText: JSX.Element = this.getHelpText();\n    const errorsToDisplay: JSX.Element = this.getErrors();\n\n    const className = cx({\n      [styles.ele]: true,\n      [styles.border]: this.props.border,\n      [styles.invalid]: this.hasErrors(),\n      [this.props.__className]: this.props.__className !== undefined\n    });\n\n    return (\n      <div className={className}>\n        {name}\n        {this.props.children}\n        {helpText}\n        {errorsToDisplay}\n      </div>\n    );\n  }\n}\n","import { AssetType } from 'store/flowContext';\n\nexport const currencies = {\n  ARS: {\n    id: 'ARS',\n    name: 'Argentine Peso',\n    type: AssetType.Currency\n  },\n  AUD: {\n    id: 'AUD',\n    name: 'Australian Dollar',\n    type: AssetType.Currency\n  },\n  BIF: {\n    id: 'BIF',\n    name: 'Burundi Franc',\n    type: AssetType.Currency\n  },\n  BRL: {\n    id: 'BRL',\n    name: 'Brazilian Real',\n    type: AssetType.Currency\n  },\n\n  CAD: {\n    id: 'CAD',\n    name: 'Canadian Dollar',\n    type: AssetType.Currency\n  },\n  CDF: {\n    id: 'CDF',\n    name: 'Congolese Franc',\n    type: AssetType.Currency\n  },\n  CLP: {\n    id: 'CLP',\n    name: 'Chilean Peso',\n    type: AssetType.Currency\n  },\n  COP: {\n    id: 'COP',\n    name: 'Colombian Peso',\n    type: AssetType.Currency\n  },\n  DJF: {\n    id: 'DJF',\n    name: 'Djibouti Franc',\n    type: AssetType.Currency\n  },\n  DOP: {\n    id: 'DOP',\n    name: 'Dominican Peso',\n    type: AssetType.Currency\n  },\n  DZD: {\n    id: 'DZD',\n    name: 'Algerian Dinar',\n    type: AssetType.Currency\n  },\n  EUR: {\n    id: 'EUR',\n    name: 'Euro',\n    type: AssetType.Currency\n  },\n  GBP: {\n    id: 'GBP',\n    name: 'Pound Sterling',\n    type: AssetType.Currency\n  },\n  GHS: {\n    id: 'GHS',\n    name: 'Ghana Cedi',\n    type: AssetType.Currency\n  },\n  GNF: {\n    id: 'GNF',\n    name: 'Guinean Franc',\n    type: AssetType.Currency\n  },\n  KES: {\n    id: 'KES',\n    name: 'Kenyan Shilling',\n    type: AssetType.Currency\n  },\n  LBP: {\n    id: 'LBP',\n    name: 'Lebanese Pound',\n    type: AssetType.Currency\n  },\n  LKR: {\n    id: 'LKR',\n    name: 'Sri Lanka Rupee',\n    type: AssetType.Currency\n  },\n  LRD: {\n    id: 'LRD',\n    name: 'Liberian Dollar',\n    type: AssetType.Currency\n  },\n  MWK: {\n    id: 'MWK',\n    name: 'Malawi Kwacha',\n    type: AssetType.Currency\n  },\n  MXN: {\n    id: 'MXN',\n    name: 'Mexican Peso',\n    type: AssetType.Currency\n  },\n  NAD: {\n    id: 'NAD',\n    name: 'Namibia Dollar',\n    type: AssetType.Currency\n  },\n  NPR: {\n    id: 'NPR',\n    name: 'Nepalese Rupee',\n    type: AssetType.Currency\n  },\n  NZD: {\n    id: 'NZD',\n    name: 'New Zealand Dollar',\n    type: AssetType.Currency\n  },\n  PHP: {\n    id: 'PHP',\n    name: 'Philippine Piso',\n    type: AssetType.Currency\n  },\n  PKR: {\n    id: 'PKR',\n    name: 'Pakistan Rupee',\n    type: AssetType.Currency\n  },\n  RUB: {\n    id: 'RUB',\n    name: 'Russian Ruble',\n    type: AssetType.Currency\n  },\n  RWF: {\n    id: 'RWF',\n    name: 'Rwanda Franc',\n    type: AssetType.Currency\n  },\n  SDG: {\n    id: 'SDG',\n    name: 'Sudanese Pound',\n    type: AssetType.Currency\n  },\n  SGD: {\n    id: 'SGD',\n    name: 'Singapore Dollar',\n    type: AssetType.Currency\n  },\n  SLL: {\n    id: 'SLL',\n    name: 'Leone',\n    type: AssetType.Currency\n  },\n  SOS: {\n    id: 'SOS',\n    name: 'Somali Shilling',\n    type: AssetType.Currency\n  },\n  SRD: {\n    id: 'SRD',\n    name: 'Surinam Dollar',\n    type: AssetType.Currency\n  },\n  SVC: {\n    id: 'SVC',\n    name: 'El Salvador Colon',\n    type: AssetType.Currency\n  },\n  TND: {\n    id: 'TND',\n    name: 'Tunisian Dinar',\n    type: AssetType.Currency\n  },\n  TRY: {\n    id: 'TRY',\n    name: 'Turkish Lira',\n    type: AssetType.Currency\n  },\n  TZS: {\n    id: 'TZS',\n    name: 'Tanzanian Shilling',\n    type: AssetType.Currency\n  },\n  UGX: {\n    id: 'UGX',\n    name: 'Uganda Shilling',\n    type: AssetType.Currency\n  },\n  USD: {\n    id: 'USD',\n    name: 'US Dollar',\n    type: AssetType.Currency\n  },\n  UYU: {\n    id: 'UYU',\n    name: 'Peso Uruguayo',\n    type: AssetType.Currency\n  },\n  UZS: {\n    id: 'UZS',\n    name: 'Uzbekistan Sum',\n    type: AssetType.Currency\n  },\n  VEF: {\n    id: 'VEF',\n    name: 'Bolívar',\n    type: AssetType.Currency\n  },\n  XCD: {\n    id: 'XCD',\n    name: 'East Caribbean Dollar',\n    type: AssetType.Currency\n  },\n  YER: {\n    id: 'YER',\n    name: 'Yemeni Rial',\n    type: AssetType.Currency\n  },\n  ZAR: {\n    id: 'ZAR',\n    name: 'Rand',\n    type: AssetType.Currency\n  },\n  ZMW: {\n    id: 'ZMW',\n    name: 'Zambian Kwacha',\n    type: AssetType.Currency\n  },\n  ZWL: {\n    id: 'ZWL',\n    name: 'Zimbabwe Dollar',\n    type: AssetType.Currency\n  }\n};\n","/* istanbul ignore file */\nimport axios, { AxiosResponse } from 'axios';\nimport { Revision } from 'components/revisions/RevisionExplorer';\nimport { Endpoints, Exit, FlowDefinition } from 'flowTypes';\nimport { currencies } from 'store/currencies';\nimport { Activity, RecentMessage } from 'store/editor';\nimport {\n  Asset,\n  AssetMap,\n  Assets,\n  AssetStore,\n  AssetType,\n  CompletionOption\n} from 'store/flowContext';\nimport { assetListToMap } from 'store/helpers';\nimport { CompletionSchema } from 'utils/completion';\nimport { FlowTypes } from 'config/interfaces';\n\nexport interface FlowDetails {\n  uuid: string;\n  name: string;\n  definition: FlowDefinition;\n  dependencies: FlowDefinition[];\n}\n\n// Configure axios to always send JSON requests\naxios.defaults.headers.post['Content-Type'] = 'application/javascript';\naxios.defaults.responseType = 'json';\n\n/**\n * Gets the path activity and the count of active particpants at each node\n * @param {string} flowUUID - The UUID of the current flow\n * @param {string} activityEndpoint - The URL path to the endpoint providing this data\n * @returns {Object} - An object representation of the flow's activty\n */\nexport const getActivity = (\n  activityEndpoint: string,\n  flowUUID: string,\n  headers = {}\n): Promise<Activity> =>\n  new Promise<Activity>((resolve, reject) =>\n    axios\n      .get(`${activityEndpoint}?flow=${flowUUID}`, { headers })\n      .then((response: AxiosResponse) => resolve(response.data as Activity))\n      .catch((error: any) => reject(error))\n  );\n\nexport interface Cancel {\n  reject?: () => void;\n}\n\nexport const saveRevision = (endpoint: string, definition: FlowDefinition): Promise<Revision> => {\n  const csrf = getCookie('csrftoken');\n  const headers = csrf ? { 'X-CSRFToken': csrf } : {};\n  return new Promise<Revision>((resolve, reject) => {\n    axios\n      .post(endpoint, definition, { headers })\n      .then((response: AxiosResponse) => {\n        if (response.status === 200) {\n          resolve(response.data.revision as Revision);\n        } else {\n          reject(response);\n        }\n      })\n      .catch(error => reject(error));\n  });\n};\n\nexport const getRecentMessages = (\n  recentsEndpoint: string,\n  exit: Exit,\n  cancel: Cancel\n): Promise<RecentMessage[]> =>\n  new Promise<RecentMessage[]>((resolve, reject) => {\n    cancel.reject = reject;\n    return axios\n      .get(`${recentsEndpoint}?exits=${exit.uuid}&to=${exit.destination_uuid}`)\n      .then((response: AxiosResponse) => {\n        const recentMessages: RecentMessage[] = [];\n        for (const row of response.data) {\n          recentMessages.push({ text: row.text, sent: new Date(row.sent) });\n        }\n\n        resolve(response.data as RecentMessage[]);\n      })\n      .catch(error => reject(error));\n  });\n\n/** Get the value for a named cookie */\nexport const getCookie = (name: string): string => {\n  for (const cookie of document.cookie.split(';')) {\n    const idx = cookie.indexOf('=');\n    let key = cookie.substr(0, idx);\n    let value = cookie.substr(idx + 1);\n\n    // no spaces allowed\n    key = key.trim();\n    value = value.trim();\n\n    if (key === name) {\n      return value;\n    }\n  }\n  return null;\n};\n\nexport const postNewAsset = (assets: Assets, payload: any): Promise<Asset> => {\n  // if we have a csrf in our cookie, pass it along as a header\n  const csrf = getCookie('csrftoken');\n  const headers = csrf ? { 'X-CSRFToken': csrf } : {};\n\n  return new Promise<Asset>((resolve, reject) => {\n    axios\n      .post(assets.endpoint, payload, { headers })\n      .then((response: AxiosResponse) => {\n        resolve(resultToAsset(response.data, assets.type, assets.id));\n      })\n      .catch(error => reject(error));\n  });\n};\n\nexport const fetchAsset = (assets: Assets, id: string): Promise<Asset> => {\n  return new Promise<Asset>((resolve, reject) => {\n    getAssets(assets.endpoint, assets.type, assets.id).then((results: Asset[]) => {\n      resolve(results.find((asset: Asset) => asset.id === id));\n    });\n  });\n};\n\ninterface AssetPage {\n  assets: Asset[];\n  next: string;\n}\n\nexport const getAssetPage = (url: string, type: AssetType, id: string): Promise<AssetPage> => {\n  return new Promise<AssetPage>((resolve, reject) => {\n    axios\n      .get(url)\n      .then((response: AxiosResponse) => {\n        const assets: Asset[] = response.data.results.map((result: any, idx: number) => {\n          const asset = resultToAsset(result, type, id);\n          asset.order = idx;\n          return asset;\n        });\n        resolve({ assets, next: response.data.next });\n      })\n      .catch(error => reject(error));\n  });\n};\n\nexport const getAssets = async (url: string, type: AssetType, id: string): Promise<Asset[]> => {\n  if (!url) {\n    return new Promise<Asset[]>((resolve, reject) => resolve([]));\n  }\n\n  let assets: Asset[] = [];\n  let pageUrl = url;\n  while (pageUrl) {\n    const assetPage = await getAssetPage(pageUrl, type, id);\n    assets = assets.concat(assetPage.assets);\n    pageUrl = assetPage.next;\n  }\n  return assets;\n};\n\nexport const resultToAsset = (result: any, type: AssetType, id: string): Asset => {\n  const idKey = id || 'uuid';\n\n  let assetType = type;\n\n  if (type === AssetType.Flow && result.type) {\n    switch (result.type) {\n      case 'message':\n        result.type = FlowTypes.MESSAGE;\n        break;\n      case 'voice':\n        result.type = FlowTypes.VOICE;\n        break;\n      case 'survey':\n        result.type = FlowTypes.SURVEY;\n        break;\n    }\n  }\n\n  if (type !== AssetType.Flow && result.type) {\n    assetType = result.type;\n  }\n\n  const asset: Asset = {\n    name: result.name || result.text || result.label || result[idKey],\n    id: result[idKey],\n    type: assetType\n  };\n\n  delete result[idKey];\n  delete result.name;\n  delete result.text;\n\n  asset.content = result;\n  return asset;\n};\n\nexport const isMatch = (\n  input: string,\n  asset: Asset,\n  shouldExclude: (asset: Asset) => boolean\n): boolean => {\n  if (shouldExclude && shouldExclude(asset)) {\n    return false;\n  }\n\n  const inputLower = input.toLowerCase();\n  // some assets have ids worth matching\n  if (asset.type === AssetType.Currency || asset.type === AssetType.Language) {\n    if (asset.id.toLowerCase().includes(inputLower)) {\n      return true;\n    }\n  }\n  return asset.name.toLowerCase().includes(inputLower);\n};\n\n/**\n * Searches an AssetMap for a substring\n */\nexport const searchAssetMap = (\n  query: string,\n  assets: AssetMap,\n  additionalOptions?: Asset[],\n  shouldExclude?: (asset: Asset) => boolean\n): Asset[] => {\n  const search = query.toLowerCase();\n  let matches = Object.keys(assets)\n    .map(key => assets[key])\n    .filter((asset: Asset) => isMatch(search, asset, shouldExclude));\n\n  // include our additional matches if we have any\n  matches = matches\n    .concat(additionalOptions || [])\n    .filter((asset: Asset) => isMatch(search, asset, shouldExclude));\n\n  return matches;\n};\n\nexport const createAssetStore = (endpoints: Endpoints): Promise<AssetStore> => {\n  return new Promise<AssetStore>((resolve, reject) => {\n    const assetStore: AssetStore = {\n      channels: {\n        endpoint: getURL(endpoints.channels),\n        type: AssetType.Channel,\n        items: {}\n      },\n      classifiers: {\n        endpoint: getURL(endpoints.classifiers),\n        type: AssetType.Classifier,\n        items: {}\n      },\n      languages: {\n        endpoint: getURL(endpoints.languages),\n        type: AssetType.Language,\n        items: {},\n        id: 'iso'\n      },\n      flows: {\n        endpoint: getURL(endpoints.flows),\n        type: AssetType.Flow,\n        items: {}\n      },\n      fields: {\n        endpoint: getURL(endpoints.fields),\n        type: AssetType.Field,\n        id: 'key',\n        items: {}\n      },\n      globals: {\n        endpoint: getURL(endpoints.globals),\n        type: AssetType.Global,\n        id: 'key',\n        items: {}\n      },\n      groups: {\n        endpoint: getURL(endpoints.groups),\n        type: AssetType.Group,\n        items: {}\n      },\n      revisions: {\n        endpoint: getURL(endpoints.revisions),\n        type: AssetType.Revision,\n        id: 'id',\n        items: {}\n      },\n      labels: {\n        endpoint: getURL(endpoints.labels),\n        type: AssetType.Label,\n        items: {}\n      },\n      results: {\n        type: AssetType.Result,\n        items: {}\n      },\n      recipients: {\n        endpoint: getURL(endpoints.recipients),\n        type: AssetType.Contact || AssetType.Group || AssetType.URN,\n        items: {},\n        id: 'id'\n      },\n      resthooks: {\n        endpoint: getURL(endpoints.resthooks),\n        type: AssetType.Resthook,\n        id: 'resthook',\n        items: {}\n      },\n      templates: {\n        endpoint: getURL(endpoints.templates),\n        type: AssetType.Template,\n        items: {}\n      },\n      currencies: {\n        type: AssetType.Currency,\n        id: 'id',\n        items: currencies,\n        prefetched: true\n      }\n    };\n\n    // prefetch some of our assets\n    const fetches: any[] = [];\n    ['languages', 'fields', 'groups', 'labels', 'globals'].forEach((storeId: string) => {\n      const store = assetStore[storeId];\n      fetches.push(\n        getAssets(store.endpoint, store.type, store.id || 'uuid').then((assets: Asset[]) => {\n          store.items = assetListToMap(assets);\n          store.prefetched = true;\n        })\n      );\n    });\n\n    // wait for our prefetches to finish\n    Promise.all(fetches).then((results: any) => {\n      resolve(assetStore);\n    });\n  });\n};\n\nexport const getFunctions = (endpoint: string): Promise<CompletionOption[]> => {\n  return new Promise<CompletionOption[]>((resolve, reject) => {\n    axios\n      .get(endpoint)\n      .then(response => {\n        resolve(response.data);\n      })\n      .catch(error => reject(error));\n  });\n};\n\nexport const getCompletionSchema = (endpoint: string): Promise<CompletionSchema> => {\n  return new Promise<CompletionSchema>((resolve, reject) => {\n    axios.get(endpoint).then(response => {\n      resolve(response.data);\n    });\n  });\n};\n\nexport const getFlowDefinition = (\n  revisions: Assets,\n  id: string = null\n): Promise<FlowDefinition> => {\n  return new Promise<FlowDefinition>((resolve, reject) => {\n    (async () => {\n      let revisionToLoad = id;\n      if (!revisionToLoad) {\n        try {\n          const response = await axios.get(`${revisions.endpoint}`);\n          if (response.data.results.length > 0) {\n            revisionToLoad = response.data.results[0].id;\n          }\n        } catch (error) {\n          reject(new Error(\"Couldn't reach revisions endpoint\"));\n        }\n      }\n\n      if (revisionToLoad) {\n        const url = `${revisions.endpoint}${revisionToLoad}`;\n        axios\n          .get(url)\n          .then((response: AxiosResponse) => {\n            const definition = response.data as FlowDefinition;\n            return resolve(definition);\n          })\n          .catch(error => reject(error));\n      } else {\n        reject(new Error('No revision found for flow'));\n      }\n    })();\n  });\n};\n\nexport const getBaseURL = (): string => {\n  const location = window.location;\n  return location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '');\n};\n\nexport const getURL = (path: string): string => {\n  let url = path;\n  if (!url.endsWith('/') && url.indexOf('?') === -1 && url.indexOf('groups') === -1) {\n    url += '/';\n  }\n\n  if (url.startsWith('http://') || url.startsWith('https://')) {\n    return url;\n  }\n\n  // Set url for netlify deployments\n  // if (process.env.NODE_ENV === \"preview\") {\n  // url = \"/.netlify/functions/\" + url;\n  // }\n\n  const result = `${getBaseURL() + url}`;\n  return result;\n};\n","import { StylesConfig } from 'react-select';\n\nexport const large = {\n  placeholder: (styles: StylesConfig, state: any) => {\n    return { ...styles, color: '#ddd', marginLeft: '3px' };\n  },\n  singleValue: (styles: StylesConfig, state: any) => {\n    return { ...styles, marginLeft: '3px' };\n  },\n  multiValue: (styles: StylesConfig, state: any) => {\n    return { ...styles, marginLeft: '0px' };\n  },\n  input: (styles: StylesConfig, state: any) => {\n    return {\n      ...styles,\n      marginLeft: '0px',\n      caretColor: '#999',\n      marginBottom: '0px',\n      boxShadow: 'none',\n      border: 'none'\n    };\n  },\n  control: (styles: StylesConfig, state: any) => {\n    return {\n      ...styles,\n      borderColor: '#ccc',\n      boxShadow: 'none',\n      transition: 'all 0.3s ease-in-out',\n      '&:hover': {\n        borderColor: '#ccc'\n      }\n    };\n  }\n};\n\nexport const messageStyle = {\n  control: (styles: StylesConfig, state: any) => {\n    return {\n      ...styles,\n      borderColor: '#ccc',\n      boxShadow: 'none',\n      borderBottom: 'none',\n      borderBottomRightRadius: '0px',\n      borderBottomLeftRadius: '0px',\n      '&:hover': {\n        borderColor: '#ccc'\n      }\n    };\n  }\n};\n\nexport const getErroredSelect = (baseControl: any): any => {\n  return {\n    control: (styles: StylesConfig) => ({\n      ...styles,\n      ...baseControl,\n      borderColor: 'tomato',\n      boxShadow: '0 0 0 3px rgba(255,196,186,0.5) !important;',\n      '&:hover': {\n        borderColor: 'tomato'\n      }\n    })\n  };\n};\n\nexport const small = {\n  control: (styles: StylesConfig) => ({\n    ...styles,\n    borderColor: '#ccc',\n    boxShadow: 'none',\n    '&:hover': {\n      borderColor: '#ccc'\n    },\n    maxHeight: '28px',\n    minHeight: '28px',\n    fontSize: '12px',\n    lineHeight: '12px'\n  }),\n  menuList: (styles: StylesConfig) => ({\n    ...styles,\n    maxHeight: 200\n  }),\n  option: (styles: StylesConfig) => ({\n    ...styles,\n    fontSize: 12\n  }),\n  singleValue: (styles: StylesConfig) => ({\n    ...styles,\n    maxHeight: 28,\n    lineHeight: '13px'\n  }),\n  indicatorsContainer: (styles: StylesConfig) => ({\n    ...styles,\n    height: 28,\n    maxHeight: 28\n  }),\n  valueContainer: (styles: StylesConfig) => ({\n    ...styles,\n    height: 28,\n    maxHeight: 28\n  }),\n  input: (styles: StylesConfig) => ({\n    ...styles,\n    marginLeft: '-2px',\n    marginTop: '-10px',\n    caretColor: '#999',\n    boxShadow: 'none',\n    border: 'none',\n    maxHeight: '20px',\n    minHeight: '20px',\n    lineHeight: '12px'\n  })\n};\n\nexport const tagging = {\n  control: (styles: StylesConfig, state: any) => {\n    return {\n      ...styles,\n      borderColor: '#ccc',\n      boxShadow: 'none',\n      transition: 'all 0.3s ease-in-out',\n      '&:hover': {\n        borderColor: '#ccc'\n      }\n    };\n  },\n  input: (styles: StylesConfig, state: any) => {\n    return {\n      ...styles,\n      marginLeft: '0px',\n      caretColor: '#999',\n      marginBottom: '0px',\n      boxShadow: 'none',\n      border: 'none'\n    };\n  },\n  multiValue: (styles: StylesConfig) => {\n    return {\n      ...styles,\n      maxHeight: 24,\n      minHeight: 24,\n      lineHeight: '17px',\n      backgroundColor: 'hsl(0, 0%, 94%)',\n      border: '1px solid hsl(0, 0%, 85%)'\n    };\n  }\n};\n","import { AssetStore, CompletionOption } from 'store/flowContext';\n\nexport interface CompletionAssets {\n  assetStore: AssetStore;\n  schema: CompletionSchema;\n}\n\nexport interface CompletionProperty {\n  key: string;\n  help: string;\n  type: string;\n}\n\nexport interface CompletionType {\n  name: string;\n\n  key_source?: string;\n  property_template?: CompletionProperty;\n  properties?: CompletionProperty[];\n}\n\nexport interface CompletionSchema {\n  types: CompletionType[];\n  root: CompletionProperty[];\n}\n\nexport const getFunctions = (functions: CompletionOption[], query: string): CompletionOption[] => {\n  return functions.filter((option: CompletionOption) => {\n    if (option.signature) {\n      return option.signature.indexOf(query) === 0;\n    }\n    return false;\n  });\n};\n\n/**\n * Takes a dot query and returns the completions options at the current level\n * @param dotQuery query such as \"results.field_name.ca\"\n */\nexport const getCompletions = (\n  completion: CompletionAssets,\n  dotQuery: string\n): CompletionOption[] => {\n  const parts = (dotQuery || '').split('.');\n  let currentProps: CompletionProperty[] = completion.schema.root;\n\n  let prefix = '';\n  let part = '';\n  while (parts.length > 0) {\n    part = parts.shift();\n    if (part) {\n      // eslint-disable-next-line\n      const nextProp = currentProps.find((prop: CompletionProperty) => prop.key === part);\n      if (nextProp) {\n        // eslint-disable-next-line\n        const nextType = completion.schema.types.find(\n          (type: CompletionType) => type.name === nextProp.type\n        );\n        if (nextType && nextType.properties) {\n          currentProps = nextType.properties;\n          prefix += part + '.';\n        } else if (nextType && nextType.property_template) {\n          prefix += part + '.';\n          const template = nextType.property_template;\n\n          const assetStore = completion.assetStore[nextType.name];\n          currentProps = assetStore\n            ? Object.keys(assetStore.items).map((key: string) => ({\n                key: template.key.replace('{key}', key),\n                help: template.help.replace('{key}', key),\n                type: template.type\n              }))\n            : [];\n        } else {\n          // eslint-disable-next-line\n          currentProps = currentProps.filter((prop: CompletionProperty) =>\n            prop.key.startsWith(part.toLowerCase())\n          );\n          break;\n        }\n      } else {\n        // eslint-disable-next-line\n        currentProps = currentProps.filter((prop: CompletionProperty) =>\n          prop.key.startsWith(part.toLowerCase())\n        );\n        break;\n      }\n    }\n  }\n\n  return currentProps.map((prop: CompletionProperty) => {\n    const name =\n      prop.key === '__default__' ? prefix.substr(0, prefix.length - 1) : prefix + prop.key;\n    return { name, summary: prop.help };\n  });\n};\n\nexport const getCompletionName = (option: CompletionOption): string => {\n  return option.name || option.signature.substr(0, option.signature.indexOf('('));\n};\n\nexport const getCompletionSignature = (option: CompletionOption): string => {\n  return option.signature.substr(option.signature.indexOf('('));\n};\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\n// TODO: consider chunking out translation files\n// and using something like XHR backend to lazily\n// load only the required language.\n// See https://www.i18next.com/how-to/add-or-load-translations\n\nimport defaults from './defaults.json';\nimport en from './en/resource.json';\nimport es from './es/resource.json';\n\nconst resources = {\n  defaults: { translation: defaults },\n  en: { translation: en },\n  es: { translation: es }\n};\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources,\n\n    // do not load a fallback\n    fallbackLng: ['en', 'defaults'],\n\n    interpolation: {\n      prefix: '[[',\n      suffix: ']]'\n    }\n  });\n\nexport default i18n;\n","import { react as bindCallbacks } from 'auto-bind';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { sortByName } from 'components/form/assetselector/helpers';\nimport { getIconForAssetType } from 'components/form/assetselector/widgets';\nimport FormElement, { FormElementProps } from 'components/form/FormElement';\nimport { getAssets, isMatch, postNewAsset, searchAssetMap } from 'external';\nimport * as React from 'react';\nimport { Asset, Assets, AssetType, CompletionOption, REMOVE_VALUE_ASSET } from 'store/flowContext';\nimport { AssetEntry } from 'store/nodeEditor';\nimport { uniqueBy } from 'utils';\nimport { getErroredSelect as getErroredControl, large, messageStyle } from 'utils/reactselect';\n\nimport styles from './AssetSelector.module.scss';\nimport { getCompletions, CompletionAssets } from 'utils/completion';\nimport i18n from 'config/i18n';\nimport { OptionProps, OptionsType, ValueType, StylesConfig, components } from 'react-select';\nimport Creatable from 'react-select/creatable';\nimport AsyncSelect from 'react-select/async';\n\ntype CallbackFunction = (options: OptionsType<Asset>) => void;\n\nconst AssetOption = (props: OptionProps<Asset>) => {\n  const asset = (props as any).data as Asset;\n\n  const prefix = '';\n  let suffix = '';\n  if (asset.type === AssetType.Currency) {\n    suffix = ` (${asset.id})`;\n  }\n\n  // TODO: add styling for different asset types\n  return !props.isDisabled ? (\n    <div ref={props.innerRef} {...props.innerProps}>\n      <components.Option {...props}>\n        {prefix}\n        {getIconForAssetType(asset)} {asset.name}\n        {suffix}\n      </components.Option>\n    </div>\n  ) : null;\n};\n\nexport interface AssetSelectorProps extends FormElementProps {\n  assets: Assets;\n  onChange: (selected: Asset[]) => void;\n\n  // a function to exclude assets when matching\n  shouldExclude?: (asset: Asset) => boolean;\n\n  // more options to consider when searching\n  additionalOptions?: Asset[];\n\n  // add custom styling\n  styles?: StylesConfig;\n\n  placeholder?: string;\n  searchable?: boolean;\n\n  // do we give the clearing option (trash)\n  valueClearable?: boolean;\n\n  // do we present an x to clear the form\n  formClearable?: boolean;\n\n  onFilter?: (asset: Asset) => boolean;\n\n  // creation options\n  createPrefix?: string;\n  onAssetCreated?: (asset: Asset) => void;\n  createAssetFromInput?: (input: string) => Asset;\n\n  // supports multiple selection\n  multi?: boolean;\n\n  // overrids default message when no options to show\n  noOptionsMessage?: string;\n\n  // override default sorting function\n  sortFunction?(a: Asset, b: Asset): number;\n\n  // completion options\n  completion?: CompletionAssets;\n}\n\ninterface AssetSelectorState {\n  defaultOptions: Asset[];\n  entry: AssetEntry;\n  isLoading: boolean;\n  menuOpen: boolean;\n  message?: string;\n}\n\nexport default class AssetSelector extends React.Component<AssetSelectorProps, AssetSelectorState> {\n  private lastCreation: number = 0;\n\n  constructor(props: AssetSelectorProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^is/, /^handle/, /^get/]\n    });\n\n    let defaultOptions: Asset[] = [];\n\n    // or it should be a list of local assets from an empty search\n    if (!props.assets.endpoint) {\n      defaultOptions = searchAssetMap('', props.assets.items);\n    }\n\n    this.state = {\n      menuOpen: false,\n      defaultOptions,\n      entry: this.props.entry,\n      isLoading: false\n    };\n  }\n\n  public static getDerivedStateFromProps(\n    nextProps: AssetSelectorProps,\n    prevState: AssetSelectorState\n  ): Partial<AssetSelectorState> {\n    // the default options should be true if there is an endpoint\n    let entry = nextProps.entry;\n\n    // if we don't know our entry name, look for it\n    if (prevState.defaultOptions && entry.value && !entry.value.name) {\n      const existing = prevState.defaultOptions.find((asset: Asset) => asset.id === entry.value.id);\n      if (existing) {\n        entry = { value: existing };\n      }\n    }\n\n    return { entry };\n  }\n\n  private handleChanged(selected: any): void {\n    this.setState({ message: null });\n    if (Array.isArray(selected) || !selected) {\n      this.props.onChange(selected);\n    } else if (this.props.onChange) {\n      /* istanbul ignore else */\n      this.props.onChange([selected]);\n    }\n  }\n\n  public handleLoadOptions(input: string, callback: CallbackFunction): void {\n    let options = this.props.additionalOptions || [];\n\n    if (this.props.completion && input.startsWith('@')) {\n      const completions = getCompletions(this.props.completion, input.substr(1));\n\n      callback(\n        completions.map((option: CompletionOption) => {\n          return {\n            id: '@' + option.name,\n            name: '@' + option.name,\n            type: AssetType.Expression\n          };\n        })\n      );\n      return;\n    }\n\n    let localMatches = searchAssetMap(\n      input,\n      this.props.assets.items,\n      options,\n      this.props.shouldExclude\n    );\n\n    const assets = this.props.assets;\n\n    // then query against our endpoint to add to that list if we weren't prefetched\n    if (!assets.prefetched) {\n      let url = assets.endpoint;\n      if (url && input) {\n        url += url.indexOf('?') < 0 ? '?' : '&';\n        url += 'search=' + encodeURIComponent(input);\n      }\n\n      getAssets(url, assets.type, assets.id || 'uuid').then((remoteAssets: Asset[]) => {\n        const remoteMatches = remoteAssets.filter((asset: Asset) =>\n          isMatch(input, asset, this.props.shouldExclude)\n        );\n\n        const removalAsset: Asset[] = this.props.valueClearable ? [REMOVE_VALUE_ASSET] : [];\n\n        // concat them all together and uniquify them\n        let matches = uniqueBy(localMatches.concat(remoteMatches).concat(removalAsset), 'id');\n\n        // if we don't know our initial name, look for it\n        if (this.props.entry.value && !this.props.entry.value.name) {\n          const existing = matches.find((asset: Asset) => asset.id === this.props.entry.value.id);\n          if (existing) {\n            this.props.onChange([existing]);\n          }\n        }\n\n        if (this.props.onFilter) {\n          matches = matches.filter(this.props.onFilter);\n        }\n\n        // sort our results and callback\n        callback(matches.sort(this.props.sortFunction || sortByName));\n      });\n    } else {\n      if (this.props.onFilter) {\n        localMatches = localMatches.filter(this.props.onFilter);\n      }\n      // only local matches\n      callback(localMatches.sort(this.props.sortFunction || sortByName));\n    }\n  }\n\n  public handleCheckValid(\n    input: string,\n    value: ValueType<Asset>,\n    options: OptionsType<Asset>\n  ): boolean {\n    if (!this.props.createAssetFromInput) {\n      return false;\n    }\n\n    if (input.length > 0) {\n      return (\n        searchAssetMap(\n          input,\n          this.props.assets.items,\n          this.props.additionalOptions,\n          this.props.shouldExclude\n        ).filter((asset: Asset) => asset.name.toLowerCase() === input.toLowerCase()).length === 0\n      );\n    }\n\n    return false;\n  }\n\n  public handleCreatePrompt(input: string): any {\n    return (this.props.createPrefix || `New ${this.props.name}: `) + input;\n  }\n\n  public handleGetNewOptionData(inputValue: string, label: any): Asset {\n    return { id: '_', name: label, type: null };\n  }\n\n  public handleLoadingComplete(): void {\n    this.setState({ isLoading: false });\n  }\n\n  public handleMenuOpen(): void {\n    this.setState({\n      menuOpen: true,\n      message: null\n    });\n  }\n\n  public handleMenuClose(): void {\n    this.setState({\n      menuOpen: false\n    });\n  }\n\n  public handleClearMessage(): void {\n    if (this.state.message) {\n      this.setState({ message: null });\n    }\n  }\n\n  public handleCreateOption(input: string): void {\n    // this is a hack due to react-select triggering two creates in a race\n    const now = new Date().getTime();\n    if (now - this.lastCreation < 1000) {\n      return;\n    }\n\n    this.lastCreation = now;\n    // mark us as loading\n    const asset: Asset = this.props.createAssetFromInput(input);\n\n    if (this.props.assets.endpoint) {\n      this.setState({ isLoading: true, message: null });\n      postNewAsset(this.props.assets, asset)\n        .then((result: Asset) => {\n          this.setState({ isLoading: false });\n          this.props.onAssetCreated(result);\n          // this.props.onChange([...(this.state.entry.value as any)]);\n        })\n        .catch(error => {\n          let suffix = '';\n          if (error.response && error.response.data && error.response.data.non_field_errors) {\n            suffix = ' ' + error.response.data.non_field_errors.join(', ');\n          }\n          this.setState({\n            message: `Couldn't create new ${this.props.assets.type} \"${input}\".${suffix}`,\n            isLoading: false\n          });\n        });\n    } else {\n      this.props.onChange([asset]);\n    }\n  }\n\n  private getStyle(): any {\n    if (this.state.message) {\n      return messageStyle;\n    }\n\n    let style = this.props.styles || large;\n    if (hasErrors(this.props.entry)) {\n      const erroredControl = getErroredControl(style.control({}, {}));\n      style = { ...style, ...erroredControl };\n    }\n    return style;\n  }\n\n  public getOptionValue(option: any) {\n    return option.value || option.id;\n  }\n\n  public getOptionLabel(option: any) {\n    return option.label || option.name;\n  }\n\n  public render(): JSX.Element {\n    const fallbackPlaceholder = i18n.t(\n      'asset_selector.placeholder',\n      'Select existing [[name]] or enter a new one',\n      { name: this.props.name.toLocaleLowerCase(), count: this.props.multi ? 1000 : 1 }\n    );\n\n    const commonAttributes = {\n      className: 'react-select ' + styles.selection,\n      captureMenuScroll: false,\n      value: this.state.entry.value,\n      components: { Option: AssetOption },\n      styles: this.getStyle(),\n      onChange: this.handleChanged,\n      onMenuOpen: this.handleMenuOpen,\n      onMenuClose: this.handleMenuClose,\n      onBlur: this.handleClearMessage,\n      menuShouldBlockScroll: true,\n      isMulti: this.props.multi,\n      isDisabled: this.state.isLoading,\n      isLoading: this.state.isLoading,\n      isClearable: this.props.formClearable,\n      isSearchable: this.props.searchable,\n      getOptionValue: this.getOptionValue,\n      getOptionLabel: this.getOptionLabel,\n      placeholder: this.props.placeholder || fallbackPlaceholder\n    };\n\n    if (this.props.createAssetFromInput) {\n      // Perform this in lieu of AsyncCreatable loadOptions\n      const localMatches = searchAssetMap(\n        '',\n        this.props.assets.items,\n        this.props.additionalOptions,\n        this.props.shouldExclude\n      );\n\n      return (\n        <FormElement\n          name={this.props.name}\n          entry={this.props.entry}\n          showLabel={this.props.showLabel}\n          helpText={this.props.helpText}\n          hideError={this.state.menuOpen}\n          __className={styles.ele}\n        >\n          <Creatable\n            {...commonAttributes}\n            options={localMatches.sort(this.props.sortFunction || sortByName)}\n            isValidNewOption={this.handleCheckValid}\n            formatCreateLabel={this.handleCreatePrompt}\n            getNewOptionData={this.handleGetNewOptionData}\n            onCreateOption={this.handleCreateOption}\n\n            // We are currently using Creatable since our assets are currently\n            // being preloaded on page load and because of isLoaded not being\n            // honored when set manually (this is needed to perform onCreateOption\n            // via call to asset endpoint with feedback). Once that fix is merged,\n            // we can consider using AsyncCreateable\n            //\n            // See: https://github.com/JedWatson/react-select/issues/2986\n            //      https://github.com/JedWatson/react-select/pull/3319\n            //\n          />\n          {this.state.message ? <div className={styles.message}>{this.state.message}</div> : null}\n        </FormElement>\n      );\n    } else {\n      // the default options should be true if there is an endpoint\n      let defaultOptions: any = this.props.assets.endpoint !== undefined;\n\n      // or it should be a list of local assets from an empty search\n      if (!defaultOptions) {\n        defaultOptions = this.state.defaultOptions;\n\n        if (this.props.shouldExclude) {\n          defaultOptions = searchAssetMap(\n            '',\n            this.props.assets.items,\n            this.props.additionalOptions,\n            this.props.shouldExclude\n          );\n        }\n      }\n\n      return (\n        <FormElement\n          name={this.props.name}\n          entry={this.props.entry}\n          showLabel={this.props.showLabel}\n          helpText={this.props.helpText}\n          hideError={this.state.menuOpen}\n          __className={styles.ele}\n        >\n          <AsyncSelect\n            {...commonAttributes}\n            defaultOptions={defaultOptions}\n            cacheOptions={true}\n            loadOptions={this.handleLoadOptions}\n            noOptionsMessage={(obj: { inputValue: string }) =>\n              this.props.noOptionsMessage || `No ${this.props.name} Found`\n            }\n          />\n          {this.state.message ? <div className={styles.message}>{this.state.message}</div> : null}\n        </FormElement>\n      );\n    }\n  }\n}\n","import * as React from 'react';\nimport { hasPendingTranslation } from 'components/form/assetselector/helpers';\nimport { Template } from 'flowTypes';\nimport { Asset, AssetType } from 'store/flowContext';\n\nexport const getIconForAssetType = (asset: Asset): JSX.Element => {\n  switch (asset.type) {\n    case AssetType.Group:\n      return <span className=\"fe-group\" />;\n    case AssetType.Label:\n      return <span className=\"fe-label\" />;\n    case AssetType.Flow:\n      return <span className=\"fe-split\" />;\n    case AssetType.Scheme:\n      return <span className=\"fe-connection\" />;\n    case AssetType.Template:\n      if (hasPendingTranslation(asset.content as Template)) {\n        return <span className=\"fe-hourglass\" />;\n      } else {\n        return <span className=\"fe-check\" />;\n      }\n    case AssetType.Remove:\n      return (\n        <>\n          <span className=\"fe-trash\" />\n          &nbsp;\n        </>\n      );\n    default:\n      return null;\n  }\n};\n","import { FlowTypes, FlowTypeVisibility, ONLINE, Operator, Type } from 'config/interfaces';\nimport { FlowEditorConfig } from 'flowTypes';\n\nexport const isOnlineFlowType = (flowType: FlowTypes) => {\n  return !!ONLINE.find((type: FlowTypes) => type === flowType);\n};\n\nexport const filterOperators = (operators: Operator[], config: FlowEditorConfig): Operator[] => {\n  return filterVisibility(operators, config);\n};\n\nexport const filterTypeConfigs = (typeConfigs: Type[], config: FlowEditorConfig): Type[] => {\n  return filterVisibility(typeConfigs, config);\n};\n\nconst filterVisibility = (items: FlowTypeVisibility[], config: FlowEditorConfig): any[] => {\n  return items.filter((item: FlowTypeVisibility) => {\n    // if we have a filter on our type, don't return it unless its present in our config\n    if (item.filter) {\n      if (!(config.filters || []).find((name: string) => name === item.filter)) {\n        return false;\n      }\n    }\n\n    if (item.visibility === undefined) {\n      return true;\n    }\n\n    return item.visibility.findIndex((ft: FlowTypes) => ft === config.flowType) > -1;\n  });\n};\n","import { fakePropType } from 'config/ConfigProvider';\nimport { filterTypeConfigs } from 'config/helpers';\nimport { Type } from 'config/interfaces';\nimport { configsToDisplay } from 'config/typeConfigs';\nimport * as React from 'react';\nimport Select from 'react-select';\nimport { large } from 'utils/reactselect';\nimport i18n from 'config/i18n';\nimport styles from './TypeList.module.scss';\n\nexport interface TypeListProps {\n  __className: string;\n  initialType: Type;\n  onChange(config: Type): void;\n}\n\nexport interface TypeListState {\n  config: Type;\n}\n\nexport default class TypeList extends React.PureComponent<TypeListProps, TypeListState> {\n  private typeConfigs: Type[];\n\n  constructor(props: TypeListProps) {\n    super(props);\n\n    this.state = {\n      config: this.props.initialType\n    };\n\n    this.handleChangeType = this.handleChangeType.bind(this);\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  private handleChangeType(config: Type): void {\n    this.setState(\n      {\n        config\n      },\n      () => this.props.onChange(config)\n    );\n  }\n\n  private getTypeConfigs(): Type[] {\n    if (this.typeConfigs === undefined) {\n      this.typeConfigs = filterTypeConfigs(configsToDisplay, this.context.config);\n    }\n    return this.typeConfigs;\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div className={`${this.props.__className} ${styles.type_list}`}>\n        <p>{i18n.t('forms.type_label', 'When a contact arrives at this point in your flow...')}</p>\n        <div>\n          <Select\n            className=\"react-select\"\n            styles={large as any}\n            value={this.state.config}\n            onChange={this.handleChangeType as any}\n            isSearchable={true}\n            isClearable={false}\n            getOptionValue={(option: Type) => option.type}\n            getOptionLabel={(option: Type) => option.description}\n            options={this.getTypeConfigs()}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import * as headerUtils from 'http-headers-validation';\nimport { Asset } from 'store/flowContext';\nimport { FormEntry, ValidationFailure } from 'store/nodeEditor';\nimport { SelectOption } from 'components/form/select/SelectElement';\n\nexport type FormInput = string | string[] | number | Asset | Asset[] | SelectOption;\nexport type ValidatorFunc = (\n  name: string,\n  input: FormInput\n) => { failures: ValidationFailure[]; value: FormInput };\n\n// Courtesy of @diegoperini: https://gist.github.com/dperini/729294\n// Expected behavior: https://mathiasbynens.be/demo/url-regex\nconst REGEX_URL = new RegExp(\n  '^' +\n    // protocol identifier\n    '(?:(?:https?|ftp)://)' +\n    // user:pass authentication\n    '(?:\\\\S+(?:u:\\\\S*)?@)?' +\n    '(?:' +\n    // IP address exclusion\n    // private & local networks\n    '(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})' +\n    '(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})' +\n    '(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})' +\n    // IP address dotted notation octets\n    // excludes loopback network 0.0.0.0\n    // excludes reserved space >= 224.0.0.0\n    // excludes network & broacast addresses\n    // (first & last IP address of each class)\n    '(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])' +\n    '(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}' +\n    '(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))' +\n    '|' +\n    // host name\n    '(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)' +\n    // domain name\n    '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*' +\n    // TLD identifier\n    '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))' +\n    // TLD may end with dot\n    '\\\\.?' +\n    ')' +\n    // port number\n    '(?::\\\\d{2,5})?' +\n    // resource path\n    '(?:[/?#]\\\\S*)?' +\n    '$',\n  'i'\n);\n\nconst inputAsString = (input: FormInput): string => {\n  let value = input;\n  if (typeof input === 'string') {\n    return value + '';\n  }\n\n  // if we are an object consider the name to match assets\n  if (input && typeof input === 'object') {\n    value = (input as any).name || undefined;\n  }\n\n  return value ? value + '' : null;\n};\n\nconst fromMaxItems = (max: number): ValidatorFunc => (name: string, input: FormInput) => {\n  if (Array.isArray(input)) {\n    const items = input as string[];\n    if (items.length > max) {\n      return {\n        value: input,\n        failures: [{ message: `${name} cannot have more than ${max} entries` }]\n      };\n    }\n  }\n  return { failures: [], value: input };\n};\n\nconst fromRegex = (regex: RegExp, message: string): ValidatorFunc => (\n  name: string,\n  input: FormInput\n) => {\n  const value = inputAsString(input);\n  if (value) {\n    if (!regex.test(value)) {\n      return {\n        value: input,\n        failures: [{ message: `${name} ${message}` }]\n      };\n    }\n  }\n  return { failures: [], value: input };\n};\n\nexport const validate = (\n  name: string,\n  input: FormInput,\n  validators: ValidatorFunc[]\n): FormEntry => {\n  let allFailures: ValidationFailure[] = [];\n  let value = input;\n  validators.forEach(validateFunc => {\n    const validation = validateFunc(name, input);\n    value = validation.value;\n    allFailures = allFailures.concat(validation.failures);\n  });\n\n  return { value, validationFailures: allFailures };\n};\n\nexport const Empty: ValidatorFunc = (name: string, input: FormInput) => {\n  if (input) {\n    return { value: input, failures: [{ message: `${name} is not finished` }] };\n  }\n\n  if (typeof input === 'string') {\n    if ((input as string).trim().length !== 0) {\n      return {\n        value: input,\n        failures: [{ message: `${name} is not finished` }]\n      };\n    }\n  } else if (Array.isArray(input)) {\n    if (input.length !== 0) {\n      return {\n        value: input,\n        failures: [{ message: `${name} is not finished` }]\n      };\n    }\n  }\n  return { failures: [], value: input };\n};\n\nexport const Required: ValidatorFunc = (name: string, input: FormInput) => {\n  if (!input) {\n    return { value: input, failures: [{ message: `${name} is required` }] };\n  }\n\n  if (typeof input === 'string') {\n    if ((input as string).trim().length === 0) {\n      return { value: input, failures: [{ message: `${name} is required` }] };\n    }\n  } else if (Array.isArray(input)) {\n    if (input.length === 0) {\n      return { value: input, failures: [{ message: `${name} are required` }] };\n    }\n  }\n  return { failures: [], value: input };\n};\n\nexport const Regex: ValidatorFunc = (name: string, input: FormInput) => {\n  if (typeof input === 'string') {\n    const inputString = input as string;\n\n    if (inputString.trim().startsWith('@')) {\n      return { failures: [], value: input };\n    }\n\n    try {\n      // tslint:disable-next-line:no-unused-expression\n      new RegExp(inputString);\n    } catch (e) {\n      return {\n        value: input,\n        failures: [{ message: `${name} is not a valid regex` }]\n      };\n    }\n  }\n\n  return { failures: [], value: input };\n};\n\nexport const LessThan = (amount: number, checkName: string): ValidatorFunc => (\n  name: string,\n  input: FormInput\n) => {\n  if (typeof input === 'string') {\n    if (parseFloat(input as string) >= amount) {\n      return {\n        value: input,\n        failures: [{ message: `${name} must be a less than ${checkName}` }]\n      };\n    }\n\n    return { failures: [], value: input };\n  }\n  return { failures: [], value: input };\n};\n\nexport const MoreThan = (amount: number, checkName: string): ValidatorFunc => (\n  name: string,\n  input: FormInput\n) => {\n  if (typeof input === 'string') {\n    if (parseFloat(input as string) <= amount) {\n      return {\n        value: input,\n        failures: [{ message: `${name} must be a more than ${checkName}` }]\n      };\n    }\n\n    return { failures: [], value: input };\n  }\n  return { failures: [], value: input };\n};\n\nexport const shouldRequireIf = (required: boolean): ValidatorFunc => (\n  name: string,\n  input: FormInput\n) => {\n  if (required) {\n    return Required(name, input);\n  }\n  return { failures: [], value: input };\n};\n\nexport const HeaderName: ValidatorFunc = (name: string, input: FormInput) => {\n  if (typeof input === 'string') {\n    if (input.trim().length > 0 && !headerUtils.validateHeaderName(input)) {\n      return { failures: [{ message: 'Invalid header name' }], value: input };\n    }\n  }\n  return { failures: [], value: input };\n};\n\nexport const IsValidIntent = (classifier: Asset): ValidatorFunc => (\n  name: string,\n  input: FormInput\n) => {\n  if (typeof input === 'object') {\n    const option = input as SelectOption;\n\n    if (option && classifier && classifier.content) {\n      const exists = !!classifier.content.intents.find((intent: string) => intent === option.value);\n      if (!exists) {\n        return {\n          value: input,\n          failures: [{ message: `${option.value} is not a valid intent for ${classifier.name}` }]\n        };\n      }\n    }\n    return { failures: [], value: input };\n  }\n  return { failures: [], value: input };\n};\n\nexport const MaxOfTenItems = fromMaxItems(10);\nexport const StartIsNonNumeric = fromRegex(/^(?!\\d)/, \"can't start with a number\");\nexport const ValidURL = fromRegex(REGEX_URL, 'is not a valid URL');\nexport const Numeric = fromRegex(/^([-+]?((\\.\\d+)|(\\d+)(\\.\\d+)?)$)/, 'must be a number');\nexport const Alphanumeric = fromRegex(/^[a-z\\d\\-_\\s]+$/i, 'can only have letters and numbers');\nexport const NumOrExp = fromRegex(/^@.*$|^([-+]?((\\.\\d+)|(\\d+)(\\.\\d+)?)$)/, 'must be a number');\n","import { hasErrors } from 'components/flow/actions/helpers';\nimport { SelectOption } from 'components/form/select/SelectElement';\nimport { Type } from 'config/interfaces';\nimport { Scheme } from 'config/typeConfigs';\nimport { AnyAction } from 'flowTypes';\nimport mutate from 'immutability-helper';\nimport { combineReducers } from 'redux';\nimport { LocalizedObject } from 'services/Localization';\nimport ActionTypes, {\n  UpdateNodeEditorSettings,\n  UpdateTypeConfigAction,\n  UpdateUserAddingActionAction\n} from 'store/actionTypes';\nimport Constants from 'store/constants';\nimport { Asset, RenderNode } from 'store/flowContext';\n\n// tslint:disable:no-shadowed-variable\nexport interface ValidationFailure {\n  message: string;\n}\n\nexport interface FormEntry {\n  value: any;\n  validationFailures?: ValidationFailure[];\n  persistantFailures?: ValidationFailure[];\n}\n\nexport interface SelectOptionEntry extends FormEntry {\n  value: SelectOption;\n}\n\nexport interface NumberEntry extends FormEntry {\n  value: number;\n}\n\nexport interface StringEntry extends FormEntry {\n  value: string;\n}\n\nexport interface SchemeEntry extends FormEntry {\n  value: Scheme;\n}\n\nexport interface StringArrayEntry extends FormEntry {\n  value: string[];\n}\n\nexport interface AssetEntry extends FormEntry {\n  value: Asset;\n}\n\nexport interface AssetArrayEntry extends FormEntry {\n  value: Asset[] | null;\n}\n\nexport const mergeForm = (\n  form: FormState,\n  toMerge: Partial<FormState>,\n  toRemove: any[] = []\n): FormState => {\n  // TODO: deal with explicit array setting\n  let updated = form || {};\n  // we auto update array items with uuids\n  for (const key of Object.keys(toMerge)) {\n    const entry: any = (toMerge as any)[key];\n    if (Array.isArray(entry)) {\n      for (const item of entry) {\n        // we support objects with uuids or FormEntry's with uuids\n        const isEntry = item.hasOwnProperty('value') && typeof item.value === 'object';\n\n        if ((isEntry && item.value.uuid) || item.uuid) {\n          const existingIdx = (form as any)[key].findIndex((existing: any) => {\n            if (isEntry) {\n              return existing.value.uuid === item.value.uuid;\n            } else {\n              return existing.uuid === item.uuid;\n            }\n          });\n\n          if (existingIdx > -1) {\n            // we found a match, merge us in\n            updated = mutate(updated, {\n              [key]: { $merge: { [existingIdx]: item } }\n            }) as FormState;\n          } else {\n            // couldn't find it, lets push it on\n            updated = mutate(updated, {\n              [key]: { $push: [item] }\n            }) as FormState;\n          }\n        }\n      }\n\n      // remove it from our merge\n      delete (toMerge as any)[key];\n    }\n  }\n\n  // removals can be items in an array\n  for (const remove of toRemove.filter((item: any) => typeof item === 'object')) {\n    for (const key of Object.keys(remove)) {\n      const entry: any = remove[key];\n      if (Array.isArray(entry)) {\n        for (const item of entry) {\n          // we support objects with uuids or FormEntry's with uuids\n          const isEntry = item.hasOwnProperty('value') && typeof item.value === 'object';\n          if ((isEntry && item.value.uuid) || item.uuid) {\n            updated = mutate(updated, {\n              [key]: (items: any) =>\n                items.filter((existing: any) => {\n                  if (isEntry) {\n                    return existing.value.uuid !== item.value.uuid;\n                  } else {\n                    return existing.uuid !== item.uuid;\n                  }\n                })\n            });\n          }\n        }\n      }\n    }\n  }\n\n  const removeKeys = toRemove.filter((item: any) => typeof item === 'string');\n  updated = mutate(updated, {\n    $merge: toMerge,\n    $unset: removeKeys\n  }) as FormState;\n\n  let valid = true;\n  for (const key of Object.keys(form)) {\n    const entry: any = (updated as any)[key];\n    if (Array.isArray(entry)) {\n      for (const item of entry) {\n        if (hasErrors(item)) {\n          valid = false;\n          break;\n        }\n      }\n    } else if (entry && typeof entry === 'object') {\n      if (hasErrors(entry)) {\n        valid = false;\n        break;\n      }\n    }\n  }\n\n  return mutate(updated, { $merge: { valid } }) as FormState;\n};\n\nexport interface FormState {\n  validationFailures?: ValidationFailure[];\n  valid: boolean;\n}\n\nexport interface NodeEditorSettings {\n  originalNode: RenderNode;\n  showAdvanced?: boolean;\n  originalAction?: AnyAction;\n  localizations?: LocalizedObject[];\n}\n\nexport interface NodeEditor {\n  typeConfig: Type | null;\n  userAddingAction: boolean;\n  settings: NodeEditorSettings | null;\n}\n\n// Initial state\nexport const initialState: NodeEditor = {\n  typeConfig: null,\n  userAddingAction: false,\n  settings: null\n};\n\n// Action Creators\nexport const updateTypeConfig = (typeConfig: Type): UpdateTypeConfigAction => ({\n  type: Constants.UPDATE_TYPE_CONFIG,\n  payload: {\n    typeConfig\n  }\n});\n\nexport const updateNodeEditorSettings = (\n  settings: NodeEditorSettings\n): UpdateNodeEditorSettings => ({\n  type: Constants.UPDATE_NODE_EDITOR_SETTINGS,\n  payload: {\n    settings\n  }\n});\n\nexport const updateUserAddingAction = (\n  userAddingAction: boolean\n): UpdateUserAddingActionAction => ({\n  type: Constants.UPDATE_USER_ADDING_ACTION,\n  payload: {\n    userAddingAction\n  }\n});\n\n// Reducers\nexport const typeConfig = (state: Type | null = initialState.typeConfig, action: ActionTypes) => {\n  switch (action.type) {\n    case Constants.UPDATE_TYPE_CONFIG:\n      return action.payload!.typeConfig;\n    default:\n      return state;\n  }\n};\n\nexport const userAddingAction = (\n  state: boolean = initialState.userAddingAction,\n  action: ActionTypes\n) => {\n  switch (action.type) {\n    case Constants.UPDATE_USER_ADDING_ACTION:\n      return action.payload!.userAddingAction;\n    default:\n      return state;\n  }\n};\n\nexport const settings = (\n  state: NodeEditorSettings | null = initialState.settings,\n  action: ActionTypes\n) => {\n  switch (action.type) {\n    case Constants.UPDATE_NODE_EDITOR_SETTINGS:\n      return action.payload!.settings;\n    default:\n      return state;\n  }\n};\n\n// Root reducer\nexport default combineReducers({\n  typeConfig,\n  userAddingAction,\n  settings\n});\n","import { AddLabelsFormState } from 'components/flow/actions/addlabels/AddLabelsForm';\nimport { getActionUUID } from 'components/flow/actions/helpers';\nimport { Types } from 'config/interfaces';\nimport { AddLabels } from 'flowTypes';\nimport { Asset, AssetType } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): AddLabelsFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.add_input_labels) {\n    const action = settings.originalAction as AddLabels;\n    return {\n      labels: {\n        value: action.labels.map(label => {\n          return { id: label.uuid, name: label.name, type: AssetType.Label };\n        })\n      },\n      valid: true\n    };\n  }\n\n  return {\n    labels: { value: [] },\n    valid: false\n  };\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  formState: AddLabelsFormState\n): AddLabels => {\n  return {\n    type: Types.add_input_labels,\n    labels: getAsset(formState.labels.value!, AssetType.Label),\n    uuid: getActionUUID(settings, Types.add_input_labels)\n  };\n};\n\nexport const getAsset = (assets: Asset[], type: AssetType): any[] => {\n  return assets\n    .filter((asset: Asset) => asset.type === type)\n    .map((asset: Asset) => {\n      return { uuid: asset.id, name: asset.name };\n    });\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { AssetArrayEntry, FormState, mergeForm } from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\n\nimport { initializeForm, stateToAction } from './helpers';\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\n\nexport interface AddLabelsFormState extends FormState {\n  labels: AssetArrayEntry;\n}\n\nexport const controlLabelSpecId = 'label';\n\nexport default class AddLabelsForm extends React.PureComponent<\n  ActionFormProps,\n  AddLabelsFormState\n> {\n  public static contextTypes = {\n    assetService: fakePropType\n  };\n\n  constructor(props: ActionFormProps) {\n    super(props);\n\n    this.state = initializeForm(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleSave(): void {\n    const valid = this.handleLabelsChanged(this.state.labels.value!, true);\n\n    if (valid) {\n      const newAction = stateToAction(this.props.nodeSettings, this.state);\n      this.props.updateAction(newAction);\n      this.props.onClose(false);\n    }\n  }\n\n  public handleLabelsChanged(selected: Asset[], submitting: boolean = false): boolean {\n    const updates: Partial<AddLabelsFormState> = {\n      labels: validate('Labels', selected, [shouldRequireIf(submitting)])\n    };\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public handleCreateAssetFromInput(input: string): any {\n    return { name: input };\n  }\n\n  public handleLabelCreated(label: Asset): void {\n    // update our store with our new group\n    this.props.addAsset('labels', label);\n\n    this.handleLabelsChanged(this.state.labels.value!.concat(label));\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p data-spec={controlLabelSpecId}>\n          <Trans i18nKey=\"forms.add_labels.summary\">\n            Select the labels to apply to the incoming message.\n          </Trans>\n        </p>\n\n        <AssetSelector\n          name=\"Labels\"\n          placeholder={i18n.t(\n            'enter_to_create_label',\n            'Enter the name of an existing label or create a new one'\n          )}\n          assets={this.props.assetStore.labels}\n          entry={this.state.labels}\n          searchable={true}\n          multi={true}\n          onChange={this.handleLabelsChanged}\n          createPrefix={i18n.t('create_label', 'Create Label') + ': '}\n          createAssetFromInput={this.handleCreateAssetFromInput}\n          onAssetCreated={this.handleLabelCreated}\n        />\n      </Dialog>\n    );\n  }\n}\n","import { AddURNFormState } from 'components/flow/actions/addurn/AddURNForm';\nimport { getActionUUID } from 'components/flow/actions/helpers';\nimport { SelectOption } from 'components/form/select/SelectElement';\nimport { Types } from 'config/interfaces';\nimport { Scheme, SCHEMES } from 'config/typeConfigs';\nimport { AddURN } from 'flowTypes';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const getSchemeOptions = (): SelectOption[] => {\n  return SCHEMES.map((scheme: Scheme) => {\n    return schemeToSelectOption(scheme);\n  });\n};\n\nexport const getSchemeObject = (scheme: string): Scheme => {\n  return SCHEMES.find((item: Scheme) => item.scheme === scheme)!;\n};\n\nexport const getSchemeSelectOption = (scheme: string): SelectOption =>\n  schemeToSelectOption(getSchemeObject(scheme));\n\nexport const schemeToSelectOption = (scheme: Scheme): SelectOption => {\n  return { value: scheme.scheme, label: scheme.name };\n};\n\nexport const initializeForm = (settings: NodeEditorSettings): AddURNFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.add_contact_urn) {\n    const { scheme, path } = settings.originalAction as AddURN;\n\n    return {\n      scheme: { value: getSchemeSelectOption(scheme) },\n      path: { value: path },\n      valid: true\n    };\n  }\n\n  return {\n    scheme: { value: getSchemeSelectOption('tel') },\n    path: { value: '' },\n    valid: false\n  };\n};\n\nexport const stateToAction = (settings: NodeEditorSettings, formState: AddURNFormState): AddURN => {\n  return {\n    type: Types.add_contact_urn,\n    uuid: getActionUUID(settings, Types.add_input_labels),\n    scheme: formState.scheme.value.value,\n    path: formState.path.value\n  };\n};\n","import * as React from 'react';\nimport { AddURN } from 'flowTypes';\n\nimport { getSchemeObject } from './helpers';\nimport i18n from 'config/i18n';\n\nexport const MAX_TO_SHOW = 3;\n\nconst AddURNComp: React.SFC<AddURN> = ({ scheme, path }): JSX.Element => {\n  const schemeObject = getSchemeObject(scheme);\n  const schemeName = schemeObject ? schemeObject.name : scheme;\n  return (\n    <>\n      {i18n.t('add', 'Add')} {schemeName} {path}\n    </>\n  );\n};\n\nexport default AddURNComp;\n","// https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values\nexport enum KeyValues {\n  KEY_AT = '@',\n  KEY_SPACE = ' ',\n  KEY_ENTER = 'Enter',\n  KEY_UP = 'ArrowUp',\n  KEY_DOWN = 'ArrowDown',\n  KEY_RIGHT = 'ArrowRight',\n  KEY_LEFT = 'ArrowLeft',\n  KEY_TAB = 'Tab',\n  KEY_ESC = 'Escape',\n  KEY_BACKSPACE = 'Backspace',\n  KEY_N = 'n',\n  KEY_P = 'p',\n  KEY_F = 'f',\n  KEY_B = 'b'\n}\n\nexport const MAX_GSM_SINGLE = 160;\nexport const MAX_GSM_MULTI = 153;\nexport const MAX_UNICODE_SINGLE = 70;\nexport const MAX_UNICODE_MULTI = 67;\n\nexport const COMPLETION_HELP = 'Tab to complete, enter to select';\n\nexport const GSM: { [key: string]: number } = {\n  // char: charCode\n  0: 48,\n  1: 49,\n  2: 50,\n  3: 51,\n  4: 52,\n  5: 53,\n  6: 54,\n  7: 55,\n  8: 56,\n  9: 57,\n  '\\n': 10,\n  '\\f': 12,\n  '\\r': 13,\n  ' ': 32,\n  '!': 33,\n  '\"': 34,\n  '#': 35,\n  $: 36,\n  '%': 37,\n  '&': 38,\n  \"'\": 39,\n  '(': 40,\n  ')': 41,\n  '*': 42,\n  '+': 43,\n  ',': 44,\n  '-': 45,\n  '.': 46,\n  '/': 47,\n  ':': 58,\n  ';': 59,\n  '<': 60,\n  '=': 61,\n  '>': 62,\n  '?': 63,\n  '@': 64,\n  A: 65,\n  B: 66,\n  C: 67,\n  D: 68,\n  E: 69,\n  F: 70,\n  G: 71,\n  H: 72,\n  I: 73,\n  J: 74,\n  K: 75,\n  L: 76,\n  M: 77,\n  N: 78,\n  O: 79,\n  P: 80,\n  Q: 81,\n  R: 82,\n  S: 83,\n  T: 84,\n  U: 85,\n  V: 86,\n  W: 87,\n  X: 88,\n  Y: 89,\n  Z: 90,\n  '[': 91,\n  '\\\\': 92,\n  ']': 93,\n  '^': 94,\n  _: 95,\n  a: 97,\n  b: 98,\n  c: 99,\n  d: 100,\n  e: 101,\n  f: 102,\n  g: 103,\n  h: 104,\n  i: 105,\n  j: 106,\n  k: 107,\n  l: 108,\n  m: 109,\n  n: 110,\n  o: 111,\n  p: 112,\n  q: 113,\n  r: 114,\n  s: 115,\n  t: 116,\n  u: 117,\n  v: 118,\n  w: 119,\n  x: 120,\n  y: 121,\n  z: 122,\n  '{': 123,\n  '|': 124,\n  '}': 125,\n  '~': 126,\n  '¡': 161,\n  '£': 163,\n  '¤': 164,\n  '¥': 165,\n  '§': 167,\n  '¿': 191,\n  Ä: 196,\n  Å: 197,\n  Æ: 198,\n  Ç: 199,\n  É: 201,\n  Ñ: 209,\n  Ö: 214,\n  Ø: 216,\n  Ü: 220,\n  ß: 223,\n  à: 224,\n  ä: 228,\n  å: 229,\n  æ: 230,\n  è: 232,\n  é: 233,\n  ì: 236,\n  ñ: 241,\n  ò: 242,\n  ö: 246,\n  ø: 248,\n  ù: 249,\n  ü: 252,\n  Γ: 915,\n  Δ: 916,\n  Θ: 920,\n  Λ: 923,\n  Ξ: 926,\n  Π: 928,\n  Σ: 931,\n  Φ: 934,\n  Ψ: 936,\n  Ω: 937,\n  '€': 8364\n};\n","import FormElement, { FormElementProps } from 'components/form/FormElement';\nimport * as React from 'react';\nimport Select, { StylesConfig } from 'react-select';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { large, getErroredSelect } from 'utils/reactselect';\n\ninterface SelectElementProps extends FormElementProps {\n  onChange?(value: any, action?: any): void;\n  onMenuOpen?: () => void;\n  onMenuClose?: () => void;\n  options: any;\n  placeholder?: string;\n  styles?: StylesConfig;\n}\n\nexport interface SelectOption {\n  label: string;\n  value: string;\n}\n\nexport default class SelectElement extends React.Component<SelectElementProps> {\n  private getStyle(): any {\n    let style = this.props.styles || large;\n    if (hasErrors(this.props.entry)) {\n      const erroredControl = getErroredSelect(style.control({}, {}));\n      style = { ...style, ...erroredControl };\n    }\n    return style;\n  }\n\n  public render(): JSX.Element {\n    return (\n      <FormElement name={this.props.name} entry={this.props.entry}>\n        <Select\n          isDisabled={this.props.onChange === undefined}\n          placeholder={this.props.placeholder}\n          styles={this.getStyle()}\n          name={this.props.name}\n          value={this.props.entry.value}\n          onChange={this.props.onChange}\n          onMenuOpen={this.props.onMenuOpen}\n          onMenuClose={this.props.onMenuClose}\n          isSearchable={false}\n          isClearable={false}\n          options={this.props.options}\n        />\n      </FormElement>\n    );\n  }\n}\n","import { UnicodeCharMap } from 'components/form/textinput/helpers';\nimport * as React from 'react';\nimport { pluralize, renderIf } from 'utils';\n\nimport styles from './UnicodeList.module.scss';\n\nexport interface UnicodeListProps {\n  unicodeChars: UnicodeCharMap;\n}\n\nexport const utfWarning = (num: number) =>\n  ` Note that your message may require more segments to send because it contains the following ${pluralize(\n    num,\n    'character'\n  )}:`;\n\nexport const unicodeListContainerSpecId = 'unicode-list-container';\nexport const unicodeListSpecId = 'unicode-list';\n\nconst UnicodeList: React.SFC<UnicodeListProps> = ({ unicodeChars }) => {\n  const chars = Object.keys(unicodeChars);\n  return renderIf(chars.length > 0)(\n    <span data-testid={unicodeListContainerSpecId}>\n      {utfWarning(chars.length)}\n      <div className={styles.unicode_list} data-testid={unicodeListSpecId}>\n        {chars.map((char, idx) => (\n          <span key={char} className={styles.unicode_char}>\n            {char}\n          </span>\n        ))}\n      </div>\n    </span>\n  );\n};\n\nexport default UnicodeList;\n","import classNames from 'classnames/bind';\nimport { UnicodeCharMap } from 'components/form/textinput/helpers';\nimport UnicodeList from 'components/form/textinput/UnicodeList';\nimport React from 'react';\nimport { pluralize } from 'utils';\n\nimport styles from './CharCount.module.scss';\n\ninterface CharCountProps {\n  count: number;\n  parts: number;\n  unicodeChars: UnicodeCharMap;\n}\n\nconst cx: any = classNames.bind(styles);\n\nconst CharCount: React.SFC<CharCountProps> = ({ count, parts, unicodeChars }) => {\n  const hasUnicode = Object.keys(unicodeChars).length > 0;\n  const toolTipTextClasses = cx({\n    [styles.tooltip_text]: true,\n    [styles.unicode]: hasUnicode\n  });\n  return (\n    <div className={styles.count}>\n      <div className={styles.tooltip}>\n        {count}\n        <span className={styles.divider}>/</span>\n        {parts}\n        <span className={toolTipTextClasses}>\n          This message will be about <b>{count}</b> {pluralize(count, 'character')} long. We\n          estimate it will take <b>{parts}</b> {pluralize(parts, 'message')} to send over SMS.\n          {hasUnicode && <UnicodeList unicodeChars={unicodeChars} />}\n          <div className={styles.fine_print}>\n            Using variables may result in longer messages that require more messages to send over\n            SMS.\n          </div>\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default CharCount;\n","const STATE_BODY = 0; // not in a expression\nconst STATE_PREFIX = 1; // '@' prefix that denotes the start of an expression\nconst STATE_IDENTIFIER = 2; // the identifier part, e.g. 'contact.age' in '@contact.age'\nconst STATE_BALANCED = 3; // the balanced parentheses delimited part, e.g. '(1 + 2)' in '@(1 + 2)'\nconst STATE_STRING_LITERAL = 4; // a string literal which could contain )\nconst STATE_ESCAPED_PREFIX = 5; // a '@' prefix preceded by another '@'\nconst STATE_IGNORE = 6;\n\ninterface Expression {\n  start: number;\n  end: number;\n  text: string;\n  closed: boolean;\n}\n\n/**\n * Determines whether the given string starts with the given text\n */\nconst startsWith = (str: string, start: string): boolean => {\n  return str.indexOf(start, 0) === 0;\n};\n\n/**\n * Checks the parsed (possibly partial) expression to determine if it's valid based on how it starts\n */\nconst isValidStart = (\n  partialExpression: string,\n  allowedTopLevels: string[],\n  allowIncomplete: boolean\n): boolean => {\n  const body = partialExpression.substring(1); // strip prefix\n\n  if (body[0] === '(') {\n    return true;\n  } else {\n    // if expression doesn't start with ( then check it's an allowed top level context reference\n    const topLevel = body.split('.')[0].toLowerCase();\n\n    if (allowIncomplete) {\n      for (const allowed of allowedTopLevels) {\n        if (startsWith(allowed, topLevel)) {\n          return true;\n        }\n      }\n    } else {\n      return allowedTopLevels.indexOf(topLevel) >= 0;\n    }\n    return false;\n  }\n};\n\n/**\n * Determines whether the given character is a word character, i.e. \\w in a regex\n */\nexport const isWordChar = (ch: string | 0): boolean => {\n  return (\n    (ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z') || (ch >= '0' && ch <= '9') || ch === '_'\n  );\n};\n\n/**\n * Determines whether we are in a string literal\n */\nconst isInStringLiteral = (partialExpression: string): boolean => {\n  // count number quotation marks\n  let numQuotes = 0;\n  for (const pos of partialExpression) {\n    if (pos === '\"') {\n      numQuotes++;\n    }\n  }\n  return numQuotes % 2 !== 0; // odd means last string literal is open\n};\n\nexport default class ExcellentParser {\n  private expressionPrefix: string;\n  private allowedTopLevels: string[];\n\n  /**\n   * Creates a new parser\n   * @param expressionPrefix the prefix for expressions, e.g. '@'\n   * @param allowedTopLevels the context names that are allowed without parentheses, e.g. [\"contact\", \"flow\", ...]\n   */\n  constructor(expressionPrefix: string, allowedTopLevels: string[]) {\n    this.expressionPrefix = expressionPrefix;\n    this.allowedTopLevels = allowedTopLevels;\n  }\n\n  /**\n   * Given the text up to the caret position, returns the expression currently being edited, without its prefix\n   */\n  public expressionContext(textToCaret: string): string {\n    const expressions = this.findExpressions(textToCaret);\n    if (expressions.length === 0) {\n      // no expressions found\n      return null;\n    }\n\n    const lastExpression = expressions[expressions.length - 1];\n\n    // has last expression already ended or is it closed (i.e. has balanced parentheses)\n    if (lastExpression.end < textToCaret.length || lastExpression.closed) {\n      return null;\n    }\n\n    return lastExpression.text.substring(1); // return without prefix\n  }\n\n  /**\n   * Given the partial expression currently being edited, returns the current auto-completable identifier\n   * which may be a function name or a context reference.\n   */\n  public autoCompleteContext(partialExpression: string): string {\n    if (isInStringLiteral(partialExpression)) {\n      return null;\n    }\n\n    const neededParentheses = [];\n    let fragment = '';\n    let skipChar = false;\n    let inQuotes = false;\n    let prependFlag = '';\n\n    for (let pos = partialExpression.length - 1; pos >= 0; pos--) {\n      const ch = partialExpression[pos];\n\n      if (ch === ' ') {\n        skipChar = true;\n      }\n\n      if (ch === ',') {\n        skipChar = true;\n        if (neededParentheses[neededParentheses.length - 1] !== '(') {\n          neededParentheses.push('(');\n        }\n      }\n\n      if (ch === ')' && !inQuotes) {\n        skipChar = true;\n        neededParentheses.push('(');\n        neededParentheses.push('(');\n      }\n\n      if (ch === '\"') {\n        inQuotes = !inQuotes;\n      }\n\n      if (skipChar) {\n        if (ch === '(' && !inQuotes) {\n          if (neededParentheses[neededParentheses.length - 1] === '(') {\n            neededParentheses.pop();\n          }\n\n          if (neededParentheses.length === 0) {\n            skipChar = false;\n          }\n        }\n      }\n\n      if (ch === '(' && fragment === '') {\n        prependFlag = '#';\n      }\n\n      if (skipChar || inQuotes || (ch === '(' && fragment === '')) {\n        continue;\n      }\n\n      if (isWordChar(ch) || ch === '.') {\n        fragment = ch + fragment;\n      } else {\n        break;\n      }\n    }\n\n    if (fragment.match(/[A-Za-z][\\w]*(\\.[\\w]+)*/)) {\n      return prependFlag + fragment;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * TODO find the function context\n   */\n  public functionContext(partialExpression: string): string {\n    const inString = isInStringLiteral(partialExpression);\n\n    // initial state is string literal if number of quotes is odd\n    let state = inString ? STATE_STRING_LITERAL : STATE_IGNORE;\n    let identifier = '';\n    let parenthesesLevel = partialExpression[-1] === '(' ? 0 : 1;\n\n    for (let pos = partialExpression.length - 1; pos >= 0; pos--) {\n      const ch = partialExpression[pos];\n\n      if (ch === '@') {\n        return '';\n      }\n\n      if (state === STATE_IGNORE) {\n        if (parenthesesLevel === 0 && (isWordChar(ch) || ch === '.')) {\n          state = STATE_IDENTIFIER;\n          identifier = ch + identifier;\n        } else if (ch === '\"') {\n          state = STATE_STRING_LITERAL;\n        } else if (ch === '(') {\n          parenthesesLevel--;\n        } else if (ch === ')') {\n          parenthesesLevel++;\n        }\n      } else if (state === STATE_IDENTIFIER) {\n        if (isWordChar(ch) || ch === '.') {\n          identifier = ch + identifier;\n        } else {\n          return identifier;\n        }\n      } else if (state === STATE_STRING_LITERAL) {\n        if (ch === '\"') {\n          state = STATE_IGNORE;\n        }\n      }\n    }\n    return '';\n  }\n\n  public getContactFields(text: string): string[] {\n    const fields = {};\n    const re = /((parent|child\\.)*contact\\.)*fields\\.([a-z0-9_]+)/g;\n    const expressions = this.findExpressions(text);\n    for (const expression of expressions) {\n      let match;\n      // tslint:disable-next-line:no-conditional-assignment\n      while ((match = re.exec(expression.text))) {\n        (fields as any)[match[3]] = true;\n      }\n    }\n    return Object.keys(fields);\n  }\n\n  /**\n   * Finds all expressions in the given text, including any partially complete expression at the end of the input\n   */\n  public findExpressions(text: string): Expression[] {\n    const expressions: Expression[] = [];\n    let state = STATE_BODY;\n    let currentExpression: Expression = null;\n    let parenthesesLevel = 0;\n\n    for (let pos = 0; pos < text.length; pos++) {\n      const ch = text[pos];\n\n      // in order to determine if the b in a.b terminates an identifier, we have to peek two characters ahead as\n      // it could be a.b. (b terminates) or a.b.c (b doesn't terminate)\n      const nextCh = pos < text.length - 1 ? text[pos + 1] : 0;\n      const nextNextCh = pos < text.length - 2 ? text[pos + 2] : 0;\n\n      if (state === STATE_BODY) {\n        if (ch === this.expressionPrefix && (isWordChar(nextCh) || nextCh === '(')) {\n          state = STATE_PREFIX;\n          currentExpression = {\n            start: pos,\n            end: null,\n            text: ch,\n            closed: false\n          };\n        } else if (ch === this.expressionPrefix && nextCh === this.expressionPrefix) {\n          state = STATE_ESCAPED_PREFIX;\n        }\n      } else if (state === STATE_PREFIX) {\n        if (isWordChar(ch)) {\n          state = STATE_IDENTIFIER; // we're parsing an expression like @XXX\n        } else if (ch === '(') {\n          // we're parsing an expression like @(1 + 2)\n          state = STATE_BALANCED;\n          parenthesesLevel += 1;\n        }\n        currentExpression.text += ch;\n      } else if (state === STATE_IDENTIFIER) {\n        currentExpression.text += ch;\n      } else if (state === STATE_BALANCED) {\n        if (ch === '(') {\n          parenthesesLevel += 1;\n        } else if (ch === ')') {\n          parenthesesLevel -= 1;\n        } else if (ch === '\"') {\n          state = STATE_STRING_LITERAL;\n        }\n\n        currentExpression.text += ch;\n\n        // expression terminates if parentheses balance\n        if (parenthesesLevel === 0) {\n          currentExpression.end = pos + 1;\n        }\n      } else if (state === STATE_STRING_LITERAL) {\n        if (ch === '\"') {\n          state = STATE_BALANCED;\n        }\n        currentExpression.text += ch;\n      } else if (state === STATE_ESCAPED_PREFIX) {\n        state = STATE_BODY;\n      }\n\n      // identifier can terminate expression in 3 ways:\n      //  1. next char is null (i.e. end of the input)\n      //  2. next char is not a word character or period\n      //  3. next char is a period, but it's not followed by a word character\n      if (state === STATE_IDENTIFIER) {\n        if (\n          (!isWordChar(nextCh) && nextCh !== '.') ||\n          (nextCh === '.' && !isWordChar(nextNextCh))\n        ) {\n          currentExpression.end = pos + 1;\n        }\n      }\n\n      if (currentExpression != null && (currentExpression.end != null || nextCh === 0)) {\n        const allowIncomplete = nextCh === 0; // if we're at the end of the input, allow incomplete expressions\n        if (isValidStart(currentExpression.text, this.allowedTopLevels, allowIncomplete)) {\n          currentExpression.closed = currentExpression.text[1] === '(' && parenthesesLevel === 0;\n          currentExpression.end = pos + 1;\n          expressions.push(currentExpression);\n        }\n\n        currentExpression = null;\n        state = STATE_BODY;\n      }\n    }\n\n    return expressions;\n  }\n}\n","import { GSM } from 'components/form/textinput/constants';\nimport { split } from 'split-sms';\n\nexport interface UnicodeCharMap {\n  [char: string]: boolean;\n}\n\ninterface MsgStats {\n  value: string;\n  parts: string[];\n  characterCount: number;\n  unicodeChars: UnicodeCharMap;\n}\n\nexport const isUnicode = (char: string): boolean => {\n  if (GSM.hasOwnProperty(char)) {\n    return false;\n  }\n  return true;\n};\n\nexport const getUnicodeChars = (msg: string): UnicodeCharMap => {\n  const chars = {};\n\n  for (const char of msg) {\n    if (isUnicode(char)) {\n      (chars as any)[char] = true;\n    }\n  }\n\n  return chars;\n};\n\n/**\n * Replaces unicode characters commonly inserted by text editors like MSWord with their GSM equivalents\n * @param {string} msg - msg to be cleaned\n * @returns {string} Cleaned msg\n */\nexport const cleanMsg = (msg: string): string =>\n  msg\n    .replace(/[\\u2018\\u2019]/g, \"'\") // Smart single quotes\n    .replace(/[\\u201C\\u201D]/g, '\"') // Smart double quotes\n    .replace(/[\\u2013\\u2014]/g, '-') // En/em dash\n    .replace(/\\u2026/g, '...') // Horizontal ellipsis\n    .replace(/\\u2002/g, ' '); // En space\n\n/**\n * First pass at providing the user with an accurate character count for their SMS messages.\n * Determines encoding, segments, max character limit per message and calculates character count.\n * Optionally replaces common unicode 'gotcha characters' with their GSM counterparts.\n * @param value\n * @param replace\n */\nexport const getMsgStats = (value: string | string[], replace?: boolean): MsgStats => {\n  let newVal = value as string;\n\n  // Localized values are stored as string arrays\n  if (newVal.constructor === Array) {\n    newVal = newVal[0];\n  }\n\n  if (replace) {\n    newVal = cleanMsg(newVal);\n  }\n\n  const stats = split(newVal);\n\n  return {\n    value: newVal,\n    parts: stats.parts,\n    characterCount: stats.length,\n    unicodeChars: getUnicodeChars(newVal)\n  };\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport FormElement, { FormElementProps } from 'components/form/FormElement';\nimport shared from 'components/form/FormElement.module.scss';\nimport CharCount from 'components/form/textinput/CharCount';\nimport { COMPLETION_HELP, KeyValues } from 'components/form/textinput/constants';\nimport ExcellentParser, { isWordChar } from 'components/form/textinput/ExcellentParser';\nimport { getMsgStats, UnicodeCharMap } from 'components/form/textinput/helpers';\nimport { Type, Types } from 'config/interfaces';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { AssetStore, CompletionOption, FunctionExample } from 'store/flowContext';\nimport { StringEntry, ValidationFailure } from 'store/nodeEditor';\nimport AppState from 'store/state';\nimport getCaretCoordinates from 'textarea-caret';\nimport {\n  CompletionSchema,\n  getCompletions,\n  getFunctions,\n  getCompletionName,\n  getCompletionSignature,\n  CompletionAssets\n} from 'utils/completion';\n\nimport styles from './TextInputElement.module.scss';\n\nconst ReactMarkdown = require('react-markdown');\n\n// import setCaretPosition from 'get-input-selection';\nexport enum Count {\n  SMS = 'SMS'\n}\n\nexport interface Coordinates {\n  left: number;\n  top: number;\n}\n\nexport type HTMLTextElement = HTMLTextAreaElement | HTMLInputElement;\n\nexport interface TextInputStoreProps {\n  typeConfig: Type;\n  assetStore: AssetStore;\n  completionSchema: CompletionSchema;\n  functions: CompletionOption[];\n}\n\nexport interface TextInputPassedProps extends FormElementProps {\n  entry?: StringEntry;\n  __className?: string;\n  count?: Count;\n  textarea?: boolean;\n  placeholder?: string;\n  autocomplete?: boolean;\n  focus?: boolean;\n  showInvalid?: boolean;\n  maxLength?: number;\n  onFieldFailures?: (failures: ValidationFailure[]) => void;\n  onChange?: (value: string, name?: string) => void;\n  onBlur?: (event: React.ChangeEvent<HTMLTextElement>) => void;\n  onEnter?: (event: React.KeyboardEvent<HTMLTextElement>) => boolean;\n}\n\nexport type TextInputProps = TextInputStoreProps & TextInputPassedProps;\n\nexport interface TextInputState {\n  value: string;\n  caretCoordinates: Coordinates;\n  completionVisible: boolean;\n  selectedOptionIndex: number;\n  matches: CompletionOption[];\n  query: string;\n  parts?: string[];\n  characterCount?: number;\n  unicodeChars?: UnicodeCharMap;\n  fn?: CompletionOption;\n}\n\ntype InitialState = Pick<\n  TextInputState,\n  'caretCoordinates' | 'completionVisible' | 'selectedOptionIndex' | 'matches' | 'query'\n>;\n\nconst initialState: InitialState = {\n  caretCoordinates: { left: 0, top: 0 },\n  completionVisible: false,\n  selectedOptionIndex: 0,\n  matches: [],\n  query: ''\n};\n\nconst cx: any = classNames.bind({ ...styles, ...shared });\n\nexport class TextInputElement extends React.Component<TextInputProps, TextInputState> {\n  private selectedEl: HTMLLIElement;\n  private textEl: HTMLTextElement;\n  private parser: ExcellentParser;\n  private nextCaret = -1;\n  private completion: CompletionAssets;\n\n  constructor(props: TextInputProps) {\n    super(props);\n\n    this.completion = {\n      schema: this.props.completionSchema,\n      assetStore: this.props.assetStore\n    };\n\n    let initial = '';\n    if (this.props.entry && this.props.entry.value) {\n      initial = this.props.entry.value;\n    }\n\n    this.state = {\n      value: initial,\n      ...initialState,\n      ...(this.props.count && this.props.count === Count.SMS ? getMsgStats(initial) : {})\n    };\n\n    this.parser = new ExcellentParser('@', [\n      'contact',\n      'child',\n      'fields',\n      'globals',\n      'input',\n      'parent',\n      'results',\n      'run',\n      'trigger',\n      'urns',\n      'webhook'\n    ]);\n\n    bindCallbacks(this, {\n      include: [/^on/, /Ref$/, 'setSelection', 'validate', /^has/, /^handle/]\n    });\n  }\n\n  private selectedElRef(ref: HTMLLIElement): HTMLLIElement {\n    return (this.selectedEl = ref);\n  }\n\n  private textElRef(ref: HTMLTextElement): HTMLTextElement {\n    return (this.textEl = ref);\n  }\n\n  public UNSAFE_componentWillReceiveProps(nextProps: TextInputProps): void {\n    if (nextProps.entry.value !== this.props.entry.value || this.nextCaret > -1) {\n      this.setState({ value: nextProps.entry.value }, () => {\n        if (this.nextCaret > -1) {\n          this.textEl.selectionStart = this.nextCaret;\n          this.textEl.selectionEnd = this.nextCaret;\n          this.nextCaret = -1;\n        }\n      });\n    }\n  }\n\n  public componentDidMount(): void {\n    this.checkForMissingFields();\n    return this.props.focus && this.focusInput();\n  }\n\n  public componentDidUpdate(previous: TextInputProps): void {\n    if (this.selectedEl) {\n      if (this.selectedEl.scrollIntoView) {\n        this.selectedEl.scrollIntoView(false);\n      }\n    }\n  }\n\n  private handleKeyDown(event: React.KeyboardEvent<HTMLTextElement>): void {\n    if (!this.props.autocomplete) {\n      return;\n    }\n\n    // if our parent cares about enter, give them a go at it\n    if (event.key === KeyValues.KEY_ENTER && this.props.onEnter) {\n      if (this.props.onEnter(event)) {\n        return;\n      }\n    }\n\n    switch (event.key) {\n      case KeyValues.KEY_SPACE:\n        if (event.ctrlKey) {\n          this.reevaluate(event.currentTarget.value, event.currentTarget.selectionStart, true);\n        }\n        break;\n      case KeyValues.KEY_P:\n        if (event.ctrlKey) {\n          if (this.state.completionVisible) {\n            this.setSelection(this.state.selectedOptionIndex - 1);\n            event.preventDefault();\n          }\n        }\n        break;\n      case KeyValues.KEY_UP:\n        if (this.state.completionVisible) {\n          this.setSelection(this.state.selectedOptionIndex - 1);\n          event.preventDefault();\n        }\n        break;\n      case KeyValues.KEY_N:\n        if (event.ctrlKey) {\n          if (this.state.completionVisible) {\n            this.setSelection(this.state.selectedOptionIndex + 1);\n            event.preventDefault();\n          }\n        }\n        break;\n      case KeyValues.KEY_DOWN:\n        if (this.state.completionVisible) {\n          this.setSelection(this.state.selectedOptionIndex + 1);\n          event.preventDefault();\n        }\n        return;\n      case KeyValues.KEY_AT:\n        this.setState({\n          completionVisible: true,\n          caretCoordinates: getCaretCoordinates(this.textEl, this.textEl.selectionEnd)\n        });\n        return;\n      case KeyValues.KEY_ESC:\n        if (this.state.completionVisible) {\n          this.setState({\n            completionVisible: false\n          });\n          event.preventDefault();\n          event.stopPropagation();\n        }\n        return;\n      case KeyValues.KEY_TAB:\n      case KeyValues.KEY_ENTER:\n        let caret = event.currentTarget.selectionStart;\n        if (this.state.completionVisible && this.state.matches.length > 0) {\n          const option = this.state.matches[this.state.selectedOptionIndex];\n          let newValue = this.state.value.substr(0, caret - this.state.query.length);\n\n          if (option.signature) {\n            let parens = 1;\n            if (option.signature.indexOf('()') > -1) {\n              parens++;\n            }\n\n            newValue += option.signature.substring(0, option.signature.indexOf('(') + parens);\n          } else {\n            newValue += option.name;\n          }\n\n          const newCaret = newValue.length;\n\n          // skip over adjacent text including dot completions\n          for (const ch of this.state.value.substr(caret)) {\n            if (isWordChar(ch) || ch === '.') {\n              caret++;\n            } else {\n              break;\n            }\n          }\n\n          newValue += this.state.value.substr(caret);\n\n          let fn: CompletionOption = null;\n          let query = '';\n          let completionVisible = false;\n          const matches: CompletionOption[] = [];\n          if (event.key === KeyValues.KEY_TAB || option.signature) {\n            query = option.name;\n            matches.push(\n              ...getCompletions(this.completion, query),\n              ...getFunctions(this.props.functions, query)\n            );\n            completionVisible = matches.length > 0;\n            if (option.signature && option.signature.indexOf('()') === -1) {\n              fn = option;\n            }\n          }\n\n          this.setState(\n            {\n              fn,\n              query,\n              value: newValue,\n              matches,\n              completionVisible,\n              selectedOptionIndex: 0\n            },\n            () => {\n              if (this.props.onChange) {\n                this.props.onChange(this.state.value, this.props.name);\n              }\n              this.nextCaret = newCaret;\n            }\n          );\n\n          event.preventDefault();\n          event.stopPropagation();\n          return;\n        } else {\n          if (this.props.onEnter) {\n            this.checkForMissingFields();\n            this.props.onEnter(event);\n          }\n        }\n        return;\n      case KeyValues.KEY_BACKSPACE:\n        // go backwards on our value until we reach either a space or @\n        this.executeQuery(event.currentTarget.value, event.currentTarget.selectionStart - 1);\n        return;\n    }\n  }\n\n  private reevaluate(value: string, selectionStart: number, force: boolean = false): void {\n    if (this.state.completionVisible || force) {\n      this.setState(this.executeQuery(value, selectionStart) as TextInputState);\n    }\n  }\n\n  private handleKeyUp(event: React.KeyboardEvent<HTMLTextElement>): void {\n    if (event.currentTarget) {\n      const {\n        currentTarget: { value, selectionStart }\n      } = event;\n\n      switch (event.key) {\n        case KeyValues.KEY_P:\n        case KeyValues.KEY_N:\n          if (this.state.completionVisible && event.ctrlKey) {\n            return;\n          }\n          this.reevaluate(value, selectionStart);\n          return;\n\n        case KeyValues.KEY_F:\n        case KeyValues.KEY_B:\n          this.reevaluate(value, selectionStart);\n          return;\n\n        case KeyValues.KEY_RIGHT:\n        case KeyValues.KEY_LEFT:\n          this.reevaluate(value, selectionStart);\n          return;\n\n        case KeyValues.KEY_UP:\n        case KeyValues.KEY_DOWN:\n          if (this.state.completionVisible) {\n            return;\n          }\n          this.reevaluate(value, selectionStart);\n      }\n    }\n  }\n\n  private handleClick(event: React.MouseEvent<HTMLTextElement>): void {\n    if (event.currentTarget) {\n      const {\n        currentTarget: { value, selectionStart }\n      } = event;\n\n      this.reevaluate(value, selectionStart);\n    }\n  }\n\n  private checkForMissingFields(): boolean {\n    // check if we have any bogus field references\n    if (this.props.autocomplete && this.props.onFieldFailures) {\n      const fields = this.parser.getContactFields(this.state.value);\n      const missingFields = fields\n        .filter((key: string) => !(key in this.props.assetStore.fields.items))\n        .map((field: string) => {\n          return {\n            message: `${field} is not a valid contact field`\n          };\n        });\n\n      this.props.onFieldFailures(missingFields);\n      return missingFields.length > 0;\n    }\n    return false;\n  }\n\n  private handleBlur(event: React.ChangeEvent<HTMLTextElement>): void {\n    if (this.checkForMissingFields()) {\n      if (this.props.onBlur) {\n        this.props.onBlur(event);\n      }\n      return;\n    }\n\n    this.setState(\n      {\n        query: '',\n        matches: [],\n        selectedOptionIndex: 0,\n        completionVisible: false\n      },\n      () => this.props.onBlur && this.props.onBlur(event)\n    );\n  }\n\n  private executeQuery(value: string, position: number): Partial<TextInputState> {\n    // go backwards until we have a query\n    const expression = this.parser.expressionContext(value.substr(0, position));\n\n    let fn: CompletionOption = null;\n    if (expression !== null) {\n      const includeFunctions = expression.startsWith('(');\n\n      if (includeFunctions) {\n        const functionQuery = this.parser.functionContext(expression);\n        if (functionQuery) {\n          const fns = getFunctions(this.props.functions, functionQuery);\n          if (fns.length > 0) {\n            fn = fns[0];\n          }\n        }\n      }\n\n      for (let i = expression.length; i >= 0; i--) {\n        const curr = expression[i];\n        if (curr === '@' || curr === '(' || curr === ' ' || i === 0) {\n          // don't include open parens or spaces\n          if (curr === '(' || curr === ' ') {\n            i++;\n\n            if (!includeFunctions) {\n              return {\n                completionVisible: false\n              };\n            }\n          }\n\n          const query = expression.substr(i, expression.length - i);\n          const matches = getCompletions(this.completion, query);\n\n          if (includeFunctions) {\n            matches.push(...getFunctions(this.props.functions, query));\n          }\n\n          const completionVisible = matches.length > 0;\n          return {\n            query,\n            matches,\n            completionVisible,\n            selectedOptionIndex: 0,\n            caretCoordinates: getCaretCoordinates(this.textEl, position - query.length),\n            fn,\n            value\n          };\n        }\n      }\n    }\n\n    return {\n      // keep our text field state\n      value,\n\n      // reset the others\n      query: null,\n      completionVisible: false,\n      matches: [],\n      selectedOptionIndex: 0\n    };\n  }\n\n  private handleChange({\n    currentTarget: { value, selectionStart }\n  }: React.ChangeEvent<HTMLTextElement>): void {\n    const updates: Partial<TextInputState> = this.executeQuery(value, selectionStart);\n\n    if (this.props.autocomplete) {\n      if (this.props.count === Count.SMS) {\n        const { parts, characterCount, unicodeChars } = getMsgStats(value, true);\n        updates.parts = parts;\n        updates.characterCount = characterCount;\n        updates.unicodeChars = unicodeChars;\n      }\n\n      updates.selectedOptionIndex = 0;\n      this.setState(updates as TextInputState);\n    }\n\n    if (this.props.onChange) {\n      this.props.onChange(value, this.props.name);\n    }\n  }\n\n  private setSelection(selectedIdx: number): void {\n    let selectedOptionIndex: number = selectedIdx;\n\n    // Can't exceed the last option\n    if (selectedIdx >= this.state.matches.length) {\n      selectedOptionIndex = this.state.matches.length - 1;\n    }\n\n    // Can't go beyond the first option\n    if (selectedIdx < 0) {\n      selectedOptionIndex = 0;\n    }\n\n    if (selectedOptionIndex !== this.state.selectedOptionIndex) {\n      this.setState({ selectedOptionIndex });\n    }\n  }\n\n  private focusInput(): void {\n    const {\n      value: { length }\n    } = this.textEl;\n    this.textEl.focus();\n    this.textEl.selectionStart = length;\n  }\n\n  private getOption(\n    option: CompletionOption,\n    showSummary: boolean = false,\n    numExamples: number = 0\n  ): JSX.Element {\n    const name = getCompletionName(option);\n\n    let summary = null;\n    let examples = null;\n\n    if (showSummary) {\n      summary = (\n        <div data-spec=\"option-summary\" className={styles.option_summary}>\n          <ReactMarkdown source={option.summary} />\n        </div>\n      );\n    }\n\n    if (option.examples && numExamples > 0) {\n      examples = (\n        <div data-spec=\"option-example\" className={styles.option_examples}>\n          <div className={styles.example_header}>\n            EXAMPLE\n            {numExamples !== 1 ? 'S' : ''}\n          </div>\n\n          <div className={styles.example}>\n            {option.examples.slice(0, numExamples).map((example: FunctionExample, idx: number) => (\n              <div key={option.name + '_example_' + idx}> {example.template}</div>\n            ))}\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <>\n        <div data-spec=\"option-name\" className={styles.option_name}>\n          {option.signature ? <div className={styles.fn_marker}>ƒ</div> : null}\n          {name}\n\n          {showSummary && option.signature ? (\n            <div className={styles.option_signature}>{getCompletionSignature(option)}</div>\n          ) : null}\n        </div>\n        {summary}\n        {examples}\n      </>\n    );\n  }\n\n  private getOptions(): JSX.Element[] {\n    return this.state.matches.map((option: CompletionOption, idx: number) => {\n      const optionClasses = [styles.option];\n\n      if (idx === this.state.selectedOptionIndex) {\n        optionClasses.push(styles.selected);\n\n        if (idx === 0) {\n          optionClasses.push(styles.first_option);\n        }\n\n        return (\n          <li\n            ref={this.selectedElRef}\n            className={optionClasses.join(' ')}\n            key={option.signature || option.name}\n          >\n            {this.getOption(option, true, 1)}\n          </li>\n        );\n      }\n\n      return (\n        <li className={optionClasses.join(' ')} key={option.signature || option.name}>\n          {this.getOption(option, false)}\n        </li>\n      );\n    });\n  }\n\n  private hasErrors(): boolean {\n    return this.getMergedErrors().length > 0;\n  }\n\n  private getMergedErrors(): ValidationFailure[] {\n    if (this.props.entry) {\n      return (this.props.entry.validationFailures || []).concat(\n        this.props.entry.persistantFailures || []\n      );\n    }\n    return [];\n  }\n\n  private getScroll(): number {\n    if (this.textEl) {\n      return this.textEl.scrollTop;\n    }\n    return 0;\n  }\n\n  private getError(): string {\n    return this.props.entry.validationFailures && this.props.entry.validationFailures.length > 0\n      ? this.props.entry.validationFailures[0].message\n      : null;\n  }\n\n  private getTextElement(): JSX.Element {\n    const textElClasses = cx({\n      [styles.textinput]: true,\n      [shared.invalid]: this.hasErrors() || this.props.showInvalid === true\n    });\n\n    let text = this.state.value;\n    if (this.props.entry) {\n      text = this.props.entry.value;\n    }\n\n    if (this.props.textarea) {\n      return (\n        <textarea\n          name={this.props.name}\n          data-spec=\"input\"\n          data-testid=\"input\"\n          ref={this.textElRef}\n          className={textElClasses}\n          value={text}\n          onClick={this.handleClick}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          onKeyDown={this.handleKeyDown}\n          onKeyUp={this.handleKeyUp}\n          placeholder={this.props.placeholder}\n          maxLength={this.props.maxLength || -1}\n        />\n      );\n    } else {\n      return (\n        <input\n          name={this.props.name}\n          data-spec=\"input\"\n          data-testid=\"input\"\n          ref={this.textElRef}\n          type=\"text\"\n          className={textElClasses}\n          value={text}\n          onClick={this.handleClick}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          onKeyDown={this.handleKeyDown}\n          onKeyUp={this.handleKeyUp}\n          placeholder={this.props.placeholder}\n          maxLength={this.props.maxLength || -1}\n        />\n      );\n    }\n  }\n\n  public render(): JSX.Element {\n    const completionClasses = cx({\n      [styles.completion_container]: true,\n      [styles.hidden]: !this.state.completionVisible || this.state.matches.length === 0\n    });\n\n    const fnClasses = cx({\n      [styles.fn_container]: true,\n      [styles.hidden]: !this.state.completionVisible || this.state.matches.length === 0\n    });\n    const options: JSX.Element[] = this.getOptions();\n    const charCount: JSX.Element =\n      this.props.count && this.props.count === Count.SMS ? (\n        <CharCount\n          count={this.state.characterCount}\n          parts={this.state.parts.length}\n          unicodeChars={this.state.unicodeChars}\n        />\n      ) : null;\n\n    const sendMsgError =\n      this.hasErrors() &&\n      this.props.name === 'Message' &&\n      (this.props.typeConfig.type === Types.send_msg ||\n        this.props.typeConfig.type === Types.send_broadcast);\n\n    const showFn = this.state.fn && !this.state.query;\n\n    return (\n      <FormElement\n        __className={this.props.__className}\n        name={this.props.name}\n        helpText={this.props.helpText}\n        showLabel={this.props.showLabel}\n        // errors={this.state.errors}\n        entry={this.props.entry}\n        sendMsgError={sendMsgError}\n      >\n        <div className={styles.wrapper}>\n          {this.getTextElement()}\n          <div\n            className={completionClasses}\n            style={{\n              top: this.state.caretCoordinates.top - this.getScroll(),\n              left: this.state.caretCoordinates.left\n            }}\n            data-spec=\"completion-options\"\n          >\n            <div className={styles.options_wrapper}>\n              <ul className={styles.option_list} data-spec=\"completion-list\">\n                {options}\n              </ul>\n              <div className={styles.help} data-spec=\"completion-help\">\n                {COMPLETION_HELP}\n              </div>\n            </div>\n\n            {showFn ? (\n              <div className={fnClasses}>{this.getOption(this.state.fn, true, 3)}</div>\n            ) : null}\n          </div>\n        </div>\n        {charCount}\n      </FormElement>\n    );\n  }\n}\n\n/* istanbul ignore next */\nconst mapStateToProps = ({\n  flowContext: { assetStore },\n  editorState: { completionSchema, functions },\n  nodeEditor: { typeConfig }\n}: AppState) => ({\n  typeConfig,\n  assetStore,\n  completionSchema,\n  functions\n});\n\nconst ConnectedTextInputElement = connect(\n  mapStateToProps,\n  null,\n  null,\n  { forwardRef: true }\n)(TextInputElement);\n\nexport default ConnectedTextInputElement;\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { ActionFormProps } from 'components/flow/props';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport {\n  FormState,\n  mergeForm,\n  SelectOptionEntry,\n  StringEntry,\n  ValidationFailure\n} from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\n\nimport styles from './AddURNForm.module.scss';\nimport { getSchemeOptions, initializeForm, stateToAction } from './helpers';\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\n\nexport interface AddURNFormState extends FormState {\n  scheme: SelectOptionEntry;\n  path: StringEntry;\n}\n\nexport const controlLabelSpecId = 'label';\n\nexport default class AddURNForm extends React.PureComponent<ActionFormProps, AddURNFormState> {\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = initializeForm(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public handleSave(): void {\n    const valid = this.handlePathChanged(this.state.path.value, null, true);\n    if (valid) {\n      const newAction = stateToAction(this.props.nodeSettings, this.state);\n      this.props.updateAction(newAction);\n      this.props.onClose(false);\n    }\n  }\n\n  public handleSchemeChanged(selected: SelectOption): boolean {\n    const updates: Partial<AddURNFormState> = {\n      scheme: { value: selected }\n    };\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  public handlePathChanged(value: string, name: string, submitting: boolean = false): boolean {\n    const updates: Partial<AddURNFormState> = {\n      path: validate('URN', value, [shouldRequireIf(submitting)])\n    };\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p data-spec={controlLabelSpecId}>\n          <Trans i18nKey=\"forms.add_urn.summary\">\n            Add a new URN to reach the contact such as a phone number.\n          </Trans>\n        </p>\n        <div className={styles.scheme_selection}>\n          <SelectElement\n            name=\"URN Type\"\n            entry={this.state.scheme}\n            onChange={this.handleSchemeChanged}\n            options={getSchemeOptions()}\n          />\n        </div>\n        <div className={styles.path}>\n          <TextInputElement\n            name=\"URN\"\n            placeholder=\"Enter the URN value\"\n            entry={this.state.path}\n            onChange={this.handlePathChanged}\n            onFieldFailures={(persistantFailures: ValidationFailure[]) => {\n              const path = { ...this.state.path, persistantFailures };\n              this.setState({\n                path,\n                valid: this.state.valid && !hasErrors(path)\n              });\n            }}\n            autocomplete={true}\n          />\n        </div>\n      </Dialog>\n    );\n  }\n}\n","import * as React from 'react';\nimport { CallResthook } from 'flowTypes';\n\nconst CallResthookComp: React.SFC<CallResthook> = ({ resthook }): JSX.Element => (\n  <div>{resthook}</div>\n);\n\nexport default CallResthookComp;\n","import * as React from 'react';\nimport { CallWebhook } from 'flowTypes';\n\nconst CallWebhookComp: React.SFC<CallWebhook> = ({ url }): JSX.Element => <div>{url}</div>;\n\nexport default CallWebhookComp;\n","import { Group } from 'flowTypes';\nimport { Asset, AssetType } from 'store/flowContext';\nimport { AssetArrayEntry, FormState } from 'store/nodeEditor';\n\nexport const labelSpecId = 'label';\n\nexport interface ChangeGroupsFormState extends FormState {\n  groups: AssetArrayEntry;\n  removeAll?: boolean;\n}\n\nexport const excludeDynamicGroups = (asset: Asset): boolean => {\n  return asset.content && asset.content.query;\n};\n\nexport const mapGroupsToAssets = (groups: Group[]): Asset[] =>\n  groups.map(({ name, uuid }) => ({ name, id: uuid, type: AssetType.Group }));\n\nexport const mapAssetsToGroups = (searchResults: Asset[] | null): Group[] => {\n  if (!searchResults) {\n    return [];\n  }\n\n  return searchResults.map(result => ({\n    uuid: result.id,\n    name: result.name\n  }));\n};\n","import {\n  ChangeGroupsFormState,\n  mapAssetsToGroups,\n  mapGroupsToAssets\n} from 'components/flow/actions/changegroups/helpers';\nimport { getActionUUID } from 'components/flow/actions/helpers';\nimport { Types } from 'config/interfaces';\nimport { ChangeGroups } from 'flowTypes';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): ChangeGroupsFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.add_contact_groups) {\n    const action = settings.originalAction as ChangeGroups;\n    return {\n      groups: { value: mapGroupsToAssets(action.groups) },\n      valid: true\n    };\n  }\n\n  return {\n    groups: { value: null },\n    valid: false\n  };\n};\n\nexport const stateToAction = (\n  nodeSettings: NodeEditorSettings,\n  state: ChangeGroupsFormState\n): ChangeGroups => {\n  return {\n    type: Types.add_contact_groups,\n    groups: mapAssetsToGroups(state.groups.value),\n    uuid: getActionUUID(nodeSettings, Types.add_contact_groups)\n  };\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { ChangeGroups } from 'flowTypes';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { mergeForm } from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\n\nimport { ChangeGroupsFormState, excludeDynamicGroups, labelSpecId } from '../helpers';\nimport { initializeForm, stateToAction } from './helpers';\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\n\nexport default class AddGroupsForm extends React.Component<ActionFormProps, ChangeGroupsFormState> {\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = initializeForm(this.props.nodeSettings) as ChangeGroupsFormState;\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleSave(): void {\n    const valid = this.handleGroupsChanged(this.state.groups.value!, true);\n    if (valid) {\n      const newAction = stateToAction(this.props.nodeSettings, this.state);\n      this.props.updateAction(newAction as ChangeGroups);\n      this.props.onClose(false);\n    }\n  }\n\n  public handleGroupsChanged(groups: Asset[], submitting: boolean = false): boolean {\n    const updates: Partial<ChangeGroupsFormState> = {\n      groups: validate('Groups', groups, [shouldRequireIf(submitting)])\n    };\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  public handleGroupAdded(group: Asset): void {\n    // update our store with our new group\n    this.props.addAsset('groups', group);\n\n    // try to add the group\n    this.handleGroupsChanged((this.state.groups.value || []).concat(group), false);\n  }\n\n  public handleCreateAssetFromInput(input: string): any {\n    return { name: input };\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p data-spec={labelSpecId}>\n          <Trans i18nKey=\"forms.add_groups.summary\">Select the groups to add the contact to.</Trans>\n        </p>\n\n        <AssetSelector\n          name={i18n.t('groups', 'Groups')}\n          multi={true}\n          noOptionsMessage={i18n.t('enter_to_create_group', 'Enter a name to create a new group')}\n          assets={this.props.assetStore.groups}\n          entry={this.state.groups}\n          onChange={this.handleGroupsChanged}\n          searchable={true}\n          shouldExclude={excludeDynamicGroups}\n          // Groups can be created on the fly\n          createPrefix={i18n.t('create_group', 'Create Group') + ': '}\n          createAssetFromInput={this.handleCreateAssetFromInput}\n          onAssetCreated={this.handleGroupAdded}\n        />\n      </Dialog>\n    );\n  }\n}\n","import { renderAssetList } from 'components/flow/actions/helpers';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Types } from 'config/interfaces';\nimport { ChangeGroups, Endpoints } from 'flowTypes';\nimport * as React from 'react';\nimport { AssetType } from 'store/flowContext';\n\nexport const removeAllSpecId = 'remove_from_all';\nexport const contentSpecId = 'content';\nexport const removeAllText = 'Remove from all groups';\nexport const ellipsesText = '...';\n\nexport const MAX_TO_SHOW = 3;\nexport const getRemoveAllMarkup = (\n  key = removeAllSpecId,\n  specId = removeAllSpecId,\n  text = removeAllText\n) => (\n  <div key={key} data-spec={specId}>\n    {text}\n  </div>\n);\n\nexport const getContentMarkup = (\n  { type, groups }: ChangeGroups,\n  endpoints?: Endpoints\n): JSX.Element[] => {\n  const content = [];\n\n  if (type === Types.remove_contact_groups && (!groups || !groups.length)) {\n    content.push(getRemoveAllMarkup());\n  } else {\n    return renderAssetList(\n      groups.map(group => {\n        return { id: group.uuid, name: group.name, type: AssetType.Group };\n      }),\n      MAX_TO_SHOW,\n      endpoints!\n    );\n  }\n\n  return content;\n};\n\nexport const getChangeGroupsMarkup = (\n  action: ChangeGroups,\n  endpoints?: Endpoints,\n  specId = contentSpecId\n) => <div data-spec={specId}>{getContentMarkup(action, endpoints)}</div>;\n\nconst ChangeGroupsComp: React.SFC<ChangeGroups> = (props, context: any): JSX.Element => {\n  return getChangeGroupsMarkup(props, context.config.endpoints);\n};\n\nChangeGroupsComp.contextTypes = {\n  config: fakePropType\n};\n\nexport default ChangeGroupsComp;\n","import classNames from 'classnames/bind';\nimport { FormElementProps } from 'components/form/FormElement';\nimport * as React from 'react';\nimport { isRealValue, renderIf } from 'utils';\n\nimport styles from './CheckboxElement.module.scss';\n\nexport interface CheckboxElementProps extends FormElementProps {\n  checked: boolean;\n  title?: string;\n  description?: string;\n  labelClassName?: string;\n  checkboxClassName?: string;\n  onChange?(checked: boolean): void;\n}\n\ninterface CheckboxState {\n  checked: boolean;\n}\n\nexport const boxIco = 'fe-square';\nexport const checkedBoxIco = 'fe-check-square';\n\nexport const checkboxSpecId = 'checkbox';\nexport const titleSpecId = 'title';\nexport const descSpecId = 'description';\n\nconst cx: any = classNames.bind(styles);\n\nexport default class CheckboxElement extends React.Component<CheckboxElementProps, CheckboxState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      checked: this.props.checked\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  private handleChange(): void {\n    this.setState({ checked: !this.state.checked }, () => {\n      if (this.props.onChange) {\n        this.props.onChange(this.state.checked);\n      }\n    });\n  }\n\n  /* istanbul ignore next */\n  public validate(): boolean {\n    return true;\n  }\n\n  public render(): JSX.Element {\n    const checkboxIcon = this.state.checked ? checkedBoxIco : boxIco;\n    return (\n      <label className={cx(styles.label, this.props.labelClassName)} onClick={this.handleChange}>\n        <span\n          data-spec={checkboxSpecId}\n          className={cx(checkboxIcon, this.props.checkboxClassName)}\n        />\n        {renderIf(isRealValue(this.props.title))(\n          <div data-spec={titleSpecId} className={styles.title}>\n            {this.props.title}\n          </div>\n        )}\n        {renderIf(isRealValue(this.props.description))(\n          <div\n            data-spec={descSpecId}\n            className={this.props.title ? styles.description : styles.description_solo}\n          >\n            {this.props.description}\n          </div>\n        )}\n      </label>\n    );\n  }\n}\n","import {\n  ChangeGroupsFormState,\n  mapAssetsToGroups,\n  mapGroupsToAssets\n} from 'components/flow/actions/changegroups/helpers';\nimport { getActionUUID } from 'components/flow/actions/helpers';\nimport { Types } from 'config/interfaces';\nimport { RemoveFromGroups } from 'flowTypes';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): ChangeGroupsFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.remove_contact_groups) {\n    const action = settings.originalAction as RemoveFromGroups;\n\n    const groups = action.groups || [];\n    return {\n      groups: { value: mapGroupsToAssets(groups) },\n      removeAll: groups.length === 0 || action.all_groups,\n      valid: true\n    };\n  }\n\n  return {\n    groups: { value: null },\n    removeAll: false,\n    valid: false\n  };\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  state: ChangeGroupsFormState\n): RemoveFromGroups => {\n  return {\n    type: Types.remove_contact_groups,\n    groups: state.removeAll ? [] : mapAssetsToGroups(state.groups.value),\n    all_groups: !!state.removeAll,\n    uuid: getActionUUID(settings, Types.remove_contact_groups)\n  };\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport {\n  ChangeGroupsFormState,\n  excludeDynamicGroups\n} from 'components/flow/actions/changegroups/helpers';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport CheckboxElement from 'components/form/checkbox/CheckboxElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { ChangeGroups } from 'flowTypes';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { mergeForm } from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\nimport { renderIf } from 'utils';\n\nimport { initializeForm, stateToAction } from './helpers';\nimport styles from './RemoveGroupsForm.module.scss';\nimport i18n from 'config/i18n';\n\nexport const LABEL = i18n.t(\n  'forms.remove_groups.summary',\n  'Select the groups to remove the contact from.'\n);\nexport const NOT_FOUND = i18n.t('errors.group_not_found', 'Enter the name of an existing group');\nexport const PLACEHOLDER = i18n.t(\n  'forms.remove_groups.placeholder',\n  'Enter the name of an existing group'\n);\nexport const REMOVE_FROM_ALL = i18n.t(\n  'forms.remove_groups.remove_from_all_label',\n  'Remove from all'\n);\nexport const REMOVE_FROM_ALL_DESC = i18n.t(\n  'forms.remove_groups.remove_from_all_summary',\n  \"Remove the active contact from all groups they're a member of.\"\n);\n\nexport const labelSpecId = 'label';\nexport const fieldContainerSpecId = 'field-container';\n\nexport default class RemoveGroupsForm extends React.Component<\n  ActionFormProps,\n  ChangeGroupsFormState\n> {\n  public static contextTypes = {\n    assetService: fakePropType\n  };\n\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = initializeForm(this.props.nodeSettings) as ChangeGroupsFormState;\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleSave(): void {\n    const valid = this.handleGroupsChanged(this.state.groups.value!, true);\n    if (valid) {\n      const newAction = stateToAction(this.props.nodeSettings, this.state);\n      this.props.updateAction(newAction as ChangeGroups);\n      this.props.onClose(false);\n    }\n  }\n\n  private handleUpdate(\n    keys: { groups?: Asset[]; removeAll?: boolean },\n    submitting: boolean = false\n  ): boolean {\n    const updates: Partial<ChangeGroupsFormState> = {};\n\n    // we only require groups if removeAll isn't checked\n    let groupValidators = this.state.removeAll ? [] : [shouldRequireIf(submitting)];\n\n    if (keys.hasOwnProperty('removeAll')) {\n      updates.removeAll = keys.removeAll;\n      if (keys.removeAll) {\n        groupValidators = [];\n      }\n    }\n\n    if (keys.hasOwnProperty('groups')) {\n      updates.groups = validate('Groups', keys.groups!, groupValidators);\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  public handleGroupsChanged(groups: Asset[], submitting: boolean = false): boolean {\n    return this.handleUpdate({ groups }, submitting);\n  }\n\n  public handleRemoveAllUpdate(removeAll: boolean): boolean {\n    return this.handleUpdate({ removeAll });\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n\n        {renderIf(!this.state.removeAll)(\n          <div>\n            <p data-spec={labelSpecId}>{LABEL}</p>\n            <AssetSelector\n              name={i18n.t('groups', 'Groups')}\n              assets={this.props.assetStore.groups}\n              entry={this.state.groups}\n              shouldExclude={excludeDynamicGroups}\n              searchable={true}\n              onChange={this.handleGroupsChanged}\n              multi={true}\n            />\n          </div>\n        )}\n\n        <CheckboxElement\n          name={REMOVE_FROM_ALL}\n          title={REMOVE_FROM_ALL}\n          labelClassName={this.state.removeAll ? '' : styles.checkbox}\n          checked={this.state.removeAll!}\n          description={REMOVE_FROM_ALL_DESC}\n          onChange={this.handleRemoveAllUpdate}\n        />\n      </Dialog>\n    );\n  }\n}\n","import { KeyLocalizationFormState } from 'components/flow/actions/localization/KeyLocalizationForm';\nimport { MsgLocalizationFormState } from 'components/flow/actions/localization/MsgLocalizationForm';\nimport { Types } from 'config/interfaces';\nimport { getTypeConfig } from 'config/typeConfigs';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nexport const initializeLocalizedKeyForm = (\n  settings: NodeEditorSettings\n): KeyLocalizationFormState => {\n  const keyValues: { [key: string]: StringEntry } = {};\n  const localized = settings.localizations[0];\n  const action = localized.getObject() as any;\n\n  const keys = settings.originalAction\n    ? getTypeConfig(settings.originalAction.type).localizeableKeys || []\n    : [];\n  keys.forEach((key: string) => {\n    keyValues[key] = { value: key in localized.localizedKeys ? action[key] : '' };\n  });\n\n  return {\n    keyValues,\n    valid: true\n  };\n};\n\nexport const initializeLocalizedForm = (settings: NodeEditorSettings): MsgLocalizationFormState => {\n  // check if our form should use a localized action\n  if (\n    settings.originalAction &&\n    (settings.originalAction.type === Types.send_msg ||\n      settings.originalAction.type === Types.say_msg) &&\n    settings.localizations &&\n    settings.localizations.length > 0\n  ) {\n    const localized = settings.localizations[0];\n    if (localized.isLocalized()) {\n      const action = localized.getObject() as any;\n      return {\n        message: {\n          value: 'text' in localized.localizedKeys ? action.text : ''\n        },\n        quickReplies: {\n          value: 'quick_replies' in localized.localizedKeys ? action.quick_replies || [] : []\n        },\n        audio: {\n          value: 'audio_url' in localized.localizedKeys ? action.audio_url : null\n        },\n        valid: true\n      };\n    }\n  }\n\n  return {\n    message: { value: '' },\n    quickReplies: { value: [] },\n    audio: { value: null },\n    valid: true\n  };\n};\n","import { Type, Types } from 'config/interfaces';\nimport { getType, getTypeConfig } from 'config/typeConfigs';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const determineTypeConfig = (nodeSettings: NodeEditorSettings): Type => {\n  const renderNode = nodeSettings.originalNode;\n  const node = renderNode && renderNode.node;\n\n  if (nodeSettings.originalAction && nodeSettings.originalAction.type) {\n    return getTypeConfig(nodeSettings.originalAction.type);\n  } else if (node && node.actions && node.actions.length > 0) {\n    return getTypeConfig(node.actions[node.actions.length - 1].type);\n  } else {\n    try {\n      const type = getType(renderNode);\n      const config = getTypeConfig(type);\n      if (config.type !== Types.missing) {\n        return config;\n      }\n      // tslint:disable-next-line:no-empty\n    } catch (Error) {}\n  }\n\n  // Account for ghost nodes\n  if (node && node.router) {\n    return getTypeConfig(node.router.type);\n  }\n\n  throw new Error(`Couldn't determine type config for: ${node.uuid}`);\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport styles from 'components/flow/actions/action/Action.module.scss';\nimport { initializeLocalizedKeyForm } from 'components/flow/actions/localization/helpers';\nimport { determineTypeConfig } from 'components/flow/helpers';\nimport { LocalizationFormProps } from 'components/flow/props';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport { fakePropType } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { FormState, StringEntry, ValidationFailure } from 'store/nodeEditor';\nimport i18n from 'config/i18n';\n\nexport interface KeyLocalizationFormState extends FormState {\n  keyValues: { [key: string]: StringEntry };\n}\n\nexport default class KeyLocalizationForm extends React.Component<\n  LocalizationFormProps,\n  KeyLocalizationFormState\n> {\n  constructor(props: LocalizationFormProps) {\n    super(props);\n    this.state = initializeLocalizedKeyForm(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/, /^on/]\n    });\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  public handleKeyUpdate(text: string, name: string): boolean {\n    const keyValues = { ...this.state.keyValues };\n    keyValues[name.toLowerCase()] = { value: text };\n    this.setState({ keyValues });\n    return true;\n  }\n\n  private handleSave(): void {\n    const translations: { [key: string]: string } = {};\n\n    Object.keys(this.state.keyValues).forEach((key: string) => {\n      const value = this.state.keyValues[key].value;\n      if (value) {\n        translations[key] = value;\n      } else {\n        delete translations[key];\n      }\n    });\n\n    this.props.updateLocalizations(this.props.language.id, [\n      {\n        uuid: this.props.nodeSettings.originalAction!.uuid,\n        translations\n      }\n    ]);\n\n    // notify our modal we are done\n    this.props.onClose(false);\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = determineTypeConfig(this.props.nodeSettings);\n    const tabs: Tab[] = [];\n\n    let base: JSX.Element;\n\n    typeConfig.localizeableKeys.forEach((key: string) => {\n      const name = key[0].toUpperCase() + key.slice(1);\n\n      const form = (\n        <div key={`localize_form_${key}`}>\n          <div data-spec=\"translation-container\">\n            <div data-spec=\"text-to-translate\" className={styles.translate_from}>\n              {(this.props.nodeSettings.originalAction as any)[key]}\n            </div>\n          </div>\n          <TextInputElement\n            name={name}\n            showLabel={false}\n            onChange={this.handleKeyUpdate}\n            entry={this.state.keyValues[key]}\n            placeholder={`${this.props.language.name} Translation`}\n            onFieldFailures={(persistantFailures: ValidationFailure[]) => {\n              const keyValues = this.state.keyValues;\n              keyValues[key] = { ...this.state.keyValues[key], persistantFailures };\n              this.setState({\n                keyValues,\n                valid: this.state.valid\n              });\n            }}\n            autocomplete={true}\n            focus={true}\n            textarea={true}\n          />\n        </div>\n      );\n\n      if (!base) {\n        base = form;\n      } else {\n        tabs.push({\n          name: name + ' ' + i18n.t('translation', 'Translation'),\n          body: form,\n          checked: !!this.state.keyValues[key].value\n        });\n      }\n    });\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={tabs}\n      >\n        {base}\n      </Dialog>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport styles from './Pill.module.scss';\n\nexport interface PillProps {\n  advanced?: boolean;\n  onClick?(event: React.MouseEvent<HTMLDivElement>): void;\n  text: string;\n  maxLength?: number;\n  icon?: string;\n  large?: boolean;\n  style?: React.CSSProperties;\n}\n\nconst Pill: React.SFC<PillProps> = (props: PillProps): JSX.Element => {\n  let text = props.text;\n\n  if (props.text.startsWith('@')) {\n    text = '@(exp)';\n  } else if (props.maxLength && text.length > props.maxLength) {\n    text = props.text.substring(0, props.maxLength) + '...';\n  }\n\n  const pillStyles = [styles.pill];\n\n  if (props.large) {\n    pillStyles.push(styles.large);\n  }\n\n  if (props.onClick) {\n    pillStyles.push(styles.clickable);\n  }\n\n  return (\n    <div\n      style={props.style}\n      data-advanced={props.advanced}\n      onClick={props.onClick}\n      className={pillStyles.join(' ')}\n    >\n      {text}\n      {props.icon ? (\n        <span data-advanced={props.advanced} className={styles.icon + ' ' + props.icon} />\n      ) : null}\n    </div>\n  );\n};\n\nexport default Pill;\n","import { react as bindCallbacks } from 'auto-bind';\nimport TextInputElement, { HTMLTextElement } from 'components/form/textinput/TextInputElement';\nimport Pill from 'components/pill/Pill';\nimport * as React from 'react';\nimport { StringArrayEntry, StringEntry, ValidationFailure } from 'store/nodeEditor';\nimport { Empty, validate } from 'store/validators';\n\nimport styles from './MultiChoice.module.scss';\n\nexport interface MultiChoiceInputProps {\n  name: string;\n  items: StringArrayEntry;\n  entry?: StringEntry;\n  onRemoved: (item: string) => void;\n  onItemAdded: (item: string) => boolean;\n  onFieldErrors: (validationFailures: ValidationFailure[]) => void;\n  onEntryChanged?: (entry: StringEntry) => void;\n  helpText?: JSX.Element;\n}\n\ninterface MultiChoiceInputState {\n  currentInput: StringEntry;\n}\n\nexport default class MultiChoiceInput extends React.Component<\n  MultiChoiceInputProps,\n  MultiChoiceInputState\n> {\n  constructor(props: MultiChoiceInputProps) {\n    super(props);\n\n    if (this.props.entry) {\n      this.state = {\n        currentInput: this.props.entry\n      };\n    } else {\n      this.state = {\n        currentInput: { value: '' }\n      };\n    }\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public handleInputChanged(value: string): void {\n    this.setState({ currentInput: { value } });\n    if (this.props.onEntryChanged) {\n      this.props.onEntryChanged({ value });\n    }\n  }\n\n  public handleAddItem(event: React.KeyboardEvent<HTMLTextElement>): boolean {\n    // hack: we want to evaluate after the state is updated for validation errors\n    window.setTimeout(() => {\n      if ((this.state.currentInput.persistantFailures || []).length > 0) {\n        return;\n      }\n\n      if (this.state.currentInput.value.trim().length > 0) {\n        const newItem = this.state.currentInput.value.trim();\n\n        if (this.props.onItemAdded(newItem)) {\n          this.setState({ currentInput: { value: '' } });\n        }\n\n        if (this.props.onEntryChanged) {\n          this.props.onEntryChanged({ value: '' });\n        }\n      }\n    }, 0);\n    return true;\n  }\n\n  private handleValidateEmpty(): void {\n    const currentInput = validate(this.props.name, this.state.currentInput.value, [Empty]);\n    this.setState({ currentInput }, () => {\n      if (this.props.onEntryChanged) {\n        this.props.onEntryChanged(currentInput);\n      }\n    });\n  }\n\n  private getChosenItems(): JSX.Element {\n    if (this.props.items.value.length > 0) {\n      return (\n        <div className={styles.chosen}>\n          {this.props.items.value.map((item: string) => (\n            <div key={`item_${item}`} className={styles.item}>\n              <Pill\n                icon=\"fe-x\"\n                text={' ' + item}\n                large={true}\n                onClick={() => {\n                  this.props.onRemoved(item);\n                }}\n              />\n            </div>\n          ))}\n        </div>\n      );\n    }\n    return null;\n  }\n\n  public render(): JSX.Element {\n    return (\n      <>\n        {this.getChosenItems()}\n        {this.props.helpText ? <p>{this.props.helpText}</p> : <p />}\n        <TextInputElement\n          name={this.props.name}\n          placeholder={this.props.name}\n          showLabel={false}\n          onChange={this.handleInputChanged}\n          entry={this.state.currentInput}\n          autocomplete={true}\n          focus={true}\n          onBlur={this.handleValidateEmpty}\n          onEnter={this.handleAddItem}\n          onFieldFailures={(persistantFailures: ValidationFailure[]) => {\n            const currentInput = {\n              ...this.state.currentInput,\n              persistantFailures\n            };\n            this.setState(\n              {\n                currentInput\n              },\n              () => {\n                if (this.props.onEntryChanged) {\n                  this.props.onEntryChanged(currentInput);\n                }\n              }\n            );\n          }}\n        />\n      </>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport axios from 'axios';\nimport * as React from 'react';\nimport Button, { ButtonTypes } from 'components/button/Button';\nimport { getCookie } from 'external';\n\nexport interface UploadButtonState {}\n\nexport interface UploadButtonProps {\n  icon: string;\n  uploadText: string;\n  removeText: string;\n  url: string;\n  endpoint: string;\n  onUploadChanged: (url: string) => void;\n}\n\nexport default class UploadButton extends React.Component<UploadButtonProps, UploadButtonState> {\n  private filePicker: any;\n\n  constructor(props: UploadButtonProps) {\n    super(props);\n    this.state = {};\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleRemoveUpload(): void {\n    this.props.onUploadChanged(null);\n  }\n\n  private handleUploadFile(files: FileList): void {\n    const data = new FormData();\n    data.append('file', files[0]);\n\n    // if we have a csrf in our cookie, pass it along as a header\n    const csrf = getCookie('csrftoken');\n    const headers = csrf ? { 'X-CSRFToken': csrf } : {};\n\n    axios\n      .post(this.props.endpoint, data, { headers })\n      .then(response => {\n        this.props.onUploadChanged(response.data.url);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  public render(): JSX.Element {\n    return (\n      <>\n        <input\n          style={{\n            display: 'none'\n          }}\n          ref={ele => {\n            this.filePicker = ele;\n          }}\n          type=\"file\"\n          onChange={e => this.handleUploadFile(e.target.files)}\n        />\n        {this.props.url ? (\n          <Button\n            iconName=\"fe-trash\"\n            name={this.props.removeText}\n            topSpacing={true}\n            onClick={this.handleRemoveUpload}\n            type={ButtonTypes.tertiary}\n          />\n        ) : (\n          <Button\n            iconName={this.props.icon}\n            name={this.props.uploadText}\n            topSpacing={true}\n            onClick={() => {\n              this.filePicker.click();\n            }}\n            type={ButtonTypes.tertiary}\n          />\n        )}\n      </>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport styles from 'components/flow/actions/action/Action.module.scss';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { determineTypeConfig } from 'components/flow/helpers';\nimport { LocalizationFormProps } from 'components/flow/props';\nimport MultiChoiceInput from 'components/form/multichoice/MultiChoice';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport UploadButton from 'components/uploadbutton/UploadButton';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { SendMsg } from 'flowTypes';\nimport * as React from 'react';\nimport {\n  FormState,\n  mergeForm,\n  StringArrayEntry,\n  StringEntry,\n  ValidationFailure\n} from 'store/nodeEditor';\nimport { MaxOfTenItems, validate } from 'store/validators';\n\nimport { initializeLocalizedForm } from './helpers';\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\n\nexport interface MsgLocalizationFormState extends FormState {\n  message: StringEntry;\n  quickReplies: StringArrayEntry;\n  audio: StringEntry;\n}\n\nexport default class MsgLocalizationForm extends React.Component<\n  LocalizationFormProps,\n  MsgLocalizationFormState\n> {\n  constructor(props: LocalizationFormProps) {\n    super(props);\n    this.state = initializeLocalizedForm(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/, /^on/]\n    });\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  public handleMessageUpdate(text: string): boolean {\n    return this.handleUpdate({ text });\n  }\n\n  public handleQuickRepliesUpdate(quickReplies: string[]): boolean {\n    return this.handleUpdate({ quickReplies });\n  }\n\n  private handleAudioChanged(url: string): void {\n    this.handleUpdate({ audio: url });\n  }\n\n  private handleUpdate(keys: {\n    text?: string;\n    sendAll?: boolean;\n    quickReplies?: string[];\n    audio?: string;\n  }): boolean {\n    const updates: Partial<MsgLocalizationFormState> = {};\n\n    if (keys.hasOwnProperty('text')) {\n      updates.message = validate('Message', keys.text!, []);\n    }\n\n    if (keys.hasOwnProperty('quickReplies')) {\n      updates.quickReplies = validate('Quick Replies', keys.quickReplies!, [MaxOfTenItems]);\n    }\n\n    if (keys.hasOwnProperty('audio')) {\n      updates.audio! = { value: keys.audio! };\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    const { message: text, quickReplies, audio } = this.state;\n\n    // make sure we are valid for saving, only quick replies can be invalid\n    const typeConfig = determineTypeConfig(this.props.nodeSettings);\n    const valid =\n      typeConfig.localizeableKeys!.indexOf('quick_replies') > -1\n        ? this.handleQuickRepliesUpdate(this.state.quickReplies.value)\n        : true;\n\n    if (valid) {\n      const translations: any = {};\n      if (text.value) {\n        translations.text = text.value;\n      }\n\n      if (quickReplies.value && quickReplies.value.length > 0) {\n        translations.quick_replies = quickReplies.value;\n      }\n\n      if (audio.value) {\n        translations.audio_url = audio.value;\n      }\n\n      this.props.updateLocalizations(this.props.language.id, [\n        {\n          uuid: this.props.nodeSettings.originalAction!.uuid,\n          translations\n        }\n      ]);\n\n      // notify our modal we are done\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private handleAddQuickReply(newQuickReply: string): boolean {\n    const newReplies = [...this.state.quickReplies.value];\n    if (newReplies.length >= 10) {\n      return false;\n    }\n\n    // we don't allow two quick replies with the same name\n    const isNew = !newReplies.find(\n      (reply: string) => reply.toLowerCase() === newQuickReply.toLowerCase()\n    );\n\n    if (isNew) {\n      newReplies.push(newQuickReply);\n      this.setState({\n        quickReplies: { value: newReplies }\n      });\n      return true;\n    }\n\n    return false;\n  }\n\n  private handleRemoveQuickReply(toRemove: string): void {\n    this.setState({\n      quickReplies: {\n        value: this.state.quickReplies.value.filter((reply: string) => reply !== toRemove)\n      }\n    });\n  }\n\n  public handleQuickReplyFieldFailures(persistantFailures: ValidationFailure[]): void {\n    const quickReplies = { ...this.state.quickReplies, persistantFailures };\n    this.setState({\n      quickReplies,\n      valid: this.state.valid && !hasErrors(quickReplies)\n    });\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = determineTypeConfig(this.props.nodeSettings);\n    const tabs: Tab[] = [];\n\n    if (typeConfig.localizeableKeys!.indexOf('quick_replies') > -1) {\n      tabs.push({\n        name: 'Quick Replies',\n        body: (\n          <>\n            <MultiChoiceInput\n              name=\"Quick Reply\"\n              helpText={\n                <Trans\n                  i18nKey=\"forms.send_msg.localized_quick_replies\"\n                  values={{ language: this.props.language.name }}\n                >\n                  Add a new [[language]] Quick Reply and press enter.\n                </Trans>\n              }\n              items={this.state.quickReplies}\n              onRemoved={this.handleRemoveQuickReply}\n              onItemAdded={this.handleAddQuickReply}\n              onFieldErrors={this.handleQuickReplyFieldFailures}\n            />\n          </>\n        ),\n        checked: this.state.quickReplies.value.length > 0\n      });\n    }\n\n    let audioButton: JSX.Element | null = null;\n    if (typeConfig.localizeableKeys!.indexOf('audio_url') > 0) {\n      audioButton = (\n        <UploadButton\n          icon=\"fe-mic\"\n          uploadText=\"Upload Recording\"\n          removeText=\"Remove Recording\"\n          url={this.state.audio.value}\n          endpoint={this.context.config.endpoints.attachments}\n          onUploadChanged={this.handleAudioChanged}\n        />\n      );\n    }\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={tabs}\n      >\n        <div data-spec=\"translation-container\">\n          <div data-spec=\"text-to-translate\" className={styles.translate_from}>\n            {(this.props.nodeSettings.originalAction as SendMsg).text}\n          </div>\n        </div>\n\n        <TextInputElement\n          name=\"Message\"\n          showLabel={false}\n          onChange={this.handleMessageUpdate}\n          entry={this.state.message}\n          placeholder={`${this.props.language.name} Translation`}\n          onFieldFailures={(persistantFailures: ValidationFailure[]) => {\n            const text = { ...this.state.message, persistantFailures };\n            this.setState({\n              message: text,\n              valid: this.state.valid && !hasErrors(text)\n            });\n          }}\n          autocomplete={true}\n          focus={true}\n          textarea={true}\n        />\n\n        {audioButton}\n      </Dialog>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Action } from 'flowTypes';\n\n/* istanbul ignore next */\nconst MissingComp: React.SFC<Action> = ({ type }): JSX.Element => {\n  return <div className=\"placeholder\">No implementation yet for {type}</div>;\n};\n\nexport default MissingComp;\n","import * as React from 'react';\nimport { PlayAudio } from 'flowTypes';\n\nconst PlayAudioComp: React.SFC<PlayAudio> = (action: PlayAudio): JSX.Element => {\n  return <div>{action.audio_url}</div>;\n};\n\nexport default PlayAudioComp;\n","import { getActionUUID } from 'components/flow/actions/helpers';\nimport { PlayAudioFormState } from 'components/flow/actions/playaudio/PlayAudioForm';\nimport { Types } from 'config/interfaces';\nimport { PlayAudio } from 'flowTypes';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): PlayAudioFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.play_audio) {\n    const action = settings.originalAction as PlayAudio;\n    return {\n      audio: { value: action.audio_url },\n      valid: true\n    };\n  }\n\n  return {\n    audio: { value: '' },\n    valid: false\n  };\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  state: PlayAudioFormState\n): PlayAudio => ({\n  audio_url: state.audio.value,\n  type: Types.play_audio,\n  uuid: getActionUUID(settings, Types.say_msg)\n});\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { ActionFormProps } from 'components/flow/props';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { FormState, mergeForm, StringEntry, ValidationFailure } from 'store/nodeEditor';\nimport { validate, Required } from 'store/validators';\n\nimport { initializeForm, stateToAction } from './helpers';\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\n\nexport interface PlayAudioFormState extends FormState {\n  audio: StringEntry;\n}\n\nexport default class PlayAudioForm extends React.Component<ActionFormProps, PlayAudioFormState> {\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = initializeForm(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public handleAudioUpdate(text: string): boolean {\n    const updates: Partial<PlayAudioFormState> = {};\n    updates.audio = validate('Recording', text, [Required]);\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    // make sure we validate untouched text fields\n    const valid = this.handleAudioUpdate(this.state.audio.value);\n\n    if (valid) {\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n\n      // notify our modal we are done\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p>{i18n.t('forms.play_audio.recording_label', 'Previous Recording')}</p>\n        <TextInputElement\n          name={i18n.t('message', 'Message')}\n          showLabel={false}\n          onChange={this.handleAudioUpdate}\n          entry={this.state.audio}\n          onFieldFailures={(persistantFailures: ValidationFailure[]) => {\n            const audio = { ...this.state.audio, persistantFailures };\n            this.setState({\n              audio,\n              valid: this.state.valid && !hasErrors(audio)\n            });\n          }}\n          autocomplete={true}\n          focus={true}\n          helpText={\n            <Trans i18nKey=\"forms.play_audio.help_text\">\n              Enter a variable that contains a recording the contact has previously recorded. For\n              example, @results.voicemail or @fields.short_bio.\n            </Trans>\n          }\n        />\n      </Dialog>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\n\nimport styles from './MediaPlayer.module.scss';\n\nexport interface MediaPlayerProps {\n  url: string;\n  triggered?: boolean;\n}\n\ninterface MediaPlayerState {\n  durationSeconds: number;\n  currentSeconds: number;\n  progress: number;\n  playing: boolean;\n}\n\nexport class MediaPlayer extends React.Component<MediaPlayerProps, MediaPlayerState> {\n  private ele: HTMLAudioElement;\n\n  private stroke = 1;\n  private radius = 9;\n\n  private radiusNormalized = this.radius - this.stroke * 2;\n  private circumference = this.radiusNormalized * 2 * Math.PI;\n\n  constructor(props: MediaPlayerProps) {\n    super(props);\n\n    this.state = {\n      durationSeconds: 0,\n      currentSeconds: 0,\n      playing: false,\n      progress: 0\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleTimeUpdate(e: React.SyntheticEvent<HTMLAudioElement>): void {\n    const currentTime = this.ele.currentTime || 0;\n    const duration = this.ele.duration || 0;\n\n    this.setState((prevState: MediaPlayerState) => {\n      if ((this.ele.ended || currentTime === 0) && prevState.playing) {\n        setTimeout(() => {\n          this.setState({ progress: 0, playing: false });\n        }, 500);\n      }\n\n      return {\n        currentSeconds: this.ele.ended ? 0 : currentTime,\n        durationSeconds: duration,\n        playing: currentTime > 0,\n        progress: duration > 0 ? Math.floor((currentTime / duration) * 100) : 0\n      };\n    });\n  }\n\n  public componentDidMount(): void {\n    if (this.props.triggered) {\n      this.handleTogglePlay(null);\n    }\n  }\n\n  private handleTogglePlay(e: React.MouseEvent<HTMLDivElement>): void {\n    if (this.state.playing) {\n      this.ele.pause();\n      this.ele.currentTime = 0;\n    } else {\n      this.ele.play();\n    }\n\n    if (e !== null) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n\n  private handleRef(ref: HTMLAudioElement): any {\n    return (this.ele = ref);\n  }\n\n  public componentDidUpdate(prevProps: MediaPlayerProps): void {\n    if (this.props.url !== prevProps.url) {\n      this.setState({\n        durationSeconds: 0,\n        currentSeconds: 0,\n        playing: false,\n        progress: 0\n      });\n    }\n  }\n\n  public render(): JSX.Element {\n    const progress = this.state.progress || 0;\n    const strokeDashoffset = this.circumference - (progress / 100) * this.circumference;\n\n    return (\n      <div\n        className={styles.player + ' ' + (this.state.playing ? styles.playing : '')}\n        style={{ height: this.radius * 2, width: this.radius * 2 }}\n        onMouseDown={this.handleTogglePlay}\n      >\n        <audio ref={this.handleRef} onTimeUpdate={this.handleTimeUpdate} src={this.props.url} />\n\n        <div className={styles.circles}>\n          <svg height={this.radius * 2} width={this.radius * 2}>\n            <circle\n              className={styles.circle_background}\n              stroke=\"#fff\"\n              fill=\"#fff\"\n              strokeWidth={this.stroke}\n              r={this.radiusNormalized}\n              cx={this.radius}\n              cy={this.radius}\n            />\n            <circle\n              className={styles.circle_background}\n              stroke=\"#ddd\"\n              fill=\"transparent\"\n              strokeWidth={this.stroke}\n              r={this.radiusNormalized}\n              cx={this.radius}\n              cy={this.radius}\n            />\n            <circle\n              className={styles.circle_foreground}\n              stroke=\"cornflowerblue\"\n              fill=\"transparent\"\n              strokeWidth={this.stroke}\n              strokeDasharray={this.circumference + ' ' + this.circumference}\n              style={{ strokeDashoffset }}\n              r={this.radiusNormalized}\n              cx={this.radius}\n              cy={this.radius}\n            />\n          </svg>\n        </div>\n        <div className={styles.button + ' ' + (this.state.playing ? 'fe-stop' : 'fe-play_arrow')} />\n      </div>\n    );\n  }\n}\n","import { MediaPlayer } from 'components/mediaplayer/MediaPlayer';\nimport { SayMsg } from 'flowTypes';\nimport * as React from 'react';\n\nimport styles from './SayMsg.module.scss';\nimport i18n from 'config/i18n';\n\nexport const PLACEHOLDER = i18n.t('actions.say_msg.placeholder', 'Send a message to the contact');\n\nconst SayMsgComp: React.SFC<SayMsg> = (action: SayMsg): JSX.Element => {\n  if (action.text) {\n    return (\n      <>\n        <div className={styles.text}>{action.text}</div>\n\n        {action.audio_url ? (\n          <div className={styles.recording}>\n            <MediaPlayer url={action.audio_url} />\n          </div>\n        ) : null}\n      </>\n    );\n  }\n  return <div className=\"placeholder\">{PLACEHOLDER}</div>;\n};\n\nexport default SayMsgComp;\n","import { getActionUUID } from 'components/flow/actions/helpers';\nimport { SayMsgFormState } from 'components/flow/actions/saymsg/SayMsgForm';\nimport { Types } from 'config/interfaces';\nimport { SayMsg } from 'flowTypes';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): SayMsgFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.say_msg) {\n    const action = settings.originalAction as SayMsg;\n    return {\n      message: { value: action.text },\n      audio: { value: action.audio_url },\n      valid: true\n    };\n  }\n\n  return {\n    message: { value: '' },\n    audio: { value: '' },\n    valid: false\n  };\n};\n\nexport const stateToAction = (settings: NodeEditorSettings, state: SayMsgFormState): SayMsg => ({\n  text: state.message.value,\n  audio_url: state.audio.value,\n  type: Types.say_msg,\n  uuid: getActionUUID(settings, Types.say_msg)\n});\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { ActionFormProps } from 'components/flow/props';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport UploadButton from 'components/uploadbutton/UploadButton';\nimport { fakePropType } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { FormState, mergeForm, StringEntry, ValidationFailure } from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\n\nimport { initializeForm, stateToAction } from './helpers';\nimport i18n from 'config/i18n';\n\nexport interface SayMsgFormState extends FormState {\n  message: StringEntry;\n  audio: StringEntry;\n}\n\nexport default class SayMsgForm extends React.Component<ActionFormProps, SayMsgFormState> {\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = initializeForm(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  private handleUpdate(keys: { text?: string }, submitting = false): boolean {\n    const updates: Partial<SayMsgFormState> = {};\n\n    if (keys.hasOwnProperty('text')) {\n      updates.message = validate('Message', keys.text!, [shouldRequireIf(submitting)]);\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  public handleMessageUpdate(text: string, name: string, submitting = false): boolean {\n    return this.handleUpdate({ text }, submitting);\n  }\n\n  private handleSave(): void {\n    // make sure we validate untouched text fields\n    const valid = this.handleUpdate({ text: this.state.message.value }, true);\n\n    if (valid) {\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n\n      // notify our modal we are done\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private handleUploadChanged(url: string): void {\n    this.setState({ audio: { value: url } });\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <TextInputElement\n          name=\"Message\"\n          showLabel={false}\n          onChange={this.handleMessageUpdate}\n          entry={this.state.message}\n          onFieldFailures={(persistantFailures: ValidationFailure[]) => {\n            const message = { ...this.state.message, persistantFailures };\n            this.setState({\n              message,\n              valid: this.state.valid && !hasErrors(message)\n            });\n          }}\n          autocomplete={true}\n          focus={true}\n          textarea={true}\n        />\n\n        <UploadButton\n          icon=\"fe-mic\"\n          uploadText=\"Upload Recording\"\n          removeText=\"Remove Recording\"\n          url={this.state.audio.value}\n          endpoint={this.context.config.endpoints.attachments}\n          onUploadChanged={this.handleUploadChanged}\n        />\n      </Dialog>\n    );\n  }\n}\n","import { getRecipients, renderAssetList } from 'components/flow/actions/helpers';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { BroadcastMsg } from 'flowTypes';\nimport * as React from 'react';\n\nimport styles from './SendBroadcast.module.scss';\nimport i18n from 'config/i18n';\n\nexport const PLACEHOLDER = i18n.t(\n  'actions.send_broadcast.placeholder',\n  'Send a message to the contact'\n);\n\nconst MAX_TO_SHOW = 3;\n\nconst SendBroadcastComp: React.SFC<BroadcastMsg> = (\n  action: BroadcastMsg,\n  context: any\n): JSX.Element => {\n  const assets = getRecipients(action);\n  if (action.text) {\n    return (\n      <div className={styles.node}>\n        <div className={styles.to}>\n          {renderAssetList(assets, MAX_TO_SHOW, context.config.endpoints)}\n        </div>\n        <div className={styles.message}>\n          {action.text.split(/\\r?\\n/).map((line: string, idx: number) => (\n            <div key={action.uuid + idx} className={styles.line}>\n              {line}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n  return <div className=\"placeholder\">{PLACEHOLDER}</div>;\n};\n\nSendBroadcastComp.contextTypes = {\n  config: fakePropType\n};\n\nexport default SendBroadcastComp;\n","import {\n  getActionUUID,\n  getExpressions,\n  getRecipients,\n  getRecipientsByAsset\n} from 'components/flow/actions/helpers';\nimport { SendBroadcastFormState } from 'components/flow/actions/sendbroadcast/SendBroadcastForm';\nimport { Types } from 'config/interfaces';\nimport { BroadcastMsg } from 'flowTypes';\nimport { AssetType } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): SendBroadcastFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.send_broadcast) {\n    let action = settings.originalAction as BroadcastMsg;\n\n    // check if our form should use a localized action\n    if (settings.localizations && settings.localizations.length > 0) {\n      const localized = settings.localizations[0];\n      if (localized.isLocalized()) {\n        action = settings.localizations[0].getObject() as BroadcastMsg;\n      } else {\n        return {\n          message: { value: '' },\n          recipients: { value: [] },\n          valid: true\n        };\n      }\n    }\n\n    return {\n      message: { value: action.text },\n      recipients: { value: getRecipients(action) },\n      valid: true\n    };\n  }\n\n  return {\n    message: { value: '' },\n    recipients: { value: [] },\n    valid: false\n  };\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  formState: SendBroadcastFormState\n): BroadcastMsg => {\n  return {\n    legacy_vars: getExpressions(formState.recipients.value),\n    contacts: getRecipientsByAsset(formState.recipients.value, AssetType.Contact),\n    groups: getRecipientsByAsset(formState.recipients.value, AssetType.Group),\n    text: formState.message.value,\n    type: Types.send_broadcast,\n    uuid: getActionUUID(settings, Types.send_broadcast)\n  };\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { initializeForm, stateToAction } from 'components/flow/actions/sendbroadcast/helpers';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TextInputElement, { Count } from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport {\n  AssetArrayEntry,\n  FormState,\n  mergeForm,\n  StringEntry,\n  ValidationFailure\n} from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\nimport i18n from 'config/i18n';\n\nexport interface SendBroadcastFormState extends FormState {\n  message: StringEntry;\n  recipients: AssetArrayEntry;\n}\n\n// Note: action prop is only used for its uuid (see onValid)\nexport default class SendBroadcastForm extends React.Component<\n  ActionFormProps,\n  SendBroadcastFormState\n> {\n  public static contextTypes = {\n    endpoints: fakePropType,\n    assetService: fakePropType\n  };\n\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = initializeForm(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleRecipientsChanged(recipients: Asset[]): boolean {\n    return this.handleUpdate({ recipients });\n  }\n\n  public handleMessageUpdate(text: string): boolean {\n    return this.handleUpdate({ text });\n  }\n\n  private handleUpdate(keys: { text?: string; recipients?: Asset[] }, submitting = false): boolean {\n    const updates: Partial<SendBroadcastFormState> = {};\n\n    if (keys.hasOwnProperty('recipients')) {\n      updates.recipients = validate('Recipients', keys.recipients!, [shouldRequireIf(submitting)]);\n    }\n\n    if (keys.hasOwnProperty('text')) {\n      updates.message = validate('Message', keys.text!, [shouldRequireIf(submitting)]);\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    // validate in case they never updated an empty field\n    const valid = this.handleUpdate(\n      {\n        text: this.state.message.value,\n        recipients: this.state.recipients.value!\n      },\n      true\n    );\n\n    if (valid) {\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n\n      // notify our modal we are done\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <AssetSelector\n          name=\"Recipients\"\n          assets={this.props.assetStore.recipients}\n          entry={this.state.recipients}\n          completion={{ assetStore: this.props.assetStore, schema: this.props.completionSchema }}\n          searchable={true}\n          multi={true}\n          onChange={this.handleRecipientsChanged}\n        />\n        <p />\n        <TextInputElement\n          name=\"Message\"\n          showLabel={false}\n          count={Count.SMS}\n          onChange={this.handleMessageUpdate}\n          entry={this.state.message}\n          onFieldFailures={(persistantFailures: ValidationFailure[]) => {\n            const message = { ...this.state.message, persistantFailures };\n            this.setState({\n              message,\n              valid: this.state.valid && !hasErrors(message)\n            });\n          }}\n          autocomplete={true}\n          focus={true}\n          textarea={true}\n        />\n      </Dialog>\n    );\n  }\n}\n","import * as React from 'react';\nimport { SendEmail } from 'flowTypes';\n\nconst SendEmailComp: React.SFC<SendEmail> = ({ subject }): JSX.Element => <div>{subject}</div>;\n\nexport default SendEmailComp;\n","import { react as bindCallbacks } from 'auto-bind';\nimport FormElement, { FormElementProps } from 'components/form/FormElement';\nimport React from 'react';\nimport { StringArrayEntry } from 'store/nodeEditor';\nimport { getSelectClass } from 'utils';\nimport { tagging } from 'utils/reactselect';\nimport CreatableSelect from 'react-select/creatable';\n\nexport type TagList = Array<{ label: string; value: string }>;\n\nexport interface TaggingElementProps extends FormElementProps {\n  placeholder?: string;\n  prompt: string;\n  createPrompt?: string;\n  onChange?: (values: string[]) => void;\n  onCheckValid: (value: string) => boolean;\n}\n\nexport const tagsToOptions = (tags: StringArrayEntry): TagList => {\n  return tags.value.map(tag => ({ label: tag, value: tag }));\n};\n\nexport const optionsToTags = (tags: TagList): string[] =>\n  tags.map(tag => {\n    return tag.label;\n  });\n\nexport default class TaggingElement extends React.Component<TaggingElementProps> {\n  constructor(props: any) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public handleUpdateTags(tags: TagList): void {\n    if (this.props.onChange) {\n      this.props.onChange(optionsToTags(tags));\n    }\n  }\n\n  public handleCheckValid(label: string): boolean {\n    if (!label || label.trim().length === 0) {\n      return false;\n    }\n    return this.props.onCheckValid(label);\n  }\n\n  private arrowRenderer(): JSX.Element {\n    return <div />;\n  }\n\n  public render(): JSX.Element {\n    const className: string = getSelectClass((this.props.entry.validationFailures || []).length);\n\n    const tags = tagsToOptions(this.props.entry);\n    return (\n      <FormElement name={this.props.name} entry={this.props.entry}>\n        <CreatableSelect\n          styles={tagging as any}\n          className={className}\n          name={this.props.name}\n          placeholder={this.props.placeholder}\n          value={tags}\n          onChange={this.handleUpdateTags as any}\n          isMulti={true}\n          isSearchable={true}\n          isValidNewOption={this.handleCheckValid}\n          noOptionsMessage={() => this.props.prompt}\n          formatCreateLabel={(input: string) => {\n            return this.props.createPrompt !== undefined\n              ? this.props.createPrompt + input\n              : 'Create new ' + input;\n          }}\n          options={[]}\n        />\n      </FormElement>\n    );\n  }\n}\n","import { getActionUUID } from 'components/flow/actions/helpers';\nimport { SendEmailFormState } from 'components/flow/actions/sendemail/SendEmailForm';\nimport { Types } from 'config/interfaces';\nimport { SendEmail } from 'flowTypes';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): SendEmailFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.send_email) {\n    const action = settings.originalAction as SendEmail;\n    return {\n      body: { value: action.body },\n      subject: { value: action.subject },\n      recipients: { value: action.addresses },\n      valid: true\n    };\n  }\n\n  return {\n    body: { value: '' },\n    subject: { value: '' },\n    recipients: { value: [] },\n    valid: true\n  };\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  formState: SendEmailFormState\n): SendEmail => {\n  return {\n    addresses: formState.recipients.value,\n    subject: formState.subject.value,\n    body: formState.body.value,\n    type: Types.send_email,\n    uuid: getActionUUID(settings, Types.send_email)\n  };\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { ActionFormProps } from 'components/flow/props';\nimport TaggingElement from 'components/form/select/tags/TaggingElement';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport {\n  FormState,\n  mergeForm,\n  StringArrayEntry,\n  StringEntry,\n  ValidationFailure\n} from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\n\nimport { initializeForm, stateToAction } from './helpers';\nimport styles from './SendEmailForm.module.scss';\nimport i18n from 'config/i18n';\n\nconst EMAIL_PATTERN = /\\S+@\\S+\\.\\S+/;\n\nexport interface SendEmailFormState extends FormState {\n  recipients: StringArrayEntry;\n  subject: StringEntry;\n  body: StringEntry;\n}\n\nexport default class SendEmailForm extends React.Component<ActionFormProps, SendEmailFormState> {\n  constructor(props: ActionFormProps) {\n    super(props);\n\n    this.state = initializeForm(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleRecipientsChanged(recipients: string[]): boolean {\n    return this.handleUpdate({ recipients });\n  }\n\n  public handleSubjectChanged(subject: string): boolean {\n    return this.handleUpdate({ subject });\n  }\n\n  public handleBodyChanged(body: string): boolean {\n    return this.handleUpdate({ body });\n  }\n\n  private handleUpdate(\n    keys: { recipients?: string[]; subject?: string; body?: string },\n    submitting = false\n  ): boolean {\n    const updates: Partial<SendEmailFormState> = {};\n\n    if (keys.hasOwnProperty('recipients')) {\n      updates.recipients = validate('Recipients', keys.recipients!, [shouldRequireIf(submitting)]);\n    }\n\n    if (keys.hasOwnProperty('subject')) {\n      updates.subject = validate('Subject', keys.subject!, [shouldRequireIf(submitting)]);\n    }\n\n    if (keys.hasOwnProperty('body')) {\n      updates.body = validate('Body', keys.body!, [shouldRequireIf(submitting)]);\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  public handleSave(): void {\n    // validate in case they never updated an empty field\n    const valid = this.handleUpdate(\n      {\n        recipients: this.state.recipients.value,\n        subject: this.state.subject.value,\n        body: this.state.body.value\n      },\n      true\n    );\n\n    if (valid) {\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n\n      // notify our modal we are done\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public handleCheckValid(value: string): boolean {\n    return EMAIL_PATTERN.test(value) || value.startsWith('@');\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div className={styles.ele}>\n          <TaggingElement\n            name={i18n.t('forms.send_email.recipient_name', 'Recipient')}\n            placeholder={i18n.t('forms.send_email.recipient_placeholder', 'To')}\n            prompt={i18n.t('forms.send_email.recipient_prompt', 'Enter email address')}\n            onCheckValid={this.handleCheckValid}\n            entry={this.state.recipients}\n            onChange={this.handleRecipientsChanged}\n            createPrompt={''}\n          />\n          <TextInputElement\n            __className={styles.subject}\n            name={i18n.t('forms.send_email.subject_name', 'Subject')}\n            placeholder={i18n.t('forms.send_email.subject_placeholder', 'Subject')}\n            onChange={this.handleSubjectChanged}\n            entry={this.state.subject}\n            onFieldFailures={(persistantFailures: ValidationFailure[]) => {\n              const subject = { ...this.state.subject, persistantFailures };\n              this.setState({\n                subject,\n                valid: this.state.valid && !hasErrors(subject)\n              });\n            }}\n            autocomplete={true}\n          />\n          <TextInputElement\n            __className={styles.message}\n            name={i18n.t('forms.send_email.message_name', 'Message')}\n            showLabel={false}\n            onChange={this.handleBodyChanged}\n            entry={this.state.body}\n            onFieldFailures={(persistantFailures: ValidationFailure[]) => {\n              const body = { ...this.state.body, persistantFailures };\n              this.setState({\n                body,\n                valid: this.state.valid && !hasErrors(body)\n              });\n            }}\n            autocomplete={true}\n            textarea={true}\n          />\n        </div>\n      </Dialog>\n    );\n  }\n}\n","import Pill from 'components/pill/Pill';\nimport { SendMsg } from 'flowTypes';\nimport * as React from 'react';\n\nimport styles from './SendMsg.module.scss';\nimport i18n from 'config/i18n';\n\nexport const PLACEHOLDER = i18n.t('actions.send_msg.placeholder', 'Send a message to the contact');\n\nconst SendMsgComp: React.SFC<SendMsg> = (action: SendMsg): JSX.Element => {\n  if (action.text) {\n    let replies = null;\n\n    if ((action.quick_replies || []).length > 0) {\n      replies = (\n        <div className={styles.quick_replies}>\n          {action.quick_replies.map(reply => (\n            <Pill\n              style={{ marginLeft: 4, marginTop: 4 }}\n              maxLength={20}\n              advanced={true}\n              key={action.uuid + reply}\n              text={reply}\n            />\n          ))}\n        </div>\n      );\n    }\n\n    return (\n      <>\n        <div>\n          {action.text.split(/\\r?\\n/).map((line: string, idx: number) => (\n            <div key={action.uuid + idx} className={styles.line}>\n              {line}\n            </div>\n          ))}\n          {action.attachments && action.attachments.length > 0 ? (\n            <div data-advanced={true} className={`${styles.attachment} fe-paperclip`} />\n          ) : null}\n          {action.templating && action.templating.template ? (\n            <div data-advanced={true} className={`${styles.whatsapp} fe-whatsapp`} />\n          ) : null}\n        </div>\n        <div className={styles.summary}>{replies}</div>\n      </>\n    );\n  }\n  return <div className=\"placeholder\">{PLACEHOLDER}</div>;\n};\n\nexport default SendMsgComp;\n","import { getActionUUID } from 'components/flow/actions/helpers';\nimport { Attachment, SendMsgFormState } from 'components/flow/actions/sendmsg/SendMsgForm';\nimport { Types } from 'config/interfaces';\nimport { MsgTemplating, SendMsg } from 'flowTypes';\nimport { AssetStore, AssetType } from 'store/flowContext';\nimport { AssetEntry, NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nexport const initializeForm = (\n  settings: NodeEditorSettings,\n  assetStore: AssetStore\n): SendMsgFormState => {\n  let template: AssetEntry = { value: null };\n  let templateVariables: StringEntry[] = [];\n\n  if (settings.originalAction && settings.originalAction.type === Types.send_msg) {\n    const action = settings.originalAction as SendMsg;\n    const attachments: Attachment[] = [];\n    (action.attachments || []).forEach((attachmentString: string) => {\n      const splitPoint = attachmentString.indexOf(':');\n\n      const type = attachmentString.substring(0, splitPoint);\n      const attachment = {\n        type,\n        url: attachmentString.substring(splitPoint + 1),\n        uploaded: type.indexOf('/') > -1\n      };\n\n      attachments.push(attachment);\n    });\n\n    if (action.templating) {\n      const msgTemplate = action.templating.template;\n      template = {\n        value: {\n          id: msgTemplate.uuid,\n          name: msgTemplate.name,\n          type: AssetType.Template\n        }\n      };\n      templateVariables = action.templating.variables.map((value: string) => {\n        return {\n          value\n        };\n      });\n    }\n\n    return {\n      template,\n      templateVariables,\n      attachments,\n      message: { value: action.text },\n      quickReplies: { value: action.quick_replies || [] },\n      quickReplyEntry: { value: '' },\n      sendAll: action.all_urns,\n      valid: true\n    };\n  }\n\n  return {\n    template,\n    templateVariables: [],\n    attachments: [],\n    message: { value: '' },\n    quickReplies: { value: [] },\n    quickReplyEntry: { value: '' },\n    sendAll: false,\n    valid: false\n  };\n};\n\nexport const stateToAction = (settings: NodeEditorSettings, state: SendMsgFormState): SendMsg => {\n  const attachments = state.attachments\n    .filter((attachment: Attachment) => attachment.url.trim().length > 0)\n    .map((attachment: Attachment) => `${attachment.type}:${attachment.url}`);\n\n  let templating: MsgTemplating = null;\n  if (state.template && state.template.value) {\n    templating = {\n      template: {\n        uuid: state.template.value.id,\n        name: state.template.value.name\n      },\n      variables: state.templateVariables.map((variable: StringEntry) => variable.value)\n    };\n  }\n\n  const result: SendMsg = {\n    attachments,\n    text: state.message.value,\n    type: Types.send_msg,\n    all_urns: state.sendAll,\n    quick_replies: state.quickReplies.value,\n    uuid: getActionUUID(settings, Types.send_msg)\n  };\n\n  if (templating) {\n    result.templating = templating;\n  }\n\n  return result;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport axios from 'axios';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport {\n  initializeForm as stateToForm,\n  stateToAction\n} from 'components/flow/actions/sendmsg/helpers';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport { hasUseableTranslation } from 'components/form/assetselector/helpers';\nimport CheckboxElement from 'components/form/checkbox/CheckboxElement';\nimport MultiChoiceInput from 'components/form/multichoice/MultiChoice';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\nimport TextInputElement, { Count } from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport Pill from 'components/pill/Pill';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { fetchAsset, getCookie } from 'external';\nimport { Template, TemplateOptions, TemplateTranslation } from 'flowTypes';\nimport mutate from 'immutability-helper';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport {\n  AssetEntry,\n  FormState,\n  mergeForm,\n  StringArrayEntry,\n  StringEntry,\n  ValidationFailure\n} from 'store/nodeEditor';\nimport { MaxOfTenItems, Required, shouldRequireIf, validate } from 'store/validators';\nimport { createUUID, range } from 'utils';\nimport { small } from 'utils/reactselect';\n\nimport styles from './SendMsgForm.module.scss';\nimport { hasFeature } from 'config/typeConfigs';\nimport { FeatureFilter } from 'config/interfaces';\n\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\n\nconst MAX_ATTACHMENTS = 3;\n\nconst TYPE_OPTIONS: SelectOption[] = [\n  { value: 'image', label: 'Image URL' },\n  { value: 'audio', label: 'Audio URL' },\n  { value: 'video', label: 'Video URL' }\n];\n\nconst NEW_TYPE_OPTIONS = TYPE_OPTIONS.concat([{ value: 'upload', label: 'Upload Attachment' }]);\n\nconst getAttachmentTypeOption = (type: string): SelectOption => {\n  return TYPE_OPTIONS.find((option: SelectOption) => option.value === type);\n};\n\nexport interface Attachment {\n  type: string;\n  url: string;\n  uploaded?: boolean;\n}\n\nexport interface SendMsgFormState extends FormState {\n  message: StringEntry;\n  quickReplies: StringArrayEntry;\n  quickReplyEntry: StringEntry;\n  sendAll: boolean;\n  attachments: Attachment[];\n  template: AssetEntry;\n  templateVariables: StringEntry[];\n  templateTranslation?: TemplateTranslation;\n}\n\nexport default class SendMsgForm extends React.Component<ActionFormProps, SendMsgFormState> {\n  private filePicker: any;\n\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = stateToForm(this.props.nodeSettings, this.props.assetStore);\n    bindCallbacks(this, {\n      include: [/^handle/, /^on/]\n    });\n\n    // intialize our templates if we have them\n    if (this.state.template.value !== null) {\n      fetchAsset(this.props.assetStore.templates, this.state.template.value.id).then(\n        (asset: Asset) => {\n          if (asset !== null) {\n            this.handleTemplateChanged([asset]);\n          }\n        }\n      );\n    }\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  private handleUpdate(\n    keys: {\n      text?: string;\n      sendAll?: boolean;\n      quickReplies?: string[];\n    },\n    submitting = false\n  ): boolean {\n    const updates: Partial<SendMsgFormState> = {};\n    if (keys.hasOwnProperty('text')) {\n      updates.message = validate('Message', keys.text, [shouldRequireIf(submitting)]);\n    }\n\n    if (keys.hasOwnProperty('sendAll')) {\n      updates.sendAll = keys.sendAll;\n    }\n\n    if (keys.hasOwnProperty('quickReplies')) {\n      updates.quickReplies = validate('Quick Replies', keys.quickReplies, [MaxOfTenItems]);\n    }\n\n    const updated = mergeForm(this.state, updates) as SendMsgFormState;\n\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  public handleMessageUpdate(message: string, name: string, submitting = false): boolean {\n    return this.handleUpdate({ text: message }, submitting);\n  }\n\n  public handleQuickRepliesUpdate(quickReplies: string[]): boolean {\n    return this.handleUpdate({ quickReplies });\n  }\n\n  public handleSendAllUpdate(sendAll: boolean): boolean {\n    return this.handleUpdate({ sendAll });\n  }\n\n  private handleSave(): void {\n    // make sure we validate untouched text fields and contact fields\n    let valid = this.handleMessageUpdate(this.state.message.value, null, true);\n\n    let templateVariables = this.state.templateVariables;\n    // make sure we don't have untouched template variables\n    this.state.templateVariables.forEach((variable: StringEntry, num: number) => {\n      const updated = validate(`Variable ${num + 1}`, variable.value, [Required]);\n      templateVariables = mutate(templateVariables, {\n        [num]: { $merge: updated }\n      }) as StringEntry[];\n      valid = valid && !hasErrors(updated);\n    });\n\n    valid = valid && !hasErrors(this.state.quickReplyEntry);\n\n    if (valid) {\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n      // notify our modal we are done\n      this.props.onClose(false);\n    } else {\n      this.setState({ templateVariables, valid });\n    }\n  }\n\n  public handleFieldFailures(persistantFailures: ValidationFailure[]): void {\n    const message = { ...this.state.message, persistantFailures };\n    this.setState({ message, valid: this.state.valid && !hasErrors(message) });\n  }\n\n  public handleQuickReplyFieldFailures(persistantFailures: ValidationFailure[]): void {\n    const quickReplies = { ...this.state.quickReplies, persistantFailures };\n    this.setState({\n      quickReplies,\n      valid: this.state.valid && !hasErrors(quickReplies)\n    });\n  }\n\n  public handleAttachmentRemoved(index: number): void {\n    // we found a match, merge us in\n    const updated: any = mutate(this.state.attachments, {\n      $splice: [[index, 1]]\n    });\n    this.setState({ attachments: updated });\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private renderUpload(index: number, attachment: Attachment): JSX.Element {\n    return (\n      <div\n        className={styles.url_attachment}\n        key={index > -1 ? 'url_attachment_' + index : createUUID()}\n      >\n        <div className={styles.type_choice}>\n          <SelectElement\n            name=\"Type\"\n            styles={small as any}\n            entry={{\n              value: { label: attachment.type }\n            }}\n            options={TYPE_OPTIONS}\n          />\n        </div>\n        <div className={styles.url}>\n          <span className={styles.upload}>\n            <Pill\n              icon=\"fe-download\"\n              text=\" Download\"\n              large={true}\n              onClick={() => {\n                window.open(attachment.url, '_blank');\n              }}\n            />\n            <div className={styles.remove_upload}>\n              <Pill\n                icon=\"fe-x\"\n                text=\" Remove\"\n                large={true}\n                onClick={() => {\n                  this.handleAttachmentRemoved(index);\n                }}\n              />\n            </div>\n          </span>\n        </div>\n      </div>\n    );\n  }\n\n  private handleUploadFile(files: FileList): void {\n    let attachments: any = this.state.attachments;\n\n    // if we have a csrf in our cookie, pass it along as a header\n    const csrf = getCookie('csrftoken');\n    const headers = csrf ? { 'X-CSRFToken': csrf } : {};\n\n    const data = new FormData();\n    data.append('file', files[0]);\n    axios\n      .post(this.context.config.endpoints.attachments, data, { headers })\n      .then(response => {\n        attachments = mutate(attachments, {\n          $push: [{ type: response.data.type, url: response.data.url, uploaded: true }]\n        });\n        this.setState({ attachments });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  private renderAttachment(index: number, attachment: Attachment): JSX.Element {\n    let attachments: any = this.state.attachments;\n    return (\n      <div\n        className={styles.url_attachment}\n        key={index > -1 ? 'url_attachment_' + index : createUUID()}\n      >\n        <div className={styles.type_choice}>\n          <SelectElement\n            styles={small as any}\n            name=\"Type Options\"\n            placeholder=\"Add Attachment\"\n            entry={{\n              value: index > -1 ? getAttachmentTypeOption(attachment.type) : null\n            }}\n            onChange={(option: any) => {\n              if (option.value === 'upload') {\n                window.setTimeout(() => {\n                  this.filePicker.click();\n                }, 200);\n              } else {\n                if (index === -1) {\n                  attachments = mutate(attachments, {\n                    $push: [{ type: option.value, url: '' }]\n                  });\n                } else {\n                  attachments = mutate(attachments, {\n                    [index]: {\n                      $set: { type: option.value, url: attachment.url }\n                    }\n                  });\n                }\n                this.setState({ attachments });\n              }\n            }}\n            options={index > -1 ? TYPE_OPTIONS : NEW_TYPE_OPTIONS}\n          />\n        </div>\n        {index > -1 ? (\n          <>\n            <div className={styles.url}>\n              <TextInputElement\n                placeholder=\"URL\"\n                name=\"url\"\n                onChange={(value: string) => {\n                  attachments = mutate(attachments, {\n                    [index]: { $set: { type: attachment.type, url: value } }\n                  });\n                  this.setState({ attachments });\n                }}\n                entry={{ value: attachment.url }}\n                autocomplete={true}\n              />\n            </div>\n            <div className={styles.remove}>\n              <Pill\n                icon=\"fe-x\"\n                text=\" Remove\"\n                large={true}\n                onClick={() => {\n                  this.handleAttachmentRemoved(index);\n                }}\n              />\n            </div>\n          </>\n        ) : null}\n      </div>\n    );\n  }\n\n  private renderAttachments(): JSX.Element {\n    const attachments = this.state.attachments.map((attachment, index: number) =>\n      attachment.uploaded\n        ? this.renderUpload(index, attachment)\n        : this.renderAttachment(index, attachment)\n    );\n\n    const emptyOption =\n      this.state.attachments.length < MAX_ATTACHMENTS\n        ? this.renderAttachment(-1, { url: '', type: '' })\n        : null;\n    return (\n      <>\n        <p>\n          {i18n.t(\n            'forms.send_msg.summary',\n            'Add an attachment to each message. The attachment can be a file you upload or a dynamic URL using expressions and variables from your Flow.',\n            { count: MAX_ATTACHMENTS }\n          )}\n        </p>\n        {attachments}\n        {emptyOption}\n        <input\n          style={{\n            display: 'none'\n          }}\n          ref={ele => {\n            this.filePicker = ele;\n          }}\n          type=\"file\"\n          onChange={e => this.handleUploadFile(e.target.files)}\n        />\n      </>\n    );\n  }\n\n  private handleTemplateChanged(selected: Asset[]): void {\n    const template = selected[0];\n\n    if (!template) {\n      this.setState({\n        template: { value: null },\n        templateTranslation: null,\n        templateVariables: []\n      });\n    } else {\n      const templateOptions = template.content as TemplateOptions;\n      const templateTranslation = templateOptions.translations[0];\n\n      const templateVariables =\n        this.state.templateVariables.length === 0 ||\n        (this.state.template.value && this.state.template.value.id !== template.id)\n          ? range(0, templateTranslation.variable_count).map(() => {\n              return {\n                value: ''\n              };\n            })\n          : this.state.templateVariables;\n\n      this.setState({\n        template: { value: template },\n        templateTranslation,\n        templateVariables\n      });\n    }\n  }\n\n  private handleTemplateFieldFailures(persistantFailures: ValidationFailure[], num: number): void {\n    const templateVariables = mutate(this.state.templateVariables, {\n      [num]: { $merge: { persistantFailures } }\n    }) as StringEntry[];\n\n    this.setState({\n      templateVariables,\n      valid: this.state.valid && !hasErrors(templateVariables[num])\n    });\n  }\n\n  private handleTemplateVariableChanged(updatedText: string, num: number): void {\n    const entry = validate(`Variable ${num + 1}`, updatedText, [Required]);\n    const templateVariables = mutate(this.state.templateVariables, {\n      $merge: { [num]: entry }\n    }) as StringEntry[];\n    this.setState({ templateVariables });\n  }\n\n  private handleShouldExcludeTemplate(asset: Asset): boolean {\n    return !hasUseableTranslation(asset.content as Template);\n  }\n\n  private renderTemplateConfig(): JSX.Element {\n    return (\n      <>\n        <p>\n          {i18n.t(\n            'forms.send_msg.whatsapp_warning',\n            'Sending messages over a WhatsApp channel requires that a template be used if you have not received a message from a contact in the last 24 hours. Setting a template to use over WhatsApp is especially important for the first message in your flow.'\n          )}\n        </p>\n        <AssetSelector\n          name=\"Template\"\n          noOptionsMessage=\"No templates found\"\n          assets={this.props.assetStore.templates}\n          entry={this.state.template}\n          onChange={this.handleTemplateChanged}\n          shouldExclude={this.handleShouldExcludeTemplate}\n          searchable={true}\n          formClearable={true}\n        />\n        {this.state.templateTranslation ? (\n          <>\n            <div className={styles.template_text}>{this.state.templateTranslation.content}</div>\n            {range(0, this.state.templateTranslation.variable_count).map((num: number) => {\n              return (\n                <div className={styles.variable} key={'tr_arg_' + num}>\n                  <TextInputElement\n                    name={`Variable ${num + 1}`}\n                    showLabel={false}\n                    placeholder={`Variable ${num + 1}`}\n                    onChange={(updatedText: string) => {\n                      this.handleTemplateVariableChanged(updatedText, num);\n                    }}\n                    entry={this.state.templateVariables[num]}\n                    autocomplete={true}\n                    onFieldFailures={(failures: ValidationFailure[]) => {\n                      this.handleTemplateFieldFailures(failures, num);\n                    }}\n                  />\n                </div>\n              );\n            })}\n          </>\n        ) : null}\n      </>\n    );\n  }\n\n  private handleAddQuickReply(newQuickReply: string): boolean {\n    const newReplies = [...this.state.quickReplies.value];\n    if (newReplies.length >= 10) {\n      return false;\n    }\n\n    // we don't allow two quick replies with the same name\n    const isNew = !newReplies.find(\n      (reply: string) => reply.toLowerCase() === newQuickReply.toLowerCase()\n    );\n\n    if (isNew) {\n      newReplies.push(newQuickReply);\n      this.setState({\n        quickReplies: { value: newReplies }\n      });\n      return true;\n    }\n\n    return false;\n  }\n\n  private handleRemoveQuickReply(toRemove: string): void {\n    this.setState({\n      quickReplies: {\n        value: this.state.quickReplies.value.filter((reply: string) => reply !== toRemove)\n      }\n    });\n  }\n\n  private handleQuickReplyEntry(quickReplyEntry: StringEntry): void {\n    this.setState({ quickReplyEntry });\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    const quickReplies: Tab = {\n      name: 'Quick Replies',\n      body: (\n        <>\n          <p>\n            {i18n.t(\n              'forms.send_msg.quick_replies',\n              'Quick Replies are made into buttons for supported channels. For example, when asking a question, you might add a Quick Reply for \"Yes\" and one for \"No\".'\n            )}\n          </p>\n\n          <MultiChoiceInput\n            name=\"Quick Reply\"\n            helpText={\n              <Trans i18nKey=\"forms.send_msg.add_quick_reply\">\n                Add a new Quick Reply and press enter.\n              </Trans>\n            }\n            items={this.state.quickReplies}\n            entry={this.state.quickReplyEntry}\n            onRemoved={this.handleRemoveQuickReply}\n            onItemAdded={this.handleAddQuickReply}\n            onEntryChanged={this.handleQuickReplyEntry}\n            onFieldErrors={this.handleQuickReplyFieldFailures}\n          />\n        </>\n      ),\n      checked: this.state.quickReplies.value.length > 0,\n      hasErrors: hasErrors(this.state.quickReplyEntry)\n    };\n\n    const attachments: Tab = {\n      name: 'Attachments',\n      body: this.renderAttachments(),\n      checked: this.state.attachments.length > 0\n    };\n\n    const advanced: Tab = {\n      name: 'Advanced',\n      body: (\n        <CheckboxElement\n          name=\"All Destinations\"\n          title=\"All Destinations\"\n          labelClassName={styles.checkbox}\n          checked={this.state.sendAll}\n          description={i18n.t(\n            'forms.send_msg.all_destinations',\n            \"Send a message to all destinations known for this contact. If you aren't sure what this means, leave it unchecked.\"\n          )}\n          onChange={this.handleSendAllUpdate}\n        />\n      ),\n      checked: this.state.sendAll\n    };\n\n    const tabs = [quickReplies, attachments, advanced];\n\n    if (hasFeature(this.context.config, FeatureFilter.HAS_WHATSAPP)) {\n      const templates: Tab = {\n        name: 'WhatsApp',\n        body: this.renderTemplateConfig(),\n        checked: this.state.template.value != null,\n        hasErrors: !!this.state.templateVariables.find((entry: StringEntry) => hasErrors(entry))\n      };\n      tabs.splice(0, 0, templates);\n    }\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={tabs}\n      >\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <TextInputElement\n          name=\"Message\"\n          showLabel={false}\n          count={Count.SMS}\n          onChange={this.handleMessageUpdate}\n          entry={this.state.message}\n          autocomplete={true}\n          focus={true}\n          textarea={true}\n          onFieldFailures={this.handleFieldFailures}\n        />\n      </Dialog>\n    );\n  }\n}\n","import * as React from 'react';\nimport { SetRunResult } from 'flowTypes';\n\n// tslint:disable-next-line:variable-name\nexport const getResultNameMarkup = (name: string): JSX.Element => (\n  <span className=\"emph\">{name}</span>\n);\nexport const getSavePlaceholder = (value: string, name: JSX.Element): JSX.Element => (\n  <div>\n    Save {value} as {name}\n  </div>\n);\n\nexport const getClearPlaceholder = (name: JSX.Element) => <div>Clear value for {name}</div>;\n\nconst SetRunResultComp: React.SFC<SetRunResult> = ({ value, name }): JSX.Element => {\n  if (value) {\n    return getSavePlaceholder(value, getResultNameMarkup(name));\n  }\n  return getClearPlaceholder(getResultNameMarkup(name));\n};\n\nexport default SetRunResultComp;\n","import { getActionUUID } from 'components/flow/actions/helpers';\nimport { SetRunResultFormState } from 'components/flow/actions/setrunresult/SetRunResultForm';\nimport { Types } from 'config/interfaces';\nimport { SetRunResult } from 'flowTypes';\nimport { AssetType } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport { snakify } from 'utils';\n\nexport const initializeForm = (settings: NodeEditorSettings): SetRunResultFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.set_run_result) {\n    const action = settings.originalAction as SetRunResult;\n\n    return {\n      name: {\n        value: {\n          id: snakify(action.name),\n          name: action.name,\n          type: AssetType.Result\n        }\n      },\n      value: { value: action.value },\n      category: { value: action.category },\n      valid: true\n    };\n  }\n\n  return {\n    name: { value: null },\n    value: { value: '' },\n    category: { value: '' },\n    valid: false\n  };\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  state: SetRunResultFormState\n): SetRunResult => {\n  return {\n    type: Types.set_run_result,\n    name: state.name.value.name,\n    value: state.value.value,\n    category: state.category.value,\n    uuid: getActionUUID(settings, Types.set_run_result)\n  };\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { Asset, AssetType } from 'store/flowContext';\nimport { AssetEntry, FormState, mergeForm, StringEntry, ValidationFailure } from 'store/nodeEditor';\nimport { Alphanumeric, shouldRequireIf, StartIsNonNumeric, validate } from 'store/validators';\nimport { snakify } from 'utils';\n\nimport { initializeForm, stateToAction } from './helpers';\nimport styles from './SetRunResultForm.module.scss';\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\n\nexport interface SetRunResultFormState extends FormState {\n  name: AssetEntry;\n  value: StringEntry;\n  category: StringEntry;\n}\n\nexport default class SetRunResultForm extends React.PureComponent<\n  ActionFormProps,\n  SetRunResultFormState\n> {\n  constructor(props: ActionFormProps) {\n    super(props);\n\n    this.state = initializeForm(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^handle/, /^on/]\n    });\n  }\n\n  private handleNameUpdate(selected: Asset[]): void {\n    this.handleUpdate({ name: selected[0] });\n  }\n\n  public handleValueUpdate(value: string): boolean {\n    return this.handleUpdate({ value });\n  }\n\n  public handleCategoryUpdate(category: string): boolean {\n    return this.handleUpdate({ category });\n  }\n\n  private handleUpdate(\n    keys: { name?: Asset; value?: string; category?: string },\n    submitting: boolean = false\n  ): boolean {\n    const updates: Partial<SetRunResultFormState> = {};\n\n    if (keys.hasOwnProperty('name')) {\n      updates.name = validate('Name', keys.name, [\n        shouldRequireIf(submitting),\n        Alphanumeric,\n        StartIsNonNumeric\n      ]);\n    }\n\n    if (keys.hasOwnProperty('value')) {\n      updates.value = validate('Value', keys.value, []);\n    }\n\n    if (keys.hasOwnProperty('category')) {\n      updates.category = validate('Category', keys.category, []);\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    // make sure we validate untouched text fields\n    const valid = this.handleUpdate({ name: this.state.name.value }, true);\n\n    if (valid) {\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n\n      // notify our modal we are done\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private handleCreateAssetFromInput(input: string): Asset {\n    return {\n      id: snakify(input),\n      name: input,\n      type: AssetType.Result\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    const snaked =\n      !hasErrors(this.state.name) && this.state.name.value\n        ? '.' + snakify(this.state.name.value.name)\n        : '';\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div className={styles.form}>\n          <AssetSelector\n            name=\"Result\"\n            assets={this.props.assetStore.results}\n            entry={this.state.name}\n            searchable={true}\n            createPrefix={i18n.t('forms.set_run_result.create_prefix', 'New: ')}\n            onChange={this.handleNameUpdate}\n            createAssetFromInput={this.handleCreateAssetFromInput}\n            formClearable={true}\n            showLabel={true}\n            helpText={\n              <Trans\n                i18nKey=\"forms.result_name_help\"\n                values={{ resultFormat: `@results${snaked}` }}\n              >\n                By naming the result, you can reference it later using [[resultFormat]]\n              </Trans>\n            }\n          />\n\n          <TextInputElement\n            __className={styles.value}\n            name=\"Value\"\n            showLabel={true}\n            onChange={this.handleValueUpdate}\n            entry={this.state.value}\n            onFieldFailures={(persistantFailures: ValidationFailure[]) => {\n              const value = { ...this.state.value, persistantFailures };\n              this.setState({\n                value,\n                valid: this.state.valid && !hasErrors(value)\n              });\n            }}\n            autocomplete={true}\n            helpText=\"The value to save for this result or empty to clears it. You can use expressions, for example: @(title(input))\"\n          />\n          <TextInputElement\n            __className={styles.category}\n            name=\"Category\"\n            placeholder=\"Optional\"\n            showLabel={true}\n            onChange={this.handleCategoryUpdate}\n            entry={this.state.category}\n            autocomplete={false}\n            helpText=\"An optional category for your result. For age, the value might be 17, but the category might be 'Young Adult'\"\n          />\n        </div>\n      </Dialog>\n    );\n  }\n}\n","import * as React from 'react';\nimport { renderAssetList } from 'components/flow/actions/helpers';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { StartFlow } from 'flowTypes';\nimport { AssetType } from 'store/flowContext';\n\nconst StartFlowComp: React.SFC<StartFlow> = (\n  { flow: { name, uuid } },\n  context: any\n): JSX.Element => (\n  <>{renderAssetList([{ name, id: uuid, type: AssetType.Flow }], 3, context.config.endpoints)}</>\n);\n\nStartFlowComp.contextTypes = {\n  config: fakePropType\n};\n\nexport default StartFlowComp;\n","import { getRecipients, renderAssetList } from 'components/flow/actions/helpers';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { StartSession } from 'flowTypes';\nimport * as React from 'react';\nimport { AssetType } from 'store/flowContext';\n\nimport styles from './StartSession.module.scss';\n\nconst MAX_TO_SHOW = 3;\n\nexport const StartSessionComp: React.SFC<StartSession> = (\n  action: StartSession,\n  context: any\n): JSX.Element => {\n  const recipients = getRecipients(action);\n  return (\n    <div className={styles.node}>\n      <div className={styles.to}>\n        {action.create_contact\n          ? 'Create a new contact'\n          : action.contact_query\n          ? action.contact_query\n          : renderAssetList(recipients, MAX_TO_SHOW, context.config.endpoints)}\n      </div>\n      <div className={styles.flow}>\n        {renderAssetList(\n          [\n            {\n              name: action.flow.name,\n              id: action.flow.uuid,\n              type: AssetType.Flow\n            }\n          ],\n          3,\n          context.config.endpoints\n        )}\n      </div>\n    </div>\n  );\n};\n\nStartSessionComp.contextTypes = {\n  config: fakePropType\n};\n\nexport default StartSessionComp;\n","import {\n  getActionUUID,\n  getExpressions,\n  getRecipients,\n  getRecipientsByAsset\n} from 'components/flow/actions/helpers';\nimport {\n  StartSessionFormState,\n  START_TYPE_CREATE,\n  START_TYPE_ASSETS,\n  START_TYPE_QUERY\n} from 'components/flow/actions/startsession/StartSessionForm';\nimport { Types } from 'config/interfaces';\nimport { StartSession } from 'flowTypes';\nimport { Asset, AssetType } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): StartSessionFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.start_session) {\n    const action = settings.originalAction as StartSession;\n\n    const init = {\n      recipients: {\n        value: getRecipients(action)\n      },\n      flow: {\n        value: {\n          id: action.flow.uuid,\n          name: action.flow.name,\n          type: AssetType.Flow\n        }\n      },\n      startType: {\n        value: action.create_contact\n          ? START_TYPE_CREATE\n          : action.contact_query\n          ? START_TYPE_QUERY\n          : START_TYPE_ASSETS\n      },\n      contactQuery: { value: action.contact_query || '' },\n      valid: true\n    };\n\n    return init;\n  }\n\n  return {\n    recipients: { value: [] },\n    flow: { value: null },\n    startType: { value: START_TYPE_ASSETS },\n    contactQuery: { value: '' },\n    valid: false\n  };\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  state: StartSessionFormState\n): StartSession => {\n  const flow: Asset = state.flow.value;\n\n  const action: StartSession = {\n    legacy_vars: getExpressions(state.recipients.value),\n    contacts: getRecipientsByAsset(state.recipients.value, AssetType.Contact),\n    groups: getRecipientsByAsset(state.recipients.value, AssetType.Group),\n    create_contact: state.startType.value === START_TYPE_CREATE,\n    flow: { name: flow.name, uuid: flow.id },\n    type: Types.start_session,\n    uuid: getActionUUID(settings, Types.start_session)\n  };\n\n  // only include contact query if it is set\n  if (state.contactQuery.value) {\n    action['contact_query'] = state.contactQuery.value;\n  }\n\n  return action;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport {\n  AssetArrayEntry,\n  AssetEntry,\n  FormState,\n  mergeForm,\n  StringEntry,\n  SelectOptionEntry,\n  ValidationFailure\n} from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\nimport { renderIf } from 'utils';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\nimport { initializeForm, stateToAction } from './helpers';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport { large } from 'utils/reactselect';\nimport i18n from 'config/i18n';\n\nexport const START_TYPE_ASSETS = { label: 'Select recipients manually', value: 'assets' };\nexport const START_TYPE_CREATE = { label: 'Create a new contact', value: 'create_contact' };\nexport const START_TYPE_QUERY = { label: 'Select recipients from a query', value: 'contact_query' };\n\nconst START_TYPE_OPTIONS = [START_TYPE_ASSETS, START_TYPE_QUERY, START_TYPE_CREATE];\n\nexport interface StartSessionFormState extends FormState {\n  recipients: AssetArrayEntry;\n  flow: AssetEntry;\n  startType: SelectOptionEntry;\n  contactQuery: StringEntry;\n}\n\nexport class StartSessionForm extends React.Component<ActionFormProps, StartSessionFormState> {\n  constructor(props: ActionFormProps) {\n    super(props);\n\n    this.state = initializeForm(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleRecipientsChanged(recipients: Asset[]): boolean {\n    return this.handleUpdate({ recipients });\n  }\n\n  public handleFlowChanged(flows: Asset[]): boolean {\n    let flow = null;\n    if (flows && flows.length > 0) {\n      flow = flows[0];\n    }\n    return this.handleUpdate({ flow });\n  }\n\n  public handleStartTypeChanged(startType: SelectOption): boolean {\n    return this.handleUpdate({ startType });\n  }\n\n  public handleContactQueryChanged(contactQuery: string): boolean {\n    return this.handleUpdate({ contactQuery });\n  }\n\n  private handleUpdate(\n    keys: { flow?: Asset; recipients?: Asset[]; startType?: SelectOption; contactQuery?: string },\n    submitting = false\n  ): boolean {\n    const updates: Partial<StartSessionFormState> = {};\n\n    if (keys.hasOwnProperty('startType')) {\n      updates.startType = { value: keys.startType };\n      if (keys.startType !== START_TYPE_ASSETS) {\n        updates.recipients = { value: [] };\n      }\n\n      if (keys.startType !== START_TYPE_QUERY) {\n        updates.contactQuery = { value: '' };\n      }\n    }\n\n    if (keys.hasOwnProperty('contactQuery')) {\n      updates.contactQuery = validate('Contact query', keys.contactQuery, [\n        shouldRequireIf(submitting && this.state.startType.value === START_TYPE_QUERY)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('recipients')) {\n      updates.recipients = validate('Recipients', keys.recipients, [\n        shouldRequireIf(submitting && this.state.startType.value === START_TYPE_ASSETS)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('flow')) {\n      updates.flow = validate('Flow', keys.flow, [shouldRequireIf(submitting)]);\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    // validate in case they never updated an empty field\n    const valid = this.handleUpdate(\n      {\n        recipients: this.state.recipients.value,\n        flow: this.state.flow.value,\n        contactQuery: this.state.contactQuery.value\n      },\n      true\n    );\n\n    if (valid) {\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n\n      // notify our modal we are done\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div>\n          <SelectElement\n            name=\"Start Type\"\n            styles={large as any}\n            entry={this.state.startType}\n            onChange={this.handleStartTypeChanged}\n            options={START_TYPE_OPTIONS}\n          />\n        </div>\n        <p />\n        <div>\n          {renderIf(this.state.startType.value === START_TYPE_ASSETS)(\n            <div data-testid=\"recipients\">\n              <AssetSelector\n                name=\"Recipients\"\n                placeholder=\"Choose who should be started in the flow\"\n                assets={this.props.assetStore.recipients}\n                completion={{\n                  assetStore: this.props.assetStore,\n                  schema: this.props.completionSchema\n                }}\n                entry={this.state.recipients}\n                searchable={true}\n                multi={true}\n                onChange={this.handleRecipientsChanged}\n              />\n              <p />\n            </div>\n          )}\n\n          {renderIf(this.state.startType.value === START_TYPE_QUERY)(\n            <div data-testid=\"contact_query\">\n              <TextInputElement\n                name=\"Contact Query\"\n                placeholder={'household_id = @fields.household_id'}\n                onFieldFailures={(persistantFailures: ValidationFailure[]) => {\n                  const contactQuery = { ...this.state.contactQuery, persistantFailures };\n                  this.setState({\n                    contactQuery,\n                    valid: this.state.valid\n                  });\n                }}\n                onChange={this.handleContactQueryChanged}\n                entry={this.state.contactQuery}\n                autocomplete={true}\n                focus={true}\n              />\n              <p />\n            </div>\n          )}\n\n          <AssetSelector\n            name=\"Flow\"\n            placeholder=\"Choose which flow to start\"\n            assets={this.props.assetStore.flows}\n            entry={this.state.flow}\n            searchable={true}\n            onChange={this.handleFlowChanged}\n          />\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default StartSessionForm;\n","import i18n from 'config/i18n';\n\nexport const WAIT_LABEL = i18n.t('forms.message_label', 'If the message response...');\nexport const EXPRESSION_LABEL = i18n.t('forms.expression_label', 'If the expression...');\nexport const GROUP_LABEL = i18n.t(\n  'forms.split_by_group.label',\n  \"Select the groups you'd like to split by below\"\n);\n\nexport const OPERAND_LOCALIZATION_DESC = i18n.t(\n  'forms.split.localize_rules',\n  'Sometimes languages need special rules to route things properly. If a translation is not provided, the original rule will be used.'\n);\n\n// We intentionally don't localize these names\nexport enum DefaultExitNames {\n  All_Responses = 'All Responses',\n  No_Response = 'No Response',\n  Any_Value = 'Any Value',\n  Other = 'Other'\n}\n","import { TransferAirtime } from 'flowTypes';\nimport * as React from 'react';\n\nimport styles from './TransferAirtime.module.scss';\n\nconst TransferAirtimeComp: React.SFC<TransferAirtime> = (transfer): JSX.Element => {\n  const details = Object.keys(transfer.amounts).map((key: string) => {\n    return (\n      <div key={'transfer_' + key}>\n        <div className={styles.amount}>{transfer.amounts[key]}</div>\n        <div className={styles.code}>{key}</div>\n      </div>\n    );\n  });\n\n  return <div>{details}</div>;\n};\n\nexport default TransferAirtimeComp;\n","import { getLanguageForCode } from 'components/flow/actions/updatecontact/helpers';\nimport { Types } from 'config/interfaces';\nimport {\n  SetContactAttribute,\n  SetContactChannel,\n  SetContactLanguage,\n  SetContactName\n} from 'flowTypes';\nimport * as React from 'react';\nimport { emphasize } from 'utils';\n\nconst withEmph = (text: string, emph: boolean) => (emph ? emphasize(text) : text);\n\nexport const renderSetText = (\n  name: string,\n  value: string,\n  emphasizeName: boolean = false\n): JSX.Element => {\n  if (value) {\n    return (\n      <div>\n        Set {withEmph(name, emphasizeName)} to {emphasize(value)}.\n      </div>\n    );\n  } else {\n    return <div>Clear {withEmph(name, emphasizeName)}.</div>;\n  }\n};\n\nconst UpdateContactComp: React.SFC<SetContactAttribute> = (action: any) => {\n  switch (action.type) {\n    case Types.set_contact_field:\n      return renderSetText(action.field.name, action.value, true);\n    case Types.set_contact_channel:\n      return renderSetText('channel', (action as SetContactChannel).channel.name);\n    case Types.set_contact_language:\n      const setLanguageAction = action as SetContactLanguage;\n      return renderSetText(\n        'language',\n        getLanguageForCode(setLanguageAction.language, action.languages)\n      );\n    case Types.set_contact_name:\n      return renderSetText('name', (action as SetContactName).name);\n  }\n};\n\nexport default UpdateContactComp;\n","import { CHANNEL_PROPERTY, LANGUAGE_PROPERTY, NAME_PROPERTY } from 'components/flow/props';\nimport { isOnlineFlowType } from 'config/helpers';\nimport { FlowTypes } from 'config/interfaces';\nimport { Asset, RenderNode } from 'store/flowContext';\n\nexport interface DragPoint {\n  exitUUID: string;\n  nodeUUID: string;\n}\n\nexport const getDraggedFrom = (ghostNode: RenderNode): DragPoint => {\n  if (ghostNode.ghost) {\n    const exitUUIDs = Object.keys(ghostNode.inboundConnections);\n    if (exitUUIDs.length > 0) {\n      const exitUUID = exitUUIDs[0];\n      const nodeUUID = ghostNode.inboundConnections[exitUUID];\n      return { exitUUID, nodeUUID };\n    }\n  }\n};\n\nconst ONLINE_PROPERTIES: Asset[] = [NAME_PROPERTY, LANGUAGE_PROPERTY, CHANNEL_PROPERTY];\nconst OFFLINE_PROPERTIES: Asset[] = [NAME_PROPERTY, LANGUAGE_PROPERTY];\n\nexport const getContactProperties = (flowType: FlowTypes = null): Asset[] => {\n  return !flowType || isOnlineFlowType(flowType) ? ONLINE_PROPERTIES : OFFLINE_PROPERTIES;\n};\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { DefaultExitNames } from 'components/flow/routers/constants';\nimport { Operators, Types } from 'config/interfaces';\nimport {\n  Action,\n  CallResthook,\n  CallWebhook,\n  Case,\n  Category,\n  Exit,\n  FlowNode,\n  Router,\n  RouterTypes,\n  SwitchRouter,\n  TransferAirtime,\n  UIConfig,\n  WebhookExitNames,\n  CallClassifier\n} from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { createUUID, snakify } from 'utils';\n\nexport interface CategorizedCases {\n  cases: Case[];\n  categories: Category[];\n  exits: Exit[];\n  caseConfig: { [uuid: string]: any };\n}\nexport interface ResolvedRoutes extends CategorizedCases {\n  defaultCategory: string;\n  timeoutCategory?: string;\n}\n\nexport const createRenderNode = (\n  uuid: string,\n  router: Router,\n  exits: Exit[],\n  type: Types,\n  actions: Action[] = [],\n  uiConfig: { [key: string]: any } = {}\n): RenderNode => {\n  const renderNode: RenderNode = {\n    node: {\n      uuid,\n      actions,\n      router,\n      exits\n    },\n    ui: {\n      type,\n      position: null,\n      config: uiConfig\n    },\n    inboundConnections: {}\n  };\n  return renderNode;\n};\n\nexport const hasCases = (node: FlowNode): boolean => {\n  if (\n    node.router &&\n    (node.router as SwitchRouter).cases &&\n    (node.router as SwitchRouter).cases.length\n  ) {\n    return true;\n  }\n  return false;\n};\n\nexport const getCategories = (renderNode: RenderNode): Category[] => {\n  if (renderNode.node.router) {\n    return renderNode.node.router.categories;\n  }\n  return [];\n};\n\nexport const createCaseProps = (cases: Case[], renderNode: RenderNode): CaseProps[] => {\n  const categories: Category[] = getCategories(renderNode);\n  return cases.map((kase: Case) => {\n    const matchingCategory = categories.find(\n      (category: Category) => category.uuid === kase.category_uuid\n    );\n\n    if (isRelativeDate(kase.type)) {\n      if (renderNode.ui.config && renderNode.ui.config.cases) {\n        const caseConfig = renderNode.ui.config.cases[kase.uuid];\n        if (caseConfig && caseConfig.arguments) {\n          kase.arguments = caseConfig.arguments;\n        }\n      }\n    }\n\n    return {\n      uuid: kase.uuid,\n      kase,\n      categoryName: matchingCategory ? matchingCategory.name : null,\n      valid: true\n    };\n  });\n};\n\nexport const isRelativeDate = (operatorType: Operators): boolean => {\n  return !![Operators.has_date_eq, Operators.has_date_gt, Operators.has_date_lt].find(\n    (type: string) => operatorType === type\n  );\n};\n\nconst isCategoryMatch = (cat: Category, kase: CaseProps) => {\n  // see if we have the same name\n  return cat.name.toLowerCase().trim() === kase.categoryName.trim().toLowerCase();\n};\n\n/**\n * Given a set of cases and previous categories, determines correct merging of cases\n * and the union of categories\n */\nexport const categorizeCases = (\n  newCases: CaseProps[],\n  originalNode: FlowNode\n): CategorizedCases => {\n  const categories: Category[] = [];\n  const cases: Case[] = [];\n  const exits: Exit[] = [];\n  const caseConfig: UIConfig = {};\n\n  const originalRouter = originalNode && originalNode.router;\n  const previousCategories = (originalRouter && originalRouter.categories) || [];\n\n  // look over the new cases and match up categories and exits\n  for (const newCase of newCases) {\n    // ignore empty cases\n    if (!newCase.categoryName || newCase.categoryName.trim().length === 0) {\n      continue;\n    }\n\n    // convert relative dates to expressions with configs\n    if (isRelativeDate(newCase.kase.type)) {\n      caseConfig[newCase.uuid] = { arguments: newCase.kase.arguments };\n      newCase.kase.arguments = [`@(datetime_add(today(), ${newCase.kase.arguments[0]}, \"D\"))`];\n    }\n\n    //  see if it exists on a previous case\n    let category = categories.find((cat: Category) => isCategoryMatch(cat, newCase));\n\n    // if not, see if that category exists on our old node\n    if (!category) {\n      category = previousCategories.find((cat: Category) => isCategoryMatch(cat, newCase));\n\n      // still no category, lets see if we can find a case uuid match\n      if (!category) {\n        const router = getSwitchRouter(originalNode);\n        if (router) {\n          const previousCase = router.cases.find((kase: Case) => kase.uuid === newCase.uuid);\n          if (previousCase) {\n            const previousCategory = previousCategories.find(\n              (cat: Category) => cat.uuid === previousCase.category_uuid\n            );\n\n            if (previousCategory) {\n              category = { ...previousCategory, name: newCase.categoryName };\n            }\n          }\n        }\n      }\n\n      // we found an old category, bring it and its exit over\n      if (category) {\n        categories.push(category);\n        const previousExit = originalNode.exits.find(\n          (exit: Exit) => category.exit_uuid === exit.uuid\n        );\n        exits.push(previousExit);\n      }\n    }\n\n    // if still no category, finally lets just create a new one\n    if (!category) {\n      const exit: Exit = {\n        uuid: createUUID()\n      };\n\n      exits.push(exit);\n\n      category = {\n        uuid: createUUID(),\n        name: newCase.categoryName,\n        exit_uuid: exit.uuid\n      };\n\n      categories.push(category);\n    }\n\n    // lastly, add our case\n    cases.push({\n      ...newCase.kase,\n      category_uuid: category.uuid\n    });\n  }\n\n  return { cases, categories, exits, caseConfig };\n};\n\nexport const getSwitchRouter = (node: FlowNode): SwitchRouter => {\n  if (node && node.router && node.router.type === RouterTypes.switch) {\n    return node.router as SwitchRouter;\n  }\n  return null;\n};\n\n/**\n * Adds a default route, reusing the previous one if possible\n * @param originalNode\n */\nexport const getDefaultRoute = (\n  defaultCategoryName: string,\n  originalNode: FlowNode\n): { defaultCategory: Category; defaultExit: Exit } => {\n  const originalRouter = getSwitchRouter(originalNode);\n\n  // use the previous default if it had one\n  if (originalRouter) {\n    const defaultCategory = originalRouter.categories.find(\n      (cat: Category) => cat.uuid === originalRouter.default_category_uuid\n    );\n\n    const defaultExit = originalNode.exits.find((e: Exit) => e.uuid === defaultCategory.exit_uuid);\n\n    defaultCategory.name = defaultCategoryName;\n\n    return { defaultCategory, defaultExit };\n  }\n  // otherwise, create a new exit and category\n  else {\n    const defaultExit: Exit = {\n      uuid: createUUID()\n    };\n\n    const defaultCategory = {\n      uuid: createUUID(),\n      name: defaultCategoryName,\n      exit_uuid: defaultExit.uuid\n    };\n\n    return { defaultCategory, defaultExit };\n  }\n};\n\nconst getTimeoutRoute = (\n  originalNode: FlowNode\n): { timeoutCategory: Category; timeoutExit: Exit } => {\n  let timeoutCategory: Category = null;\n  let timeoutExit: Exit = null;\n\n  const originalRouter = getSwitchRouter(originalNode);\n\n  // see if our previous node had a timeout case\n  if (originalRouter) {\n    if (originalRouter.wait && originalRouter.wait.timeout) {\n      const previousCategory = originalRouter.wait.timeout.category_uuid;\n      timeoutCategory = originalRouter.categories.find(\n        (cat: Category) => cat.uuid === previousCategory\n      );\n      timeoutExit = originalNode.exits.find(\n        (exit: Exit) => exit.uuid === timeoutCategory.exit_uuid\n      );\n    }\n  }\n\n  if (!timeoutCategory) {\n    // create a new route\n    timeoutExit = {\n      uuid: createUUID()\n    };\n\n    timeoutCategory = {\n      uuid: createUUID(),\n      name: DefaultExitNames.No_Response,\n      exit_uuid: timeoutExit.uuid\n    };\n  }\n\n  return { timeoutCategory, timeoutExit };\n};\n\n/**\n * Given a set of cases and previous categories, determines correct merging of cases\n * and the union of categories\n */\nexport const resolveRoutes = (\n  newCases: CaseProps[],\n  hasTimeout: boolean,\n  originalNode: FlowNode,\n  defaultCategoryName: string = null\n): ResolvedRoutes => {\n  const resolved = categorizeCases(newCases, originalNode);\n\n  let resolvedDefaultCategory = defaultCategoryName;\n  if (!resolvedDefaultCategory) {\n    resolvedDefaultCategory =\n      resolved.categories.length > 0 ? DefaultExitNames.Other : DefaultExitNames.All_Responses;\n  }\n\n  // tack on our other category\n  const { defaultCategory, defaultExit } = getDefaultRoute(resolvedDefaultCategory, originalNode);\n  resolved.categories.push(defaultCategory);\n  resolved.exits.push(defaultExit);\n\n  const results: ResolvedRoutes = {\n    ...resolved,\n    defaultCategory: defaultCategory.uuid\n  };\n\n  // add in a timeout route if we need one\n  if (hasTimeout) {\n    const { timeoutCategory, timeoutExit } = getTimeoutRoute(originalNode);\n    resolved.categories.push(timeoutCategory);\n    resolved.exits.push(timeoutExit);\n    results.timeoutCategory = timeoutCategory.uuid;\n  }\n\n  return results;\n};\n\nexport const createWebhookBasedNode = (\n  action: CallWebhook | CallResthook | TransferAirtime,\n  originalNode: RenderNode,\n  useCategoryTest: boolean\n): RenderNode => {\n  const exits: Exit[] = [];\n  let cases: Case[] = [];\n  let categories: Category[] = [];\n\n  // see if we are editing an existing router so we reuse exits\n  if (\n    originalNode &&\n    originalNode.node.actions.length === 1 &&\n    originalNode.node.actions[0].type === action.type\n  ) {\n    const previousRouter = getSwitchRouter(originalNode.node);\n    originalNode.node.exits.forEach((exit: any) => exits.push(exit));\n    previousRouter.cases.forEach(kase => cases.push(kase));\n    originalNode.node.router.categories.forEach(category => categories.push(category));\n  } else {\n    // Otherwise, let's create some new ones\n    exits.push(\n      {\n        uuid: createUUID(),\n        destination_uuid: null\n      },\n      {\n        uuid: createUUID(),\n        destination_uuid: null\n      }\n    );\n\n    categories = [\n      {\n        uuid: createUUID(),\n        name: WebhookExitNames.Success,\n        exit_uuid: exits[0].uuid\n      },\n      {\n        uuid: createUUID(),\n        name: WebhookExitNames.Failure,\n        exit_uuid: exits[1].uuid\n      }\n    ];\n\n    cases = [\n      {\n        uuid: createUUID(),\n        type: useCategoryTest ? Operators.has_category : Operators.has_only_text,\n        arguments: [WebhookExitNames.Success],\n        category_uuid: categories[0].uuid\n      }\n    ];\n  }\n\n  let operand = '@results.' + snakify(action.result_name);\n  if (!useCategoryTest) {\n    operand += '.category';\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    operand: operand,\n    cases,\n    categories,\n    default_category_uuid: categories[categories.length - 1].uuid\n  };\n\n  let splitType = Types.split_by_webhook;\n  if (action.type === Types.call_resthook) {\n    splitType = Types.split_by_resthook;\n  } else if (action.type === Types.transfer_airtime) {\n    splitType = Types.split_by_airtime;\n  }\n\n  return createRenderNode(originalNode.node.uuid, router, exits, splitType, [action]);\n};\n\nexport const createSplitOnActionResultNode = (\n  action: CallClassifier,\n  originalNode: RenderNode\n): RenderNode => {\n  const splitType = Types.split_by_intent;\n  const exits: Exit[] = [];\n  const router: SwitchRouter = {\n    cases: [],\n    operand: '',\n    categories: [],\n    type: RouterTypes.switch,\n    default_category_uuid: null\n  };\n\n  return createRenderNode(originalNode.node.uuid, router, exits, splitType, [action]);\n};\n","import { getSwitchRouter } from 'components/flow/routers/helpers';\nimport { Types } from 'config/interfaces';\nimport {\n  CallResthook,\n  CallWebhook,\n  Category,\n  Exit,\n  FlowNode,\n  RouterTypes,\n  TransferAirtime\n} from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\n\nexport const getCategoriesForExit = (renderNode: RenderNode, exit: Exit): Category[] => {\n  if (!renderNode.node.router) {\n    return [];\n  }\n  return renderNode.node.router.categories.filter((cat: Category) => cat.exit_uuid === exit.uuid);\n};\n\nexport const getResultName = (node: FlowNode) => {\n  const switchRouter = getSwitchRouter(node);\n  if (switchRouter && switchRouter.result_name) {\n    return switchRouter.result_name;\n  }\n\n  if (node.router && node.router.type === RouterTypes.random) {\n    return node.router.result_name;\n  }\n\n  if (node.actions.length === 1) {\n    const action = node.actions[0];\n    if (\n      action.type === Types.call_webhook ||\n      action.type === Types.call_resthook ||\n      action.type === Types.transfer_airtime\n    ) {\n      const resultAction = action as CallWebhook | CallResthook | TransferAirtime;\n      return resultAction.result_name;\n    }\n  }\n};\n","import { getResultName } from 'components/flow/node/helpers';\nimport { Revision } from 'components/revisions/RevisionExplorer';\nimport { Types } from 'config/interfaces';\nimport {\n  AnyAction,\n  Dimensions,\n  FlowDefinition,\n  FlowNode,\n  FlowPosition,\n  RouterTypes,\n  StickyNote,\n  SwitchRouter\n} from 'flowTypes';\nimport {\n  Asset,\n  AssetMap,\n  AssetStore,\n  AssetType,\n  Reference,\n  RenderNode,\n  RenderNodeMap\n} from 'store/flowContext';\nimport { assetListToMap, detectLoops, getActionIndex, getExitIndex, getNode } from 'store/helpers';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport { LocalizationUpdates } from 'store/thunks';\nimport { createUUID, merge, push, set, snakify, snapToGrid, splice, unset } from 'utils';\n\nconst mutate = require('immutability-helper');\n\nexport const uniquifyNode = (newNode: FlowNode): FlowNode => {\n  // Give our node a unique uuid\n  return mutate(newNode, merge({ uuid: createUUID() }));\n};\n\nexport const getDefaultExit = (node: FlowNode) => {\n  if (node.router.type === RouterTypes.switch) {\n    const switchRouter = node.router as SwitchRouter;\n    return node.exits.find(exit => exit.uuid === switchRouter.default_category_uuid);\n  }\n};\n\nexport const addAssets = (type: string, store: AssetStore, assets: Asset[]): AssetStore => {\n  const assetMap = assetListToMap(assets);\n  const updated = mutate(store, {\n    [type]: {\n      items: {\n        $merge: assetMap\n      }\n    }\n  });\n  return updated;\n};\n\nexport const removeResultReference = (\n  resultName: string,\n  items: AssetMap,\n  reference: Reference\n): AssetMap => {\n  const key = snakify(resultName);\n\n  if (key in items) {\n    const item = items[key];\n    const filteredRefs = item.references.filter(\n      (ref: Reference) =>\n        ref.nodeUUID !== reference.nodeUUID || ref.actionUUID !== reference.actionUUID\n    );\n\n    if (filteredRefs.length === 0) {\n      return mutate(items, { $unset: [key] });\n    }\n\n    return mutate(items, { [key]: { references: { $set: filteredRefs } } });\n  }\n  return items;\n};\n\nexport const removeResultFromStore = (\n  resultName: string,\n  assets: AssetStore,\n  reference: Reference\n): AssetStore => {\n  if (resultName && assets.results) {\n    const items = removeResultReference(resultName, assets.results.items, reference);\n    return mutate(assets, { results: { items: { $set: items } } });\n  }\n  return assets;\n};\n\nexport const addResultToStore = (\n  resultName: string,\n  assets: AssetStore,\n  reference: Reference\n): AssetStore => {\n  if (resultName) {\n    const items = addResult(resultName, assets.results.items, reference);\n    return mutate(assets, { results: { items: { $set: items } } });\n  }\n};\n\nexport const addResult = (resultName: string, items: AssetMap, reference: Reference): AssetMap => {\n  const key = snakify(resultName);\n  const result =\n    key in items\n      ? items[key]\n      : {\n          name: resultName,\n          id: key,\n          type: AssetType.Result,\n          references: []\n        };\n\n  if (\n    !result.references.find(\n      (ref: Reference) =>\n        ref.nodeUUID === reference.nodeUUID && ref.actionUUID === reference.actionUUID\n    )\n  ) {\n    result.references.push(reference);\n  }\n\n  return mutate(items, { $merge: { [key]: result } });\n};\n\nexport const addRevision = (assets: AssetStore, revision: Revision): AssetStore => {\n  return mutate(assets, {\n    revisions: { items: { $merge: { [revision.id]: revision } } }\n  });\n};\n\nexport const addFlowResult = (assets: AssetStore, node: FlowNode): AssetStore => {\n  let updated = assets;\n\n  // TODO: initialize these to empties further up to avoid this\n  if (!updated) {\n    updated = { results: { items: {}, type: AssetType.Result } };\n  }\n\n  if (!updated.results) {\n    updated.results = { items: {}, type: AssetType.Result };\n  }\n\n  const resultName = getResultName(node);\n  if (resultName) {\n    const items = addResult(resultName, assets.results.items, {\n      nodeUUID: node.uuid\n    });\n    return mutate(assets, { results: { items: { $set: items } } });\n  }\n\n  return assets;\n};\n\n/**\n * Update the destination for a specific exit. Updates destination_uuid and\n * the inboundConnections for the given node\n * @param nodes\n * @param fromNodeUUID\n * @param fromExitUUID\n * @param destination\n */\nexport const updateConnection = (\n  nodes: RenderNodeMap,\n  fromNodeUUID: string,\n  fromExitUUID: string,\n  destinationNodeUUID: string\n): RenderNodeMap => {\n  let updatedNodes = nodes;\n  const fromNode = getNode(nodes, fromNodeUUID);\n\n  // make sure our destination exits if they provided one\n  if (destinationNodeUUID) {\n    getNode(nodes, destinationNodeUUID);\n  }\n\n  const exitIdx = getExitIndex(fromNode.node, fromExitUUID);\n  const previousDestination = fromNode.node.exits[exitIdx].destination_uuid;\n\n  updatedNodes = mutate(updatedNodes, {\n    [fromNodeUUID]: {\n      node: {\n        exits: {\n          [exitIdx]: {\n            destination_uuid: set(destinationNodeUUID)\n          }\n        }\n      }\n    }\n  });\n\n  // update our pointers\n  if (destinationNodeUUID) {\n    updatedNodes = mutate(updatedNodes, {\n      [destinationNodeUUID]: {\n        inboundConnections: merge({ [fromExitUUID]: fromNodeUUID })\n      }\n    });\n  }\n\n  if (previousDestination != null) {\n    updatedNodes = mutate(updatedNodes, {\n      [previousDestination]: { inboundConnections: unset([[fromExitUUID]]) }\n    });\n  }\n\n  return updatedNodes;\n};\n\nexport const addLanguage = (languages: Asset[], language: Asset): Asset[] => {\n  return mutate(languages, push([language]));\n};\n\n/**\n * Removes a spcific destination for an exit and the associated inboundConnection.\n * @param nodes\n * @param fromNodeUUID\n * @param fromExitUUID\n */\nexport const removeConnection = (\n  nodes: RenderNodeMap,\n  fromNodeUUID: string,\n  fromExitUUID: string\n): RenderNodeMap => {\n  return updateConnection(nodes, fromNodeUUID, fromExitUUID, null);\n};\n\n/**\n * Adds a given RenderNode to our node map or updates an existing one.\n * Updates destinations for any inboundConnections provided and updates\n * inboundConnections for any destination_uuid our exits point to.\n * @param nodes\n * @param node the node to add, if unique uuid, it will be added\n */\nexport const mergeNode = (nodes: RenderNodeMap, node: RenderNode): RenderNodeMap => {\n  let updatedNodes = nodes;\n\n  // if the node is already there, remove it first\n  if (updatedNodes[node.node.uuid]) {\n    updatedNodes = removeNode(nodes, node.node.uuid);\n  }\n\n  // add our node upadted node\n  updatedNodes = mutate(nodes, merge({ [node.node.uuid]: node }));\n\n  // if we have inbound connections, update our nodes accordingly\n  for (const fromExitUUID of Object.keys(node.inboundConnections)) {\n    const fromNodeUUID = node.inboundConnections[fromExitUUID];\n\n    const fromNode = getNode(nodes, fromNodeUUID);\n    const exitIdx = getExitIndex(fromNode.node, fromExitUUID);\n\n    updatedNodes = mutate(updatedNodes, {\n      [fromNodeUUID]: {\n        node: {\n          exits: {\n            [exitIdx]: merge({ destination_uuid: node.node.uuid })\n          }\n        }\n      }\n    });\n  }\n\n  return updatedNodes;\n};\n\n/**\n * Adds a given action to the provided node\n * @param nodes\n * @param nodeUUID\n * @param action\n */\nexport const addAction = (\n  nodes: RenderNodeMap,\n  nodeUUID: string,\n  action: AnyAction\n): RenderNodeMap => {\n  // check that our node exists\n  getNode(nodes, nodeUUID);\n  return mutate(nodes, { [nodeUUID]: { node: { actions: push([action]) } } });\n};\n\n/**\n * Updates the given action in place by it's uuid\n * @param nodes\n * @param nodeUUID\n * @param action\n */\nexport const updateAction = (\n  nodes: RenderNodeMap,\n  nodeUUID: string,\n  newAction: AnyAction,\n  originalAction?: AnyAction\n) => {\n  const originalNode = getNode(nodes, nodeUUID);\n  // If we have existing actions, find our action and update it\n  const actionIdx = originalAction ? getActionIndex(originalNode.node, originalAction.uuid) : 0;\n  return mutate(nodes, {\n    [nodeUUID]: {\n      node: {\n        actions: { [actionIdx]: set(newAction) }\n      }\n    }\n  });\n};\n\nexport const spliceInAction = (\n  nodes: RenderNodeMap,\n  nodeUUID: string,\n  action: AnyAction\n): RenderNodeMap => {\n  const { [nodeUUID]: previousNode } = nodes;\n\n  const otherExit = getDefaultExit(previousNode.node);\n  const destination = otherExit ? otherExit.destination_uuid : null;\n\n  // remove our previous node\n  let updatedNodes = removeNode(nodes, previousNode.node.uuid, false);\n\n  const newNode: RenderNode = {\n    node: {\n      uuid: createUUID(),\n      actions: [action],\n      exits: [{ uuid: createUUID(), destination_uuid: destination }]\n    },\n    ui: { position: previousNode.ui.position, type: Types.execute_actions },\n    inboundConnections: previousNode.inboundConnections\n  };\n\n  // add our new node\n  updatedNodes = mergeNode(updatedNodes, newNode);\n\n  return updatedNodes;\n};\n\n/** Removes a specific action from a node */\nexport const removeAction = (nodes: RenderNodeMap, nodeUUID: string, actionUUID: string) => {\n  const renderNode = getNode(nodes, nodeUUID);\n  const actionIdx = getActionIndex(renderNode.node, actionUUID);\n  return mutate(nodes, {\n    [nodeUUID]: { node: { actions: splice([[actionIdx, 1]]) } }\n  });\n};\n\n/**\n * Moves a single action up in the list for the given node\n * @param nodes\n * @param nodeUUID\n * @param action\n */\nexport const moveActionUp = (nodes: RenderNodeMap, nodeUUID: string, actionUUID: string) => {\n  const renderNode = getNode(nodes, nodeUUID);\n\n  const actions = renderNode.node.actions;\n  const actionIdx = getActionIndex(renderNode.node, actionUUID);\n\n  if (actionIdx === 0) {\n    throw new Error('Cannot move an action at the top upwards');\n  }\n\n  const action = actions[actionIdx];\n  const actionAbove = actions[actionIdx - 1];\n\n  return mutate(nodes, {\n    [nodeUUID]: {\n      node: { actions: splice([[actionIdx - 1, 2, action, actionAbove]]) }\n    }\n  });\n};\n\n/**\n * Removes a given node from our node map. Updates destinations for any exits that point to us\n * and removes any inboundConnections that reference our exits. Also will reroute connections\n * that route through us.\n * @param nodes\n * @param nodeToRemove\n */\nexport const removeNode = (\n  nodes: RenderNodeMap,\n  nodeUUID: string,\n  remap: boolean = true\n): RenderNodeMap => {\n  const nodeToRemove = getNode(nodes, nodeUUID);\n  let updatedNodes = nodes;\n\n  // remove us from any inbound connections\n  for (const exit of nodeToRemove.node.exits) {\n    if (exit.destination_uuid) {\n      updatedNodes = mutate(updatedNodes, {\n        [exit.destination_uuid]: {\n          inboundConnections: unset([exit.uuid])\n        }\n      });\n    }\n  }\n\n  // clear any destinations that point to us\n  for (const fromExitUUID of Object.keys(nodeToRemove.inboundConnections)) {\n    // if we have a single destination, reroute those pointing to us\n    let destination = null;\n    if (remap && nodeToRemove.node.exits.length === 1) {\n      ({ destination_uuid: destination } = nodeToRemove.node.exits[0]);\n    }\n\n    const fromNodeUUID = nodeToRemove.inboundConnections[fromExitUUID];\n    const fromNode = getNode(nodes, fromNodeUUID);\n\n    // make sure we aren't creating a loop\n    if (destination) {\n      try {\n        detectLoops(updatedNodes, fromNodeUUID, destination);\n      } catch {\n        destination = null;\n      }\n    }\n\n    const exitIdx = getExitIndex(fromNode.node, fromExitUUID);\n    updatedNodes = mutate(updatedNodes, {\n      [fromNodeUUID]: {\n        node: {\n          exits: {\n            [exitIdx]: { destination_uuid: set(destination) }\n          }\n        }\n      }\n    });\n\n    // if we are setting a new destination, update the inboundConnections\n    if (destination) {\n      // make sure our destination exists\n      getNode(nodes, destination);\n      updatedNodes = mutate(updatedNodes, {\n        [destination]: {\n          inboundConnections: merge({ [fromExitUUID]: fromNodeUUID })\n        }\n      });\n    }\n  }\n\n  // remove the actual node\n  return mutate(updatedNodes, unset([nodeUUID]));\n};\n\n/**\n * Update the position for a given node\n * @param nodes\n * @param nodeUUID\n * @param x\n * @param y\n */\nexport const updatePosition = (\n  nodes: RenderNodeMap,\n  nodeUUID: string,\n  position: FlowPosition,\n  snap: boolean = true\n): RenderNodeMap => {\n  const { left, top } = position;\n\n  // make sure we are on the grid\n  let adjusted = { left, top };\n\n  if (snap) {\n    adjusted = snapToGrid(left, top);\n  }\n\n  return mutate(nodes, {\n    [nodeUUID]: {\n      ui: {\n        position: set({\n          left: adjusted.left,\n          top: adjusted.top\n        })\n      }\n    }\n  });\n};\n\nexport const updateStickyNotePosition = (\n  definition: FlowDefinition,\n  stickyUUID: string,\n  position: FlowPosition,\n  snap: boolean = true\n): FlowDefinition => {\n  if (!definition._ui.stickies) {\n    definition._ui.stickies = {};\n  }\n\n  const lastPos = definition._ui.stickies[stickyUUID].position;\n  const width = lastPos.right - lastPos.left;\n  const height = lastPos.bottom - lastPos.top;\n\n  const { left, top } = position;\n\n  // make sure we are on the grid\n  let adjusted = { left, top };\n\n  if (snap) {\n    adjusted = snapToGrid(left, top);\n  }\n\n  return mutate(definition, {\n    _ui: {\n      stickies: {\n        [stickyUUID]: {\n          position: set({\n            left: adjusted.left,\n            top: adjusted.top,\n            right: adjusted.left + width,\n            bottom: adjusted.top + height\n          })\n        }\n      }\n    }\n  });\n};\n\n/**\n * Update the dimensions for a specific node\n * @param nodes\n * @param nodeUUID\n * @param dimensions\n */\nexport const updateNodeDimensions = (\n  nodes: RenderNodeMap,\n  nodeUUID: string,\n  dimensions: Dimensions\n): RenderNodeMap => {\n  const node = getNode(nodes, nodeUUID);\n  return mutate(nodes, {\n    [nodeUUID]: {\n      ui: {\n        position: merge({\n          bottom: node.ui.position.top + dimensions.height,\n          right: node.ui.position.left + dimensions.width\n        })\n      }\n    }\n  });\n};\n\n/**\n * Update the dimensions for a specific sticky\n * @param definition\n * @param uuuid\n * @param dimensions\n */\nexport const updateStickyDimensions = (\n  definition: FlowDefinition,\n  uuid: string,\n  dimensions: Dimensions\n): FlowDefinition => {\n  const position = definition._ui.stickies[uuid].position;\n  return mutate(definition, {\n    _ui: {\n      stickies: {\n        [uuid]: {\n          position: merge({\n            bottom: position.top + dimensions.height,\n            right: position.left + dimensions.width\n          })\n        }\n      }\n    }\n  });\n};\n\nexport const updateStickyNote = (\n  definition: FlowDefinition,\n  stickyUUID: string,\n  sticky: StickyNote\n): FlowDefinition => {\n  if (!definition._ui.stickies) {\n    definition._ui.stickies = {};\n  }\n  if (sticky) {\n    return mutate(definition, {\n      _ui: { stickies: merge({ [stickyUUID]: sticky }) }\n    });\n  } else {\n    return mutate(definition, { _ui: { stickies: unset([stickyUUID]) } });\n  }\n};\n\nexport const mergeNodeEditorSettings = (\n  current: NodeEditorSettings,\n  newSettings: NodeEditorSettings\n) => {\n  if (!newSettings) {\n    return current;\n  }\n\n  if (!current) {\n    return newSettings;\n  }\n\n  return mutate(current, { $merge: newSettings });\n};\n\n/**\n * Prunes the definition for editing, removing node references\n * @param definition our full definition\n */\nexport const pruneDefinition = (definition: FlowDefinition): FlowDefinition =>\n  mutate(definition, { nodes: [], _ui: { $merge: { nodes: {} } } });\n\n/**\n * Update the localization in the definition with the provided changes for a language\n * @param definition\n * @param language\n * @param changes\n */\nexport const updateLocalization = (\n  definition: FlowDefinition,\n  language: string,\n  changes: LocalizationUpdates\n) => {\n  let newDef = definition;\n\n  // Add language to localization map if not present\n  if (!newDef.localization[language]) {\n    newDef = mutate(newDef, {\n      localization: {\n        [language]: set({})\n      }\n    });\n  }\n\n  // Apply changes\n  changes.forEach(({ translations, uuid }) => {\n    if (translations) {\n      // normalize our translations so all are treated as arrays\n      const normalizedTranslations: { [uuid: string]: string[] } = {};\n      for (const key of Object.keys(translations)) {\n        const prev = translations[key];\n        if (Array.isArray(prev)) {\n          normalizedTranslations[key] = prev;\n        } else {\n          normalizedTranslations[key] = [prev];\n        }\n      }\n\n      // adding localization\n      newDef = mutate(newDef, {\n        localization: { [language]: { [uuid]: set(normalizedTranslations) } }\n      });\n    } else {\n      // removing localization\n      newDef = mutate(newDef, {\n        localization: { [language]: unset([uuid]) }\n      });\n    }\n  });\n\n  return newDef;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport {\n  initializeForm,\n  sortFieldsAndProperties,\n  stateToAction,\n  UpdateContactFormState\n} from 'components/flow/actions/updatecontact/helpers';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport { getContactProperties } from 'components/helpers';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Types } from 'config/interfaces';\nimport { ContactProperties } from 'flowTypes';\nimport * as React from 'react';\nimport { Asset, AssetType, updateAssets } from 'store/flowContext';\nimport * as mutators from 'store/mutators';\nimport { mergeForm, ValidationFailure } from 'store/nodeEditor';\nimport { DispatchWithState, GetState } from 'store/thunks';\nimport { shouldRequireIf, validate } from 'store/validators';\n\nimport styles from './UpdateContactForm.module.scss';\nimport i18n from 'config/i18n';\n\nexport default class UpdateContactForm extends React.Component<\n  ActionFormProps,\n  UpdateContactFormState\n> {\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: ActionFormProps) {\n    super(props);\n\n    this.state = initializeForm(this.props.nodeSettings, this.props.assetStore);\n\n    bindCallbacks(this, {\n      include: [/^get/, /^on/, /^handle/]\n    });\n  }\n\n  private handleUpdate(\n    keys: {\n      type?: Types;\n      name?: string;\n      channel?: Asset;\n      language?: Asset;\n      field?: Asset;\n      fieldValue?: string;\n    },\n    submitting = false\n  ): boolean {\n    const updates: Partial<UpdateContactFormState> = {};\n\n    if (keys.hasOwnProperty('type')) {\n      updates.type = keys.type;\n    }\n\n    if (keys.hasOwnProperty('name')) {\n      updates.name = { value: keys.name };\n    }\n\n    if (keys.hasOwnProperty('channel')) {\n      updates.channel = validate('Channel', keys.channel, [shouldRequireIf(submitting)]);\n    }\n\n    if (keys.hasOwnProperty('language')) {\n      updates.language = validate('Language', keys.language, [shouldRequireIf(submitting)]);\n    }\n\n    if (keys.hasOwnProperty('field')) {\n      updates.field = { value: keys.field };\n    }\n\n    if (keys.hasOwnProperty('fieldValue')) {\n      updates.fieldValue = { value: keys.fieldValue, validationFailures: [] };\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handlePropertyChange(selected: Asset[]): boolean {\n    const selection = selected[0];\n    if (selection.type === AssetType.ContactProperty) {\n      switch (selection.id) {\n        case ContactProperties.Name:\n          return this.handleUpdate({\n            field: selection,\n            type: Types.set_contact_name,\n            name: ''\n          });\n        case ContactProperties.Language:\n          return this.handleUpdate({\n            field: selection,\n            type: Types.set_contact_language\n          });\n        case ContactProperties.Channel:\n          return this.handleUpdate({\n            field: selection,\n            type: Types.set_contact_channel\n          });\n      }\n    }\n    return this.handleUpdate({\n      type: Types.set_contact_field,\n      field: selection,\n      fieldValue: ''\n    });\n  }\n\n  private handleChannelUpdate(selection: Asset[], submitting = false): boolean {\n    return this.handleUpdate({ channel: selection[0] }, submitting);\n  }\n\n  private handleLanguageUpdate(selection: Asset[], submitting = false): boolean {\n    return this.handleUpdate({ language: selection[0] }, submitting);\n  }\n\n  private handleFieldValueUpdate(fieldValue: string): boolean {\n    return this.handleUpdate({ fieldValue, name: '' });\n  }\n\n  private handleNameUpdate(name: string): boolean {\n    return this.handleUpdate({ name, fieldValue: '' });\n  }\n\n  private onUpdated(dispatch: DispatchWithState, getState: GetState): void {\n    const {\n      flowContext: { assetStore }\n    } = getState();\n\n    if (this.state.field.value.type === AssetType.Field) {\n      dispatch(updateAssets(mutators.addAssets('fields', assetStore, [this.state.field.value])));\n    }\n  }\n\n  public handleFieldAdded(field: Asset): void {\n    // update our store with our new group\n    this.props.addAsset('fields', field);\n    this.handlePropertyChange([field]);\n  }\n\n  private handleSave(): void {\n    let valid = this.state.valid;\n\n    // check if language required\n    if (this.state.type === Types.set_contact_language) {\n      valid = this.handleLanguageUpdate([this.state.language.value], true) && valid;\n    }\n\n    // check if channel required\n    if (this.state.type === Types.set_contact_channel) {\n      valid = this.handleChannelUpdate([this.state.channel.value], true) && valid;\n    }\n\n    /*        if (this.state.type === Types.set_contact_field) {\n            const fieldValue = mergePersistantFailures(this.state.fieldValue);\n            if (fieldValue.validationFailures.length > 0) {\n                valid = this.state.\n                this.setState({ fieldValue });\n            }\n        }\n\n        if (this.state.type === Types.set_contact_name) {\n            const name = mergePersistantFailures(this.state.name);\n            if (name.validationFailures.length > 0) {\n                valid = false;\n                this.setState({ name });\n            }\n        }\n*/\n    if (valid) {\n      // do the saving!\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state), this.onUpdated);\n      this.props.onClose(true);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  /**\n   * The value widget varies for the action type\n   */\n  private getValueWidget(): JSX.Element {\n    if (this.state.type === Types.set_contact_channel) {\n      return (\n        <AssetSelector\n          key=\"select_channel\"\n          name=\"Channel\"\n          placeholder=\"Select the channel to use for this contact\"\n          assets={this.props.assetStore.channels}\n          entry={this.state.channel}\n          searchable={true}\n          valueClearable={true}\n          onChange={this.handleChannelUpdate}\n        />\n      );\n    }\n\n    if (this.state.type === Types.set_contact_language) {\n      return (\n        <AssetSelector\n          key=\"select_language\"\n          name=\"Language\"\n          placeholder=\"Select the language to use for this contact\"\n          assets={this.props.assetStore.languages}\n          entry={this.state.language}\n          searchable={true}\n          valueClearable={true}\n          onChange={this.handleLanguageUpdate}\n          shouldExclude={(asset: Asset) => asset.id === 'base'}\n        />\n      );\n    } else if (this.state.type === Types.set_contact_name) {\n      return (\n        <TextInputElement\n          name=\"Name\"\n          placeholder=\"Enter a new name for the contact\"\n          onFieldFailures={(persistantFailures: ValidationFailure[]) => {\n            const name = { ...this.state.name, persistantFailures };\n            this.setState({\n              name,\n              valid: this.state.valid && !hasErrors(name)\n            });\n          }}\n          onChange={this.handleNameUpdate}\n          entry={this.state.name}\n          autocomplete={true}\n          focus={true}\n        />\n      );\n    } else {\n      return (\n        <TextInputElement\n          name=\"Field Value\"\n          placeholder={`Enter a new value for ${this.state.field.value.name}`}\n          onFieldFailures={(persistantFailures: ValidationFailure[]) => {\n            const fieldValue = { ...this.state.fieldValue, persistantFailures };\n            this.setState({\n              fieldValue,\n              valid: this.state.valid && !hasErrors(fieldValue)\n            });\n          }}\n          onChange={this.handleFieldValueUpdate}\n          entry={this.state.fieldValue}\n          autocomplete={true}\n          focus={true}\n        />\n      );\n    }\n  }\n\n  public handleCreateAssetFromInput(input: string): any {\n    return { label: input, value_type: 'text' };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n\n        <p>Select what to update</p>\n        <AssetSelector\n          name=\"Contact Field\"\n          assets={this.props.assetStore.fields}\n          additionalOptions={getContactProperties(this.context.config.flowType)}\n          entry={this.state.field}\n          searchable={true}\n          sortFunction={sortFieldsAndProperties}\n          onChange={this.handlePropertyChange}\n          // Fields can be created on the fly\n          createPrefix=\"Create Contact Field: \"\n          createAssetFromInput={this.handleCreateAssetFromInput}\n          onAssetCreated={this.handleFieldAdded}\n        />\n\n        <div className={styles.value}>{this.getValueWidget()}</div>\n      </Dialog>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport { AirtimeTransferEntry } from 'components/flow/routers/airtime/AirtimeRouterForm';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport FormElement from 'components/form/FormElement';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport * as React from 'react';\nimport { Asset, Assets } from 'store/flowContext';\nimport { ValidationFailure } from 'store/nodeEditor';\nimport { small } from 'utils/reactselect';\n\nimport styles from './CurrencyElement.module.scss';\n\nexport interface AirtimeTransfer {\n  amount: string;\n  code: string;\n}\n\nexport interface CurrencyElementProps {\n  currencies: Assets;\n  transfer: AirtimeTransferEntry;\n  index: number;\n  exclude: AirtimeTransferEntry[];\n  onChange(index: number, transfer: AirtimeTransferEntry): void;\n  onRemove(index: number): void;\n}\n\nexport default class CurrencyElement extends React.Component<CurrencyElementProps> {\n  constructor(props: CurrencyElementProps) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleCurrencyChanged(selected: Asset[]): void {\n    this.props.onChange(this.props.index, {\n      value: { amount: this.props.transfer.value.amount, code: selected[0].id },\n      validationFailures: this.props.transfer.validationFailures\n    });\n  }\n\n  private handleAmountChanged(value: string): void {\n    const validationFailures: ValidationFailure[] = [];\n    if (isNaN(Number(value))) {\n      validationFailures.push({\n        message: 'Invalid amount, please enter a number'\n      });\n    }\n    this.props.onChange(this.props.index, {\n      value: { amount: value, code: this.props.transfer.value.code },\n      validationFailures\n    });\n  }\n\n  public render(): JSX.Element {\n    let placeholder = 'Transfer Amount';\n\n    let amount = '';\n    let currency: any = null;\n\n    if (this.props.transfer.value) {\n      const transfer = this.props.transfer.value;\n      if (transfer.code) {\n        placeholder = `${transfer.code} ${placeholder}`;\n        currency = { id: transfer.code };\n      }\n\n      amount = '' + transfer.amount;\n    }\n\n    const amountInput =\n      this.props.index > -1 ? (\n        <div className={styles.amount}>\n          <TextInputElement\n            placeholder={placeholder}\n            name=\"value\"\n            onChange={this.handleAmountChanged}\n            entry={{ value: amount }}\n          />\n        </div>\n      ) : null;\n\n    const removeIco =\n      this.props.index > -1 ? (\n        <div\n          className={styles.remove}\n          onClick={() => {\n            this.props.onRemove(this.props.index);\n          }}\n        >\n          <span className=\"fe-x\" />\n        </div>\n      ) : null;\n\n    const shouldExclude = (asset: Asset): boolean => {\n      return (\n        this.props.exclude.filter(\n          (airtime: AirtimeTransferEntry) => airtime.value.code === asset.id\n        ).length > 1\n      );\n    };\n\n    return (\n      <FormElement name=\"Currency\" entry={this.props.transfer} __className={styles.form_element}>\n        <div className={styles.transfer}>\n          <div className={styles.currency}>\n            <AssetSelector\n              styles={small as any}\n              name=\"Currency\"\n              shouldExclude={shouldExclude}\n              assets={this.props.currencies}\n              entry={{ value: currency }}\n              searchable={true}\n              onChange={this.handleCurrencyChanged}\n              placeholder={'Select a currency'}\n            />\n          </div>\n          {amountInput} {removeIco}\n        </div>\n      </FormElement>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport * as React from 'react';\nimport { FormState, StringEntry } from 'store/nodeEditor';\n\nimport styles from './OptionalTextInput.module.scss';\n\nexport interface OptionalTextInputProps {\n  name: string;\n  value: StringEntry;\n  toggleText: string;\n  onChange(value: string): void;\n  helpText?: string | JSX.Element;\n  maxLength?: number;\n}\n\nexport interface OptionalTextInputState extends FormState {\n  editing: boolean;\n}\n\n/**\n * OptionalText is a hideable text box\n */\nexport default class OptionalTextInput extends React.Component<\n  OptionalTextInputProps,\n  OptionalTextInputState\n> {\n  constructor(props: OptionalTextInputProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n\n    this.state = {\n      editing: this.props.value.value.trim().length > 0,\n      valid: true\n    };\n  }\n\n  private handleTextChanged(text: string): void {\n    this.props.onChange(text);\n  }\n\n  private handleEditingChanged(): void {\n    this.setState({ editing: true });\n  }\n\n  public render(): JSX.Element {\n    let ele: JSX.Element;\n\n    if (this.state.editing) {\n      ele = (\n        <TextInputElement\n          data-spec=\"optional-field\"\n          name={this.props.name}\n          showLabel={true}\n          entry={this.props.value}\n          onChange={this.handleTextChanged}\n          helpText={this.props.helpText}\n          maxLength={this.props.maxLength}\n        />\n      );\n    } else {\n      ele = (\n        <span\n          data-spec=\"toggle-link\"\n          className={styles.toggle_link}\n          onClick={this.handleEditingChanged}\n        >\n          {this.props.toggleText}\n        </span>\n      );\n    }\n\n    return <div className={styles.optional_text_input}>{ele}</div>;\n  }\n}\n","import * as React from 'react';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport OptionalTextInput from 'components/form/optionaltext/OptionalTextInput';\nimport { StringEntry } from 'store/nodeEditor';\nimport { snakify } from 'utils';\nimport { Trans } from 'react-i18next';\nimport i18n from 'config/i18n';\n\nexport const createResultNameInput = (\n  value: StringEntry,\n  onChange: (value: string) => void\n): JSX.Element => {\n  const snaked = !hasErrors(value) && value.value ? '.' + snakify(value.value) : '';\n\n  return (\n    <OptionalTextInput\n      name={i18n.t('forms.save_result_name', 'Result Name')}\n      maxLength={64}\n      value={value}\n      onChange={onChange}\n      toggleText={i18n.t('forms.save_as_title', 'Save as..')}\n      helpText={\n        <Trans i18nKey=\"forms.result_name_help\" values={{ resultFormat: `@results${snaked}` }}>\n          By naming the result, you can reference it later using [[resultFormat]]\n        </Trans>\n      }\n    />\n  );\n};\n","import * as React from 'react';\nimport { ValidationFailure } from 'store/nodeEditor';\n\nimport styles from './ValidationFailures.module.scss';\n\nexport interface Validation {\n  validationFailures: ValidationFailure[];\n}\n\nconst ValidationFailures: React.SFC<Validation> = (validation): JSX.Element => {\n  const errors = validation.validationFailures.map((failure: ValidationFailure, idx: number) => {\n    return (\n      <div key={'validation_' + idx} className={styles.error}>\n        {failure.message}\n      </div>\n    );\n  });\n  return <div className={styles.errors}>{errors}</div>;\n};\n\nexport default ValidationFailures;\n","import {\n  AirtimeRouterFormState,\n  AirtimeTransferEntry\n} from 'components/flow/routers/airtime/AirtimeRouterForm';\nimport { createWebhookBasedNode } from 'components/flow/routers/helpers';\nimport { Types } from 'config/interfaces';\nimport { TransferAirtime } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\n\nexport const nodeToState = (settings: NodeEditorSettings): AirtimeRouterFormState => {\n  const originalAction = getOriginalAction(settings);\n  let resultName = { value: 'Result' };\n  let valid = false;\n\n  const amounts: AirtimeTransferEntry[] = [];\n  if (originalAction && originalAction.type === Types.transfer_airtime) {\n    Object.keys(originalAction.amounts).forEach((key: string) => {\n      amounts.push({\n        value: { code: key, amount: '' + originalAction.amounts[key] }\n      });\n    });\n    resultName = { value: originalAction.result_name };\n    valid = true;\n  }\n\n  return {\n    valid,\n    amounts,\n    resultName\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: AirtimeRouterFormState\n): RenderNode => {\n  let uuid = createUUID();\n  const originalAction = getOriginalAction(settings);\n  if (originalAction) {\n    uuid = originalAction.uuid;\n  }\n\n  const amounts = {};\n  state.amounts.forEach((entry: AirtimeTransferEntry) => {\n    if (entry.value.amount.trim().length > 0) {\n      (amounts as any)[entry.value.code] = Number(entry.value.amount);\n    }\n  });\n\n  const newAction: TransferAirtime = {\n    uuid,\n    type: Types.transfer_airtime,\n    amounts,\n    result_name: state.resultName.value\n  };\n\n  return createWebhookBasedNode(newAction, settings.originalNode, true);\n};\n\nexport const getOriginalAction = (settings: NodeEditorSettings): TransferAirtime => {\n  const action =\n    settings.originalAction ||\n    (settings.originalNode.node.actions.length > 0 && settings.originalNode.node.actions[0]);\n\n  if (action.type === Types.transfer_airtime) {\n    return action as TransferAirtime;\n  }\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport CurrencyElement, {\n  AirtimeTransfer\n} from 'components/flow/routers/airtime/currency/CurrencyElement';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport ValidationFailures from 'components/form/ValidationFailures';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport mutate from 'immutability-helper';\nimport * as React from 'react';\nimport { FormEntry, FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, Required, StartIsNonNumeric, validate } from 'store/validators';\n\nimport styles from './AirtimeRouterForm.module.scss';\nimport { nodeToState, stateToNode } from './helpers';\n\nexport interface AirtimeTransferEntry extends FormEntry {\n  value: AirtimeTransfer;\n}\n\nexport interface AirtimeRouterFormState extends FormState {\n  amounts: AirtimeTransferEntry[];\n  resultName: StringEntry;\n}\n\nexport default class AirtimeRouterForm extends React.PureComponent<\n  RouterFormProps,\n  AirtimeRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleSave(): void {\n    const missing: number[] = [];\n\n    this.state.amounts.forEach((entry: AirtimeTransferEntry, index: number) => {\n      if (entry.value.amount.trim().length === 0) {\n        missing.push(index);\n      }\n    });\n\n    let valid: boolean = !!!this.state.amounts.find(\n      (entry: AirtimeTransferEntry) => (entry.validationFailures || []).length > 0\n    );\n\n    // make sure at least one has a value\n    if (valid) {\n      valid =\n        this.state.amounts.find(\n          (entry: AirtimeTransferEntry) => entry.value.amount.trim().length > 0\n        ) !== undefined;\n\n      if (!valid) {\n        this.setState({\n          valid: false,\n          validationFailures: [{ message: 'At least one amount to transfer is required' }]\n        });\n      }\n    }\n\n    if (valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private handleUpdateResultName(result: string): void {\n    const resultName = validate('Result Name', result, [Required, Alphanumeric, StartIsNonNumeric]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  public getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  public handleRemoved(index: number): void {\n    // we found a match, merge us in\n    const updated: any = mutate(this.state.amounts, {\n      $splice: [[index, 1]]\n    });\n    this.setState({ amounts: updated });\n  }\n\n  public handleTransferChanged(idx: number, transfer: AirtimeTransferEntry): void {\n    let updated: any = this.state.amounts;\n\n    if (idx > -1) {\n      // we found a match, merge us in\n      updated = mutate(this.state.amounts, {\n        $merge: { [idx]: transfer }\n      });\n    } else {\n      // otherwise push us on\n      updated = mutate(this.state.amounts, {\n        $push: [transfer]\n      });\n    }\n\n    this.setState({ amounts: updated, validationFailures: [] });\n  }\n\n  private renderAmount(index: number, entry: AirtimeTransferEntry): JSX.Element {\n    return (\n      <CurrencyElement\n        key={'currency_' + index}\n        exclude={this.state.amounts}\n        currencies={this.props.assetStore.currencies}\n        transfer={entry}\n        index={index}\n        onChange={this.handleTransferChanged}\n        onRemove={this.handleRemoved}\n      />\n    );\n  }\n\n  private renderAmounts(): JSX.Element {\n    const amounts = this.state.amounts.map((entry: AirtimeTransferEntry, index: number) => {\n      return this.renderAmount(index, entry);\n    });\n\n    return (\n      <div>\n        {amounts}\n        {this.renderAmount(-1, { value: { code: null, amount: '' } })}\n      </div>\n    );\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    const errors = this.state.validationFailures ? (\n      <ValidationFailures validationFailures={this.state.validationFailures} />\n    ) : null;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        {this.renderAmounts()}\n        {errors}\n        <div className={styles.result_name}>\n          {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        </div>\n      </Dialog>\n    );\n  }\n}\n","import { HIDDEN, Operator, OperatorMap, Operators, TEXT_TYPES, ONLINE } from 'config/interfaces';\nimport i18n from 'config/i18n';\n\nexport const intentOperatorList: Operator[] = [\n  {\n    type: Operators.has_top_intent,\n    verboseName: i18n.t('operators.has_top_intent', 'has top intent'),\n    operands: 2,\n    visibility: ONLINE\n  },\n  {\n    type: Operators.has_intent,\n    verboseName: i18n.t('operators.has_intent', 'has intent'),\n    operands: 2,\n    visibility: ONLINE\n  }\n];\n\nexport const operatorConfigList: Operator[] = [\n  {\n    type: Operators.has_any_word,\n    verboseName: i18n.t('operators.has_any_word', 'has any of the words'),\n    operands: 1,\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_all_words,\n    verboseName: i18n.t('operators.has_all_words', 'has all of the words'),\n    operands: 1,\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_phrase,\n    verboseName: i18n.t('operators.has_phrase', 'has the phrase'),\n    operands: 1,\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_only_phrase,\n    verboseName: i18n.t('operators.has_only_phrase', 'has only the phrase'),\n    operands: 1,\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_beginning,\n    verboseName: i18n.t('operators.has_beginning', 'starts with'),\n    operands: 1\n  },\n  {\n    type: Operators.has_text,\n    verboseName: i18n.t('operators.has_text', 'has some text'),\n    operands: 0,\n    categoryName: 'Has Text',\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_number,\n    verboseName: i18n.t('operators.has_number', 'has a number'),\n    operands: 0,\n    categoryName: 'Has Number'\n  },\n  {\n    type: Operators.has_number_between,\n    verboseName: i18n.t('operators.has_number_between', 'has a number between'),\n    operands: 2\n  },\n  {\n    type: Operators.has_number_lt,\n    verboseName: i18n.t('operators.has_number_lt', 'has a number below'),\n    operands: 1\n  },\n  {\n    type: Operators.has_number_lte,\n    verboseName: i18n.t('operators.has_number_lte', 'has a number at or below'),\n    operands: 1\n  },\n  {\n    type: Operators.has_number_eq,\n    verboseName: i18n.t('operators.has_number_eq', 'has a number equal to'),\n    operands: 1\n  },\n  {\n    type: Operators.has_number_gte,\n    verboseName: i18n.t('operators.has_number_gte', 'has a number at or above'),\n    operands: 1\n  },\n  {\n    type: Operators.has_number_gt,\n    verboseName: i18n.t('operators.has_number_gt', 'has a number above'),\n    operands: 1\n  },\n  {\n    type: Operators.has_date,\n    verboseName: i18n.t('operators.has_date', 'has a date'),\n    operands: 0,\n    categoryName: i18n.t('operators.has_date_category', 'Has Date'),\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_date_lt,\n    verboseName: i18n.t('operators.has_date_lt', 'has a date before'),\n    operands: 1,\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_date_eq,\n    verboseName: i18n.t('operators.has_date_eq', 'has a date equal to'),\n    operands: 1,\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_date_gt,\n    verboseName: i18n.t('operators.has_date_gt', 'has a date after'),\n    operands: 1,\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_time,\n    verboseName: i18n.t('operators.has_time', 'has a time'),\n    operands: 0,\n    categoryName: 'Has Time',\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_group,\n    verboseName: i18n.t('operators.has_group', 'is in the group'),\n    operands: 1,\n    visibility: HIDDEN\n  },\n  {\n    type: Operators.has_category,\n    verboseName: i18n.t('operators.has_category', 'has the category'),\n    operands: 0,\n    visibility: HIDDEN\n  },\n  {\n    type: Operators.has_phone,\n    verboseName: i18n.t('operators.has_phone', 'has a phone number'),\n    operands: 0,\n    categoryName: i18n.t('operators.has_phone_category', 'Has Phone')\n  },\n  {\n    type: Operators.has_email,\n    verboseName: i18n.t('operators.has_email', 'has an email'),\n    operands: 0,\n    categoryName: i18n.t('operators.has_email_category', 'Has Email'),\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_state,\n    verboseName: i18n.t('operators.has_state', 'has state'),\n    operands: 0,\n    categoryName: i18n.t('operators.has_state_category', 'Has State')\n  },\n  {\n    type: Operators.has_district,\n    verboseName: i18n.t('operators.has_district', 'has district'),\n    operands: 1,\n    categoryName: i18n.t('operators.has_district_category', 'Has District')\n  },\n  {\n    type: Operators.has_ward,\n    verboseName: i18n.t('operators.has_ward', 'has ward'),\n    operands: 2,\n    categoryName: i18n.t('operators.has_ward_category', 'Has Ward')\n  },\n  {\n    type: Operators.has_error,\n    verboseName: i18n.t('operators.has_error', 'has an error'),\n    operands: 0,\n    categoryName: i18n.t('operators.has_error_category', 'Has Error'),\n    visibility: HIDDEN\n  },\n  {\n    type: Operators.has_value,\n    verboseName: i18n.t('operators.has_value', 'is not empty'),\n    operands: 0,\n    categoryName: i18n.t('operators.has_value_category', 'Not Empty')\n  },\n  {\n    type: Operators.has_pattern,\n    verboseName: i18n.t('operator.has_pattern', 'matches regex'),\n    operands: 1\n  }\n];\n\nexport const operatorConfigMap: OperatorMap = [...operatorConfigList, ...intentOperatorList].reduce(\n  (map: OperatorMap, operatorConfig: Operator) => {\n    map[operatorConfig.type] = operatorConfig;\n    return map;\n  },\n  {}\n);\n\n/**\n * Shortcut for constant lookup of operator config in operator configs map\n * @param {string} type - The type of the operator config to return, e.g. 'send_msg'\n * @returns {Object} - The operator config found at operatorConfigs[type] or -1\n */\nexport const getOperatorConfig = (type: Operators): Operator => operatorConfigMap[type];\n","import { isRelativeDate } from 'components/flow/routers/helpers';\nimport { Operator, Operators } from 'config/interfaces';\nimport { getOperatorConfig } from 'config/operatorConfigs';\nimport {\n  LessThan,\n  MoreThan,\n  Numeric,\n  NumOrExp,\n  Regex,\n  Required,\n  validate,\n  IsValidIntent\n} from 'store/validators';\nimport { titleCase } from 'utils';\n\nimport { CaseElementProps, CaseElementState } from './CaseElement';\nimport { SelectOption } from 'components/form/select/SelectElement';\nimport { Asset } from 'store/flowContext';\n\nexport const initializeForm = (props: CaseElementProps): CaseElementState => {\n  const arg1 =\n    props.kase.arguments && props.kase.arguments.length >= 1 ? props.kase.arguments[0] : '';\n  const arg2 =\n    props.kase.arguments && props.kase.arguments.length === 2 ? props.kase.arguments[1] : '';\n\n  return {\n    errors: [],\n    operatorConfig: getOperatorConfig(props.kase.type),\n    argument: { value: arg1 },\n    min: { value: arg1 },\n    max: { value: arg2 },\n    state: { value: arg1 },\n    district: { value: arg2 },\n    intent: { value: arg1 ? { label: arg1, value: arg1 } : null },\n    confidence: { value: arg2 },\n    categoryName: { value: props.categoryName || '' },\n    categoryNameEdited: !!props.categoryName,\n    valid: true\n  };\n};\n/**\n * Determines prefix for case's exit name\n */\nexport const prefix = (operatorType: string): string => {\n  let pre = '';\n\n  if (operatorType.indexOf('_lt') > -1) {\n    if (operatorType.indexOf('date') > -1) {\n      pre = 'Before ';\n    } else {\n      if (operatorType.indexOf('lte') > -1) {\n        pre = '<= ';\n      } else {\n        pre = '< ';\n      }\n    }\n  } else if (operatorType.indexOf('_gt') > -1) {\n    if (operatorType.indexOf('date') > -1) {\n      pre = 'After ';\n    } else {\n      if (operatorType.indexOf('gte') > -1) {\n        pre = '>= ';\n      } else {\n        pre = '>';\n      }\n    }\n  }\n\n  return pre;\n};\n\n/**\n * Returns min, max values for Operators.has_number_between case\n */\nexport const getMinMax = (args: string[] = []): { min: string; max: string } => {\n  let min = '';\n  let max = '';\n  if (args.length) {\n    if (strContainsNum(args[0])) {\n      min = args[0];\n    }\n    if (args[1]) {\n      if (strContainsNum(args[1])) {\n        max = args[1];\n      }\n    }\n  }\n  return {\n    min,\n    max\n  };\n};\n\nexport const isFloat = (val: string): boolean => /^[+-]?\\d?(\\.\\d*)?$/.test(val.trim());\n\nexport const isInt = (val: string): boolean => /^[+-]?\\d+$/.test(val.trim());\n\nexport const strContainsNum = (str: string): boolean => {\n  const trimmed = str.trim();\n  if (isFloat(trimmed)) {\n    return true;\n  } else if (isInt(trimmed)) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const parseNum = (str: string): number => {\n  const trimmed = (str || '').trim();\n  if (isFloat(trimmed)) {\n    return parseFloat(str);\n  } else if (isInt(trimmed)) {\n    return parseInt(trimmed, 10);\n  }\n};\n\nexport const validateCase = (keys: {\n  operatorConfig: Operator;\n  argument?: string;\n  state?: string;\n  district?: string;\n  min?: string;\n  max?: string;\n  confidence?: string;\n  intent?: SelectOption;\n  exitName?: string;\n  exitEdited?: boolean;\n  classifier?: Asset;\n}): Partial<CaseElementState> => {\n  // when the exit is set, our arguments become required\n  const validators = keys.exitEdited && keys.exitName ? [Required] : [];\n\n  const updates: Partial<CaseElementState> = {\n    operatorConfig: keys.operatorConfig\n  };\n\n  updates.district = { value: '', validationFailures: [] };\n  updates.state = { value: '', validationFailures: [] };\n  updates.min = { value: '', validationFailures: [] };\n  updates.max = { value: '', validationFailures: [] };\n  updates.argument = { value: '', validationFailures: [] };\n  updates.intent = { value: null, validationFailures: [] };\n  updates.confidence = { value: '', validationFailures: [] };\n\n  if (keys.operatorConfig.operands > 0) {\n    switch (keys.operatorConfig.type) {\n      case Operators.has_number_eq:\n      case Operators.has_number_gt:\n      case Operators.has_number_gte:\n      case Operators.has_number_lt:\n      case Operators.has_number_lte:\n        validators.push(NumOrExp);\n        break;\n      case Operators.has_date_eq:\n      case Operators.has_date_lt:\n      case Operators.has_date_gt:\n        validators.push(Numeric);\n        break;\n      case Operators.has_pattern:\n        validators.push(Regex);\n        break;\n    }\n\n    if (keys.operatorConfig.type === Operators.has_number_between) {\n      updates.min = validate(\n        'Minimum value',\n        keys.min || '',\n        validators.concat([Numeric, LessThan(parseFloat(keys.max), 'the maximum')])\n      );\n\n      updates.max = validate(\n        'Maximum value',\n        keys.max || '',\n        validators.concat([Numeric, MoreThan(parseFloat(keys.min), 'the minimum')])\n      );\n    } else if (keys.operatorConfig.type === Operators.has_district) {\n      updates.argument = validate('State', keys.argument || '', validators.concat([]));\n    } else if (keys.operatorConfig.type === Operators.has_ward) {\n      updates.state = validate('State', keys.state || '', validators.concat([]));\n      updates.district = validate('District', keys.district || '', validators.concat([]));\n    } else if (\n      keys.operatorConfig.type === Operators.has_top_intent ||\n      keys.operatorConfig.type === Operators.has_intent\n    ) {\n      const intentValidators = [IsValidIntent(keys.classifier)];\n      if (keys.confidence) {\n        intentValidators.push(Required);\n      }\n      updates.intent = validate('Intent', keys.intent, intentValidators);\n      updates.confidence = validate(\n        'Confidence',\n        keys.confidence || '',\n        validators.concat(keys.intent ? [Numeric, Required] : [Numeric])\n      );\n    } else {\n      updates.argument = validate('Value', keys.argument || '', validators);\n    }\n  }\n\n  updates.categoryNameEdited = !!keys.exitEdited;\n  updates.categoryName = validate(\n    'Category',\n    updates.categoryNameEdited ? keys.exitName : getCategoryName(updates),\n    updates.argument.value ||\n      (updates.min.value && updates.max.value) ||\n      (updates.state.value && updates.district.value)\n      ? [Required]\n      : []\n  );\n\n  updates.valid =\n    updates.state.validationFailures.length === 0 &&\n    updates.district.validationFailures.length === 0 &&\n    updates.min.validationFailures.length === 0 &&\n    updates.max.validationFailures.length === 0 &&\n    updates.argument.validationFailures.length === 0 &&\n    updates.intent.validationFailures.length === 0 &&\n    updates.confidence.validationFailures.length === 0 &&\n    updates.categoryName.validationFailures.length === 0;\n\n  return updates;\n};\n\nexport const getCategoryName = (state: Partial<CaseElementState>): string => {\n  if (state.categoryNameEdited) {\n    return state.categoryName.value;\n  }\n\n  if (state.operatorConfig.operands === 0) {\n    return state.operatorConfig.categoryName;\n  }\n\n  if (\n    state.operatorConfig.type === Operators.has_intent ||\n    state.operatorConfig.type === Operators.has_top_intent\n  ) {\n    if (state.intent.value) {\n      return titleCase(state.intent.value.label.replace('_', ' '));\n    }\n  }\n\n  if (\n    state.operatorConfig.type === Operators.has_number_between &&\n    state.min.value &&\n    state.max.value\n  ) {\n    return `${state.min.value} - ${state.max.value}`;\n  }\n\n  if (isRelativeDate(state.operatorConfig.type)) {\n    const count = parseInt(state.argument.value, 10);\n    if (!isNaN(count)) {\n      const today = state.operatorConfig.type === Operators.has_date_eq ? 'Today' : 'today';\n      const op = count < 0 ? ' - ' : ' + ';\n      const days = Math.abs(count) === 1 ? ' day' : ' days';\n      return prefix(state.operatorConfig.type) + today + op + Math.abs(count) + days;\n    }\n  }\n\n  if (state.argument && state.argument.value) {\n    const pre = prefix(state.operatorConfig.type);\n    const words = state.argument.value.match(/\\w+/g);\n\n    if (words && words.length > 0) {\n      const [firstWord] = words;\n      return pre + titleCase(firstWord);\n    }\n\n    return pre + titleCase(state.argument.value);\n  }\n\n  return '';\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { isRelativeDate } from 'components/flow/routers/helpers';\nimport FormElement from 'components/form/FormElement';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { filterOperators } from 'config/helpers';\nimport { Operator, Operators } from 'config/interfaces';\nimport { operatorConfigList } from 'config/operatorConfigs';\nimport { Case } from 'flowTypes';\nimport * as React from 'react';\nimport Select from 'react-select';\nimport { FormState, StringEntry, ValidationFailure, SelectOptionEntry } from 'store/nodeEditor';\nimport { getSelectClass, hasErrorType } from 'utils';\nimport { small } from 'utils/reactselect';\n\nimport styles from './CaseElement.module.scss';\nimport { initializeForm, validateCase } from './helpers';\nimport { Asset } from 'store/flowContext';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\n\nexport interface CaseElementProps {\n  kase: Case;\n  categoryName: string;\n  name?: string; // satisfy form widget props\n  onRemove?(uuid: string): void;\n  onChange?(c: CaseProps): void;\n  operators?: Operator[];\n  classifier?: Asset;\n}\n\nexport interface CaseElementState extends FormState {\n  errors: string[];\n  operatorConfig: Operator;\n  categoryName: StringEntry;\n  categoryNameEdited: boolean;\n\n  // for string based args\n  argument: StringEntry;\n\n  // for numeric operators\n  min: StringEntry;\n  max: StringEntry;\n\n  // intents\n  intent: SelectOptionEntry;\n  confidence: StringEntry;\n\n  state: StringEntry;\n  district: StringEntry;\n}\n\nexport default class CaseElement extends React.Component<CaseElementProps, CaseElementState> {\n  private operators: Operator[];\n\n  constructor(props: CaseElementProps) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/^handle/, /^get/]\n    });\n\n    this.state = initializeForm(props);\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  public componentDidMount() {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      argument: this.state.argument.value,\n      min: this.state.min.value,\n      max: this.state.max.value,\n      intent: this.state.intent.value,\n      confidence: this.state.confidence.value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited,\n      classifier: this.props.classifier\n    });\n\n    this.setState(updates as CaseElementState, this.handleChange);\n  }\n\n  public componentDidUpdate(previousProps: CaseElementProps): void {\n    if (\n      this.props.classifier &&\n      this.props.classifier !== previousProps.classifier &&\n      this.state.intent.value\n    ) {\n      const updates = validateCase({\n        operatorConfig: this.state.operatorConfig,\n        argument: this.state.argument.value,\n        min: this.state.min.value,\n        max: this.state.max.value,\n        intent: this.state.intent.value,\n        confidence: this.state.confidence.value,\n        exitName: this.state.categoryName.value,\n        exitEdited: this.state.categoryNameEdited,\n        classifier: this.props.classifier\n      });\n\n      this.setState(updates as CaseElementState, this.handleChange);\n    }\n  }\n\n  private getOperators(): Operator[] {\n    let operators = this.props.operators || operatorConfigList;\n    if (this.operators === undefined) {\n      this.operators = filterOperators(operators, this.context.config);\n    }\n\n    return this.operators;\n  }\n\n  private getArgumentArray(): string[] {\n    if (this.state.operatorConfig.operands === 0) {\n      return [];\n    }\n\n    if (\n      this.state.operatorConfig.type === Operators.has_intent ||\n      this.state.operatorConfig.type === Operators.has_top_intent\n    ) {\n      if (this.state.intent.value) {\n        return [this.state.intent.value.value, this.state.confidence.value];\n      } else {\n        return ['', this.state.confidence.value];\n      }\n    }\n\n    if (this.state.operatorConfig.type === Operators.has_number_between) {\n      return [this.state.min.value, this.state.max.value];\n    }\n\n    if (this.state.operatorConfig.type === Operators.has_ward) {\n      return [this.state.state.value, this.state.district.value];\n    }\n\n    return [this.state.argument.value];\n  }\n\n  private handleOperatorChanged(operatorConfig: Operator): void {\n    const updates = validateCase({\n      operatorConfig,\n      argument: this.state.argument.value,\n      min: this.state.min.value,\n      max: this.state.max.value,\n      intent: this.state.intent.value,\n      confidence: this.state.confidence.value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited,\n      classifier: this.props.classifier\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleArgumentChanged(value: string): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      argument: value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleDistrictChanged(value: string): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      argument: this.state.argument.value,\n      state: this.state.state.value,\n      district: value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  /** The user changed the value for the state (a location-based state) */\n  private handleStateChanged(value: string): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      argument: this.state.argument.value,\n      district: this.state.district.value,\n      state: value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleIntentChanged(selected: SelectOption): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      intent: selected,\n      confidence: this.state.confidence.value || '.9',\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited,\n      classifier: this.props.classifier\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleConfidenceChanged(value: string): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      intent: this.state.intent.value,\n      confidence: value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited,\n      classifier: this.props.classifier\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleMinChanged(value: string): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      min: value,\n      max: this.state.max.value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleMaxChanged(value: string): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      min: this.state.min.value,\n      max: value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleExitChanged(value: string): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      state: this.state.state.value,\n      district: this.state.district.value,\n      argument: this.state.argument.value,\n      min: this.state.min.value,\n      max: this.state.max.value,\n      intent: this.state.intent.value,\n      confidence: this.state.confidence.value,\n      classifier: this.props.classifier,\n      exitName: value,\n      exitEdited: true\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleRemoveClicked(): void {\n    this.props.onRemove(this.props.kase.uuid);\n  }\n\n  private getCaseProps(): CaseProps {\n    const props = {\n      uuid: this.props.kase.uuid,\n      categoryName: this.state.categoryName.value,\n      kase: {\n        arguments: this.getArgumentArray(),\n        type: this.state.operatorConfig.type,\n        uuid: this.props.kase.uuid,\n\n        // if the exit name changed, we'll need to recompute our exit\n        category_uuid: this.state.categoryNameEdited ? null : this.props.kase.category_uuid\n      },\n      valid: this.state.valid\n    };\n\n    return props;\n  }\n\n  private handleChange(): void {\n    // If the case doesn't have arguments & an exit name, remove it\n    if (!this.state.categoryName.value) {\n      // see if we are clearing out a between\n      if (this.state.operatorConfig.type === Operators.has_number_between) {\n        if (!this.state.min.value && !this.state.max.value) {\n          // this.handleRemoveClicked();\n          // return;\n        }\n      }\n      // see if we are clearing out a single operand\n      else {\n        if (!this.state.argument.value) {\n          // this.handleRemoveClicked();\n          // return;\n        }\n      }\n    }\n\n    this.props.onChange(this.getCaseProps());\n  }\n\n  private handleIntentMenuOpened() {\n    // hiding any errors when the menu opens\n    this.setState({ intent: { value: this.state.intent.value } });\n  }\n\n  private handleIntentMenuClosed() {\n    // we want to revalidate close without selection\n    // wait a cycle for selection event to fire first\n    window.setTimeout(() => {\n      this.handleIntentChanged(this.state.intent.value);\n    }, 0);\n  }\n\n  private renderArguments(): JSX.Element {\n    if (this.state.operatorConfig.operands > 0) {\n      // First pass at displaying, handling Operators.has_number_between inputs\n      if (this.state.operatorConfig.operands > 1) {\n        if (this.state.operatorConfig.type === Operators.has_number_between) {\n          return (\n            <>\n              <TextInputElement\n                name=\"arguments\"\n                onChange={this.handleMinChanged}\n                entry={this.state.min}\n              />\n              <span className={styles.divider} data-draggable={true}>\n                and\n              </span>\n              <TextInputElement\n                name=\"arguments\"\n                onChange={this.handleMaxChanged}\n                entry={this.state.max}\n              />\n            </>\n          );\n        } else if (\n          this.state.operatorConfig.type === Operators.has_intent ||\n          this.state.operatorConfig.type === Operators.has_top_intent\n        ) {\n          let intents: SelectOption[] = [];\n\n          if (this.props.classifier && this.props.classifier.content) {\n            intents = this.props.classifier.content.intents.map((intent: string) => {\n              const option = {\n                label: intent,\n                value: intent\n              };\n              return option;\n            });\n          }\n\n          return (\n            <>\n              <div style={{ width: '114px' }}>\n                <SelectElement\n                  styles={small as any}\n                  name=\"Intent\"\n                  entry={this.state.intent}\n                  onChange={this.handleIntentChanged}\n                  options={intents}\n                  onMenuOpen={this.handleIntentMenuOpened}\n                  onMenuClose={this.handleIntentMenuClosed}\n                  placeholder=\"\"\n                ></SelectElement>\n              </div>\n              <span className={styles.divider} data-draggable={true}>\n                above\n              </span>\n              <div style={{ width: '34px' }}>\n                <TextInputElement\n                  name=\"confidence\"\n                  onChange={this.handleConfidenceChanged}\n                  entry={this.state.confidence}\n                  placeholder=\".9\"\n                />\n              </div>\n            </>\n          );\n        } else {\n          return (\n            <>\n              <TextInputElement\n                name=\"State\"\n                placeholder=\"State\"\n                onChange={this.handleStateChanged}\n                entry={this.state.state}\n              />\n              <span className={styles.divider} data-draggable={true}>\n                and\n              </span>\n              <TextInputElement\n                name=\"District\"\n                placeholder=\"District\"\n                onChange={this.handleDistrictChanged}\n                entry={this.state.district}\n              />\n            </>\n          );\n        }\n      } else if (isRelativeDate(this.state.operatorConfig.type)) {\n        return (\n          <>\n            <span className={styles.divider} data-draggable={true}>\n              today +{' '}\n            </span>\n            <TextInputElement\n              __className={styles.relative_date}\n              name=\"arguments\"\n              onChange={this.handleArgumentChanged}\n              entry={this.state.argument}\n              autocomplete={false}\n            />\n            <span className={styles.divider}>days</span>\n          </>\n        );\n      } else {\n        return (\n          <TextInputElement\n            name=\"arguments\"\n            onChange={this.handleArgumentChanged}\n            entry={this.state.argument}\n            placeholder={this.state.operatorConfig.type === Operators.has_district ? 'State' : ''}\n            onFieldFailures={(persistantFailures: ValidationFailure[]) => {\n              const argument = { ...this.state.argument, persistantFailures };\n              this.setState({\n                argument,\n                valid: this.state.valid && !hasErrors(argument)\n              });\n            }}\n            autocomplete={true}\n          />\n        );\n      }\n    }\n\n    return null;\n  }\n\n  public render(): JSX.Element {\n    return (\n      <FormElement\n        data-spec=\"case-form\"\n        name={this.props.name}\n        __className={styles.group}\n        kaseError={this.state.errors.length > 0}\n      >\n        <div\n          className={`${styles.kase} ${styles[this.state.operatorConfig.type]}`}\n          data-draggable={true}\n        >\n          <span className={`fe-chevrons-expand ${styles.dnd_icon}`} data-draggable={true} />\n          <div className={styles.choice + ' select-medium'}>\n            <Select\n              className={getSelectClass(0)}\n              styles={small as any}\n              data-spec=\"operator-list\"\n              isClearable={false}\n              menuPlacement=\"auto\"\n              options={this.getOperators()}\n              getOptionLabel={(option: Operator) => option.verboseName}\n              getOptionValue={(option: Operator) => option.type}\n              isSearchable={false}\n              name=\"operator\"\n              onChange={this.handleOperatorChanged as any}\n              value={this.state.operatorConfig}\n            />\n          </div>\n          <div\n            className={\n              this.state.operatorConfig.operands > 1 ? styles.multi_operand : styles.single_operand\n            }\n          >\n            {this.renderArguments()}\n          </div>\n          <div className={styles.categorize_as} data-draggable={true}>\n            categorize as\n          </div>\n          <div className={styles.category}>\n            <TextInputElement\n              name=\"exitName\"\n              onChange={this.handleExitChanged}\n              entry={this.state.categoryName}\n              maxLength={36}\n              showInvalid={hasErrorType(this.state.errors, [/category/])}\n            />\n          </div>\n          <span\n            data-testid={'remove-case-' + this.props.kase.uuid}\n            className={`fe-x ${styles.remove_icon}`}\n            onClick={this.handleRemoveClicked}\n          />\n        </div>\n      </FormElement>\n    );\n  }\n}\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { Operators } from 'config/interfaces';\nimport { createUUID } from 'utils';\n\nexport const createEmptyCase = (): CaseProps => {\n  const uuid = createUUID();\n  return {\n    uuid,\n    kase: {\n      uuid,\n      type: Operators.has_any_word,\n      arguments: [''],\n      category_uuid: null\n    },\n    categoryName: '',\n    valid: true\n  };\n};\n","import arrayMove from 'array-move';\nimport { react as bindCallbacks } from 'auto-bind';\nimport CaseElement from 'components/flow/routers/case/CaseElement';\nimport { createEmptyCase } from 'components/flow/routers/caselist/helpers';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Case } from 'flowTypes';\nimport * as React from 'react';\nimport { SortableContainer, SortableElement, SortEnd } from 'react-sortable-hoc';\nimport { FormState, mergeForm } from 'store/nodeEditor';\n\nimport styles from './CaseList.module.scss';\nimport { Operator } from 'config/interfaces';\nimport { Asset } from 'store/flowContext';\n\nexport enum DragCursor {\n  move = 'move',\n  pointer = 'pointer'\n}\n\nexport interface CaseProps {\n  uuid: string;\n  kase: Case;\n  categoryName: string;\n  valid: boolean;\n  operators?: Operator[];\n  classifier?: Asset;\n}\n\nexport interface CaseListProps {\n  cases: CaseProps[];\n  onCasesUpdated(cases: CaseProps[]): void;\n  operators?: Operator[];\n  classifier?: Asset;\n  createEmptyCase?: () => CaseProps;\n}\n\nexport interface CaseListState extends FormState {\n  currentCases: CaseProps[];\n}\n\n/**\n * CaseList is a component made up of case elements that lets\n * the user configure rules and drag and drop to set their order.\n */\nexport default class CaseList extends React.Component<CaseListProps, CaseListState> {\n  private sortableItem = SortableElement(({ value: caseProps }: any) => (\n    <div className={styles.kase}>\n      <CaseElement\n        key={caseProps.uuid}\n        {...caseProps}\n        onRemove={this.handleRemoveCase}\n        onChange={this.handleUpdateCase}\n        operators={this.props.operators}\n        classifier={this.props.classifier}\n      />\n    </div>\n  ));\n\n  private sortableList = SortableContainer(({ items }: any) => {\n    return (\n      <div className={styles.case_list}>\n        {items.map((value: any, index: any) => (\n          <this.sortableItem\n            key={`item-${index}`}\n            index={index}\n            value={value}\n            disabled={index === this.state.currentCases.length - 1}\n            shouldCancelStart={(e: any) => {\n              console.log(e);\n              return true;\n            }}\n          />\n        ))}\n      </div>\n    );\n  });\n\n  constructor(props: CaseListProps) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n\n    const caseProps = this.props.cases;\n\n    if (!this.hasEmptyCase(caseProps)) {\n      caseProps.push(this.createEmptyCase());\n    }\n\n    // initialize our cases\n    this.state = {\n      currentCases: caseProps,\n      valid: true\n    };\n  }\n\n  private createEmptyCase(): CaseProps {\n    return this.props.createEmptyCase ? this.props.createEmptyCase() : createEmptyCase();\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  private handleUpdate(keys: { caseProps?: CaseProps; removeCase?: any }) {\n    const updates: Partial<CaseListState> = {};\n\n    let ensureEmptyCase = false;\n\n    if (keys.hasOwnProperty('caseProps')) {\n      updates.currentCases = [keys.caseProps];\n      ensureEmptyCase = true;\n      if (!keys.caseProps.valid) {\n        // TODO: refactor this to be a form entry\n        // mock our case to have validation failures, this is so the case list sees\n        // the existence of errors which mergeForm uses when merging form validity\n        // (keys.caseProps as any).validationFailures = [{ message: 'invalid case' }];\n        updates.valid = false;\n      }\n    }\n\n    let toRemove: any[] = [];\n    if (keys.hasOwnProperty('removeCase')) {\n      toRemove = [{ currentCases: [keys.removeCase] }];\n      ensureEmptyCase = true;\n    }\n\n    // update our form\n    this.setState(\n      (prevState: CaseListState) => {\n        const updated = mergeForm(prevState, updates, toRemove) as CaseListState;\n\n        // notify our listener\n        this.props.onCasesUpdated(updated.currentCases);\n        return updated;\n      },\n      () => {\n        // if we no longer have an empty case, add one\n        if (ensureEmptyCase) {\n          if (!this.hasEmptyCase(this.state.currentCases)) {\n            this.handleUpdate({ caseProps: this.createEmptyCase() });\n          }\n        }\n      }\n    );\n  }\n\n  private hasEmptyCase(cases: CaseProps[]): boolean {\n    return cases.find((caseProps: CaseProps) => caseProps.categoryName.trim().length === 0) != null;\n  }\n\n  private handleRemoveCase(uuid: string) {\n    return this.handleUpdate({\n      removeCase: { uuid }\n    });\n  }\n\n  private handleUpdateCase(caseProps: CaseProps) {\n    this.handleUpdate({ caseProps });\n  }\n\n  private handleSortEnd({ oldIndex, newIndex }: SortEnd): void {\n    this.setState(\n      ({ currentCases }) => ({\n        currentCases: arrayMove(\n          currentCases,\n          oldIndex,\n          newIndex === this.state.currentCases.length - 1 ? newIndex - 1 : newIndex\n        )\n      }),\n      () => {\n        this.props.onCasesUpdated(this.state.currentCases);\n      }\n    );\n  }\n\n  public render(): JSX.Element {\n    return (\n      <>\n        <this.sortableList\n          items={this.state.currentCases}\n          onSortEnd={this.handleSortEnd}\n          shouldCancelStart={(e: React.MouseEvent<HTMLDivElement>) => {\n            if (!(e.target instanceof HTMLElement)) {\n              return true;\n            }\n            return !e.target.dataset.draggable;\n          }}\n        />\n      </>\n    );\n  }\n}\n","export const DEFAULT_OPERAND = '@input.text';\nexport const GROUPS_OPERAND = '@contact.groups';\nexport const WEBHOOK_OPERAND = '@run.webhook';\nexport const SUBFLOW_OPERAND = '@child.run.status';\nexport const MEDIA_OPERAND = '@input';\nexport const DIGITS_OPERAND = '@input.text';\nexport const MENU_OPERAND = '@input.text';\n\nexport const DEFAULT_BODY: string = `@(json(object(\n  \"contact\", object(\n    \"uuid\", contact.uuid, \n    \"name\", contact.name, \n    \"urn\", contact.urn\n  ),\n  \"flow\", object(\n    \"uuid\", run.flow.uuid, \n    \"name\", run.flow.name\n  ),\n  \"results\", foreach_value(results, extract_object, \"value\", \"category\")\n)))`;\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport {\n  createCaseProps,\n  createRenderNode,\n  hasCases,\n  resolveRoutes\n} from 'components/flow/routers/helpers';\nimport { Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { HintTypes, Router, RouterTypes, SwitchRouter, WaitTypes } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nimport { DigitsRouterFormState } from './DigitsRouterForm';\nimport { DIGITS_OPERAND } from 'components/nodeeditor/constants';\n\nexport const nodeToState = (settings: NodeEditorSettings): DigitsRouterFormState => {\n  let initialCases: CaseProps[] = [];\n\n  // TODO: work out an incremental result name\n  let resultName: StringEntry = { value: '' };\n\n  if (getType(settings.originalNode) === Types.wait_for_digits) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n    if (router) {\n      if (hasCases(settings.originalNode.node)) {\n        initialCases = createCaseProps(router.cases, settings.originalNode);\n      }\n\n      resultName = { value: router.result_name || '' };\n    }\n  }\n\n  return {\n    cases: initialCases,\n    resultName,\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: DigitsRouterFormState\n): RenderNode => {\n  const { cases, exits, categories, defaultCategory: defaultExit, caseConfig } = resolveRoutes(\n    state.cases,\n    false,\n    settings.originalNode.node\n  );\n\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    default_category_uuid: defaultExit,\n    categories,\n    cases,\n    operand: DIGITS_OPERAND,\n    wait: { type: WaitTypes.msg, hint: { type: HintTypes.digits } },\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.wait_for_response,\n    [],\n\n    { cases: caseConfig }\n  );\n\n  return newRenderNode;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\n\nimport styles from './DigitsRouterForm.module.scss';\nimport { nodeToState, stateToNode } from './helpers';\nimport i18n from 'config/i18n';\n\nexport interface DigitsRouterFormState extends FormState {\n  cases: CaseProps[];\n  resultName: StringEntry;\n}\n\nexport default class DigitsRouterForm extends React.Component<\n  RouterFormProps,\n  DigitsRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate('Result Name', value, [Alphanumeric, StartIsNonNumeric]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleCasesUpdated(cases: CaseProps[]): void {\n    this.setState({ cases });\n  }\n\n  private handleSave(): void {\n    if (this.state.valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p className={styles.lead_in}>If the keypad entry before the # symbol..</p>\n        <CaseList\n          data-spec=\"cases\"\n          cases={this.state.cases}\n          onCasesUpdated={this.handleCasesUpdated}\n        />\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { ExpressionRouterFormState } from 'components/flow/routers/expression/ExpressionRouterForm';\nimport {\n  createCaseProps,\n  createRenderNode,\n  hasCases,\n  resolveRoutes\n} from 'components/flow/routers/helpers';\nimport { DEFAULT_OPERAND } from 'components/nodeeditor/constants';\nimport { Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { Router, RouterTypes, SwitchRouter } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nexport const nodeToState = (settings: NodeEditorSettings): ExpressionRouterFormState => {\n  let initialCases: CaseProps[] = [];\n\n  // TODO: work out an incremental result name\n  let resultName: StringEntry = { value: '' };\n\n  let operand = DEFAULT_OPERAND;\n\n  if (settings.originalNode && getType(settings.originalNode) === Types.split_by_expression) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n    if (router) {\n      if (hasCases(settings.originalNode.node)) {\n        initialCases = createCaseProps(router.cases, settings.originalNode);\n      }\n\n      resultName = { value: router.result_name || '' };\n    }\n\n    operand = router.operand;\n  }\n\n  return {\n    cases: initialCases,\n    resultName,\n    operand: { value: operand },\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: ExpressionRouterFormState\n): RenderNode => {\n  const { cases, exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\n    state.cases,\n    false,\n    settings.originalNode.node\n  );\n\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    default_category_uuid: defaultExit,\n    categories,\n    cases,\n    operand: state.operand.value,\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.split_by_expression,\n    [],\n    { cases: caseConfig }\n  );\n\n  return newRenderNode;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { nodeToState, stateToNode } from 'components/flow/routers/expression/helpers';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, Required, StartIsNonNumeric, validate } from 'store/validators';\nimport i18n from 'config/i18n';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport enum InputToFocus {\n  args = 'args',\n  min = 'min',\n  max = 'max',\n  exit = 'exit'\n}\n\nexport interface ExpressionRouterFormState extends FormState {\n  cases: CaseProps[];\n  resultName: StringEntry;\n  operand: StringEntry;\n}\n\nexport const leadInSpecId = 'lead-in';\n\nexport default class ExpressionRouterForm extends React.Component<\n  RouterFormProps,\n  ExpressionRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate('Result Name', value, [Alphanumeric, StartIsNonNumeric]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleOperandUpdated(value: string): void {\n    this.setState({ operand: validate('Operand', value, [Required]) });\n  }\n\n  private handleCasesUpdated(cases: CaseProps[]): void {\n    this.setState({ cases });\n  }\n\n  private handleSave(): void {\n    if (this.state.valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p>If the expression...</p>\n        <TextInputElement\n          name=\"Operand\"\n          showLabel={false}\n          autocomplete={true}\n          onChange={this.handleOperandUpdated}\n          entry={this.state.operand}\n        />\n        <CaseList\n          data-spec=\"cases\"\n          cases={this.state.cases}\n          onCasesUpdated={this.handleCasesUpdated}\n        />\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { NAME_PROPERTY } from 'components/flow/props';\nimport { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { FieldRouterFormState } from 'components/flow/routers/field/FieldRouterForm';\nimport {\n  createCaseProps,\n  createRenderNode,\n  hasCases,\n  resolveRoutes\n} from 'components/flow/routers/helpers';\nimport { getContactProperties } from 'components/helpers';\nimport { DEFAULT_OPERAND } from 'components/nodeeditor/constants';\nimport { FlowTypes, Types } from 'config/interfaces';\nimport { getType, Scheme, SCHEMES } from 'config/typeConfigs';\nimport { Router, RouterTypes, SwitchRouter } from 'flowTypes';\nimport { Asset, AssetStore, AssetType, RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nexport const getRoutableFields = (flowType: FlowTypes = null): Asset[] => {\n  return [\n    ...getContactProperties(flowType),\n    ...SCHEMES.map((scheme: Scheme) => ({\n      name: scheme.name,\n      id: scheme.scheme,\n      type: AssetType.Scheme\n    }))\n  ];\n};\n\nexport const nodeToState = (\n  settings: NodeEditorSettings,\n  assetStore: AssetStore\n): FieldRouterFormState => {\n  let initialCases: CaseProps[] = [];\n\n  // TODO: work out an incremental result name\n  let resultName: StringEntry = { value: '' };\n\n  let field: any = null;\n\n  const type = getType(settings.originalNode);\n  if (settings.originalNode && type === Types.split_by_contact_field) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n\n    if (router) {\n      if (hasCases(settings.originalNode.node)) {\n        initialCases = createCaseProps(router.cases, settings.originalNode);\n      }\n\n      resultName = { value: router.result_name || '' };\n    }\n\n    const operand = settings.originalNode.ui.config.operand;\n\n    if (assetStore.fields) {\n      if (operand.id in assetStore.fields.items) {\n        const name = assetStore.fields.items[operand.id].name;\n        field = { id: operand.id, type: operand.type, name };\n      }\n    }\n\n    // couldn't find the asset, checkour routable fields\n    if (!field) {\n      field = getRoutableFields().find((asset: Asset) => asset.id === operand.id);\n    }\n  }\n\n  // our default is name\n  if (!field) {\n    field = NAME_PROPERTY;\n  }\n\n  return {\n    cases: initialCases,\n    resultName,\n    field: { value: field },\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: FieldRouterFormState\n): RenderNode => {\n  const { cases, exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\n    state.cases,\n    false,\n    settings.originalNode.node\n  );\n\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  let operand = DEFAULT_OPERAND;\n  const asset = state.field.value;\n  if (asset.type === AssetType.Scheme) {\n    operand = `@(urn_parts(urns.${asset.id}).path)`;\n  } else if (asset.type === AssetType.Field) {\n    operand = `@contact.fields.${asset.id}`;\n  } else {\n    operand = `@contact.${asset.id}`;\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    default_category_uuid: defaultExit,\n    cases,\n    categories,\n    operand,\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.split_by_contact_field,\n    [],\n    {\n      operand: {\n        id: asset.id,\n        type: asset.type,\n        name: asset.name\n      },\n      cases: caseConfig\n    }\n  );\n\n  return newRenderNode;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { sortFieldsAndProperties } from 'components/flow/actions/updatecontact/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { AssetEntry, FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\nimport { small } from 'utils/reactselect';\n\nimport styles from './FieldRouterForm.module.scss';\nimport { getRoutableFields, nodeToState, stateToNode } from './helpers';\nimport i18n from 'config/i18n';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport enum InputToFocus {\n  args = 'args',\n  min = 'min',\n  max = 'max',\n  exit = 'exit'\n}\n\nexport interface FieldRouterFormState extends FormState {\n  field: AssetEntry;\n  cases: CaseProps[];\n  resultName: StringEntry;\n}\n\nexport const leadInSpecId = 'lead-in';\n\nexport default class FieldRouterForm extends React.Component<\n  RouterFormProps,\n  FieldRouterFormState\n> {\n  public static contextTypes = {\n    assetService: fakePropType,\n    config: fakePropType\n  };\n\n  constructor(props: RouterFormProps) {\n    super(props);\n    this.state = nodeToState(this.props.nodeSettings, this.props.assetStore);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate('Result Name', value, [Alphanumeric, StartIsNonNumeric]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleFieldChanged(selected: Asset[]): void {\n    this.setState({ field: { value: selected[0] } });\n  }\n\n  private handleCasesUpdated(cases: CaseProps[]): void {\n    this.setState({ cases });\n  }\n\n  private handleSave(): void {\n    if (this.state.valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div className={styles.lead_in}>\n          If the contact's\n          <div className={`${styles.field_select} select-small`}>\n            <AssetSelector\n              name=\"Contact Field\"\n              styles={small as any}\n              assets={this.props.assetStore.fields}\n              additionalOptions={getRoutableFields(this.context.config.flowType)}\n              entry={this.state.field}\n              searchable={true}\n              sortFunction={sortFieldsAndProperties}\n              onChange={this.handleFieldChanged}\n            />\n          </div>\n        </div>\n        <CaseList\n          data-spec=\"cases\"\n          cases={this.state.cases}\n          onCasesUpdated={this.handleCasesUpdated}\n        />\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { GroupsRouterFormState } from 'components/flow/routers/groups/GroupsRouterForm';\nimport { createRenderNode, getSwitchRouter, resolveRoutes } from 'components/flow/routers/helpers';\nimport { GROUPS_OPERAND } from 'components/nodeeditor/constants';\nimport { Operators, Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { Category, FlowNode, RouterTypes, SwitchRouter } from 'flowTypes';\nimport { Asset, AssetType, RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\n\nexport const nodeToState = (settings: NodeEditorSettings): GroupsRouterFormState => {\n  const state: GroupsRouterFormState = {\n    groups: { value: [] },\n    resultName: { value: '' },\n    valid: false\n  };\n\n  if (getType(settings.originalNode) === Types.split_by_groups) {\n    state.groups.value = extractGroups(settings.originalNode.node);\n    state.resultName = {\n      value: (settings.originalNode.node.router as SwitchRouter).result_name || ''\n    };\n    state.valid = true;\n  }\n\n  return state;\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: GroupsRouterFormState\n): RenderNode => {\n  const currentCases = groupsToCases(state.groups.value);\n  const { cases, exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\n    currentCases,\n    false,\n    settings.originalNode.node\n  );\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    cases,\n    categories,\n    default_category_uuid: defaultExit,\n    operand: GROUPS_OPERAND,\n    result_name: state.resultName.value\n  };\n\n  return createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.split_by_groups,\n    [],\n    { cases: caseConfig }\n  );\n};\n\nexport const extractGroups = (node: FlowNode): Asset[] => {\n  let groups: Asset[] = [];\n  const router = getSwitchRouter(node);\n  if (router) {\n    groups = (router as SwitchRouter).cases.map(kase => {\n      const category = router.categories.find((cat: Category) => cat.uuid === kase.category_uuid);\n      return {\n        name: category.name,\n        id: kase.arguments[0],\n        type: AssetType.Group\n      };\n    });\n  }\n  return groups;\n};\nexport const groupsToCases = (groups: Asset[] = []): CaseProps[] =>\n  groups.map(({ name, id }: Asset) => ({\n    uuid: id,\n    kase: {\n      uuid: createUUID(),\n      type: Operators.has_group,\n      arguments: [id, name],\n      category_uuid: ''\n    },\n    categoryName: name,\n    valid: true\n  }));\n","import { Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { Case, Category, SwitchRouter } from 'flowTypes';\nimport { LocalizedObject } from 'services/Localization';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport enum LocalizedType {\n  Category,\n  Case\n}\n\nexport const getOriginalCase = (nodeSettings: NodeEditorSettings, uuid: string) => {\n  const cases = (nodeSettings.originalNode.node.router as SwitchRouter).cases;\n  return cases.find((item: any) => item.uuid === uuid);\n};\n\nexport const getOriginalCategory = (nodeSettings: NodeEditorSettings, uuid: string) => {\n  const items = nodeSettings.originalNode.node.router.categories;\n  return items.find((item: any) => item.uuid === uuid);\n};\n\nexport const hasLocalizableCases = (renderNode: RenderNode) => {\n  const type = getType(renderNode);\n  return type === Types.wait_for_response || type === Types.split_by_expression;\n};\n\nexport const getLocalizedObjects = (\n  nodeSettings: NodeEditorSettings,\n  localizedType: LocalizedType\n): Category[] | Case[] => {\n  const filtered: any = [];\n\n  let items: Category[] | Case[] = nodeSettings.originalNode.node.router.categories;\n  if (localizedType === LocalizedType.Case) {\n    if (hasLocalizableCases(nodeSettings.originalNode)) {\n      items = (nodeSettings.originalNode.node.router as SwitchRouter).cases;\n    } else {\n      items = [];\n    }\n  }\n\n  for (const original of items) {\n    const [localized] = nodeSettings.localizations.filter(\n      (localizedObject: LocalizedObject) => localizedObject.getObject().uuid === original.uuid\n    );\n\n    if (localized.isLocalized()) {\n      filtered.push(localized.getObject());\n    } else {\n      filtered.push({ uuid: original.uuid });\n    }\n  }\n  return filtered;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { RouterFormProps } from 'components/flow/props';\nimport { GROUP_LABEL } from 'components/flow/routers/constants';\nimport { nodeToState, stateToNode } from 'components/flow/routers/groups/helpers';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Asset } from 'store/flowContext';\nimport { AssetArrayEntry, FormState, mergeForm, StringEntry } from 'store/nodeEditor';\nimport { Required, validate } from 'store/validators';\nimport i18n from 'config/i18n';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport interface GroupsRouterFormState extends FormState {\n  groups: AssetArrayEntry;\n  resultName: StringEntry;\n}\n\nexport default class GroupsRouterForm extends React.Component<\n  RouterFormProps,\n  GroupsRouterFormState\n> {\n  public static contextTypes = {\n    endpoints: fakePropType,\n    assetService: fakePropType\n  };\n\n  constructor(props: RouterFormProps) {\n    super(props);\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleGroupsChanged(groups: Asset[]): void {\n    this.handleUpdate({ groups });\n  }\n\n  private handleUpdateResultName(resultName: string): void {\n    this.handleUpdate({ resultName });\n  }\n\n  private handleUpdate(keys: { groups?: Asset[]; resultName?: string }): boolean {\n    const updates: Partial<GroupsRouterFormState> = {};\n\n    if (keys.hasOwnProperty('groups')) {\n      updates.groups = validate('Groups', keys.groups, [Required]);\n    }\n\n    if (keys.hasOwnProperty('resultName')) {\n      updates.resultName = { value: keys.resultName };\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    if (this.state.valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p>{GROUP_LABEL}</p>\n        <AssetSelector\n          name=\"Groups\"\n          assets={this.props.assetStore.groups}\n          entry={this.state.groups}\n          searchable={true}\n          onChange={this.handleGroupsChanged}\n          multi={true}\n        />\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n      </Dialog>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport { determineTypeConfig } from 'components/flow/helpers';\nimport { LocalizationFormProps } from 'components/flow/props';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport { getOperatorConfig } from 'config/operatorConfigs';\nimport { Case, Category } from 'flowTypes';\nimport * as React from 'react';\nimport { FormState, mergeForm } from 'store/nodeEditor';\n\nimport {\n  getLocalizedObjects,\n  getOriginalCase,\n  getOriginalCategory,\n  LocalizedType\n} from './helpers';\nimport styles from './RouterLocalizationForm.module.scss';\nimport i18n from 'config/i18n';\n\nexport interface RouterLocalizationFormState extends FormState {\n  categories: Category[];\n  cases: Case[];\n}\n\nexport default class RouterLocalizationForm extends React.Component<\n  LocalizationFormProps,\n  RouterLocalizationFormState\n> {\n  constructor(props: LocalizationFormProps) {\n    super(props);\n\n    const categories: Category[] = getLocalizedObjects(\n      props.nodeSettings,\n      LocalizedType.Category\n    ) as Category[];\n    const cases: Case[] = getLocalizedObjects(props.nodeSettings, LocalizedType.Case) as Case[];\n\n    this.state = { categories, cases, valid: true };\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleUpdate(keys: { category?: Category; kase?: Case }): boolean {\n    const updates: Partial<RouterLocalizationFormState> = {};\n\n    if (keys.hasOwnProperty('category')) {\n      updates.categories = [keys.category];\n    }\n\n    if (keys.hasOwnProperty('kase')) {\n      updates.cases = [keys.kase];\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleUpdateCategoryName(category: Category, name: string): boolean {\n    category.name = name;\n    return this.handleUpdate({ category });\n  }\n\n  private handleUpdateCaseArgument(kase: Case, arg: string): boolean {\n    kase.arguments = [arg];\n    return this.handleUpdate({ kase });\n  }\n\n  private handleSave(): void {\n    // collect up our category localizations\n    const translations: any[] = this.state.categories.map((cat: Category) => {\n      return cat.name\n        ? {\n            uuid: cat.uuid,\n            translations: {\n              name: cat.name\n            }\n          }\n        : { uuid: cat.uuid };\n    });\n\n    // same thing for any cases\n    translations.push(\n      ...this.state.cases.map((kase: Case) => {\n        return kase.arguments\n          ? {\n              uuid: kase.uuid,\n              translations: {\n                arguments: kase.arguments\n              }\n            }\n          : { uuid: kase.uuid };\n      })\n    );\n\n    this.props.updateLocalizations(this.props.language.id, translations);\n\n    // notify our modal we are done\n    this.props.onClose(false);\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public renderCases(): JSX.Element[] {\n    return this.state.cases.map((kase: Case) => {\n      const originalCase = getOriginalCase(this.props.nodeSettings, kase.uuid) as Case;\n\n      const { verboseName } = getOperatorConfig(originalCase.type);\n\n      const [orginalArgument] = originalCase.arguments;\n\n      let argument = '';\n      if (kase.arguments && kase.arguments.length > 0) {\n        argument = kase.arguments[0];\n      }\n\n      return (\n        <div\n          key={`translate_${kase.uuid}`}\n          data-spec=\"operator-field\"\n          className={styles.translating_operator_container}\n        >\n          <div data-spec=\"verbose-name\" className={styles.translating_operator}>\n            {verboseName}\n          </div>\n          <div data-spec=\"argument-to-translate\" className={styles.translating_from}>\n            {orginalArgument}\n          </div>\n          <div className={styles.translating_to}>\n            <TextInputElement\n              data-spec=\"localize-case\"\n              name={kase.uuid}\n              placeholder={`${this.props.language.name} Translation`}\n              showLabel={false}\n              onChange={(arg: string) => this.handleUpdateCaseArgument(kase, arg)}\n              entry={{ value: argument }}\n            />\n          </div>\n        </div>\n      );\n    });\n  }\n\n  public renderCategories(): JSX.Element[] {\n    return this.state.categories.map((cat: Category) => {\n      const originalCategory = getOriginalCategory(this.props.nodeSettings, cat.uuid);\n\n      const placeholder = `${this.props.language.name} Translation`;\n\n      if (!cat.name) {\n        cat.name = '';\n      }\n\n      return (\n        <div key={cat.uuid} className={styles.translating_category}>\n          <div data-spec=\"category-name\" className={styles.translating_from}>\n            {originalCategory.name}\n          </div>\n          <div className={styles.translating_to}>\n            <TextInputElement\n              data-spec=\"localize-category\"\n              name={cat.name}\n              placeholder={placeholder}\n              showLabel={false}\n              entry={{ value: cat.name }}\n              onChange={(name: string) => this.handleUpdateCategoryName(cat, name)}\n            />\n          </div>\n        </div>\n      );\n    });\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = determineTypeConfig(this.props.nodeSettings);\n\n    const tabs: Tab[] = [];\n\n    if (this.state.cases.length > 0) {\n      tabs.push({\n        name: 'Rule Translations',\n        body: (\n          <>\n            <p data-spec=\"instructions\">\n              Sometimes languages need special rules to route things properly. If a translation is\n              not provided, the original rule will be used.\n            </p>\n            {this.renderCases()}\n          </>\n        )\n      });\n    }\n\n    const categories = (\n      <Dialog\n        title={`${this.props.language.name} Category Names`}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={tabs}\n      >\n        <p data-spec=\"instructions\">\n          When category names are referenced later in the flow, the appropriate language for the\n          category will be used. If no translation is provided, the original text will be used.\n        </p>\n        {this.renderCategories()}\n      </Dialog>\n    );\n\n    // if we have cases, use a flipper\n    return categories;\n  }\n}\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { createRenderNode, resolveRoutes } from 'components/flow/routers/helpers';\nimport { Operators, Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { Case, Category, HintTypes, Router, RouterTypes, SwitchRouter, WaitTypes } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\n\nimport { MenuRouterFormState } from './MenuRouterForm';\nimport { MENU_OPERAND } from 'components/nodeeditor/constants';\n\nexport const nodeToState = (settings: NodeEditorSettings): MenuRouterFormState => {\n  let resultName: StringEntry = { value: '' };\n\n  const menu: string[] = [];\n  for (let i = 0; i < 10; i++) {\n    menu.push('');\n  }\n\n  if (getType(settings.originalNode) === Types.wait_for_menu) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n    for (const kase of router.cases) {\n      let idx = parseInt(kase.arguments[0], 10) - 1;\n      if (idx === -1) {\n        idx = menu.length - 1;\n      }\n\n      menu[idx] = settings.originalNode.node.router.categories.find(\n        (category: Category) => category.uuid === kase.category_uuid\n      ).name;\n    }\n    resultName = { value: router.result_name || '' };\n  }\n\n  return {\n    resultName,\n    menu,\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: MenuRouterFormState\n): RenderNode => {\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  let originalCases: Case[] = [];\n  if (getType(settings.originalNode) === Types.wait_for_menu) {\n    originalCases = (settings.originalNode.node.router as SwitchRouter).cases;\n  }\n\n  const caseProps = menuToCases(state.menu, originalCases);\n  const { cases, exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\n    caseProps,\n    false,\n    settings.originalNode.node\n  );\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    operand: MENU_OPERAND,\n    default_category_uuid: defaultExit,\n    cases,\n    categories,\n    wait: { type: WaitTypes.msg, hint: { type: HintTypes.digits, count: 1 } },\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.wait_for_response,\n    [],\n    { cases: caseConfig }\n  );\n\n  return newRenderNode;\n};\n\nexport const menuToCases = (menu: string[] = [], previousCases: Case[]): CaseProps[] =>\n  menu\n    .map((categoryName: string, index: number) => {\n      const idx = index === 9 ? 0 : index + 1;\n\n      const kase =\n        previousCases.find((c: Case) => c.arguments[0] === '' + idx) ||\n        ({\n          uuid: createUUID(),\n          arguments: ['' + idx],\n          type: Operators.has_number_eq,\n          category_uuid: ''\n        } as Case);\n\n      return {\n        uuid: kase.uuid,\n        kase,\n        categoryName,\n        valid: true\n      };\n    })\n    .filter((caseProps: CaseProps) => caseProps.categoryName.trim().length > 0);\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\n\nimport { nodeToState, stateToNode } from './helpers';\nimport styles from './MenuRouterForm.module.scss';\nimport i18n from 'config/i18n';\n\nconst mutate = require('immutability-helper');\n\nexport interface MenuRouterFormState extends FormState {\n  resultName: StringEntry;\n  menu: string[];\n}\n\nexport const leadInSpecId = 'lead-in';\n\nexport default class MenuRouterForm extends React.Component<RouterFormProps, MenuRouterFormState> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public static contextTypes = {\n    assetService: fakePropType\n  };\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate('Result Name', value, [Alphanumeric, StartIsNonNumeric]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleSave(): void {\n    this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n    this.props.onClose(false);\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private handleMenuChanged(index: number, value: string): void {\n    const menu = mutate(this.state.menu, { [index]: { $set: value } });\n    this.setState({ menu });\n  }\n\n  private renderOption(index: number): JSX.Element {\n    return (\n      <div key={'menuoption-' + index} className={styles.menu_option}>\n        <div className={styles.digit}>{index === 9 ? 0 : index + 1}</div>\n        <div className={styles.category}>\n          <TextInputElement\n            name={'Menu ' + index}\n            entry={{ value: this.state.menu[index] }}\n            onChange={(value: string) => {\n              this.handleMenuChanged(index, value);\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  private renderMenu(): any {\n    const options: JSX.Element[] = [];\n    for (let i = 0; i < 10; i++) {\n      options.push(this.renderOption(i));\n    }\n\n    return options;\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div className={styles.menu}>{this.renderMenu()}</div>\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { createRenderNode } from 'components/flow/routers/helpers';\nimport { RandomRouterFormState } from 'components/flow/routers/random/RandomRouterForm';\nimport { SelectOption } from 'components/form/select/SelectElement';\nimport { Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { Category, Exit, Router, RouterTypes } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\nimport { createUUID, range } from 'utils';\n\nexport const BUCKET_OPTIONS: SelectOption[] = range(2, 11).map((count: number) => {\n  return { value: count + '', label: count + ' buckets' };\n});\n\nexport const getOption = (value: number): SelectOption => {\n  let option = BUCKET_OPTIONS.find(\n    (bucketOption: SelectOption) => bucketOption.value === value + ''\n  );\n  if (!option) {\n    option = { label: `${value} Buckets`, value: value + '' };\n  }\n  return option;\n};\n\nexport const nodeToState = (settings: NodeEditorSettings): RandomRouterFormState => {\n  // TODO: work out an incremental result name\n  let resultName: StringEntry = { value: '' };\n  let buckets = 2;\n\n  let categories: Category[] = [];\n  if (settings.originalNode && getType(settings.originalNode) === Types.split_by_random) {\n    const router = settings.originalNode.node.router as Router;\n    resultName = { value: router.result_name || '' };\n    buckets = settings.originalNode.node.exits.length;\n\n    // use any existing random buckets if we have any\n    categories = settings.originalNode.node.router.categories;\n  }\n\n  categories = fillOutCategories(categories, buckets);\n\n  return {\n    categories,\n    resultName,\n    bucketChoice: { value: getOption(buckets) },\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: RandomRouterFormState\n): RenderNode => {\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  const exits =\n    getType(settings.originalNode) === Types.split_by_random\n      ? settings.originalNode.node.exits\n      : [];\n\n  const count = parseInt(state.bucketChoice.value.value, 10);\n  exits.splice(count, exits.length - count);\n\n  state.categories.forEach((category: Category, idx: number) => {\n    if (idx < exits.length) {\n      category.exit_uuid = exits[idx].uuid;\n    } else {\n      const newExit: Exit = {\n        uuid: createUUID(),\n        destination_uuid: null\n      };\n      category.exit_uuid = newExit.uuid;\n      exits.push(newExit);\n    }\n  });\n\n  const router: Router = {\n    type: RouterTypes.random,\n    categories: state.categories,\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.split_by_random,\n    [],\n    null\n  );\n\n  return newRenderNode;\n};\n\nexport const fillOutCategories = (categories: Category[], buckets: number): Category[] => {\n  // add any that we still need\n  return categories.concat(\n    range(categories.length, buckets).map((idx: number) => {\n      return { uuid: createUUID(), name: `Bucket ${idx + 1}`, exit_uuid: null };\n    })\n  );\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Category } from 'flowTypes';\nimport * as React from 'react';\nimport { FormState, mergeForm, SelectOptionEntry, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\nimport { small } from 'utils/reactselect';\n\nimport { BUCKET_OPTIONS, fillOutCategories, nodeToState, stateToNode } from './helpers';\nimport styles from './RandomRouterForm.module.scss';\nimport i18n from 'config/i18n';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport enum InputToFocus {\n  args = 'args',\n  min = 'min',\n  max = 'max',\n  exit = 'exit'\n}\n\nexport interface RandomRouterFormState extends FormState {\n  bucketChoice: SelectOptionEntry;\n  resultName: StringEntry;\n  categories: Category[];\n}\n\nexport const leadInSpecId = 'lead-in';\n\nexport default class RandomRouterForm extends React.Component<\n  RouterFormProps,\n  RandomRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public static contextTypes = {\n    assetService: fakePropType\n  };\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate('Result Name', value, [Alphanumeric, StartIsNonNumeric]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleBucketsChanged(selected: SelectOption): boolean {\n    // create new exits if needed\n\n    const count = parseInt(selected.value, 10);\n\n    let categories = this.state.categories.concat([]);\n\n    // prune off if we have too many\n    categories = categories.slice(0, count);\n\n    // add any that we still need\n    categories = fillOutCategories(categories, count);\n\n    const updates: Partial<RandomRouterFormState> = {\n      bucketChoice: { value: selected }\n    };\n\n    const updated = mergeForm(this.state, updates);\n    this.setState({ ...updated, categories });\n\n    return updated.valid;\n  }\n\n  public handleSave(): void {\n    this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n    this.props.onClose(false);\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private handleBucketNameChanged(category: Category, value: string): void {\n    const categories = this.state.categories;\n    categories.find((cat: Category) => cat.uuid === category.uuid).name = value;\n    this.setState({ categories });\n  }\n\n  private renderBucketNames(): any {\n    return this.state.categories.map((cat: Category) => (\n      <TextInputElement\n        key={cat.uuid}\n        __className={styles.bucket_name}\n        name={cat.uuid}\n        entry={{ value: cat.name }}\n        onChange={(value: string) => {\n          this.handleBucketNameChanged(cat, value);\n        }}\n      />\n    ));\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    const OPTIONS = BUCKET_OPTIONS.concat([]);\n    if (BUCKET_OPTIONS.indexOf(this.state.bucketChoice.value) === -1) {\n      OPTIONS.push(this.state.bucketChoice.value);\n    }\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div className={styles.lead_in}>Split them randomly into one of</div>\n        <div className={styles.bucket_select}>\n          <SelectElement\n            styles={small as any}\n            name=\"Buckets\"\n            entry={this.state.bucketChoice}\n            onChange={this.handleBucketsChanged}\n            options={OPTIONS}\n          />\n        </div>\n        <div className={styles.bucket_list}>{this.renderBucketNames()}</div>\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport {\n  createCaseProps,\n  createRenderNode,\n  hasCases,\n  resolveRoutes\n} from 'components/flow/routers/helpers';\nimport { ResponseRouterFormState } from 'components/flow/routers/response/ResponseRouterForm';\nimport { DEFAULT_OPERAND } from 'components/nodeeditor/constants';\nimport { Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { Router, RouterTypes, SwitchRouter, Wait, WaitTypes } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nexport const nodeToState = (settings: NodeEditorSettings): ResponseRouterFormState => {\n  let initialCases: CaseProps[] = [];\n\n  // TODO: work out an incremental result name\n  let resultName: StringEntry = { value: 'Result' };\n  let timeout = 0;\n\n  if (settings.originalNode && getType(settings.originalNode) === Types.wait_for_response) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n    if (router) {\n      if (hasCases(settings.originalNode.node)) {\n        initialCases = createCaseProps(router.cases, settings.originalNode);\n      }\n\n      resultName = { value: router.result_name || '' };\n    }\n\n    if (settings.originalNode.node.router.wait && settings.originalNode.node.router.wait.timeout) {\n      timeout = settings.originalNode.node.router.wait.timeout.seconds || 0;\n    }\n  }\n\n  return {\n    cases: initialCases,\n    resultName,\n    timeout,\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: ResponseRouterFormState\n): RenderNode => {\n  const { cases, exits, defaultCategory, timeoutCategory, caseConfig, categories } = resolveRoutes(\n    state.cases,\n    state.timeout > 0,\n    settings.originalNode.node\n  );\n\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  const wait = { type: WaitTypes.msg } as Wait;\n  if (state.timeout > 0) {\n    wait.timeout = {\n      seconds: state.timeout,\n      category_uuid: timeoutCategory\n    };\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    default_category_uuid: defaultCategory,\n    cases,\n    categories,\n    operand: DEFAULT_OPERAND,\n    wait,\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.wait_for_response,\n    [],\n    { cases: caseConfig }\n  );\n\n  return newRenderNode;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { nodeToState, stateToNode } from 'components/flow/routers/response/helpers';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TimeoutControl from 'components/form/timeout/TimeoutControl';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\nimport { WAIT_LABEL } from 'components/flow/routers/constants';\nimport i18n from 'config/i18n';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport enum InputToFocus {\n  args = 'args',\n  min = 'min',\n  max = 'max',\n  exit = 'exit'\n}\n\nexport interface ResponseRouterFormState extends FormState {\n  cases: CaseProps[];\n  resultName: StringEntry;\n  timeout: number;\n}\n\nexport const leadInSpecId = 'lead-in';\n\nexport default class ResponseRouterForm extends React.Component<\n  RouterFormProps,\n  ResponseRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate('Result Name', value, [Alphanumeric, StartIsNonNumeric]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleUpdateTimeout(timeout: number): void {\n    this.setState({ timeout });\n  }\n\n  private handleCasesUpdated(cases: CaseProps[]): void {\n    const invalidCase = cases.find((caseProps: CaseProps) => !caseProps.valid);\n    this.setState({ cases, valid: !invalidCase });\n  }\n\n  private handleSave(): void {\n    if (this.state.valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        gutter={\n          <TimeoutControl timeout={this.state.timeout} onChanged={this.handleUpdateTimeout} />\n        }\n      >\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div>{WAIT_LABEL}</div>\n        <CaseList\n          data-spec=\"cases\"\n          cases={this.state.cases}\n          onCasesUpdated={this.handleCasesUpdated}\n        />\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport CheckboxElement from 'components/form/checkbox/CheckboxElement';\nimport * as React from 'react';\nimport Select from 'react-select';\nimport { renderIf } from 'utils';\nimport { small } from 'utils/reactselect';\n\nimport styles from './TimeoutControl.module.scss';\n\nexport const TIMEOUT_OPTIONS = [\n  { value: 60, label: '1 minute' },\n  { value: 120, label: '2 minutes' },\n  { value: 180, label: '3 minutes' },\n  { value: 240, label: '4 minutes' },\n  { value: 300, label: '5 minutes' },\n  { value: 600, label: '10 minutes' },\n  { value: 900, label: '15 minutes' },\n  { value: 3600, label: '1 hours' },\n  { value: 7200, label: '2 hours' },\n  { value: 10800, label: '3 hours' },\n  { value: 21600, label: '6 hours' },\n  { value: 43200, label: '12 hours' },\n  { value: 64800, label: '18 hours' },\n  { value: 86400, label: '1 day' },\n  { value: 172800, label: '2 days' },\n  { value: 259200, label: '3 days' },\n  { value: 604800, label: '1 week' }\n];\n\nexport const DEFAULT_TIMEOUT = TIMEOUT_OPTIONS[4];\n\nexport const ellipsize = (str: string) => `${str}...`;\n\nexport interface TimeoutControlProps {\n  timeout: number;\n  onChanged(timeout: number): void;\n}\n\nexport default class TimeoutControl extends React.Component<TimeoutControlProps> {\n  constructor(props: TimeoutControlProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private getSelected(timeout: number): any {\n    for (const [idx, { value }] of TIMEOUT_OPTIONS.entries()) {\n      if (value === timeout) {\n        return TIMEOUT_OPTIONS[idx];\n      }\n    }\n    return null;\n  }\n\n  private isChecked(): boolean {\n    return this.props.timeout > 0;\n  }\n\n  private getInstructions(): string {\n    const base = 'Continue when there is no response';\n    return this.isChecked() ? `${base} for` : ellipsize(base);\n  }\n\n  private handleChecked(): void {\n    if (this.props.timeout > 0) {\n      this.props.onChanged(0);\n    } else {\n      this.props.onChanged(DEFAULT_TIMEOUT.value);\n    }\n  }\n\n  private handleTimeoutChanged(selected: any): void {\n    this.props.onChanged(selected.value as number);\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div className={styles.timeout_control_container}>\n        <div className={styles.left_section}>\n          <CheckboxElement\n            name=\"Timeout\"\n            checked={this.isChecked()}\n            description={this.getInstructions()}\n            checkboxClassName={styles.checkbox}\n            onChange={this.handleChecked}\n          />\n        </div>\n        {renderIf(this.isChecked())(\n          <div className={styles.drop_down}>\n            <Select\n              name=\"timeout\"\n              menuPlacement=\"auto\"\n              styles={small as any}\n              isClearable={false}\n              isSearchable={false}\n              value={this.getSelected(this.props.timeout)}\n              onChange={this.handleTimeoutChanged}\n              options={TIMEOUT_OPTIONS}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import { createWebhookBasedNode } from 'components/flow/routers/helpers';\nimport { Types } from 'config/interfaces';\nimport { CallResthook } from 'flowTypes';\nimport { AssetType, RenderNode } from 'store/flowContext';\nimport { AssetEntry, NodeEditorSettings } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\n\nimport { ResthookRouterFormState } from './ResthookRouterForm';\n\nexport const nodeToState = (settings: NodeEditorSettings): ResthookRouterFormState => {\n  let resthookAsset: AssetEntry = { value: null };\n  let resultName = { value: 'Result' };\n  let valid = false;\n\n  const originalAction = getOriginalAction(settings) as CallResthook;\n  if (originalAction && originalAction.type === Types.call_resthook) {\n    const resthook = originalAction.resthook;\n    resthookAsset = {\n      value: { id: resthook, name: resthook, type: AssetType.Resthook }\n    };\n    resultName = { value: originalAction.result_name };\n    valid = true;\n  }\n\n  return {\n    resthook: resthookAsset,\n    resultName,\n    valid\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: ResthookRouterFormState\n): RenderNode => {\n  let uuid = createUUID();\n  const originalAction = getOriginalAction(settings);\n  if (originalAction) {\n    uuid = originalAction.uuid;\n  }\n\n  const newAction: CallResthook = {\n    uuid,\n    resthook: state.resthook.value.id,\n    type: Types.call_resthook,\n    result_name: state.resultName.value\n  };\n\n  return createWebhookBasedNode(newAction, settings.originalNode, false);\n};\n\nexport const getOriginalAction = (settings: NodeEditorSettings): CallResthook => {\n  const action =\n    settings.originalAction ||\n    (settings.originalNode.node.actions.length > 0 && settings.originalNode.node.actions[0]);\n\n  if (action.type === Types.call_resthook) {\n    return action as CallResthook;\n  }\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { AssetEntry, FormState, mergeForm, StringEntry } from 'store/nodeEditor';\nimport {\n  Alphanumeric,\n  Required,\n  shouldRequireIf,\n  StartIsNonNumeric,\n  validate\n} from 'store/validators';\n\nimport { nodeToState, stateToNode } from './helpers';\nimport styles from './ResthookRouterForm.module.scss';\n\n// TODO: Remove use of Function\nexport interface ResthookRouterFormState extends FormState {\n  resthook: AssetEntry;\n  resultName: StringEntry;\n}\n\nexport default class ResthookRouterForm extends React.PureComponent<\n  RouterFormProps,\n  ResthookRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleUpdateResultName(result: string): void {\n    const resultName = validate('Result Name', result, [Required, Alphanumeric, StartIsNonNumeric]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  public handleResthookChanged(selected: Asset[], submitting = false): boolean {\n    const updates: Partial<ResthookRouterFormState> = {\n      resthook: validate('Resthook', selected[0], [shouldRequireIf(submitting)])\n    };\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    // validate our resthook in case they haven't interacted\n    const valid = this.handleResthookChanged([this.state.resthook.value], true);\n\n    if (valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  public getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <AssetSelector\n          name=\"Resthook\"\n          placeholder=\"Select the resthook to call\"\n          assets={this.props.assetStore.resthooks}\n          entry={this.state.resthook}\n          searchable={true}\n          onChange={this.handleResthookChanged}\n        />\n        <div className={styles.result_name}>\n          {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        </div>\n      </Dialog>\n    );\n  }\n}\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport {\n  createCaseProps,\n  createRenderNode,\n  hasCases,\n  resolveRoutes\n} from 'components/flow/routers/helpers';\nimport { SelectOption } from 'components/form/select/SelectElement';\nimport { Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { Router, RouterTypes, SwitchRouter } from 'flowTypes';\nimport { AssetStore, RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nimport { ResultRouterFormState } from './ResultRouterForm';\n\nexport const FIELD_NUMBER_OPTIONS: SelectOption[] = [\n  { value: '0', label: 'first' },\n  { value: '1', label: 'second' },\n  { value: '2', label: 'third' },\n  { value: '3', label: 'fourth' },\n  { value: '4', label: 'fifth' },\n  { value: '5', label: 'sixth' },\n  { value: '6', label: 'seventh' },\n  { value: '7', label: 'eighth' },\n  { value: '8', label: 'ninth' },\n  { value: '9', label: 'tenth' },\n  { value: '10', label: '11th' },\n  { value: '11', label: '12th' },\n  { value: '12', label: '13th' },\n  { value: '13', label: '14th' },\n  { value: '14', label: '15th' },\n  { value: '15', label: '16th' },\n  { value: '16', label: '17th' },\n  { value: '17', label: '18th' },\n  { value: '18', label: '19th' },\n  { value: '19', label: '20th' }\n];\n\nexport const getFieldOption = (value: number): SelectOption => {\n  return FIELD_NUMBER_OPTIONS.find((option: SelectOption) => option.value === '' + value);\n};\n\nexport const DELIMITER_OPTIONS: SelectOption[] = [\n  { value: ' ', label: 'spaces' },\n  { value: '.', label: 'periods' },\n  { value: '+', label: 'plusses' }\n];\n\nexport const getDelimiterOption = (value: string): SelectOption => {\n  return DELIMITER_OPTIONS.find((option: SelectOption) => option.value === value);\n};\n\nexport const nodeToState = (\n  settings: NodeEditorSettings,\n  assetStore: AssetStore\n): ResultRouterFormState => {\n  let initialCases: CaseProps[] = [];\n\n  // TODO: work out an incremental result name\n  let resultName: StringEntry = { value: '' };\n\n  let result: any = null;\n  let fieldNumber = 1;\n  let delimiter = ' ';\n  let shouldDelimit = false;\n\n  const type = getType(settings.originalNode);\n\n  if (\n    (settings.originalNode && type === Types.split_by_run_result) ||\n    type === Types.split_by_run_result_delimited\n  ) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n\n    if (router) {\n      if (hasCases(settings.originalNode.node)) {\n        initialCases = createCaseProps(router.cases, settings.originalNode);\n      }\n\n      resultName = { value: router.result_name || '' };\n    }\n\n    const config = settings.originalNode.ui.config;\n    if (config && config.operand) {\n      result =\n        config.operand.id in assetStore.results.items\n          ? assetStore.results.items[config.operand.id]\n          : null;\n    }\n\n    if (type === Types.split_by_run_result_delimited) {\n      fieldNumber = config.index;\n      delimiter = config.delimiter;\n      shouldDelimit = true;\n    }\n  }\n\n  return {\n    cases: initialCases,\n    resultName,\n    result: { value: result },\n    shouldDelimit,\n    fieldNumber,\n    delimiter,\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: ResultRouterFormState\n): RenderNode => {\n  const { cases, exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\n    state.cases,\n    false,\n    settings.originalNode.node\n  );\n\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  let nodeType = Types.split_by_run_result;\n\n  const asset = state.result.value;\n  let operand = `@results.${asset.id}`;\n\n  const config: any = {\n    operand: {\n      id: asset.id,\n      type: asset.type,\n      name: asset.name\n    },\n    cases: caseConfig\n  };\n\n  if (state.shouldDelimit) {\n    config.index = state.fieldNumber;\n    config.delimiter = state.delimiter;\n    operand = `@(field(results.${asset.id}, ${state.fieldNumber}, \"${state.delimiter}\"))`;\n    nodeType = Types.split_by_run_result_delimited;\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    default_category_uuid: defaultExit,\n    categories,\n    cases,\n    operand,\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    nodeType,\n    [],\n    config\n  );\n\n  return newRenderNode;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport CheckboxElement from 'components/form/checkbox/CheckboxElement';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { AssetEntry, FormState, mergeForm, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, shouldRequireIf, StartIsNonNumeric, validate } from 'store/validators';\nimport { small } from 'utils/reactselect';\n\nimport {\n  DELIMITER_OPTIONS,\n  FIELD_NUMBER_OPTIONS,\n  getDelimiterOption,\n  getFieldOption,\n  nodeToState,\n  stateToNode\n} from './helpers';\nimport styles from './ResultRouterForm.module.scss';\nimport i18n from 'config/i18n';\n\nexport interface ResultRouterFormState extends FormState {\n  result: AssetEntry;\n  cases: CaseProps[];\n  resultName: StringEntry;\n  shouldDelimit: boolean;\n\n  fieldNumber: number;\n  delimiter: string;\n}\n\nexport const leadInSpecId = 'lead-in';\n\nexport default class ResultRouterForm extends React.Component<\n  RouterFormProps,\n  ResultRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings, this.props.assetStore);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate('Result Name', value, [Alphanumeric, StartIsNonNumeric]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleResultChanged(selected: Asset[], submitting = false): boolean {\n    const updates: Partial<ResultRouterFormState> = {\n      result: validate('Result to split on', selected[0], [shouldRequireIf(submitting)])\n    };\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleCasesUpdated(cases: CaseProps[]): void {\n    this.setState({ cases });\n  }\n\n  private handleSave(): void {\n    const valid = this.handleResultChanged([this.state.result.value], true);\n    if (valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private handleShouldDelimitChanged(checked: boolean): void {\n    this.setState({ shouldDelimit: checked });\n  }\n\n  private handleFieldNumberChanged(selected: SelectOption): void {\n    this.setState({ fieldNumber: parseInt(selected.value, 10) });\n  }\n\n  private handleDelimiterChanged(selected: SelectOption): void {\n    this.setState({ delimiter: selected.value });\n  }\n\n  private renderField(): JSX.Element {\n    return (\n      <div className={styles.non_delimited}>\n        <div className={styles.lead_in}>If the flow result</div>\n        <div className={styles.result_select}>\n          <AssetSelector\n            entry={this.state.result}\n            styles={small as any}\n            name=\"Flow Result\"\n            placeholder=\"Select Result\"\n            searchable={false}\n            assets={this.props.assetStore.results}\n            onChange={this.handleResultChanged}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  private renderFieldDelimited(): JSX.Element {\n    return (\n      <div className={styles.delimited}>\n        <div className={styles.lead_in}>If the</div>\n        <div className={styles.field_number}>\n          <SelectElement\n            styles={small as any}\n            name=\"Field Number\"\n            entry={{ value: getFieldOption(this.state.fieldNumber) }}\n            onChange={this.handleFieldNumberChanged}\n            options={FIELD_NUMBER_OPTIONS}\n          />\n        </div>\n        <div className={styles.lead_in_sub}>field of</div>\n        <div className={styles.result_select_delimited}>\n          <AssetSelector\n            entry={this.state.result}\n            styles={small as any}\n            name=\"Flow Result\"\n            placeholder=\"Select Result\"\n            searchable={false}\n            assets={this.props.assetStore.results}\n            onChange={this.handleResultChanged}\n          />\n        </div>\n        <div className={styles.lead_in_sub}>delimited by</div>\n        <div className={styles.delimiter}>\n          <SelectElement\n            styles={small as any}\n            name=\"Delimiter\"\n            entry={{ value: getDelimiterOption(this.state.delimiter) }}\n            onChange={this.handleDelimiterChanged}\n            options={DELIMITER_OPTIONS}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    const advanced: Tab = {\n      name: 'Advanced',\n      body: (\n        <div className={styles.should_delimit}>\n          <CheckboxElement\n            name=\"Delimit\"\n            title=\"Delimit Result\"\n            checked={this.state.shouldDelimit}\n            description=\"Evaluate your rules against a delimited part of your result\"\n            onChange={this.handleShouldDelimitChanged}\n          />\n        </div>\n      ),\n      checked: this.state.shouldDelimit\n    };\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={[advanced]}\n      >\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n\n        {this.state.shouldDelimit ? this.renderFieldDelimited() : this.renderField()}\n\n        <CaseList\n          data-spec=\"cases\"\n          cases={this.state.cases}\n          onCasesUpdated={this.handleCasesUpdated}\n        />\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n      </Dialog>\n    );\n  }\n}\n","import { createRenderNode } from 'components/flow/routers/helpers';\nimport { SubflowRouterFormState } from 'components/flow/routers/subflow/SubflowRouterForm';\nimport { SUBFLOW_OPERAND } from 'components/nodeeditor/constants';\nimport { Operators, Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport {\n  Case,\n  Category,\n  Exit,\n  Flow,\n  RouterTypes,\n  StartFlow,\n  StartFlowExitNames,\n  SwitchRouter\n} from 'flowTypes';\nimport { Asset, AssetType, RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\n\nexport const nodeToState = (settings: NodeEditorSettings): SubflowRouterFormState => {\n  if (\n    getType(settings.originalNode) === Types.split_by_subflow ||\n    (settings.originalAction && settings.originalAction.type === Types.enter_flow)\n  ) {\n    const action = (settings.originalAction ||\n      (settings.originalNode.node.actions.length > 0 &&\n        settings.originalNode.node.actions[0])) as StartFlow;\n\n    return { flow: { value: flowToAsset(action.flow) }, valid: true };\n  }\n\n  return {\n    flow: { value: null },\n    valid: false\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: SubflowRouterFormState\n): RenderNode => {\n  const action =\n    settings.originalAction ||\n    (settings.originalNode.node.actions.length > 0 && settings.originalNode.node.actions[0]);\n\n  const newAction: StartFlow = {\n    uuid: action.uuid || createUUID(),\n    type: Types.enter_flow,\n    flow: assetToFlow(state.flow.value)\n  };\n\n  // If we're already a subflow, lean on those exits and cases\n  let exits: Exit[];\n  let cases: Case[];\n  let categories: Category[];\n\n  if (getType(settings.originalNode) === Types.split_by_subflow) {\n    ({ exits } = settings.originalNode.node);\n    ({ cases, categories } = settings.originalNode.node.router as SwitchRouter);\n  } else {\n    // Otherwise, let's create some new ones\n    exits = [\n      {\n        uuid: createUUID(),\n        destination_uuid: null\n      },\n      {\n        uuid: createUUID(),\n        destination_uuid: null\n      }\n    ];\n\n    categories = [\n      {\n        uuid: createUUID(),\n        name: StartFlowExitNames.Complete,\n        exit_uuid: exits[0].uuid\n      },\n      {\n        uuid: createUUID(),\n        name: StartFlowExitNames.Expired,\n        exit_uuid: exits[1].uuid\n      }\n    ];\n\n    cases = [\n      {\n        uuid: createUUID(),\n        type: Operators.has_only_text,\n        arguments: ['completed'],\n        category_uuid: categories[0].uuid\n      },\n      {\n        uuid: createUUID(),\n        arguments: ['expired'],\n        type: Operators.has_only_text,\n        category_uuid: categories[1].uuid\n      }\n    ];\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    operand: SUBFLOW_OPERAND,\n    cases,\n    categories,\n    default_category_uuid: categories[categories.length - 1].uuid\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.split_by_subflow,\n    [newAction]\n  );\n\n  return newRenderNode;\n};\n\nconst flowToAsset = (field: Flow = { uuid: '', name: '' }): Asset => ({\n  id: field.uuid,\n  name: field.name,\n  type: AssetType.Flow\n});\n\nconst assetToFlow = (asset: Asset): Flow => ({\n  uuid: asset.id,\n  name: asset.name\n});\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { RouterFormProps } from 'components/flow/props';\nimport { nodeToState, stateToNode } from 'components/flow/routers/subflow/helpers';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { AssetEntry, FormState, mergeForm } from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\nimport i18n from 'config/i18n';\n\n// TODO: Remove use of Function\nexport interface SubflowRouterFormState extends FormState {\n  flow: AssetEntry;\n}\n\nexport default class SubflowRouterForm extends React.PureComponent<\n  RouterFormProps,\n  SubflowRouterFormState\n> {\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleFlowChanged(flows: Asset[], submitting = false): boolean {\n    const updates: Partial<SubflowRouterFormState> = {\n      flow: validate('Flow', flows[0], [shouldRequireIf(submitting)])\n    };\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    // validate our flow in case they haven't interacted\n    this.handleFlowChanged([this.state.flow.value], true);\n\n    if (this.state.valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private handleFilter(asset: Asset): boolean {\n    // only show flows that match our flow type\n    return asset.content.type === this.context.config.flowType;\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <AssetSelector\n          name=\"Flow\"\n          placeholder=\"Select the flow to start\"\n          assets={this.props.assetStore.flows}\n          entry={this.state.flow}\n          searchable={true}\n          onFilter={this.handleFilter}\n          onChange={this.handleFlowChanged}\n        />\n      </Dialog>\n    );\n  }\n}\n","import { createRenderNode, resolveRoutes } from 'components/flow/routers/helpers';\nimport { WaitRouterFormState } from 'components/flow/routers/wait/WaitRouterForm';\nimport { DEFAULT_OPERAND, MEDIA_OPERAND } from 'components/nodeeditor/constants';\nimport { Type, Types } from 'config/interfaces';\nimport { HintTypes, Router, RouterTypes, SwitchRouter, Wait, WaitTypes } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nexport const nodeToState = (settings: NodeEditorSettings): WaitRouterFormState => {\n  let resultName: StringEntry = { value: 'Result' };\n\n  // look at the actual ui type instead of the hint here, we want results for any kind of wait\n  if (settings.originalNode && settings.originalNode.ui.type === Types.wait_for_response) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n    if (router) {\n      resultName = { value: router.result_name || '' };\n    }\n  }\n\n  return {\n    resultName,\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: WaitRouterFormState,\n  typeConfig: Type\n): RenderNode => {\n  const { exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\n    [],\n    false,\n    settings.originalNode.node\n  );\n\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  let operand = DEFAULT_OPERAND;\n  const wait = { type: WaitTypes.msg } as Wait;\n  switch (typeConfig.type) {\n    case Types.wait_for_audio:\n      wait.hint = { type: HintTypes.audio };\n      operand = MEDIA_OPERAND;\n      break;\n    case Types.wait_for_image:\n      wait.hint = { type: HintTypes.image };\n      operand = MEDIA_OPERAND;\n      break;\n    case Types.wait_for_location:\n      wait.hint = { type: HintTypes.location };\n      operand = MEDIA_OPERAND;\n      break;\n    case Types.wait_for_video:\n      wait.hint = { type: HintTypes.video };\n      operand = MEDIA_OPERAND;\n      break;\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    default_category_uuid: defaultExit,\n    cases: [],\n    categories,\n    wait,\n    operand,\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.wait_for_response,\n    [],\n    { cases: caseConfig }\n  );\n\n  return newRenderNode;\n};\n","import { createWebhookBasedNode } from 'components/flow/routers/helpers';\nimport { WebhookRouterFormState } from 'components/flow/routers/webhook/WebhookRouterForm';\nimport { DEFAULT_BODY } from 'components/nodeeditor/constants';\nimport { Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { CallWebhook } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\n\nexport enum Methods {\n  GET = 'GET',\n  POST = 'POST',\n  PUT = 'PUT'\n}\n\nexport interface MethodOption {\n  value: string;\n  label: string;\n}\n\ninterface HeaderMap {\n  [name: string]: string;\n}\n\nexport const GET_METHOD: MethodOption = {\n  value: Methods.GET,\n  label: Methods.GET\n};\n\nexport const METHOD_OPTIONS: MethodOption[] = [\n  GET_METHOD,\n  { value: Methods.POST, label: Methods.POST },\n  { value: Methods.PUT, label: Methods.PUT }\n];\n\nexport const getOriginalAction = (settings: NodeEditorSettings): CallWebhook => {\n  const action =\n    settings.originalAction ||\n    (settings.originalNode.node.actions.length > 0 && settings.originalNode.node.actions[0]);\n\n  if (action.type === Types.call_webhook) {\n    return action as CallWebhook;\n  }\n};\n\nexport const nodeToState = (settings: NodeEditorSettings): WebhookRouterFormState => {\n  // TODO: work out an incremental result name\n  const resultName: StringEntry = { value: 'Result' };\n\n  const state: WebhookRouterFormState = {\n    headers: [],\n    resultName,\n    method: { value: GET_METHOD },\n    url: { value: '' },\n    postBody: { value: DEFAULT_BODY },\n    valid: false\n  };\n\n  if (getType(settings.originalNode) === Types.split_by_webhook) {\n    const action = getOriginalAction(settings) as CallWebhook;\n\n    // add in our headers\n    for (const name of Object.keys(action.headers || []).sort()) {\n      state.headers.push({\n        value: {\n          uuid: createUUID(),\n          value: action.headers[name],\n          name\n        }\n      });\n    }\n\n    state.resultName = { value: action.result_name };\n    state.url = { value: action.url };\n    state.method = { value: { label: action.method, value: action.method } };\n    state.postBody = { value: action.body };\n    state.valid = true;\n  } else {\n    state.headers.push({\n      value: {\n        uuid: createUUID(),\n        name: 'Content-Type',\n        value: 'application/json'\n      }\n    });\n  }\n\n  // one empty header\n  state.headers.push({\n    value: {\n      uuid: createUUID(),\n      name: '',\n      value: ''\n    }\n  });\n\n  return state;\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: WebhookRouterFormState\n): RenderNode => {\n  const headers: HeaderMap = {};\n\n  for (const entry of state.headers) {\n    if (entry.value.name.trim().length !== 0) {\n      headers[entry.value.name] = entry.value.value;\n    }\n  }\n\n  let uuid = createUUID();\n\n  const originalAction = getOriginalAction(settings);\n  if (originalAction) {\n    uuid = originalAction.uuid;\n  }\n\n  const newAction: CallWebhook = {\n    uuid,\n    headers,\n    type: Types.call_webhook,\n    url: state.url.value,\n    method: state.method.value.value as Methods,\n    result_name: state.resultName.value\n  };\n\n  // include the body if we aren't a get\n  if (newAction.method !== Methods.GET) {\n    newAction.body = state.postBody.value;\n  }\n\n  return createWebhookBasedNode(newAction, settings.originalNode, false);\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\n\nimport { nodeToState, stateToNode } from './helpers';\nimport styles from './WaitRouterForm.module.scss';\nimport i18n from 'config/i18n';\n\nexport interface WaitRouterFormState extends FormState {\n  resultName: StringEntry;\n}\n\nexport default class WaitRouterForm extends React.Component<RouterFormProps, WaitRouterFormState> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate('Result Name', value, [Alphanumeric, StartIsNonNumeric]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleSave(): void {\n    if (this.state.valid) {\n      this.props.updateRouter(\n        stateToNode(this.props.nodeSettings, this.state, this.props.typeConfig)\n      );\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div className={styles.result_name}>\n          {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        </div>\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport { getAllErrors } from 'components/flow/actions/helpers';\nimport { HeaderEntry } from 'components/flow/routers/webhook/WebhookRouterForm';\nimport styles from 'components/flow/routers/webhook/WebhookRouterForm.module.scss';\nimport FormElement from 'components/form/FormElement';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport * as React from 'react';\nimport { StringEntry, ValidationFailure } from 'store/nodeEditor';\nimport { HeaderName, validate } from 'store/validators';\nimport i18n from 'config/i18n';\n\n// TODO: move this into webhook router component\nexport interface Header {\n  uuid: string;\n  name: string;\n  value: string;\n}\n\nexport interface HeaderElementProps {\n  entry: HeaderEntry;\n  index: number;\n  onRemove: (header: Header) => void;\n  onChange: (header: Header, validationFailures: ValidationFailure[]) => void;\n  empty?: boolean;\n}\n\ninterface HeaderElementState {\n  name: StringEntry;\n  value: StringEntry;\n}\n\nexport const headerContainerSpecId = 'header-container';\nexport const nameContainerSpecId = 'name-container';\nexport const valueConatainerSpecId = 'value-container';\nexport const removeIcoSpecId = 'remove-icon';\n\nexport const HEADER_NAME_ERROR = i18n.t(\n  'errors.http_header_missing_name',\n  'HTTP headers must have a name'\n);\nexport const NAME_PLACEHOLDER = i18n.t('forms.call_webhook.header_name', 'Header Name');\nexport const VALUE_PLACEHOLDER = i18n.t('forms.call_webhook.header_value', 'Value');\n\nexport default class HeaderElement extends React.Component<HeaderElementProps, HeaderElementState> {\n  constructor(props: HeaderElementProps) {\n    super(props);\n\n    const header = this.props.entry.value;\n    const name = header.name || '';\n    const value = header.value || '';\n\n    this.state = {\n      name: { value: name },\n      value: { value }\n    };\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private getHeader(): Header {\n    return {\n      name: this.state.name.value,\n      value: this.state.value.value,\n      uuid: this.props.entry.value.uuid\n    };\n  }\n\n  private handleChangeName(value: string): void {\n    const name = validate('Header name', value, [HeaderName]);\n    this.setState({ name: { value: name.value } }, () =>\n      this.props.onChange(\n        this.getHeader(),\n        getAllErrors(this.state.value).concat(getAllErrors(name))\n      )\n    );\n  }\n\n  private handleChangeValue(value: string): void {\n    this.setState({ value: { value } }, () => {\n      const name = validate('Header name', this.state.name.value, [HeaderName]);\n      this.props.onChange(\n        this.getHeader(),\n        getAllErrors(this.state.value).concat(getAllErrors(name))\n      );\n    });\n  }\n\n  private handleRemove(): void {\n    this.props.onRemove(this.getHeader());\n  }\n\n  private getRemoveIco(): JSX.Element {\n    return (\n      <div className={styles.remove_ico} onClick={this.handleRemove} data-spec={removeIcoSpecId}>\n        <span className=\"fe-x\" />\n      </div>\n    );\n  }\n\n  public render(): JSX.Element {\n    const removeIco: JSX.Element = this.getRemoveIco();\n    return (\n      <FormElement name={i18n.t('forms.call_webhook.header', 'Header')} entry={this.props.entry}>\n        <div className={styles.header} data-spec={headerContainerSpecId}>\n          <div className={styles.header_name} data-spec={nameContainerSpecId}>\n            <TextInputElement\n              placeholder={NAME_PLACEHOLDER}\n              name={NAME_PLACEHOLDER}\n              onChange={this.handleChangeName}\n              entry={this.state.name}\n            />\n          </div>\n          <div className={styles.header_value} data-spec={valueConatainerSpecId}>\n            <TextInputElement\n              placeholder={VALUE_PLACEHOLDER}\n              name={VALUE_PLACEHOLDER}\n              onChange={this.handleChangeValue}\n              entry={this.state.value}\n              onFieldFailures={(validationFailures: ValidationFailure[]) => {\n                const name = validate(NAME_PLACEHOLDER, this.state.name.value, [HeaderName]);\n                this.props.onChange(\n                  this.getHeader(),\n                  validationFailures.concat(getAllErrors(name))\n                );\n              }}\n              autocomplete={true}\n            />\n          </div>\n          {removeIco}\n        </div>\n      </FormElement>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport HeaderElement, { Header } from 'components/flow/routers/webhook/header/HeaderElement';\nimport {\n  GET_METHOD,\n  METHOD_OPTIONS,\n  MethodOption,\n  Methods,\n  nodeToState,\n  stateToNode\n} from 'components/flow/routers/webhook/helpers';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport SelectElement from 'components/form/select/SelectElement';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport { DEFAULT_BODY } from 'components/nodeeditor/constants';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { FormEntry, FormState, mergeForm, StringEntry, ValidationFailure } from 'store/nodeEditor';\nimport {\n  Alphanumeric,\n  Required,\n  shouldRequireIf,\n  StartIsNonNumeric,\n  validate,\n  ValidURL\n} from 'store/validators';\nimport { createUUID } from 'utils';\n\nimport styles from './WebhookRouterForm.module.scss';\nimport { large } from 'utils/reactselect';\nimport { Trans } from 'react-i18next';\nimport i18n from 'config/i18n';\n\nexport interface HeaderEntry extends FormEntry {\n  value: Header;\n}\n\nexport interface MethodEntry extends FormEntry {\n  value: MethodOption;\n}\n\nexport interface WebhookRouterFormState extends FormState {\n  headers: HeaderEntry[];\n  method: MethodEntry;\n  url: StringEntry;\n  postBody: StringEntry;\n  resultName: StringEntry;\n}\n\nexport default class WebhookRouterForm extends React.Component<\n  RouterFormProps,\n  WebhookRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n    this.state = nodeToState(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleUpdate(\n    keys: {\n      method?: MethodOption;\n      url?: string;\n      postBody?: string;\n      header?: Header;\n      removeHeader?: Header;\n      validationFailures?: ValidationFailure[];\n      resultName?: string;\n    },\n    submitting = false\n  ): boolean {\n    const updates: Partial<WebhookRouterFormState> = {};\n\n    let ensureEmptyHeader = false;\n\n    if (keys.hasOwnProperty('method')) {\n      updates.method = { value: keys.method };\n\n      if (keys.method.value !== GET_METHOD.value) {\n        if (!this.state.postBody.value) {\n          updates.postBody = { value: DEFAULT_BODY };\n        }\n      } else {\n        updates.postBody = { value: null };\n      }\n    }\n\n    if (keys.hasOwnProperty('url')) {\n      updates.url = validate('URL', keys.url, [shouldRequireIf(submitting), ValidURL]);\n    }\n\n    if (keys.hasOwnProperty('resultName')) {\n      updates.resultName = validate('Result Name', keys.resultName, [shouldRequireIf(submitting)]);\n    }\n\n    if (keys.hasOwnProperty('postBody')) {\n      updates.postBody = { value: keys.postBody };\n    }\n\n    if (keys.hasOwnProperty('header')) {\n      updates.headers = [{ value: keys.header, validationFailures: keys.validationFailures }];\n      ensureEmptyHeader = true;\n    }\n\n    let toRemove: any[] = [];\n    if (keys.hasOwnProperty('removeHeader')) {\n      toRemove = [{ headers: [{ value: keys.removeHeader }] }];\n      ensureEmptyHeader = true;\n    }\n\n    const updated = mergeForm(this.state, updates, toRemove);\n\n    // update our form\n    this.setState(updated, () => {\n      // if we updated headers, check if we need a new one\n      if (ensureEmptyHeader) {\n        let needsHeader = true;\n        for (const header of this.state.headers) {\n          if (header.value.name.trim() === '') {\n            needsHeader = false;\n            break;\n          }\n        }\n\n        if (needsHeader) {\n          this.handleCreateHeader();\n        }\n      }\n    });\n    return updated.valid;\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate('Result Name', value, [Required, Alphanumeric, StartIsNonNumeric]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleMethodUpdate(method: MethodOption): boolean {\n    return this.handleUpdate({ method });\n  }\n\n  private handleUrlUpdate(url: string, name: string, submitting = false): boolean {\n    return this.handleUpdate({ url }, submitting);\n  }\n\n  private handleHeaderRemoved(removeHeader: Header): boolean {\n    return this.handleUpdate({ removeHeader });\n  }\n\n  private handleHeaderUpdated(header: Header, validationFailures: ValidationFailure[]): boolean {\n    return this.handleUpdate({ header, validationFailures });\n  }\n\n  private handleCreateHeader(): boolean {\n    return this.handleUpdate({\n      header: {\n        uuid: createUUID(),\n        name: '',\n        value: ''\n      }\n    });\n  }\n\n  private handlePostBodyUpdate(postBody: string): boolean {\n    return this.handleUpdate({ postBody });\n  }\n\n  private handleSave(): void {\n    // validate our url in case they haven't interacted\n    const valid = this.handleUpdate(\n      { url: this.state.url.value, resultName: this.state.resultName.value },\n      true\n    );\n\n    if (valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    const headerElements: JSX.Element[] = this.state.headers.map(\n      (header: HeaderEntry, index: number, arr: HeaderEntry[]) => {\n        return (\n          <div key={`header_${header.value.uuid}`}>\n            <HeaderElement\n              entry={header}\n              onRemove={this.handleHeaderRemoved}\n              onChange={this.handleHeaderUpdated}\n              index={index}\n            />\n          </div>\n        );\n      }\n    );\n\n    const tabs: Tab[] = [];\n    tabs.push({\n      name: 'HTTP Headers',\n      hasErrors: !!this.state.headers.find((header: HeaderEntry) => hasErrors(header)),\n      body: (\n        <>\n          <p className={styles.info}>\n            <Trans i18nKey=\"forms.call_webhook.header_summary\">\n              Add any additional headers below that you would like to send along with your request.\n            </Trans>\n          </p>\n          {headerElements}\n        </>\n      ),\n      checked: this.state.headers.length > 1\n    });\n\n    const method = this.state.method.value.value;\n    const name = this.state.method.value.label + ' ' + i18n.t('body', 'Body');\n    if (method === Methods.POST || method === Methods.PUT) {\n      tabs.push({\n        name,\n        body: (\n          <div key=\"post_body\" className={styles.body_form}>\n            <h4>{name}</h4>\n            <p>\n              <Trans\n                i18nKey=\"forms.call_webhook.body_summary\"\n                values={{ method: this.state.method.value.label }}\n              >\n                Modify the body of the [[method]] request that will be sent to your webhook.\n              </Trans>\n            </p>\n            <TextInputElement\n              __className={styles.req_body}\n              name={name}\n              showLabel={false}\n              entry={this.state.postBody}\n              onChange={this.handlePostBodyUpdate}\n              helpText={\n                <Trans\n                  i18nKey=\"forms.call_webhook.body_summary\"\n                  values={{ method: this.state.method.value.label }}\n                >\n                  Modify the body of the [[method]] request that will be sent to your webhook.\n                </Trans>\n              }\n              onFieldFailures={(persistantFailures: ValidationFailure[]) => {\n                const postBody = { ...this.state.postBody, persistantFailures };\n                this.setState({\n                  postBody,\n                  valid: this.state.valid && !hasErrors(postBody)\n                });\n              }}\n              autocomplete={true}\n              textarea={true}\n            />\n          </div>\n        ),\n        checked: this.state.postBody.value !== DEFAULT_BODY\n      });\n    }\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={tabs}\n      >\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div className={styles.method}>\n          <SelectElement\n            styles={large as any}\n            name=\"MethodMap\"\n            entry={this.state.method}\n            onChange={this.handleMethodUpdate}\n            options={METHOD_OPTIONS}\n          />\n        </div>\n        <div className={styles.url}>\n          <TextInputElement\n            name=\"URL\"\n            placeholder={i18n.t('forms.call_webhook.url_placeholder', 'Enter a URL')}\n            entry={this.state.url}\n            onChange={this.handleUrlUpdate}\n            onFieldFailures={(persistantFailures: ValidationFailure[]) => {\n              const url = { ...this.state.url, persistantFailures };\n              this.setState({\n                url,\n                valid: this.state.valid && !hasErrors(url)\n              });\n            }}\n            autocomplete={true}\n          />\n        </div>\n        <div className={styles.instructions}>\n          <p>\n            <Trans i18nKey=\"forms.call_webhook.help\">\n              If your server responds with JSON, each property will be added to the Flow.\n            </Trans>\n          </p>\n          <pre className={styles.code}>\n            {'{ \"product\": \"Solar Charging Kit\", \"stock level\": 32 }'}\n          </pre>\n          <p>\n            <Trans i18nKey=\"forms.call_webhook.example\">\n              This response would add <span className={styles.example}>@webhook.product</span> and{' '}\n              <span className={styles.example}>@webhook[\"stock level\"]</span> for use in the flow.\n            </Trans>\n          </p>\n        </div>\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import * as React from 'react';\nimport { CallClassifier } from 'flowTypes';\n\nconst CallClassifierComp: React.SFC<CallClassifier> = ({\n  result_name,\n  classifier\n}): JSX.Element => <div>Call {classifier.name} classifier</div>;\n\nexport default CallClassifierComp;\n","import ConfigProvider from 'config/ConfigProvider';\nimport { getOperatorConfig, operatorConfigList } from 'config/operatorConfigs';\nimport { getTypeConfig, typeConfigList } from 'config/typeConfigs';\n\nexport { typeConfigList, getTypeConfig, operatorConfigList, getOperatorConfig };\n\nexport default ConfigProvider;\n","import {\n  hasCases,\n  createCaseProps,\n  resolveRoutes,\n  ResolvedRoutes,\n  createRenderNode\n} from 'components/flow/routers/helpers';\nimport { DEFAULT_OPERAND } from 'components/nodeeditor/constants';\nimport { Types, Operators, HIDDEN } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { CallClassifier, SwitchRouter, Case, Exit, Category, RouterTypes } from 'flowTypes';\nimport { RenderNode, AssetType } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry, AssetEntry } from 'store/nodeEditor';\nimport { createUUID, scalarArrayEquals, snakify } from 'utils';\nimport { ClassifyRouterFormState } from 'components/flow/routers/classify/ClassifyRouterForm';\nimport { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { getOperatorConfig } from 'config';\n\nexport const getOriginalAction = (settings: NodeEditorSettings): CallClassifier => {\n  const action =\n    settings.originalAction ||\n    (settings.originalNode.node.actions.length > 0 && settings.originalNode.node.actions[0]);\n\n  if (action.type === Types.call_classifier) {\n    return action as CallClassifier;\n  }\n};\n\nexport const nodeToState = (settings: NodeEditorSettings): ClassifyRouterFormState => {\n  // TODO: work out an incremental result name\n  const resultName: StringEntry = { value: 'Result' };\n  let initialCases: CaseProps[] = [];\n\n  let operand = DEFAULT_OPERAND;\n  let classifier: AssetEntry = { value: null };\n\n  let hiddenCases: CaseProps[] = [];\n\n  if (getType(settings.originalNode) === Types.split_by_intent) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n\n    if (hasCases(settings.originalNode.node)) {\n      initialCases = createCaseProps(router.cases, settings.originalNode);\n\n      hiddenCases = initialCases.filter(\n        (kase: CaseProps) => getOperatorConfig(kase.kase.type).visibility === HIDDEN\n      );\n\n      initialCases = initialCases.filter(\n        (kase: CaseProps) => getOperatorConfig(kase.kase.type).visibility !== HIDDEN\n      );\n    }\n\n    const action = getOriginalAction(settings) as CallClassifier;\n    const { uuid: id, name } = action.classifier;\n    classifier = { value: { id, name, type: AssetType.Classifier } };\n    operand = action.input;\n  }\n\n  const state: ClassifyRouterFormState = {\n    hiddenCases,\n    resultName,\n    classifier,\n    operand: { value: operand },\n    cases: initialCases,\n    valid: true\n  };\n\n  return state;\n};\n\nexport interface Route {\n  type: Operators;\n  arguments: string[];\n  name: 'Other';\n}\n\nexport const ensureRoute = (routes: ResolvedRoutes, route: Route) => {\n  const existingCasePosition = routes.cases.findIndex(\n    kase => kase.type === route.type && scalarArrayEquals(kase.arguments, route.arguments)\n  );\n\n  // if it already exists, make sure it's at the end\n  if (existingCasePosition >= 0) {\n    // already in the right place we are done\n    if (existingCasePosition === routes.cases.length - 1) {\n      return;\n    }\n\n    const [existingCase] = routes.cases.splice(existingCasePosition, 1);\n    routes.cases.push(existingCase);\n\n    return;\n  }\n\n  const exit: Exit = {\n    uuid: createUUID()\n  };\n\n  const category: Category = {\n    uuid: createUUID(),\n    name: route.name,\n    exit_uuid: exit.uuid\n  };\n\n  // otherwise let's add it\n  const kase: Case = {\n    uuid: createUUID(),\n    type: route.type,\n    arguments: route.arguments,\n    category_uuid: category.uuid\n  };\n\n  routes.categories.push(category);\n  routes.cases.push(kase);\n\n  // our new exit should go right in front of the default exit\n  routes.exits.splice(routes.exits.length - 1, 0, exit);\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: ClassifyRouterFormState\n): RenderNode => {\n  let uuid = createUUID();\n\n  const routes = resolveRoutes(\n    [...state.cases, ...state.hiddenCases],\n    false,\n    settings.originalNode.node,\n    'Failure'\n  );\n\n  // make sure we have an other route since failure is our default\n  ensureRoute(routes, {\n    type: Operators.has_category,\n    arguments: ['Success', 'Skipped'],\n    name: 'Other'\n  });\n\n  const originalAction = getOriginalAction(settings);\n  if (originalAction) {\n    uuid = originalAction.uuid;\n  }\n\n  const routerResultName = state.resultName.value;\n  const actionResultName = '_' + routerResultName + ' Classification';\n\n  const newAction: CallClassifier = {\n    uuid,\n    type: Types.call_classifier,\n    result_name: actionResultName,\n    input: state.operand.value,\n    classifier: {\n      uuid: state.classifier.value.id,\n      name: state.classifier.value.name\n    }\n  };\n\n  const router: SwitchRouter = {\n    cases: routes.cases,\n    operand: `@results.${snakify(actionResultName)}`,\n    categories: routes.categories,\n    type: RouterTypes.switch,\n    default_category_uuid: routes.defaultCategory,\n    result_name: routerResultName\n  };\n\n  return createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    routes.exits,\n    Types.split_by_intent,\n    [newAction]\n  );\n};\n\nexport const createEmptyCase = (): CaseProps => {\n  const uuid = createUUID();\n  return {\n    uuid,\n    kase: {\n      uuid,\n      type: Operators.has_top_intent,\n      arguments: ['', ''],\n      category_uuid: null\n    },\n    categoryName: '',\n    valid: true\n  };\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport { nodeToState, stateToNode, createEmptyCase } from './helpers';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { FormState, mergeForm, StringEntry, AssetEntry } from 'store/nodeEditor';\nimport {\n  Alphanumeric,\n  Required,\n  shouldRequireIf,\n  StartIsNonNumeric,\n  validate\n} from 'store/validators';\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport { Asset } from 'store/flowContext';\nimport { renderIf } from 'utils';\nimport { intentOperatorList } from 'config/operatorConfigs';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport { DEFAULT_OPERAND } from 'components/nodeeditor/constants';\nimport { fetchAsset } from 'external';\nimport styles from './ClassifyRouterForm.module.scss';\nimport i18n from 'config/i18n';\n\nexport interface ClassifyRouterFormState extends FormState {\n  hiddenCases: CaseProps[];\n  resultName: StringEntry;\n  classifier: AssetEntry;\n  cases: CaseProps[];\n  operand: StringEntry;\n}\n\nexport default class ClassifyRouterForm extends React.Component<\n  RouterFormProps,\n  ClassifyRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n\n    // we need to resolve our classifier for intent selection\n    if (this.state.classifier.value) {\n      fetchAsset(this.props.assetStore.classifiers, this.state.classifier.value.id).then(\n        (classifier: Asset) => {\n          this.handleUpdate({ classifier });\n        }\n      );\n    }\n  }\n\n  private handleUpdate(\n    keys: {\n      resultName?: string;\n      classifier?: Asset;\n    },\n    submitting = false\n  ): boolean {\n    const updates: Partial<ClassifyRouterFormState> = {};\n\n    if (keys.hasOwnProperty('resultName')) {\n      updates.resultName = validate('Result Name', keys.resultName, [shouldRequireIf(submitting)]);\n    }\n\n    if (keys.hasOwnProperty('classifier')) {\n      updates.classifier = validate('Classifier', keys.classifier, [shouldRequireIf(submitting)]);\n    }\n\n    const updated = mergeForm(this.state, updates);\n\n    // update our form\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleCasesUpdated(cases: CaseProps[]): void {\n    const invalidCase = cases.find((caseProps: CaseProps) => !caseProps.valid);\n    this.setState({ cases, valid: !invalidCase });\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate('Result Name', value, [Required, Alphanumeric, StartIsNonNumeric]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleSave(): void {\n    // if we still have invalid cases, don't move forward\n    const invalidCase = this.state.cases.find((caseProps: CaseProps) => !caseProps.valid);\n    if (invalidCase) {\n      return;\n    }\n\n    // validate our result name in case they haven't interacted\n    const valid = this.handleUpdate(\n      {\n        resultName: this.state.resultName.value,\n        classifier: this.state.classifier.value\n      },\n      true\n    );\n\n    if (valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private handleClassifierUpdated(selected: Asset[]): void {\n    this.handleUpdate({ classifier: selected[0] });\n  }\n\n  private handleOperandUpdated(value: string): void {\n    this.setState({ operand: validate('Operand', value, [Required]) });\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private dialog: Dialog;\n\n  private renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    const tabs: Tab[] = [\n      {\n        name: 'Classifier Input',\n        checked: this.state.operand.value !== DEFAULT_OPERAND,\n        body: (\n          <>\n            <p>\n              Enter an expression to use as the input to your classifier. To classify the last\n              response from the contact use <code>{DEFAULT_OPERAND}</code>.\n            </p>\n            <TextInputElement\n              name=\"Operand\"\n              showLabel={false}\n              autocomplete={true}\n              onChange={this.handleOperandUpdated}\n              entry={this.state.operand}\n            />\n          </>\n        )\n      }\n    ];\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={tabs}\n        ref={ele => {\n          this.dialog = ele;\n        }}\n      >\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p>\n          <span>Run </span>\n          <span\n            className={styles.link}\n            onClick={() => {\n              this.dialog.showTab(0);\n            }}\n          >\n            {this.state.operand.value === DEFAULT_OPERAND\n              ? 'the last response'\n              : this.state.operand.value}\n          </span>\n          <span> through the classifier...</span>\n        </p>\n        <AssetSelector\n          key=\"select_classifier\"\n          name=\"Classifier\"\n          placeholder=\"Select the classifier to use\"\n          assets={this.props.assetStore.classifiers}\n          onChange={this.handleClassifierUpdated}\n          entry={this.state.classifier}\n        />\n\n        {renderIf(!!this.state.classifier.value)(\n          <CaseList\n            data-spec=\"cases\"\n            cases={this.state.cases}\n            onCasesUpdated={this.handleCasesUpdated}\n            operators={intentOperatorList}\n            createEmptyCase={createEmptyCase}\n            classifier={this.state.classifier.value}\n          />\n        )}\n\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import AddLabelsComp from 'components/flow/actions/addlabels/AddLabels';\nimport AddLabelsForm from 'components/flow/actions/addlabels/AddLabelsForm';\nimport AddURNComp from 'components/flow/actions/addurn/AddURN';\nimport AddURNForm from 'components/flow/actions/addurn/AddURNForm';\nimport CallResthookComp from 'components/flow/actions/callresthook/CallResthook';\nimport CallWebhookComp from 'components/flow/actions/callwebhook/CallWebhook';\nimport AddGroupsForm from 'components/flow/actions/changegroups/addgroups/AddGroupsForm';\nimport ChangeGroupsComp from 'components/flow/actions/changegroups/ChangeGroups';\nimport RemoveGroupsForm from 'components/flow/actions/changegroups/removegroups/RemoveGroupsForm';\nimport KeyLocalizationForm from 'components/flow/actions/localization/KeyLocalizationForm';\nimport MsgLocalizationForm from 'components/flow/actions/localization/MsgLocalizationForm';\nimport MissingComp from 'components/flow/actions/missing/Missing';\nimport PlayAudioComp from 'components/flow/actions/playaudio/PlayAudio';\nimport PlayAudioForm from 'components/flow/actions/playaudio/PlayAudioForm';\nimport SayMsgComp from 'components/flow/actions/saymsg/SayMsg';\nimport SayMsgForm from 'components/flow/actions/saymsg/SayMsgForm';\nimport SendBroadcastComp from 'components/flow/actions/sendbroadcast/SendBroadcast';\nimport SendBroadcastForm from 'components/flow/actions/sendbroadcast/SendBroadcastForm';\nimport SendEmailComp from 'components/flow/actions/sendemail/SendEmail';\nimport SendEmailForm from 'components/flow/actions/sendemail/SendEmailForm';\nimport SendMsgComp from 'components/flow/actions/sendmsg/SendMsg';\nimport SendMsgForm from 'components/flow/actions/sendmsg/SendMsgForm';\nimport SetRunResultComp from 'components/flow/actions/setrunresult/SetRunResult';\nimport SetRunResultForm from 'components/flow/actions/setrunresult/SetRunResultForm';\nimport StartFlowComp from 'components/flow/actions/startflow/StartFlow';\nimport StartSessionComp from 'components/flow/actions/startsession/StartSession';\nimport StartSessionForm from 'components/flow/actions/startsession/StartSessionForm';\nimport TransferAirtimeComp from 'components/flow/actions/transferairtime/TransferAirtime';\nimport UpdateContactComp from 'components/flow/actions/updatecontact/UpdateContact';\nimport UpdateContactForm from 'components/flow/actions/updatecontact/UpdateContactForm';\nimport AirtimeRouterForm from 'components/flow/routers/airtime/AirtimeRouterForm';\nimport DigitsRouterForm from 'components/flow/routers/digits/DigitsRouterForm';\nimport ExpressionRouterForm from 'components/flow/routers/expression/ExpressionRouterForm';\nimport FieldRouterForm from 'components/flow/routers/field/FieldRouterForm';\nimport GroupsRouterForm from 'components/flow/routers/groups/GroupsRouterForm';\nimport RouterLocalizationForm from 'components/flow/routers/localization/RouterLocalizationForm';\nimport MenuRouterForm from 'components/flow/routers/menu/MenuRouterForm';\nimport RandomRouterForm from 'components/flow/routers/random/RandomRouterForm';\nimport ResponseRouterForm from 'components/flow/routers/response/ResponseRouterForm';\nimport ResthookRouterForm from 'components/flow/routers/resthook/ResthookRouterForm';\nimport ResultRouterForm from 'components/flow/routers/result/ResultRouterForm';\nimport SubflowRouterForm from 'components/flow/routers/subflow/SubflowRouterForm';\nimport WaitRouterForm from 'components/flow/routers/wait/WaitRouterForm';\nimport WebhookRouterForm from 'components/flow/routers/webhook/WebhookRouterForm';\nimport {\n  FlowTypes,\n  HIDDEN,\n  ONLINE,\n  SURVEY,\n  TEXT_TYPES,\n  Type,\n  Types,\n  VOICE,\n  FeatureFilter\n} from 'config/interfaces';\nimport { HintTypes, RouterTypes, FlowEditorConfig } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport CallClassifierComp from 'components/flow/actions/callclassifier/CallClassifier';\nimport ClassifyRouterForm from 'components/flow/routers/classify/ClassifyRouterForm';\nimport i18n from 'config/i18n';\n\nconst dedupeTypeConfigs = (typeConfigs: Type[]) => {\n  const map: any = {};\n  return typeConfigs.filter(config => {\n    if (config.type === 'missing') {\n      return false;\n    }\n    const { name: key } = config;\n    return map[key] ? false : (map[key] = true);\n  });\n};\n\nexport interface TypeMap {\n  [propName: string]: Type;\n}\n\nexport type GetTypeConfig = (type: string) => Type;\n\nexport interface Scheme {\n  scheme: string;\n  name: string;\n}\n\nexport const SCHEMES: Scheme[] = [\n  { scheme: 'ext', name: i18n.t('schemes.external', 'External ID') },\n  { scheme: 'facebook', name: i18n.t('schemes.facebook', 'Facebook ID') },\n  { scheme: 'fcm', name: i18n.t('schemes.firebase', 'Firebase ID') },\n  { scheme: 'jiochat', name: i18n.t('schemes.jiochat', 'Jiochat ID') },\n  { scheme: 'line', name: i18n.t('schemes.line', 'Line ID') },\n  { scheme: 'mailto', name: i18n.t('schemes.email', 'Email Address') },\n  { scheme: 'tel', name: i18n.t('schemes.phone', 'Phone Number') },\n  { scheme: 'telegram', name: i18n.t('schemes.telegram', 'Telegram ID') },\n  { scheme: 'twitterid', name: i18n.t('schemes.twitterid', 'Twitter ID') },\n  { scheme: 'twitter', name: i18n.t('schemes.twitter', 'Twitter Handle') },\n  { scheme: 'wechat', name: i18n.t('schemes.wechat', 'Wechat ID') },\n  { scheme: 'whatsapp', name: i18n.t('schemes.whatsapp', 'Whatsapp Number') },\n  { scheme: 'viber', name: i18n.t('schemes.viber', 'Viber ID') }\n];\n\nexport const typeConfigList: Type[] = [\n  {\n    type: Types.missing,\n    name: 'Missing',\n    description: ' ** Unsupported ** ',\n    component: MissingComp,\n    visibility: HIDDEN\n  },\n  {\n    type: Types.say_msg,\n    name: i18n.t('actions.play_message.name', 'Play Message'),\n    description: i18n.t('actions.play_message.description', 'Play a message'),\n    form: SayMsgForm,\n    localization: MsgLocalizationForm,\n    localizeableKeys: ['text', 'audio_url'],\n    component: SayMsgComp,\n    visibility: VOICE\n  },\n\n  {\n    type: Types.wait_for_menu,\n    name: i18n.t('actions.wait_for_menu.name', 'Wait for Menu Selection'),\n    description: i18n.t('actions.wait_for_menu.description', 'Wait for menu selection'),\n    form: MenuRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    visibility: VOICE\n  },\n  {\n    type: Types.wait_for_digits,\n    name: i18n.t('actions.wait_for_digits.name', 'Wait for Digits'),\n    description: i18n.t('actions.wait_for_digits.description', 'Wait for multiple digits'),\n    form: DigitsRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits', 'cases'],\n    visibility: VOICE\n  },\n\n  {\n    type: Types.wait_for_audio,\n    name: i18n.t('actions.wait_for_audio.name', 'Wait for Audio'),\n    description: i18n.t('actions.wait_for_audio.description', 'Wait for an audio recording'),\n    form: WaitRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    visibility: [FlowTypes.SURVEY, FlowTypes.VOICE]\n  },\n\n  {\n    type: Types.send_msg,\n    name: i18n.t('actions.send_msg.name', 'Send Message'),\n    description: i18n.t('actions.send_msg.description', 'Send the contact a message'),\n    form: SendMsgForm,\n    localization: MsgLocalizationForm,\n    localizeableKeys: ['text', 'quick_replies'],\n    component: SendMsgComp\n  },\n  {\n    type: Types.wait_for_response,\n    name: i18n.t('actions.wait_for_response.name', 'Wait for Response'),\n    description: i18n.t('actions.wait_for_response.description', 'Wait for the contact to respond'),\n    form: ResponseRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits', 'cases'],\n    aliases: [RouterTypes.switch],\n    visibility: TEXT_TYPES\n  },\n\n  {\n    type: Types.send_broadcast,\n    name: i18n.t('actions.send_broadcast.name', 'Send Broadcast'),\n    description: i18n.t('actions.send_broadcast.description', 'Send somebody else a message'),\n    form: SendBroadcastForm,\n    localization: KeyLocalizationForm,\n    localizeableKeys: ['text'],\n    component: SendBroadcastComp\n  },\n  {\n    type: Types.add_input_labels,\n    name: i18n.t('actions.add_input.name', 'Add Labels'),\n    description: i18n.t('actions.add_input.description', 'Label the incoming message'),\n    form: AddLabelsForm,\n    component: AddLabelsComp\n  },\n  {\n    type: Types.add_contact_urn,\n    name: i18n.t('actions.add_contact_urn.name', 'Add URN'),\n    description: i18n.t('actions.add_contact_urn.description', 'Add a URN for the contact'),\n    form: AddURNForm,\n    component: AddURNComp\n  },\n  {\n    type: Types.add_contact_groups,\n    name: i18n.t('actions.add_contact_groups.name', 'Add to Group'),\n    description: i18n.t('actions.add_contact_groups.description', 'Add the contact to a group'),\n    form: AddGroupsForm,\n    component: ChangeGroupsComp\n  },\n  {\n    type: Types.remove_contact_groups,\n    name: i18n.t('actions.remove_contact_groups.name', 'Remove from Group'),\n    description: i18n.t(\n      'actions.remove_contact_groups.description',\n      'Remove the contact from a group'\n    ),\n    form: RemoveGroupsForm,\n    component: ChangeGroupsComp\n  },\n  {\n    type: Types.set_contact_field,\n    aliases: [Types.set_contact_name, Types.set_contact_language, Types.set_contact_channel],\n    name: i18n.t('actions.set_contact_field.name', 'Update Contact'),\n    description: i18n.t('actions.set_contact_field.description', 'Update the contact'),\n    form: UpdateContactForm,\n    component: UpdateContactComp\n  },\n  {\n    type: Types.send_email,\n    name: i18n.t('actions.send_email.name', 'Send Email'),\n    description: i18n.t('actions.send_email.description', 'Send an email'),\n    form: SendEmailForm,\n    localization: KeyLocalizationForm,\n    localizeableKeys: ['subject', 'body'],\n    component: SendEmailComp,\n    visibility: ONLINE\n  },\n  {\n    type: Types.set_run_result,\n    name: i18n.t('actions.set_run_result.name', 'Save Flow Result'),\n    description: i18n.t('actions.set_run_result.description', 'Save a result for this flow'),\n    form: SetRunResultForm,\n    component: SetRunResultComp\n  },\n\n  {\n    type: Types.play_audio,\n    name: i18n.t('actions.play_audio.name', 'Play Recording'),\n    description: i18n.t('actions.play_audio.description', 'Play a contact recording'),\n    form: PlayAudioForm,\n    component: PlayAudioComp,\n    visibility: VOICE\n  },\n\n  {\n    type: Types.call_webhook,\n    name: i18n.t('actions.call_webhook.name', 'Call Webhook'),\n    description: i18n.t('actions.call_webhook.description', 'Call a webhook'),\n    form: WebhookRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    component: CallWebhookComp,\n    aliases: [Types.split_by_webhook],\n    visibility: ONLINE\n  },\n  {\n    type: Types.call_resthook,\n    name: i18n.t('actions.call_resthook.name', 'Call Zapier'),\n    description: i18n.t('actions.call_resthook.description', 'Call Zapier'),\n    form: ResthookRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    component: CallResthookComp,\n    aliases: [Types.split_by_resthook],\n    filter: FeatureFilter.HAS_RESTHOOK,\n    visibility: ONLINE\n  },\n  {\n    type: Types.enter_flow,\n    name: i18n.t('actions.enter_flow.name', 'Enter a Flow'),\n    description: i18n.t('actions.enter_flow.description', 'Enter another flow'),\n    form: SubflowRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    component: StartFlowComp,\n    aliases: [Types.split_by_subflow]\n  },\n  {\n    type: Types.start_session,\n    name: i18n.t('actions.start_session.name', 'Start Somebody Else'),\n    description: i18n.t('actions.start_session.description', 'Start somebody else in a flow'),\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    form: StartSessionForm,\n    component: StartSessionComp,\n    visibility: ONLINE\n  },\n  {\n    type: Types.transfer_airtime,\n    name: i18n.t('actions.transfer_airtime.name', 'Send Airtime'),\n    description: i18n.t('actions.transfer_airtime.description', 'Send the contact airtime'),\n    form: AirtimeRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    component: TransferAirtimeComp,\n    aliases: [Types.split_by_airtime],\n    visibility: ONLINE,\n    filter: FeatureFilter.HAS_AIRTIME\n  },\n\n  /** Routers */\n\n  {\n    type: Types.wait_for_image,\n    name: i18n.t('actions.wait_for_image.name', 'Wait for Image'),\n    description: i18n.t('actions.wait_for_image.description', 'Wait for an image'),\n    form: WaitRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    visibility: SURVEY\n  },\n  {\n    type: Types.wait_for_video,\n    name: i18n.t('actions.wait_for_video.name', 'Wait for Video'),\n    description: i18n.t('actions.wait_for_video.description', 'Wait for a video'),\n    form: WaitRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    visibility: SURVEY\n  },\n  {\n    type: Types.wait_for_location,\n    name: i18n.t('actions.wait_for_location.name', 'Wait for Location'),\n    description: i18n.t(\n      'actions.wait_for_location.description',\n      'Wait for location GPS coordinates'\n    ),\n    form: WaitRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    visibility: SURVEY\n  },\n  {\n    type: Types.split_by_intent,\n    name: i18n.t('actions.split_by_intent.name', 'Split by Intent'),\n    description: i18n.t('actions.split_by_intent.description', 'Split by intent'),\n    form: ClassifyRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    component: CallClassifierComp,\n    aliases: [Types.call_classifier],\n    visibility: ONLINE,\n    filter: FeatureFilter.HAS_CLASSIFIER\n  },\n  {\n    type: Types.split_by_expression,\n    name: i18n.t('actions.split_by_expression.name', 'Split by Expression'),\n    description: i18n.t('actions.split_by_expression.description', 'Split by a custom expression'),\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits', 'cases'],\n    form: ExpressionRouterForm\n  },\n  {\n    type: Types.split_by_contact_field,\n    name: i18n.t('actions.split_by_contact_field.name', 'Split by Contact Field'),\n    description: i18n.t('actions.split_by_contact_field.description', 'Split by a contact field'),\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits', 'cases'],\n    form: FieldRouterForm\n  },\n  {\n    type: Types.split_by_run_result,\n    aliases: [Types.split_by_run_result_delimited],\n    name: i18n.t('actions.split_by_run_result.name', 'Split by Flow Result'),\n    description: i18n.t('actions.split_by_run_result.description', 'Split by a result in the flow'),\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits', 'cases'],\n    form: ResultRouterForm\n  },\n  {\n    type: Types.split_by_random,\n    name: i18n.t('actions.split_by_random.name', 'Split Randomly'),\n    description: i18n.t('actions.split_by_random.description', 'Split by random chance'),\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    form: RandomRouterForm\n  },\n  {\n    type: Types.split_by_groups,\n    name: i18n.t('actions.split_by_groups.name', 'Split by Group Membership'),\n    description: i18n.t('actions.split_by_groups.description', 'Split by group membership'),\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    form: GroupsRouterForm\n  }\n\n  // {type: 'random', name: 'Random Split', description: 'Split them up randomly', form: RandomRouterForm}\n];\n\nexport const configsToDisplay = dedupeTypeConfigs(typeConfigList);\n\nexport const typeConfigMap: TypeMap = typeConfigList.reduce((map: TypeMap, typeConfig: Type) => {\n  map[typeConfig.type] = typeConfig;\n  if (typeConfig.aliases) {\n    typeConfig.aliases.forEach((alias: string) => (map[alias] = typeConfig));\n  }\n  return map;\n}, {});\n\n/**\n * Shortcut for constant lookup of type config in type configs map\n * @param {string} type - The type of the type config to return, e.g. 'send_msg'\n * @returns {Object} - The type config found at typeConfigs[type] or -1\n */\nexport const getTypeConfig = (type: Types | RouterTypes): Type => {\n  let config = typeConfigMap[type];\n\n  if (!config) {\n    config = typeConfigMap.missing;\n  }\n  return config;\n};\n\nexport const getType = (renderNode: RenderNode): any => {\n  const wait = renderNode.node.router && renderNode.node.router.wait;\n  if (wait && wait.hint) {\n    switch (wait.hint.type) {\n      case HintTypes.digits:\n        if (wait.hint.count === 1) {\n          return Types.wait_for_menu;\n        }\n        return Types.wait_for_digits;\n      case HintTypes.audio:\n        return Types.wait_for_audio;\n      case HintTypes.image:\n        return Types.wait_for_image;\n      case HintTypes.location:\n        return Types.wait_for_location;\n      case HintTypes.video:\n        return Types.wait_for_video;\n    }\n  }\n\n  // if we are splitting by field, but don't know the name, force it into split by expression\n  if (renderNode.ui.type === Types.split_by_contact_field && !renderNode.ui.config.operand.name) {\n    return Types.split_by_expression;\n  }\n\n  return renderNode.ui.type;\n};\n\nexport const hasFeature = (config: FlowEditorConfig, filter: FeatureFilter) => {\n  return !!(config.filters || []).find((name: string) => name === filter);\n};\n","import { getActionUUID } from 'components/flow/actions/helpers';\nimport { CHANNEL_PROPERTY, LANGUAGE_PROPERTY, NAME_PROPERTY } from 'components/flow/props';\nimport { Types } from 'config/interfaces';\nimport { getTypeConfig } from 'config/typeConfigs';\nimport {\n  Channel,\n  Field,\n  Language,\n  SetContactAttribute,\n  SetContactChannel,\n  SetContactField,\n  SetContactLanguage,\n  SetContactName\n} from 'flowTypes';\nimport { Asset, AssetMap, AssetStore, AssetType, REMOVE_VALUE_ASSET } from 'store/flowContext';\nimport { AssetEntry, FormState, NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nexport interface UpdateContactFormState extends FormState {\n  type: Types;\n  name: StringEntry;\n  channel: AssetEntry;\n  language: AssetEntry;\n  field: AssetEntry;\n  fieldValue: StringEntry;\n}\n\nexport const initializeForm = (\n  settings: NodeEditorSettings,\n  assetStore: AssetStore\n): UpdateContactFormState => {\n  const state: UpdateContactFormState = {\n    type: Types.set_contact_name,\n    valid: false,\n    name: { value: '' },\n    channel: { value: null },\n    language: { value: null },\n    field: { value: NAME_PROPERTY },\n    fieldValue: { value: '' }\n  };\n\n  if (settings.originalAction) {\n    const originalType = settings.originalAction.type;\n    // these have aliases, so compare the config we resolve to\n    if (getTypeConfig(originalType) === getTypeConfig(Types.set_contact_field)) {\n      state.type = originalType;\n\n      switch (originalType) {\n        case Types.set_contact_field:\n          const fieldAction = settings.originalAction as SetContactField;\n          state.field = { value: fieldToAsset(fieldAction.field) };\n          state.fieldValue = { value: fieldAction.value };\n          state.valid = true;\n          return state;\n        case Types.set_contact_channel:\n          const channelAction = settings.originalAction as SetContactChannel;\n          state.field = { value: CHANNEL_PROPERTY };\n          state.channel = { value: channelToAsset(channelAction.channel) };\n          state.valid = true;\n          return state;\n        case Types.set_contact_language:\n          const languageAction = settings.originalAction as SetContactLanguage;\n          state.field = { value: LANGUAGE_PROPERTY };\n          state.valid = true;\n          state.language = {\n            value: languageToAsset({\n              iso: languageAction.language,\n              name: getLanguageForCode(languageAction.language, assetStore.languages.items)\n            })\n          };\n          return state;\n        case Types.set_contact_name:\n          const nameAction = settings.originalAction as SetContactName;\n          state.valid = true;\n          state.name = {\n            value: nameAction.name\n          };\n          return state;\n      }\n    }\n  }\n\n  // default is updating name\n  return state;\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  state: UpdateContactFormState\n): SetContactAttribute => {\n  /* istanbul ignore else */\n  if (state.type === Types.set_contact_field) {\n    return {\n      uuid: getActionUUID(settings, Types.set_contact_field),\n      type: state.type,\n      field: assetToField(state.field.value),\n      value: state.fieldValue.value\n    };\n  } else if (state.type === Types.set_contact_channel) {\n    return {\n      uuid: getActionUUID(settings, Types.set_contact_channel),\n      type: state.type,\n      channel: assetToChannel(state.channel.value)\n    };\n  } else if (state.type === Types.set_contact_language) {\n    return {\n      uuid: getActionUUID(settings, Types.set_contact_language),\n      type: state.type,\n      language: assetToLanguage(state.language.value)\n    };\n  } else if (state.type === Types.set_contact_name) {\n    return {\n      uuid: getActionUUID(settings, Types.set_contact_name),\n      type: state.type,\n      name: state.name.value\n    };\n  }\n};\n\nexport const sortFieldsAndProperties = (a: Asset, b: Asset): number => {\n  // Name always goes first\n  /* istanbul ignore else */\n  if (a === NAME_PROPERTY && b !== NAME_PROPERTY) {\n    return -1;\n  } else if (b === NAME_PROPERTY && a !== NAME_PROPERTY) {\n    return 1;\n  }\n\n  if (a.type === b.type) {\n    return a.name.localeCompare(b.name);\n  }\n\n  if (a.type === AssetType.Scheme) {\n    return 1;\n  }\n\n  // go with alpha-sort for everthing else\n  else if (a.type !== b.type) {\n    if (a.type === AssetType.ContactProperty) {\n      return -1;\n    }\n\n    if (b.type === AssetType.ContactProperty) {\n      return 1;\n    }\n  }\n  // non-name non-fields go last\n  return a.name.localeCompare(b.name);\n};\n\nexport const fieldToAsset = (field: Field = { key: '', name: '' }): Asset => ({\n  id: field.key,\n  name: field.name,\n  type: AssetType.Field\n});\n\nexport const assetToField = (asset: Asset): Field => ({\n  key: asset.id,\n  name: asset.name\n});\n\nexport const assetToChannel = (asset: Asset): any => {\n  if (asset.id === REMOVE_VALUE_ASSET.id) {\n    return {};\n  }\n\n  return {\n    uuid: asset.id,\n    name: asset.name\n  };\n};\n\nexport const assetToLanguage = (asset: Asset): string => {\n  if (asset.id === REMOVE_VALUE_ASSET.id) {\n    return '';\n  }\n  return asset.id;\n};\n\nexport const languageToAsset = ({ iso, name }: Language) => {\n  if (!iso || iso.length === 0) {\n    return REMOVE_VALUE_ASSET;\n  }\n\n  return {\n    id: iso,\n    name,\n    type: AssetType.Language\n  };\n};\n\nexport const channelToAsset = ({ uuid, name }: Channel) => {\n  if (!uuid) {\n    return REMOVE_VALUE_ASSET;\n  }\n  return {\n    id: uuid,\n    name,\n    type: AssetType.Language\n  };\n};\n\nexport const getLanguageForCode = (code: string, languages: AssetMap) => {\n  let lang = code;\n  if (languages && lang in languages) {\n    lang = languages[lang].name;\n  }\n  return lang;\n};\n","import { FlowPosition } from 'flowTypes';\nimport ActionTypes, { UpdateEditorState } from 'store/actionTypes';\nimport Constants from 'store/constants';\nimport { Asset, RenderNode, CompletionOption } from 'store/flowContext';\nimport { CompletionSchema } from 'utils/completion';\n\n// tslint:disable:no-shadowed-variable\nexport interface DragSelection {\n  startX?: number;\n  startY?: number;\n  currentX?: number;\n  currentY?: number;\n}\n\nexport interface DebugState {\n  showUUIDs: boolean;\n}\n\nexport interface CanvasPositions {\n  [uuid: string]: FlowPosition;\n}\n\nexport interface Activity {\n  nodes: { [uuid: string]: number };\n  segments: { [exitToNodeKey: string]: number };\n  recentMessages?: { [key: string]: RecentMessage[] };\n  is_starting?: boolean;\n}\n\nexport interface RecentMessage {\n  sent: Date;\n  text: string;\n}\n\nexport interface EditorState {\n  currentRevision: number | null;\n  simulating: boolean;\n  language: Asset | null;\n  translating: boolean;\n  fetchingFlow: boolean;\n  ghostNode: RenderNode | null;\n  containerOffset: { left: number; top: number };\n  dragActive: boolean;\n  dragStartTime: number;\n  dragDownPosition: FlowPosition | null;\n  dragNodeUUID: string | null;\n  dragGroup: boolean;\n  dragSelection: DragSelection | null;\n  debug?: DebugState | null;\n\n  modalMessage?: ModalMessage;\n  saving?: boolean;\n\n  // our schema for peform dot completion\n  completionSchema: CompletionSchema;\n\n  // our function list for completion\n  functions: CompletionOption[];\n\n  // the currently shown activity, can be\n  // simulation or live\n  activity: Activity;\n\n  // the current live activity\n  liveActivity: Activity;\n\n  // interval in millis we should refresh activity\n  activityInterval: number;\n\n  // is our page visible or tabbed away\n  visible: boolean;\n}\n\nexport interface ModalMessage {\n  title: string;\n  body: string;\n}\n\nexport const EMPTY_DRAG_STATE: any = {\n  dragStartTime: 0,\n  dragDownPosition: null,\n  dragActive: false,\n  dragNodeUUID: null,\n  dragGroup: false,\n  dragSelection: null\n};\n\n// Initial state\nexport const initialState: EditorState = {\n  completionSchema: { types: [], root: [] },\n  functions: [],\n  containerOffset: { top: 0, left: 0 },\n  currentRevision: null,\n  simulating: false,\n  translating: false,\n  language: null,\n  fetchingFlow: false,\n  dragStartTime: 0,\n  dragDownPosition: null,\n  dragActive: false,\n  dragNodeUUID: null,\n  dragGroup: false,\n  dragSelection: null,\n  ghostNode: null,\n  debug: null,\n\n  activity: { segments: {}, nodes: {} },\n  liveActivity: { segments: {}, nodes: {} },\n  activityInterval: 5000,\n  visible: true\n};\n\n// Action Creator\nexport const updateEditorState = (editorState: EditorState): UpdateEditorState => ({\n  type: Constants.UPDATE_EDITOR_STATE,\n  payload: {\n    editorState\n  }\n});\n\n/* Reducer */\nexport const editorState = (editorState: EditorState = initialState, action: ActionTypes) => {\n  switch (action.type) {\n    case Constants.UPDATE_EDITOR_STATE:\n      return action.payload!.editorState;\n    default:\n      return editorState;\n  }\n};\n\n// export our reducer\nexport default editorState;\n","import { determineTypeConfig } from 'components/flow/helpers';\nimport { getResultName } from 'components/flow/node/helpers';\nimport { getSwitchRouter } from 'components/flow/routers/helpers';\nimport { Revision } from 'components/revisions/RevisionExplorer';\nimport { FlowTypes, Type, Types } from 'config/interfaces';\nimport { getTypeConfig } from 'config/typeConfigs';\nimport {\n  createAssetStore,\n  getCompletionSchema,\n  getFlowDefinition,\n  saveRevision,\n  getFunctions\n} from 'external';\nimport isEqual from 'fast-deep-equal';\nimport {\n  Action,\n  AnyAction,\n  Category,\n  Dimensions,\n  Endpoints,\n  Exit,\n  FlowDefinition,\n  FlowNode,\n  SendMsg,\n  SetContactField,\n  SetRunResult,\n  StickyNote\n} from 'flowTypes';\nimport mutate from 'immutability-helper';\nimport { Dispatch } from 'redux';\nimport { CanvasPositions, EditorState, EMPTY_DRAG_STATE, updateEditorState } from 'store/editor';\nimport {\n  Asset,\n  AssetStore,\n  DEFAULT_LANGUAGE,\n  RenderNode,\n  RenderNodeMap,\n  updateAssets,\n  updateBaseLanguage,\n  updateContactFields,\n  updateDefinition,\n  updateNodes\n} from 'store/flowContext';\nimport {\n  createEmptyNode,\n  fetchFlowActivity,\n  getActionIndex,\n  getCurrentDefinition,\n  getFlowComponents,\n  getLocalizations,\n  getNode,\n  guessNodeType,\n  mergeAssetMaps\n} from 'store/helpers';\nimport * as mutators from 'store/mutators';\nimport {\n  NodeEditorSettings,\n  updateNodeEditorSettings,\n  updateTypeConfig,\n  updateUserAddingAction\n} from 'store/nodeEditor';\nimport AppState from 'store/state';\nimport { createUUID, hasString, NODE_SPACING, timeEnd, timeStart } from 'utils';\nimport { AxiosError } from 'axios';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport type DispatchWithState = Dispatch<AppState>;\n\nexport type GetState = () => AppState;\n\nexport type Thunk<T> = (dispatch: Dispatch<AppState>, getState?: GetState) => T;\n\nexport type AsyncThunk = Thunk<Promise<void>>;\n\nexport type OnAddToNode = (node: FlowNode) => Thunk<void>;\n\nexport type HandleTypeConfigChange = (typeConfig: Type) => Thunk<void>;\n\nexport type OnOpenNodeEditor = (settings: NodeEditorSettings) => Thunk<void>;\n\nexport type OnUpdateCanvasPositions = (positions: CanvasPositions) => Thunk<RenderNodeMap>;\n\nexport type OnRemoveNodes = (nodeUUIDs: string[]) => Thunk<RenderNodeMap>;\n\nexport type AddAsset = (assetType: string, asset: Asset) => Thunk<void>;\n\nexport type RemoveNode = (nodeToRemove: FlowNode) => Thunk<RenderNodeMap>;\n\nexport type UpdateDimensions = (uuid: string, dimensions: Dimensions) => Thunk<void>;\n\nexport type FetchFlow = (\n  endpoints: Endpoints,\n  uuid: string,\n  onLoad: () => void,\n  forceSave: boolean\n) => Thunk<Promise<void>>;\n\nexport type LoadFlowDefinition = (\n  definition: FlowDefinition,\n  assetStore: AssetStore,\n  onLoad?: () => void\n) => Thunk<void>;\n\nexport type CreateNewRevision = () => Thunk<void>;\n\nexport type NoParamsAC = () => Thunk<void>;\n\nexport type UpdateConnection = (source: string, target: string) => Thunk<RenderNodeMap>;\n\nexport type OnConnectionDrag = (event: ConnectionEvent, flowType: FlowTypes) => Thunk<void>;\n\nexport type OnUpdateLocalizations = (\n  language: string,\n  changes: LocalizationUpdates\n) => Thunk<FlowDefinition>;\n\nexport type UpdateSticky = (stickyUUID: string, sticky: StickyNote) => Thunk<void>;\n\nexport type OnUpdateAction = (\n  action: AnyAction,\n  onUpdated?: (dispatch: DispatchWithState, getState: GetState) => void\n) => Thunk<RenderNodeMap>;\n\nexport type ActionAC = (nodeUUID: string, action: AnyAction) => Thunk<RenderNodeMap>;\n\nexport type DisconnectExit = (nodeUUID: string, exitUUID: string) => Thunk<RenderNodeMap>;\n\nexport type HandleLanguageChange = (language: Asset) => Thunk<void>;\n\nexport type MergeEditorState = (state: Partial<EditorState>) => Thunk<EditorState>;\n\nexport interface ReplaceAction {\n  nodeUUID: string;\n  actionUUID: string;\n}\n\nexport type OnUpdateRouter = (node: RenderNode) => Thunk<RenderNodeMap>;\n\nexport interface Connection {\n  previousConnection: Connection;\n}\n\nexport interface ConnectionEvent {\n  connection: Connection;\n  source: Element;\n  target: Element;\n  sourceId: string;\n  targetId: string;\n  suspendedElementId: string;\n  endpoints: any[];\n}\n\nexport interface ErrorMessage {\n  status: string;\n  description: string;\n}\n\nexport type LocalizationUpdates = Array<{ uuid: string; translations?: any }>;\nconst QUIET_SAVE = 2000;\n\nlet markDirty: (quiet?: number) => void = () => {};\nlet lastDirtyAttempt: any = null;\nlet postingRevision = false;\n\nexport const createDirty = (\n  revisionsEndpoint: string,\n  dispatch: DispatchWithState,\n  getState: GetState\n) => (quiet: number = QUIET_SAVE) => {\n  if (lastDirtyAttempt) {\n    window.clearTimeout(lastDirtyAttempt);\n  }\n\n  const {\n    flowContext: { definition, nodes, assetStore },\n    editorState: { currentRevision }\n  } = getState();\n\n  dispatch(mergeEditorState({ saving: true }));\n\n  // make sure we have the most current revision number we know about\n  const newDefinition = getCurrentDefinition(definition, nodes, true);\n  newDefinition.revision = currentRevision;\n\n  if (postingRevision) {\n    lastDirtyAttempt = window.setTimeout(() => {\n      markDirty();\n    }, QUIET_SAVE);\n    return;\n  }\n\n  lastDirtyAttempt = window.setTimeout(() => {\n    postingRevision = true;\n    saveRevision(revisionsEndpoint, newDefinition).then(\n      (revision: Revision) => {\n        definition.revision = revision.revision;\n        dispatch(updateDefinition(definition));\n\n        const updatedAssets = mutators.addRevision(assetStore, revision);\n        dispatch(updateAssets(updatedAssets));\n        dispatch(\n          mergeEditorState({\n            currentRevision: revision.revision,\n            saving: false\n          })\n        );\n        postingRevision = false;\n      },\n      (error: AxiosError) => {\n        const errorMessage = error.response.data as ErrorMessage;\n\n        const body =\n          (errorMessage && errorMessage.description) ||\n          'Hmm, we ran into a problem trying to save your changes. ' +\n            'It could just be that your internet connection is not working ' +\n            'well at the moment. Perhaps wait a minute or so and try again. It may also ' +\n            \"be that we encountered a problem we didn't anticipate. \" +\n            \"If your connection is good and you still can't save your \" +\n            'changes, please contact support so we can help you out.';\n        dispatch(\n          mergeEditorState({\n            modalMessage: {\n              title: \"Uh oh, we couldn't save your changes\",\n              body\n            },\n            saving: false\n          })\n        );\n        postingRevision = false;\n      }\n    );\n  }, quiet);\n};\n\nexport const mergeEditorState = (changes: Partial<EditorState>) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): EditorState => {\n  const { editorState } = getState();\n  const updated = mutate(editorState, { $merge: changes });\n  dispatch(updateEditorState(updated));\n  return updated;\n};\n\nexport const createNewRevision = () => (dispatch: DispatchWithState, getState: GetState): void => {\n  // mark us dirty with no quiet period\n  markDirty(0);\n};\n\nexport const loadFlowDefinition = (\n  definition: FlowDefinition,\n  assetStore: AssetStore,\n  onLoad: () => void\n) => (dispatch: DispatchWithState, getState: GetState): void => {\n  // first see if we need our asset store initialized\n  const {\n    editorState: { fetchingFlow }\n  } = getState();\n\n  if (!fetchingFlow) {\n    // mark us as underway\n    dispatch(mergeEditorState({ fetchingFlow: true }));\n  }\n\n  // while we don't officially support doing it, lets make a best effort to load\n  // definitions that don't have _ui information (created outside of the editor)\n  definition.localization = definition.localization || {};\n  definition._ui = definition._ui || { nodes: {}, languages: [], stickies: {} };\n\n  // make sure we have a ui entry for each node\n  let currentTop = 0;\n  for (const node of definition.nodes) {\n    if (!definition._ui.nodes[node.uuid]) {\n      definition._ui.nodes[node.uuid] = {\n        position: { left: 0, top: currentTop },\n        type: guessNodeType(node)\n      };\n      currentTop += 150;\n    }\n  }\n\n  // add assets we found in our flow to our asset store\n  const components = getFlowComponents(definition);\n  mergeAssetMaps(assetStore.fields.items, components.fields);\n  mergeAssetMaps(assetStore.groups.items, components.groups);\n  mergeAssetMaps(assetStore.labels.items, components.labels);\n  mergeAssetMaps(assetStore.results.items, components.results);\n\n  // initialize our language\n  let language: Asset;\n  if (definition.language) {\n    language = assetStore.languages.items[definition.language];\n  }\n\n  if (!language) {\n    language = DEFAULT_LANGUAGE;\n    dispatch(mergeEditorState({ language: DEFAULT_LANGUAGE }));\n    mergeAssetMaps(assetStore.languages.items, { base: DEFAULT_LANGUAGE });\n  }\n\n  dispatch(updateBaseLanguage(language));\n\n  // store our flow definition without any nodes\n  dispatch(updateDefinition(mutators.pruneDefinition(definition)));\n  dispatch(updateNodes(components.renderNodeMap));\n\n  // finally update our assets, and mark us as fetched\n  dispatch(updateAssets(assetStore));\n  dispatch(mergeEditorState({ language, fetchingFlow: false }));\n\n  // fire our callback for who is embedding us\n  if (onLoad) {\n    onLoad();\n  }\n};\n\n/**\n * Fetches a flow. Fetches all assets as well if the haven't been initialized yet\n * @param endpoints where our assets live\n * @param uuid the uuid for the flow to fetch\n */\nexport const fetchFlow = (\n  endpoints: Endpoints,\n  uuid: string,\n  onLoad: () => void,\n  forceSave = false\n) => async (dispatch: DispatchWithState, getState: GetState) => {\n  // mark us as underway\n  dispatch(mergeEditorState({ fetchingFlow: true }));\n\n  // first see if we need our asset store initialized\n  let {\n    flowContext: { assetStore }\n  } = getState();\n\n  if (!Object.keys(assetStore).length) {\n    assetStore = await createAssetStore(endpoints);\n  }\n\n  fetchFlowActivity(endpoints.activity, dispatch, getState, uuid);\n  (window as any).triggerActivityUpdate = () => {\n    fetchFlowActivity(endpoints.activity, dispatch, getState, uuid);\n  };\n\n  const completionSchema = await getCompletionSchema(endpoints.completion);\n  const functions = await getFunctions(endpoints.functions);\n\n  getFlowDefinition(assetStore.revisions)\n    .then((definition: FlowDefinition) => {\n      dispatch(loadFlowDefinition(definition, assetStore, onLoad));\n      dispatch(\n        mergeEditorState({ currentRevision: definition.revision, completionSchema, functions })\n      );\n\n      markDirty = createDirty(assetStore.revisions.endpoint, dispatch, getState);\n      if (forceSave) {\n        markDirty(0);\n      }\n    })\n    .catch(error => {\n      // not much we can do without our flow definition\n      // log it to the console, this should really only happen if\n      // misconfigured or the endpoint is unavailable\n      console.error(error);\n    });\n};\n\nexport const addAsset: AddAsset = (assetType: string, asset: Asset) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): void => {\n  const {\n    flowContext: { assetStore }\n  } = getState();\n\n  const updated = mutate(assetStore, {\n    [assetType]: { items: { $merge: { [asset.id]: asset } } }\n  });\n\n  dispatch(updateAssets(updated));\n};\n\nexport const handleLanguageChange: HandleLanguageChange = language => (dispatch, getState) => {\n  const {\n    flowContext: { baseLanguage },\n    editorState: { translating, language: currentLanguage }\n  } = getState();\n\n  // determine translating state\n  if (!isEqual(language, baseLanguage)) {\n    if (!translating) {\n      dispatch(mergeEditorState({ translating: true }));\n    }\n  } else {\n    dispatch(mergeEditorState({ translating: false }));\n  }\n\n  // update language\n  if (!isEqual(language, currentLanguage)) {\n    dispatch(mergeEditorState({ language }));\n  }\n};\n\nexport const onUpdateLocalizations = (language: string, changes: LocalizationUpdates) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): FlowDefinition => {\n  const {\n    flowContext: { definition }\n  } = getState();\n  const updated = mutators.updateLocalization(definition, language, changes);\n  dispatch(updateDefinition(updated));\n\n  markDirty();\n  return updated;\n};\n\nexport const updateExitDestination = (nodeUUID: string, exitUUID: string, destination: string) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const {\n    flowContext: { nodes }\n  } = getState();\n  const updated = mutators.updateConnection(nodes, nodeUUID, exitUUID, destination);\n  dispatch(updateNodes(updated));\n  markDirty();\n  return updated;\n};\n\nexport const disconnectExit = (nodeUUID: string, exitUUID: string) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => dispatch(updateExitDestination(nodeUUID, exitUUID, null));\n\nexport const updateConnection = (source: string, target: string) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const [nodeUUID, exitUUID] = source.split(':');\n  return dispatch(updateExitDestination(nodeUUID, exitUUID, target));\n};\n\nexport const removeNode = (node: FlowNode) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  // Remove result name if node has one\n  const {\n    flowContext: { nodes, assetStore }\n  } = getState();\n\n  // update asset store to remove results that no longer exist\n  if (node.router && node.router.result_name) {\n    const updatedAssets = mutators.removeResultFromStore(node.router.result_name, assetStore, {\n      nodeUUID: node.uuid\n    });\n    dispatch(updateAssets(updatedAssets));\n  }\n\n  const updated = mutators.removeNode(nodes, node.uuid);\n  dispatch(updateNodes(updated));\n  markDirty();\n  return updated;\n};\n\nexport const removeAction = (nodeUUID: string, action: AnyAction) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const {\n    flowContext: { nodes, assetStore }\n  } = getState();\n  const renderNode = nodes[nodeUUID];\n\n  // update asset store to remove results that no longer exist\n  if (action.type === Types.set_run_result) {\n    const resultAction = action as SetRunResult;\n    const updatedAssets = mutators.removeResultFromStore(resultAction.name, assetStore, {\n      nodeUUID,\n      actionUUID: action.uuid\n    });\n    dispatch(updateAssets(updatedAssets));\n  }\n\n  // If it's our last action, then nuke the node\n  if (renderNode.node.actions.length === 1) {\n    const updated = dispatch(removeNode(renderNode.node));\n    markDirty();\n    return updated;\n  } else {\n    // Otherwise, just remove that action\n    const updated = mutators.removeAction(nodes, nodeUUID, action.uuid);\n    dispatch(updateNodes(updated));\n    markDirty();\n    return updated;\n  }\n};\n\nexport const moveActionUp = (nodeUUID: string, action: AnyAction) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const {\n    flowContext: { nodes }\n  } = getState();\n  const updated = mutators.moveActionUp(nodes, nodeUUID, action.uuid);\n  dispatch(updateNodes(updated));\n  markDirty();\n  return updated;\n};\n\n/**\n * Splices a router into a list of actions creating up to three nodes where there\n * was once one node.\n * @param nodeUUID the node to replace\n * @param node the new node being added (shares the previous node uuid)\n * @param type the type of the new router\n * @param previousAction the previous action that is being replaced with our router\n * @returns a list of RenderNodes that were created\n */\nexport const spliceInRouter = (\n  newRouterNode: RenderNode,\n  previousAction: { nodeUUID: string; actionUUID: string }\n) => (dispatch: DispatchWithState, getState: GetState): RenderNodeMap => {\n  const {\n    flowContext: { nodes }\n  } = getState();\n  const previousNode = nodes[previousAction.nodeUUID];\n\n  // remove our old node, we'll make new ones\n  let updatedNodes = nodes;\n  updatedNodes = mutators.removeNode(updatedNodes, previousNode.node.uuid, false);\n\n  newRouterNode.node = mutators.uniquifyNode(newRouterNode.node);\n\n  const actionIdx = getActionIndex(previousNode.node, previousAction.actionUUID);\n\n  // we need to splice a wait node where our previousAction was\n  const topActions: Action[] =\n    actionIdx > 0 ? [...previousNode.node.actions.slice(0, actionIdx)] : [];\n  const bottomActions: Action[] = previousNode.node.actions.slice(\n    actionIdx + 1,\n    previousNode.node.actions.length\n  );\n\n  // tslint:disable-next-line:prefer-const\n  let { left, top } = previousNode.ui.position;\n\n  let topNode: RenderNode;\n  let bottomNode: RenderNode;\n\n  // add our top node if we have one\n  if (topActions.length > 0) {\n    topNode = {\n      node: {\n        uuid: createUUID(),\n        actions: topActions,\n        exits: [\n          {\n            uuid: createUUID(),\n            destination_uuid: null\n          }\n        ]\n      },\n      ui: { position: { left, top } },\n      inboundConnections: { ...previousNode.inboundConnections }\n    };\n\n    updatedNodes = mutators.mergeNode(updatedNodes, topNode);\n    top += NODE_SPACING;\n\n    // update our routerNode for the presence of a top node\n    newRouterNode.inboundConnections = {\n      [topNode.node.exits[0].uuid]: topNode.node.uuid\n    };\n    newRouterNode.ui.position.top += NODE_SPACING;\n  } else {\n    newRouterNode.inboundConnections = { ...previousNode.inboundConnections };\n  }\n\n  // now add our routerNode\n  updatedNodes = mutators.mergeNode(updatedNodes, newRouterNode);\n\n  // add our bottom\n  if (bottomActions.length > 0) {\n    bottomNode = {\n      node: {\n        uuid: createUUID(),\n        actions: bottomActions,\n        exits: [\n          {\n            uuid: createUUID(),\n            destination_uuid: previousNode.node.exits[0].destination_uuid\n          }\n        ]\n      },\n      ui: {\n        position: { left, top }\n      },\n      inboundConnections: {\n        [newRouterNode.node.exits[0].uuid]: newRouterNode.node.uuid\n      }\n    };\n    updatedNodes = mutators.mergeNode(updatedNodes, bottomNode);\n  } else {\n    // if we don't have a bottom, route our routerNode to the previous destination\n    updatedNodes = mutators.updateConnection(\n      updatedNodes,\n      newRouterNode.node.uuid,\n      newRouterNode.node.exits[0].uuid,\n      previousNode.node.exits[0].destination_uuid\n    );\n  }\n\n  dispatch(updateNodes(updatedNodes));\n\n  markDirty();\n  return updatedNodes;\n};\n\nexport const handleTypeConfigChange = (typeConfig: Type) => (dispatch: DispatchWithState) => {\n  // TODO: Generate suggested result name if user is changing to a `wait_for_response` router.\n  dispatch(updateTypeConfig(typeConfig));\n};\n\nexport const resetNodeEditingState = () => (dispatch: DispatchWithState, getState: GetState) => {\n  dispatch(mergeEditorState({ ghostNode: null }));\n  dispatch(updateNodeEditorSettings(null));\n};\n\nexport const onUpdateAction = (\n  action: AnyAction,\n  onUpdated?: (dispatch: DispatchWithState, getState: GetState) => void\n) => (dispatch: DispatchWithState, getState: GetState) => {\n  timeStart('onUpdateAction');\n\n  const {\n    nodeEditor: { userAddingAction, settings },\n    flowContext: { nodes, contactFields, assetStore }\n  } = getState();\n\n  if (settings == null || settings.originalNode == null) {\n    throw new Error('Need originalNode in settings to update an action');\n  }\n  const { originalNode, originalAction } = settings;\n\n  let updatedAssets = assetStore;\n\n  // remove our result reference\n  if (originalAction && originalAction.type === Types.set_run_result) {\n    const { name: resultName } = originalAction as SetRunResult;\n    updatedAssets = mutators.removeResultFromStore(resultName, updatedAssets, {\n      nodeUUID: originalNode.node.uuid,\n      actionUUID: action.uuid\n    });\n  }\n\n  let updatedNodes = nodes;\n  const creatingNewNode = !!(originalNode !== null && originalNode.ghost);\n\n  let nodeUUID: string = null;\n\n  if (creatingNewNode) {\n    const newNode: RenderNode = {\n      node: {\n        uuid: createUUID(),\n        actions: [action],\n        exits: [{ uuid: createUUID(), destination_uuid: null }]\n      },\n      ui: { position: originalNode.ui.position, type: Types.execute_actions },\n      inboundConnections: originalNode.inboundConnections\n    };\n    updatedNodes = mutators.mergeNode(nodes, newNode);\n\n    nodeUUID = newNode.node.uuid;\n  } else {\n    nodeUUID = originalNode.node.uuid;\n\n    if (userAddingAction) {\n      updatedNodes = mutators.addAction(nodes, originalNode.node.uuid, action);\n    } else if (originalNode.node.hasOwnProperty('router')) {\n      updatedNodes = mutators.spliceInAction(nodes, originalNode.node.uuid, action);\n    } else {\n      updatedNodes = mutators.updateAction(nodes, originalNode.node.uuid, action, originalAction);\n    }\n  }\n\n  dispatch(updateNodes(updatedNodes));\n  dispatch(updateUserAddingAction(false));\n\n  // Add result to store.\n  if (action.type === Types.set_run_result) {\n    const { name: resultName } = action as SetRunResult;\n    updatedAssets = mutators.addResultToStore(resultName, updatedAssets, {\n      nodeUUID,\n      actionUUID: action.uuid\n    });\n    dispatch(updateAssets(updatedAssets));\n  }\n\n  // Add contact field to our store.\n  if (action.type === Types.set_contact_field) {\n    const { field } = action as SetContactField;\n    dispatch(updateContactFields({ ...contactFields, [field.key]: field.name }));\n  }\n\n  markDirty();\n\n  timeEnd('onUpdateAction');\n\n  if (onUpdated) {\n    onUpdated(dispatch, getState);\n  }\n  return updatedNodes;\n};\n\n/**\n * Opens the NodeEditor in the state for adding to a provided node\n * @param node the node to add to\n */\nexport const onAddToNode = (node: FlowNode) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n) => {\n  const {\n    flowContext: { nodes }\n  } = getState();\n\n  // TODO: remove the need for this once we all have formHelpers\n  const newAction: SendMsg = {\n    uuid: createUUID(),\n    type: Types.send_msg,\n    text: ''\n  };\n\n  dispatch(\n    updateNodeEditorSettings({\n      originalNode: getNode(nodes, node.uuid),\n      originalAction: newAction,\n      showAdvanced: false\n    })\n  );\n\n  markDirty();\n  dispatch(updateUserAddingAction(true));\n  dispatch(handleTypeConfigChange(getTypeConfig(Types.send_msg)));\n  dispatch(mergeEditorState(EMPTY_DRAG_STATE));\n};\n\nexport const onRemoveNodes = (uuids: string[]) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const {\n    flowContext: { nodes, definition }\n  } = getState();\n\n  let updatedNodes = nodes;\n  let updatedDefinition = definition;\n  let didNodes = false;\n  let didDef = false;\n\n  uuids.forEach((uuid: string) => {\n    if (uuid in updatedNodes) {\n      updatedNodes = mutators.removeNode(updatedNodes, uuid, true);\n      didNodes = true;\n    } else if (uuid in updatedDefinition._ui.stickies) {\n      updatedDefinition = mutators.updateStickyNote(updatedDefinition, uuid, null);\n      didDef = true;\n    }\n  });\n\n  if (didNodes) {\n    dispatch(updateNodes(updatedNodes));\n  }\n\n  if (didDef) {\n    dispatch(updateDefinition(updatedDefinition));\n  }\n\n  if (didDef || didNodes) {\n    markDirty();\n  }\n\n  return nodes;\n};\n\nexport const onUpdateCanvasPositions = (positions: CanvasPositions) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const {\n    flowContext: { nodes, definition }\n  } = getState();\n\n  let updatedDefinition = definition;\n  let updatedNodes = nodes;\n\n  let updatedNodePosition = false;\n  let updatedStickyPosition = false;\n\n  for (const uuid in positions) {\n    if (updatedNodes[uuid]) {\n      updatedNodes = mutators.updatePosition(updatedNodes, uuid, positions[uuid]);\n      updatedNodePosition = true;\n    } else if (updatedDefinition._ui.stickies[uuid]) {\n      updatedDefinition = mutators.updateStickyNotePosition(\n        updatedDefinition,\n        uuid,\n        positions[uuid]\n      );\n      updatedStickyPosition = true;\n    }\n  }\n\n  let updated = false;\n\n  if (updatedNodePosition) {\n    updated = true;\n    dispatch(updateNodes(updatedNodes));\n  }\n\n  if (updatedStickyPosition) {\n    updated = true;\n    dispatch(updateDefinition(updatedDefinition));\n  }\n\n  if (updated) {\n    markDirty();\n  }\n\n  return updatedNodes;\n};\n\n/**\n * Called when a connection begins to be dragged from an endpoint both\n * when a new connection is desired or when an existing one is being moved.\n * @param event\n */\nexport const onConnectionDrag = (event: ConnectionEvent, flowType: FlowTypes) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n) => {\n  const {\n    flowContext: { nodes, assetStore }\n  } = getState();\n\n  // We finished dragging a ghost node, create the spec for our new ghost component\n  const [fromNodeUUID, fromExitUUID] = event.sourceId.split(':');\n\n  const fromNode = nodes[fromNodeUUID];\n\n  const names = Object.keys(assetStore.results ? assetStore.results.items : {});\n\n  let resultCount = names.length + 1;\n  let key = `result_${resultCount}`;\n\n  while (hasString(names, key)) {\n    resultCount++;\n    key = `result_${resultCount}`;\n  }\n\n  // set our ghost node\n  const ghostNode = createEmptyNode(fromNode, fromExitUUID, resultCount, flowType);\n  ghostNode.inboundConnections = { [fromExitUUID]: fromNodeUUID };\n  dispatch(mergeEditorState({ ghostNode }));\n};\n\nexport const updateSticky = (uuid: string, sticky: StickyNote) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): void => {\n  const {\n    flowContext: { definition }\n  } = getState();\n\n  const updated = mutators.updateStickyNote(definition, uuid, sticky);\n  dispatch(updateDefinition(updated));\n  markDirty();\n};\n\nexport const onUpdateRouter = (renderNode: RenderNode) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const {\n    flowContext: { nodes, assetStore },\n    nodeEditor: {\n      settings: { originalNode, originalAction }\n    }\n  } = getState();\n\n  let updated = nodes;\n  if (originalNode) {\n    const previousPosition = originalNode.ui.position;\n    renderNode.ui.position = previousPosition;\n    renderNode.inboundConnections = originalNode.inboundConnections;\n  }\n\n  if (originalNode.ghost) {\n    renderNode.inboundConnections = originalNode.inboundConnections;\n    const { left, top } = originalNode.ui.position;\n    renderNode.ui.position = { left, top };\n    renderNode.node = mutators.uniquifyNode(renderNode.node);\n  }\n\n  // update our results\n  const resultName = getResultName(renderNode.node);\n  if (resultName) {\n    let updatedAssets = assetStore;\n\n    // remove our original result name\n    const originalResultName = getResultName(originalNode.node);\n    if (originalResultName) {\n      updatedAssets = mutators.removeResultFromStore(originalResultName, updatedAssets, {\n        nodeUUID: originalNode.node.uuid\n      });\n    }\n\n    updatedAssets = mutators.addFlowResult(updatedAssets, renderNode.node);\n    dispatch(updateAssets(updatedAssets));\n  }\n\n  if (\n    originalNode &&\n    originalAction &&\n    !originalNode.ghost &&\n    !getSwitchRouter(originalNode.node)\n  ) {\n    const actionToSplice = originalNode.node.actions.find(\n      (action: Action) => action.uuid === originalAction.uuid\n    );\n\n    if (actionToSplice) {\n      // if we are splicing using the original top\n      renderNode.ui.position.top = originalNode.ui.position.top;\n\n      return dispatch(\n        spliceInRouter(renderNode, {\n          nodeUUID: originalNode.node.uuid,\n          actionUUID: actionToSplice.uuid\n        })\n      );\n    }\n\n    // didn't recognize that action, let's add a new router node\n    // if we are appendeng in, see if we need to route through\n    const switchRouter = getSwitchRouter(renderNode.node);\n    if (switchRouter) {\n      const defaultCategory = switchRouter.categories.find(\n        (cat: Category) => cat.uuid === switchRouter.default_category_uuid\n      );\n      const exitToUpdate = renderNode.node.exits.find(\n        (exit: Exit) => exit.uuid === defaultCategory.exit_uuid\n      );\n\n      exitToUpdate.destination_uuid = originalNode.node.exits[0].destination_uuid;\n    }\n\n    renderNode.inboundConnections = {\n      [originalNode.node.exits[0].uuid]: originalNode.node.uuid\n    };\n    renderNode.node = mutators.uniquifyNode(renderNode.node);\n    renderNode.ui.position.top += NODE_SPACING;\n    updated = mutators.mergeNode(updated, renderNode);\n  } else {\n    updated = mutators.mergeNode(updated, renderNode);\n  }\n\n  dispatch(updateNodes(updated));\n\n  markDirty();\n  return updated;\n};\n\nexport const onOpenNodeEditor = (settings: NodeEditorSettings) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n) => {\n  const {\n    flowContext: {\n      definition: { localization }\n    },\n    editorState: { language, translating }\n  } = getState();\n\n  const { originalNode: renderNode } = settings;\n  let { originalAction: action } = settings;\n\n  const node = renderNode.node;\n\n  // stuff our localization objects in our settings\n  settings.localizations = [];\n  if (translating) {\n    let actionToTranslate = action;\n\n    // TODO: this is a hack, would be nice to find how to make that area respond differently\n    // if they clicked just below the actions, treat it as the last action\n    if (!actionToTranslate && node.actions.length > 0) {\n      actionToTranslate = node.actions[node.actions.length - 1];\n      if (\n        actionToTranslate.type !== Types.send_msg &&\n        actionToTranslate.type !== Types.send_broadcast\n      ) {\n        return;\n      }\n    }\n\n    const translations = localization[language.id];\n    settings.localizations.push(\n      ...getLocalizations(node, actionToTranslate, language, translations)\n    );\n  }\n\n  // Account for hybrids or clicking on the empty exit table\n  if (!action && node.actions.length > 0) {\n    action = node.actions[node.actions.length - 1];\n  }\n\n  const typeConfig = determineTypeConfig(settings);\n  dispatch(handleTypeConfigChange(typeConfig));\n  dispatch(updateNodeEditorSettings(settings));\n  dispatch(mergeEditorState(EMPTY_DRAG_STATE));\n};\n","import { fieldToAsset } from 'components/flow/actions/updatecontact/helpers';\nimport { getResultName } from 'components/flow/node/helpers';\nimport { DefaultExitNames } from 'components/flow/routers/constants';\nimport { getSwitchRouter } from 'components/flow/routers/helpers';\nimport { GROUPS_OPERAND } from 'components/nodeeditor/constants';\nimport { FlowTypes, Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { getActivity } from 'external';\nimport {\n  AddLabels,\n  AnyAction,\n  Category,\n  ChangeGroups,\n  FlowDefinition,\n  FlowNode,\n  FlowPosition,\n  HintTypes,\n  RouterTypes,\n  SetContactField,\n  SetRunResult,\n  StickyNote,\n  SwitchRouter,\n  UIMetaData,\n  Wait,\n  WaitTypes\n} from 'flowTypes';\nimport Localization, { LocalizedObject } from 'services/Localization';\nimport { Activity, EditorState } from 'store/editor';\nimport { Asset, AssetMap, AssetType, RenderNode, RenderNodeMap } from 'store/flowContext';\nimport { addResult } from 'store/mutators';\nimport { DispatchWithState, GetState, mergeEditorState } from 'store/thunks';\nimport { createUUID, snakify } from 'utils';\n\nexport interface Bounds {\n  left: number;\n  top: number;\n  right: number;\n  bottom: number;\n}\n\ninterface Reflow {\n  uuid: string;\n  bounds: Bounds;\n}\n\n// track if we have an active timeout before issuing a new one\nlet activityTimeout: any = null;\n\nexport const getNodeWithAction = (nodes: RenderNodeMap, actionUUID: string): RenderNode => {\n  for (const nodeUUID of Object.keys(nodes)) {\n    const renderNode = nodes[nodeUUID];\n    for (const action of renderNode.node.actions) {\n      if (action.uuid === actionUUID) {\n        return renderNode;\n      }\n    }\n  }\n};\n\nexport const getNode = (nodes: RenderNodeMap, nodeUUID: string) => {\n  const node = nodes[nodeUUID];\n  if (!node) {\n    throw new Error('Cannot find node ' + nodeUUID);\n  }\n  return node;\n};\n\nexport const getExitIndex = (node: FlowNode, exitUUID: string) => {\n  for (const [exitIdx, exit] of node.exits.entries()) {\n    if (exit.uuid === exitUUID) {\n      return exitIdx;\n    }\n  }\n  throw new Error('Cannot find exit ' + exitUUID);\n};\n\nexport const getActionIndex = (node: FlowNode, actionUUID: string) => {\n  for (const [actionIdx, action] of node.actions.entries()) {\n    if (action.uuid === actionUUID) {\n      return actionIdx;\n    }\n  }\n  throw new Error('Cannot find action ' + actionUUID);\n};\n\nexport const getSuggestedResultName = (count: number) => `Result ${count}`;\n\nexport const hasRouter = (renderNode: RenderNode): boolean => {\n  return !!(renderNode && renderNode.node.router);\n};\n\nexport const hasWait = (renderNode: RenderNode): boolean => {\n  return !!(renderNode.node.router && renderNode.node.router.wait);\n};\n\nexport const hasLoopSplit = (renderNode: RenderNode): boolean => {\n  const type = getType(renderNode);\n\n  return (\n    hasWait(renderNode) || type === Types.split_by_expression || type === Types.split_by_subflow\n  );\n};\n\n/**\n * Follows every path from fromNodeUUID to toNodeUUID and throws\n * an error if we hit ourselves again without hitting a wait\n * @param nodes the entire node map\n * @param fromNodeUUID which node we are originating from\n * @param toNodeUUID where we are trying to go\n * @param path the path we have tried so far\n */\nexport const detectLoops = (\n  nodes: RenderNodeMap,\n  fromNodeUUID: string,\n  toNodeUUID: string,\n  path: string[] = []\n): void => {\n  const fromNode = nodes[fromNodeUUID];\n  const toNode = nodes[toNodeUUID];\n\n  if (fromNodeUUID === toNodeUUID) {\n    throw new Error(\"Flow loop detected, can't point to self\");\n  }\n\n  if (hasLoopSplit(toNode) || hasLoopSplit(fromNode)) {\n    return;\n  }\n\n  if (path.length === 0) {\n    path.push(fromNodeUUID);\n    for (const exit of toNode.node.exits) {\n      if (exit.destination_uuid) {\n        detectLoops(nodes, toNode.node.uuid, exit.destination_uuid, path);\n      }\n    }\n    return;\n  }\n\n  // we're back where we started\n  if (toNodeUUID === path[0]) {\n    throw new Error('Flow loop detected, route through a wait first');\n  }\n\n  // add us to the path\n  path.push(toNodeUUID);\n\n  // follow each of our exits\n  for (const exit of toNode.node.exits) {\n    if (exit.destination_uuid) {\n      detectLoops(nodes, toNodeUUID, exit.destination_uuid, path);\n    }\n  }\n\n  return;\n};\n\nexport const getLocalizations = (\n  node: FlowNode,\n  action: AnyAction,\n  language: Asset,\n  translations?: { [uuid: string]: any }\n): LocalizedObject[] => {\n  const localizations: LocalizedObject[] = [];\n\n  // Account for localized cases\n  if (node.router && node.router.type === RouterTypes.switch) {\n    const router = node.router as SwitchRouter;\n\n    router.cases.forEach(kase =>\n      localizations.push(Localization.translate(kase, language, translations))\n    );\n  }\n\n  if (action) {\n    localizations.push(Localization.translate(action, language, translations));\n  }\n\n  // Account for localized categories\n  if (node.router) {\n    node.router.categories.forEach(category => {\n      if (category.name) {\n        localizations.push(Localization.translate(category, language, translations));\n      }\n    });\n  }\n\n  return localizations;\n};\n\nexport const getUniqueDestinations = (node: FlowNode): string[] => {\n  const destinations: any = {};\n  for (const exit of node.exits) {\n    if (exit.destination_uuid) {\n      destinations[exit.destination_uuid] = true;\n    }\n  }\n  return Object.keys(destinations);\n};\n\nexport const getCurrentDefinition = (\n  definition: FlowDefinition,\n  nodeMap: RenderNodeMap,\n  includeUI: boolean = true\n): FlowDefinition => {\n  const renderNodes = getOrderedNodes(nodeMap);\n  const nodes: FlowNode[] = [];\n  renderNodes.forEach((renderNode: RenderNode) => nodes.push(renderNode.node));\n\n  // tslint:disable-next-line:variable-name\n  const uiNodes: any = {};\n  for (const uuid of Object.keys(nodeMap)) {\n    uiNodes[uuid] = nodeMap[uuid].ui;\n  }\n\n  const result = {\n    ...definition,\n    nodes\n  };\n\n  if (includeUI) {\n    // tslint:disable-next-line:variable-name\n    result._ui = {\n      nodes: uiNodes,\n      stickies: definition._ui.stickies,\n      languages: definition._ui.languages\n    } as UIMetaData;\n  }\n\n  return result;\n};\n\nexport const newPosition = (left: number, top: number): FlowPosition => {\n  return { left, top };\n};\n\nexport const addPosition = (a: FlowPosition, b: FlowPosition): FlowPosition => {\n  const width = a.right - a.left;\n  const height = a.bottom - a.top;\n\n  // we allow dragging out of bounds\n  const top = a.top + b.top;\n  const left = a.left + b.left;\n\n  if (width && height) {\n    return {\n      left,\n      top,\n      right: left + width,\n      bottom: top + height\n    };\n  }\n\n  return { top, left };\n};\n\nexport const subtractPosition = (a: FlowPosition, b: FlowPosition): FlowPosition => {\n  return { left: a.left - b.left, top: a.top - b.top };\n};\n\nexport const getOrderedNodes = (nodes: RenderNodeMap): RenderNode[] => {\n  const sorted: RenderNode[] = [];\n  Object.keys(nodes).forEach((nodeUUID: string) => {\n    sorted.push(nodes[nodeUUID]);\n  });\n  return sorted.sort((a: RenderNode, b: RenderNode) => {\n    let diff = a.ui.position.top - b.ui.position.top;\n    if (diff === 0) {\n      diff = a.ui.position.left - b.ui.position.left;\n    }\n    return diff;\n  });\n};\n\nexport const getCollisions = (\n  nodes: RenderNodeMap,\n  stickies: { [key: string]: StickyNote },\n  box: FlowPosition\n): { [uuid: string]: FlowPosition } => {\n  const collisions: any = {};\n  for (const nodeUUID of Object.keys(nodes)) {\n    const node = nodes[nodeUUID];\n    if (collides(box, node.ui.position)) {\n      collisions[node.node.uuid] = node.ui.position;\n    }\n  }\n\n  for (const uuid in stickies) {\n    const sticky = stickies[uuid];\n    if (collides(box, sticky.position)) {\n      collisions[uuid] = sticky.position;\n    }\n  }\n\n  return collisions;\n};\n\nexport const collides = (a: FlowPosition, b: FlowPosition) => {\n  // don't bother with collision if we don't have full dimensions\n  /* istanbul ignore next */\n  if (!a.bottom || !b.bottom) {\n    return false;\n  }\n\n  return !(b.left > a.right || b.right < a.left || b.top > a.bottom || b.bottom < a.top);\n};\n\n/**\n * Gets the first collsion in the node map returning the original node,\n * the node it collides with and optionally an additional node it\n * collides with if inserting between two nodes\n * @param nodes\n */\nexport const getCollision = (nodes: RenderNodeMap): RenderNode[] => {\n  const sortedNodes = getOrderedNodes(nodes);\n\n  for (let i = 0; i < sortedNodes.length; i++) {\n    const current = sortedNodes[i];\n    if (i + 1 < sortedNodes.length) {\n      for (let j = i + 1; j < sortedNodes.length; j++) {\n        const other = sortedNodes[j];\n        if (collides(current.ui.position, other.ui.position)) {\n          // if the next node collides too, include it\n          // to deal with inserting between two closely\n          // positioned nodes\n          if (j + 1 < sortedNodes.length) {\n            const cascaded = sortedNodes[j + 1];\n            if (collides(other.ui.position, cascaded.ui.position)) {\n              return [current, other, cascaded];\n            }\n          }\n          return [current, other];\n        }\n      }\n    }\n  }\n  return [];\n};\n\nexport const createEmptyNode = (\n  fromNode: RenderNode,\n  fromExitUUID: string,\n  suggestedResultNameCount: number,\n  flowType: FlowTypes\n): RenderNode => {\n  const emptyNode: FlowNode = {\n    uuid: createUUID(),\n    actions: [],\n    exits: [\n      {\n        uuid: createUUID(),\n        destination_uuid: null\n      }\n    ]\n  };\n\n  let type = Types.execute_actions;\n\n  // Add an action next if we are coming from a router\n  if (!fromNode || hasRouter(fromNode)) {\n    const replyType = flowType === FlowTypes.VOICE ? Types.say_msg : Types.send_msg;\n    const replyAction = {\n      uuid: createUUID(),\n      text: '',\n      type: replyType\n    };\n\n    emptyNode.actions.push(replyAction);\n  } else {\n    // Otherwise we are going to a switch\n    const categories: Category[] = [\n      {\n        uuid: createUUID(),\n        name: DefaultExitNames.All_Responses,\n        exit_uuid: emptyNode.exits[0].uuid\n      }\n    ];\n\n    const wait: Wait = { type: WaitTypes.msg };\n    type = Types.wait_for_response;\n    if (flowType === FlowTypes.VOICE) {\n      wait.hint = { type: HintTypes.digits, count: 1 };\n    }\n\n    emptyNode.router = {\n      type: RouterTypes.switch,\n      result_name: getSuggestedResultName(suggestedResultNameCount),\n      default_category_uuid: categories[0].uuid,\n      categories,\n      wait,\n      cases: []\n    } as SwitchRouter;\n  }\n\n  let inboundConnections = {};\n  if (fromNode) {\n    inboundConnections = { [fromExitUUID]: fromNode.node.uuid };\n  }\n\n  return {\n    node: emptyNode,\n    ui: { position: { left: 0, top: 0 }, type },\n    inboundConnections,\n    ghost: true\n  };\n};\n\nexport interface FlowComponents {\n  renderNodeMap: RenderNodeMap;\n  groups: AssetMap;\n  fields: AssetMap;\n  labels: AssetMap;\n  results: AssetMap;\n}\n\nexport const isGroupAction = (actionType: string) => {\n  return (\n    actionType === Types.add_contact_groups ||\n    actionType === Types.remove_contact_groups ||\n    actionType === Types.send_broadcast\n  );\n};\n\n/**\n * This isn't necessarily supported, but lets make a best effort to guess node\n * types from cues within the definition if somebody loads a flow without _ui details.\n * @param node\n */\nexport const guessNodeType = (node: FlowNode) => {\n  // router based nodes\n  if (node.router) {\n    // hybrid nodes\n    if (node.actions.length === 1) {\n      if (node.actions[0].type === Types.call_webhook) {\n        return Types.split_by_webhook;\n      }\n\n      if (node.actions[0].type === Types.transfer_airtime) {\n        return Types.split_by_airtime;\n      }\n\n      if (node.actions[0].type === Types.call_resthook) {\n        return Types.split_by_resthook;\n      }\n\n      if (node.actions[0].type === Types.enter_flow) {\n        return Types.split_by_subflow;\n      }\n    }\n\n    if (node.router.wait) {\n      return Types.wait_for_response;\n    }\n\n    if (node.router.type === RouterTypes.random) {\n      return Types.split_by_random;\n    }\n\n    const switchRouter = getSwitchRouter(node);\n    if (switchRouter) {\n      if (switchRouter.operand === GROUPS_OPERAND) {\n        return Types.split_by_groups;\n      }\n    }\n\n    return Types.split_by_expression;\n  }\n\n  return Types.execute_actions;\n};\n\nexport const generateResultQuery = (resultName: string) => `@run.results.${snakify(resultName)}`;\n\n/**\n * Converts a list of assets to a map keyed by their id\n */\nexport const assetListToMap = (assets: Asset[]): AssetMap => {\n  const assetMap: any = {};\n  for (const asset of assets) {\n    assetMap[asset.id] = asset;\n  }\n  return assetMap;\n};\n\nexport const assetMapToList = (assets: AssetMap): any[] => {\n  return Object.keys(assets).map(key => {\n    const asset = assets[key];\n    return { uuid: asset.id, name: asset.name };\n  });\n};\n\n/**\n * Processes an initial FlowDefinition for details necessary for the editor\n */\nexport const getFlowComponents = ({ nodes, _ui }: FlowDefinition): FlowComponents => {\n  const renderNodeMap: RenderNodeMap = {};\n\n  // initialize our nodes\n  const pointerMap: { [uuid: string]: { [uuid: string]: string } } = {};\n\n  const groups: AssetMap = {};\n  const fields: AssetMap = {};\n  const labels: AssetMap = {};\n  let results: AssetMap = {};\n\n  for (const node of nodes) {\n    if (!node.actions) {\n      node.actions = [];\n    }\n\n    const ui = _ui.nodes[node.uuid];\n    const renderNode = {\n      node,\n      ui,\n      inboundConnections: {}\n    };\n    renderNodeMap[node.uuid] = renderNode;\n\n    const resultName = getResultName(node);\n    if (resultName) {\n      results = addResult(resultName, results, { nodeUUID: node.uuid });\n    }\n\n    const type = getType(renderNode);\n\n    // if we are split by group, look at our categories for groups\n    if (type === Types.split_by_groups) {\n      const router = getSwitchRouter(node);\n\n      for (const kase of router.cases) {\n        const groupUUID = kase.arguments[0];\n        const category = router.categories.find((cat: Category) => {\n          return cat.uuid === kase.category_uuid;\n        });\n\n        /* istanbul ignore else */\n        if (category) {\n          groups[groupUUID] = {\n            name: category.name,\n            id: groupUUID,\n            type: AssetType.Group\n          };\n        }\n      }\n    }\n\n    for (const action of node.actions) {\n      if (isGroupAction(action.type)) {\n        const groupsToChange = (action as ChangeGroups).groups;\n        if (groupsToChange) {\n          for (const group of groupsToChange) {\n            groups[group.uuid] = {\n              name: group.name,\n              id: group.uuid,\n              type: AssetType.Group\n            };\n          }\n        }\n      } else if (action.type === Types.set_contact_field) {\n        const fieldAction = action as SetContactField;\n        fields[fieldAction.field.key] = {\n          name: fieldAction.field.name,\n          id: fieldAction.field.key,\n          type: AssetType.Field\n        };\n      } else if (action.type === Types.add_input_labels) {\n        for (const label of (action as AddLabels).labels) {\n          labels[label.uuid] = {\n            name: label.name,\n            id: label.uuid,\n            type: AssetType.Label\n          };\n        }\n      } else if (action.type === Types.set_run_result) {\n        const resultAction = action as SetRunResult;\n        const key = snakify(resultAction.name);\n\n        if (key in results) {\n          results[key].references.push({\n            nodeUUID: node.uuid,\n            actionUUID: action.uuid\n          });\n        } else {\n          results[key] = {\n            name: resultAction.name,\n            id: key,\n            type: AssetType.Result,\n            references: [{ nodeUUID: node.uuid, actionUUID: action.uuid }]\n          };\n        }\n      }\n    }\n\n    for (const exit of node.exits) {\n      if (exit.destination_uuid) {\n        let pointers: { [uuid: string]: string } = pointerMap[exit.destination_uuid];\n\n        if (!pointers) {\n          pointers = {};\n        }\n\n        pointers[exit.uuid] = node.uuid;\n        pointerMap[exit.destination_uuid] = pointers;\n      }\n    }\n  }\n\n  // store our pointers with their associated nodes\n  for (const nodeUUID of Object.keys(pointerMap)) {\n    renderNodeMap[nodeUUID].inboundConnections = pointerMap[nodeUUID];\n  }\n\n  return { renderNodeMap, groups, fields, labels, results };\n};\n\n/**\n * Extracts contact fields from a list of nodes\n */\nexport const extractContactFields = (nodes: FlowNode[]): Asset[] =>\n  nodes.reduce((fieldList, { actions }) => {\n    actions.forEach(action => {\n      if (action.type === Types.set_contact_field) {\n        fieldList.push(fieldToAsset((action as SetContactField).field));\n      }\n    });\n    return fieldList;\n  }, []);\n\n/** Adds all the items from toAdd if that don't already exist in assets */\nexport const mergeAssetMaps = (assets: AssetMap, toAdd: AssetMap): void => {\n  Object.keys(toAdd).forEach((key: string) => {\n    assets[key] = assets[key] || toAdd[key];\n  });\n};\n\nexport const fetchFlowActivity = (\n  endpoint: string,\n  dispatch: DispatchWithState,\n  getState: GetState,\n  uuid: string\n): void => {\n  const {\n    editorState: { simulating, activityInterval, visible }\n  } = getState();\n\n  if (visible) {\n    getActivity(endpoint, uuid).then((activity: Activity) => {\n      // every interval we back off a bit up to 5 minutes\n      if (activity) {\n        const updates: Partial<EditorState> = {\n          liveActivity: activity,\n          activityInterval: Math.min(60000 * 5, activityInterval + 200)\n        };\n\n        if (!simulating) {\n          updates.activity = activity;\n        }\n\n        dispatch(mergeEditorState(updates));\n\n        if (activityTimeout) {\n          window.clearTimeout(activityTimeout);\n        }\n\n        activityTimeout = window.setTimeout(() => {\n          fetchFlowActivity(endpoint, dispatch, getState, uuid);\n        }, activityInterval);\n      }\n    });\n  } else {\n    if (activityTimeout) {\n      window.clearTimeout(activityTimeout);\n    }\n\n    activityTimeout = window.setTimeout(() => {\n      fetchFlowActivity(endpoint, dispatch, getState, uuid);\n    }, 1000);\n  }\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport { Dimensions, FlowPosition } from 'flowTypes';\nimport * as React from 'react';\nimport { newPosition } from 'store/helpers';\n\nimport styles from './CanvasDraggable.module.scss';\n\nexport interface CanvasDraggableProps {\n  position: FlowPosition;\n  uuid: string;\n  ele: (selected: boolean) => JSX.Element;\n\n  selected?: boolean;\n\n  onAnimated?: (uuid: string) => void;\n  updateDimensions?: (uuid: string, position: Dimensions) => void;\n  onDragStart?: (uuid: string, clickedPosition: FlowPosition) => void;\n  onDragStop?: () => void;\n}\n\nexport class CanvasDraggable extends React.PureComponent<CanvasDraggableProps, {}> {\n  private ele!: HTMLDivElement;\n\n  constructor(props: CanvasDraggableProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^handle/, 'ref']\n    });\n  }\n\n  private ref(ref: HTMLDivElement): any {\n    return (this.ele = ref);\n  }\n\n  public componentDidMount(): void {\n    if (this.ele) {\n      if (this.props.updateDimensions) {\n        this.props.updateDimensions(this.props.uuid, {\n          width: this.ele.clientWidth || this.props.position.right - this.props.position.left,\n          height: this.ele.clientHeight || this.props.position.bottom - this.props.position.top\n        });\n      }\n    }\n  }\n\n  public componentDidUpdate(prevProps: CanvasDraggableProps): void {\n    if (this.ele) {\n      if (this.ele.clientWidth && this.ele.clientHeight) {\n        if (this.props.updateDimensions) {\n          this.props.updateDimensions(this.props.uuid, {\n            width: this.ele.clientWidth,\n            height: this.ele.clientHeight\n          });\n        }\n      }\n    }\n  }\n\n  public render(): JSX.Element {\n    const classes = [styles.draggable];\n\n    if (this.props.selected) {\n      classes.push(styles.selected);\n    }\n\n    const handleAnimated = () => {\n      if (this.props.onAnimated) {\n        this.props.onAnimated(this.props.uuid);\n      }\n    };\n\n    return (\n      <div\n        data-testid={'draggable_' + this.props.uuid}\n        onTransitionEnd={handleAnimated}\n        ref={this.ref}\n        className={classes.join(' ')}\n        style={{\n          left: this.props.position.left,\n          top: this.props.position.top\n        }}\n        onMouseDown={(event: React.MouseEvent<HTMLDivElement>) => {\n          // ignore clicks in textareas\n          if (!this.props.selected && (event.target as any).tagName.toUpperCase() === 'TEXTAREA') {\n            return;\n          }\n\n          // ignore right clicks\n          if (event.nativeEvent.which === 3) {\n            return;\n          }\n          if (this.props.onDragStart) {\n            this.props.onDragStart(\n              this.props.uuid,\n              newPosition(\n                event.pageX - this.props.position.left,\n                event.pageY - this.props.position.top\n              )\n            );\n          }\n        }}\n        onMouseUp={(event: React.MouseEvent<HTMLDivElement>) => {\n          if (event.nativeEvent.which === 3) {\n            return;\n          }\n          if (this.props.onDragStop) {\n            this.props.onDragStop();\n          }\n        }}\n      >\n        {this.props.ele(this.props.selected!)}\n      </div>\n    );\n  }\n}\n","import { FlowPosition } from 'flowTypes';\nimport { CanvasPositions } from 'store/editor';\nimport {\n  MAX_REFLOW_ATTEMPTS,\n  NODE_SPACING,\n  set,\n  snapPositionToGrid,\n  timeEnd,\n  timeStart\n} from 'utils';\n\nconst mutate = require('immutability-helper');\n\nexport const collides = (a: FlowPosition, b: FlowPosition, fudge: number) => {\n  // don't bother with collision if we don't have full dimensions\n  /* istanbul ignore next */\n  if (!a.bottom || !b.bottom) {\n    return false;\n  }\n\n  a.bottom += fudge;\n\n  return !(b.left > a.right! || b.right! < a.left || b.top > a.bottom || b.bottom < a.top);\n};\n\nexport const getDraggablesInBox = (\n  positions: CanvasPositions,\n  box: FlowPosition\n): { [uuid: string]: FlowPosition } => {\n  const collisions: any = {};\n  for (const nodeUUID of Object.keys(positions)) {\n    const position = positions[nodeUUID];\n    if (collides(box, position, 0)) {\n      collisions[nodeUUID] = position;\n    }\n  }\n  return collisions;\n};\n\ninterface DraggablePosition extends FlowPosition {\n  uuid: string;\n}\n\nexport const getOrderedDraggables = (positions: CanvasPositions): DraggablePosition[] => {\n  const sorted: DraggablePosition[] = [];\n  Object.keys(positions).forEach((uuid: string) => {\n    sorted.push({ ...positions[uuid], uuid });\n  });\n  return sorted.sort((a: DraggablePosition, b: DraggablePosition) => {\n    let diff = a.top - b.top;\n    if (diff === 0) {\n      diff = a.left - b.left;\n    }\n    return diff;\n  });\n};\n\n/**\n * Gets the first collsion in the node map returning the original node,\n * the node it collides with and optionally an additional node it\n * collides with if inserting between two nodes\n * @param nodes\n */\nconst getFirstCollision = (\n  positions: CanvasPositions,\n  changed: string[],\n  fudge: number\n): DraggablePosition[] => {\n  const sortedDraggables = getOrderedDraggables(positions);\n\n  for (let i = 0; i < sortedDraggables.length; i++) {\n    const current = sortedDraggables[i];\n\n    if (i + 1 < sortedDraggables.length) {\n      for (let j = i + 1; j < sortedDraggables.length; j++) {\n        const other = sortedDraggables[j];\n\n        if (collides(current, other, fudge)) {\n          // if the next node collides too, include it\n          // to deal with inserting between two closely\n          // positioned nodes\n          if (j + 1 < sortedDraggables.length) {\n            const cascaded = sortedDraggables[j + 1];\n            if (collides(other, cascaded, fudge)) {\n              return [current, other, cascaded];\n            }\n          }\n\n          if (\n            !!changed.find((uuid: string) => other.uuid === uuid) &&\n            !!!changed.find((uuid: string) => current.uuid === uuid)\n          ) {\n            return [other, current];\n          }\n\n          return [current, other];\n        }\n      }\n    }\n  }\n  return [];\n};\n\nconst setTop = (position: FlowPosition, newTop: number) => {\n  return snapPositionToGrid({\n    top: newTop,\n    left: position.left,\n    bottom: newTop + (position.bottom! - position.top),\n    right: position.right\n  });\n};\n\n/**\n * Reflow positions to account for any collisions\n * @param positions\n */\nexport const reflow = (\n  positions: CanvasPositions,\n  fudge: number\n): { positions: CanvasPositions; changed: string[] } => {\n  let newPositions = positions;\n  const changed: string[] = [];\n\n  // if for some reason we can't reflow, don't blow up\n  let attempts = 0;\n\n  timeStart('reflow');\n\n  let collision = getFirstCollision(positions, changed, fudge);\n  while (collision.length > 0 && attempts < MAX_REFLOW_ATTEMPTS) {\n    attempts++;\n    if (collision.length) {\n      const [top, bottom, cascade] = collision;\n      newPositions = mutate(newPositions, {\n        [bottom.uuid]: set(setTop(bottom, top.bottom! + NODE_SPACING))\n      });\n      changed.push(bottom.uuid);\n\n      if (cascade) {\n        // start with the top of the bottom node\n        let cascadeTop = top.bottom! + NODE_SPACING;\n\n        // and add its height\n        cascadeTop += bottom.bottom! - bottom.top;\n        newPositions = mutate(newPositions, {\n          [cascade.uuid]: set(setTop(cascade, cascadeTop))\n        });\n\n        changed.push(cascade.uuid);\n      }\n    }\n\n    collision = getFirstCollision(newPositions, changed, fudge);\n  }\n\n  timeEnd('reflow');\n\n  return { positions: newPositions, changed };\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport { CanvasDraggable, CanvasDraggableProps } from 'components/canvas/CanvasDraggable';\nimport { getDraggablesInBox, reflow } from 'components/canvas/helpers';\nimport { DRAG_THRESHOLD } from 'components/flow/Flow';\nimport { Dimensions, FlowPosition } from 'flowTypes';\nimport mutate from 'immutability-helper';\nimport React from 'react';\nimport { CanvasPositions, DragSelection } from 'store/editor';\nimport { addPosition } from 'store/helpers';\nimport { MergeEditorState } from 'store/thunks';\nimport { COLLISION_FUDGE, snapPositionToGrid } from 'utils';\n\nimport styles from './Canvas.module.scss';\n\nexport const CANVAS_PADDING = 300;\nexport const REFLOW_QUIET = 200;\n\nexport interface CanvasProps {\n  uuid: string;\n  dragActive: boolean;\n  draggingNew: boolean;\n  draggables: CanvasDraggableProps[];\n  mutable: boolean;\n  onDragging: (draggedUUIDs: string[]) => void;\n  onUpdatePositions: (positions: CanvasPositions) => void;\n  onRemoveNodes: (nodeUUIDs: string[]) => void;\n  mergeEditorState: MergeEditorState;\n}\n\ninterface CanvasState {\n  dragDownPosition: FlowPosition | null;\n  dragUUID: string | null;\n  dragGroup: boolean;\n  dragSelection: DragSelection | null;\n  uuid: string;\n  positions: CanvasPositions;\n  selected: CanvasPositions;\n  height: number;\n}\n\nexport class Canvas extends React.PureComponent<CanvasProps, CanvasState> {\n  private ele!: HTMLDivElement;\n  private parentOffset!: FlowPosition;\n  private isScrolling: any;\n\n  private reflowTimeout: any;\n\n  // when auto scrolling we need to move dragged elements\n  private lastX!: number | null;\n  private lastY!: number | null;\n\n  // did we just select something\n  private justSelected = false;\n\n  constructor(props: CanvasProps) {\n    super(props);\n\n    let height = document.documentElement.clientHeight;\n\n    const positions: { [uuid: string]: FlowPosition } = {};\n    this.props.draggables.forEach((draggable: CanvasDraggableProps) => {\n      positions[draggable.uuid] = draggable.position;\n      if (draggable.position.bottom) {\n        height = Math.max(height, draggable.position.bottom + CANVAS_PADDING);\n      }\n    });\n\n    this.state = {\n      height,\n      dragDownPosition: null,\n      dragUUID: null,\n      dragGroup: false,\n      dragSelection: null,\n      uuid: this.props.uuid,\n      selected: {},\n      positions\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/, /^render/]\n    });\n  }\n\n  private handleWindowResize(): void {\n    const windowHeight = document.documentElement.clientHeight;\n    this.setState({ height: Math.max(windowHeight, this.state.height) });\n  }\n\n  public componentDidMount(): void {\n    let offset = { left: 0, top: 0 };\n    /* istanbul ignore next */\n    if (this.ele) {\n      offset = this.ele.getBoundingClientRect();\n    }\n    this.parentOffset = { left: offset.left, top: offset.top + window.scrollY };\n\n    window.addEventListener('resize', this.handleWindowResize);\n    document.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  private handleKeyDown(event: any): void {\n    if (this.state.selected && event.key === 'Backspace') {\n      const nodeUUIDs = Object.keys(this.state.selected);\n      if (nodeUUIDs.length > 0) {\n        this.props.onRemoveNodes(Object.keys(this.state.selected));\n      }\n    }\n  }\n\n  public componentWillUnmount(): void {\n    window.removeEventListener('resize', this.handleWindowResize);\n    document.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  public componentDidUpdate(prevProps: CanvasProps): void {\n    let updated = false;\n    let updatedPositions = this.state.positions;\n\n    // are we being given something new\n    this.props.draggables.forEach((draggable: CanvasDraggableProps) => {\n      if (!this.state.positions[draggable.uuid]) {\n        updatedPositions = mutate(updatedPositions, {\n          $merge: { [draggable.uuid]: draggable.position }\n        });\n        updated = true;\n      }\n    });\n\n    // have we removed something\n    Object.keys(updatedPositions).forEach((uuid: string) => {\n      if (\n        !this.props.draggables.find((draggable: CanvasDraggableProps) => draggable.uuid === uuid)\n      ) {\n        updatedPositions = mutate(updatedPositions, { $unset: [[uuid]] } as any);\n        updated = true;\n      }\n    });\n\n    if (updated) {\n      this.setState({ positions: updatedPositions });\n    }\n  }\n\n  public renderSelectionBox(): JSX.Element | null {\n    const drag = this.state.dragSelection;\n\n    if (drag && drag.startX && drag.startY && drag.currentX && drag.currentY) {\n      const left = Math.min(drag.startX, drag.currentX);\n      const top = Math.min(drag.startY, drag.currentY);\n      const width = Math.max(drag.startX, drag.currentX) - left;\n      const height = Math.max(drag.startY, drag.currentY) - top;\n      if (this.state.dragSelection && this.state.dragSelection.startX) {\n        return <div className={styles.drag_selection} style={{ left, top, width, height }} />;\n      }\n    }\n\n    return null;\n  }\n\n  private isClickOnCanvas(event: React.MouseEvent<HTMLDivElement>): boolean {\n    // ignore right clicks\n    if (event.nativeEvent.which === 3) {\n      return false;\n    }\n    return (event.target as any).id === this.state.uuid;\n  }\n\n  private handleMouseDown(event: React.MouseEvent<HTMLDivElement>): void {\n    // ignore right clicks\n    if (event.nativeEvent.which === 3) {\n      return;\n    }\n\n    if (!this.props.mutable) {\n      return;\n    }\n\n    this.justSelected = false;\n    if (this.isClickOnCanvas(event)) {\n      this.setState({\n        dragSelection: {\n          startX: event.pageX - this.parentOffset.left,\n          startY: event.pageY - this.parentOffset.top,\n          currentX: event.pageX - this.parentOffset.left,\n          currentY: event.pageY - this.parentOffset.top\n        }\n      });\n    }\n  }\n\n  private handleMouseMove(event: React.MouseEvent<HTMLDivElement>): void {\n    if (!this.props.mutable) {\n      return;\n    }\n\n    if (this.props.draggingNew) {\n      this.lastX = event.pageX;\n      this.lastY = event.pageY;\n      this.updateStateWithScroll(event.clientY, event.pageY);\n      return;\n    }\n\n    if (this.state.dragSelection && this.state.dragSelection.startX) {\n      const drag = this.state.dragSelection;\n\n      if (drag && drag.startX && drag.startY && drag.currentX && drag.currentY) {\n        const left = Math.min(drag.startX, drag.currentX);\n        const top = Math.min(drag.startY, drag.currentY);\n        const right = Math.max(drag.startX, drag.currentX);\n        const bottom = Math.max(drag.startY, drag.currentY);\n\n        const selected = getDraggablesInBox(this.state.positions, {\n          left,\n          top,\n          right,\n          bottom\n        });\n\n        this.setState({\n          dragSelection: {\n            startX: drag.startX,\n            startY: drag.startY,\n            currentX: event.pageX - this.parentOffset.left,\n            currentY: event.pageY - this.parentOffset.top\n          }\n        });\n\n        this.setState({ selected });\n\n        if (Object.keys(selected).length > 0) {\n          this.justSelected = true;\n        }\n      }\n    }\n\n    if (this.state.dragUUID) {\n      this.updatePositions(event.pageX, event.pageY, event.clientY, false);\n    }\n  }\n\n  private scrollCanvas(amount: number): void {\n    if (!this.isScrolling) {\n      this.isScrolling = true;\n\n      let speed = amount;\n      if (window.scrollY + amount < 0) {\n        speed = 0;\n      }\n\n      this.isScrolling = window.setInterval(() => {\n        if (this.lastX && this.lastY) {\n          // as we scroll we need to move our dragged items along with us\n          this.updatePositions(this.lastX, this.lastY + speed, 0, false);\n          window.scrollBy(0, speed);\n        }\n      }, 30);\n    }\n  }\n\n  private handleMouseUpCapture(event: React.MouseEvent<HTMLDivElement>): void {\n    if (!this.props.mutable) {\n      return;\n    }\n\n    // ignore right clicks\n    if (event.nativeEvent.which === 3) {\n      return;\n    }\n\n    this.lastX = null;\n    this.lastY = null;\n    if (this.state.dragUUID) {\n      this.setState({\n        dragDownPosition: null,\n        dragSelection: null,\n        dragUUID: null\n      });\n    }\n\n    if (!this.justSelected) {\n      this.props.mergeEditorState({\n        dragActive: false\n      });\n\n      this.setState({ selected: {} });\n    }\n\n    if (this.state.dragSelection && this.state.dragSelection.startX) {\n      this.setState({\n        dragSelection: {\n          startX: undefined,\n          startY: undefined,\n          currentX: undefined,\n          currentY: undefined\n        }\n      });\n    }\n\n    this.justSelected = false;\n  }\n\n  public handleUpdateDimensions(uuid: string, dimensions: Dimensions): void {\n    let pos = this.state.positions[uuid];\n    if (!pos) {\n      pos = this.props.draggables.find((item: CanvasDraggableProps) => item.uuid === uuid)!\n        .position;\n    }\n\n    const newPosition = {\n      left: pos.left,\n      top: pos.top,\n      right: pos.left + dimensions.width,\n      bottom: pos.top + dimensions.height\n    };\n\n    if (newPosition.bottom !== pos.bottom || newPosition.right !== pos.right) {\n      if (newPosition.right !== pos.right || newPosition.bottom !== pos.bottom) {\n        this.setState((prevState: CanvasState) => {\n          const newPositions = mutate(prevState.positions, {\n            $merge: {\n              [uuid]: newPosition\n            }\n          });\n\n          return {\n            positions: newPositions,\n            height: Math.max(newPosition.bottom + CANVAS_PADDING, prevState.height)\n          };\n        });\n\n        this.markReflow();\n      }\n    }\n  }\n\n  public doReflow(): void {\n    const { positions, changed } = reflow(this.state.positions, COLLISION_FUDGE);\n    if (changed) {\n      this.setState({ positions });\n\n      if (changed) {\n        this.props.onUpdatePositions(\n          changed.reduce((results: CanvasPositions, uuid: string) => {\n            results[uuid] = positions[uuid];\n            return results;\n          }, {})\n        );\n      }\n    }\n\n    this.props.onDragging(changed);\n  }\n\n  private markReflow(): void {\n    if (this.reflowTimeout) {\n      clearTimeout(this.reflowTimeout);\n    }\n\n    this.reflowTimeout = setTimeout(() => {\n      // only reflow if we aren't dragging\n      if (!this.state.dragUUID) {\n        this.doReflow();\n      }\n    }, REFLOW_QUIET);\n  }\n\n  /**\n   * Updates the state of the canvas, expanding and scrolling as needed\n   * @param windowY the mouse position in the viewport\n   * @param pageY the mouse position in the full canvas\n   * @param otherState optional state to set\n   */\n  private updateStateWithScroll(\n    windowY: number,\n    pageY: number,\n    otherState: Partial<CanvasState> = {}\n  ): void {\n    const viewportHeight = document.documentElement.clientHeight;\n\n    this.setState(\n      (prevState: CanvasState) => {\n        return {\n          ...(otherState as CanvasState),\n          height: Math.max(pageY + CANVAS_PADDING, prevState.height)\n        };\n      },\n      () => {\n        // check if we need to scroll our canvas\n\n        if (!this.isScrolling && windowY !== 0) {\n          if (windowY + 100 > viewportHeight) {\n            this.scrollCanvas(15);\n          } else if (windowY < 100) {\n            this.scrollCanvas(-15);\n          }\n        }\n        // if we are scrolling but given a clientY then user is mousing\n        else if (windowY !== 0 && (windowY > 100 && windowY + 100 < viewportHeight)) {\n          window.clearInterval(this.isScrolling);\n          this.isScrolling = null;\n        }\n      }\n    );\n  }\n\n  private updatePositions(pageX: number, pageY: number, clientY: number, snap: boolean): void {\n    if (this.state.dragUUID) {\n      const { dragUUID } = this.state;\n\n      // save off the last update, if we scroll on the user's behalf we'll need this\n      this.lastX = pageX;\n      this.lastY = pageY;\n\n      const startPosition = this.props.dragActive\n        ? this.state.selected[dragUUID]\n        : this.state.positions[dragUUID];\n\n      if (this.state.dragDownPosition) {\n        const xd =\n          pageX - this.parentOffset.left - this.state.dragDownPosition.left - startPosition.left;\n\n        const yd =\n          pageY - this.parentOffset.top - this.state.dragDownPosition.top - startPosition.top;\n\n        let lowestNode: number | undefined = 0;\n        if (this.props.dragActive) {\n          const delta = { left: xd, top: yd };\n          const prevState = this.state;\n          const uuids = Object.keys(prevState.selected);\n          let newPositions = prevState.positions;\n          uuids.forEach((uuid: string) => {\n            let newPosition = addPosition(prevState.selected[uuid], delta);\n            if (snap) {\n              newPosition = snapPositionToGrid(newPosition);\n            }\n\n            if (newPosition && newPosition.bottom! > lowestNode!) {\n              lowestNode = newPosition.bottom;\n            }\n\n            newPositions = mutate(newPositions, {\n              $merge: { [uuid]: newPosition }\n            });\n          });\n\n          this.props.onDragging(uuids);\n          this.updateStateWithScroll(clientY, lowestNode, {\n            positions: newPositions\n          });\n        } else {\n          if (Math.abs(xd) + Math.abs(yd) > DRAG_THRESHOLD) {\n            let selected = this.state.selected;\n            if (!(this.state.dragUUID in selected)) {\n              selected = { [dragUUID]: this.state.positions[dragUUID] };\n            }\n\n            this.props.mergeEditorState({\n              dragActive: true\n            });\n\n            this.setState({ selected });\n          }\n        }\n      }\n    }\n  }\n\n  private handleDragStart(uuid: string, position: FlowPosition): void {\n    this.setState({\n      dragUUID: uuid,\n      dragDownPosition: {\n        left: position.left - this.parentOffset.left,\n        top: position.top - this.parentOffset.top\n      }\n    });\n  }\n\n  /** Gets all the positions for nodes that were dragged */\n  private getSelectedPositions(): CanvasPositions {\n    return Object.keys(this.state.selected).reduce((result: CanvasPositions, uuid: string) => {\n      result[uuid] = this.state.positions[uuid];\n      return result;\n    }, {});\n  }\n\n  private handleDragStop(): void {\n    if (this.state.dragUUID) {\n      this.updatePositions(this.lastX!, this.lastY!, 0, true);\n    }\n\n    this.props.onUpdatePositions(this.getSelectedPositions());\n    this.setState({\n      dragUUID: null,\n      dragDownPosition: null,\n      dragSelection: null\n    });\n\n    this.markReflow();\n\n    this.props.mergeEditorState({\n      dragActive: false\n    });\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div className={styles.canvas_container}>\n        <div\n          data-testid=\"canvas\"\n          style={{ height: this.state.height }}\n          id={this.state.uuid}\n          ref={(ele: HTMLDivElement) => {\n            this.ele = ele;\n          }}\n          className={styles.canvas}\n          onMouseDown={this.handleMouseDown}\n          onMouseMove={this.handleMouseMove}\n          onMouseUp={this.handleMouseUpCapture}\n        >\n          {this.props.draggables.map((draggable: CanvasDraggableProps) => {\n            const pos = this.state.positions[draggable.uuid] || draggable.position;\n            return (\n              <CanvasDraggable\n                onAnimated={(uuid: string) => {\n                  this.props.onDragging([uuid]);\n                }}\n                key={'draggable_' + draggable.uuid}\n                uuid={draggable.uuid}\n                updateDimensions={this.handleUpdateDimensions}\n                position={pos}\n                selected={!!this.state.selected[draggable.uuid]}\n                ele={draggable.ele}\n                onDragStart={this.handleDragStart}\n                onDragStop={this.handleDragStop}\n              />\n            );\n          })}\n          {this.props.children}\n          {this.renderSelectionBox()}\n        </div>\n      </div>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport styles from 'components/counter/Counter.module.scss';\nimport * as React from 'react';\nimport { addCommas } from 'utils';\n\nexport interface CounterProps {\n  keepVisible: boolean;\n  containerStyle: string;\n  countStyle: string;\n  count: number;\n  onClick?: () => void;\n  onMouseEnter?: () => void;\n  onMouseLeave?: () => void;\n}\n\nexport default class Counter extends React.Component<CounterProps> {\n  private ele!: HTMLDivElement;\n\n  constructor(props: CounterProps) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/^handle/, /^get/]\n    });\n  }\n\n  public componentDidMount(): void {\n    this.handleScrollIntoView();\n  }\n\n  public componentDidUpdate(prevProps: CounterProps): void {\n    if (prevProps.count !== this.props.count) {\n      this.handleScrollIntoView();\n    }\n  }\n\n  private handleScrollIntoView(): void {\n    if (!!this.ele) {\n      if (this.props.count > 0 && this.props.keepVisible) {\n        window.setTimeout(() => {\n          window.scrollTo({\n            top: this.ele.getBoundingClientRect().top - 200 + window.scrollY,\n            behavior: 'smooth'\n          });\n        }, 200);\n      }\n    }\n  }\n\n  private handleMouseEvent(event: React.MouseEvent<HTMLDivElement>, callback: () => void): void {\n    event.preventDefault();\n    event.stopPropagation();\n    if (callback) {\n      callback();\n    }\n  }\n\n  private handleMouseEnter(event: React.MouseEvent<HTMLDivElement>): void {\n    this.handleMouseEvent(event, this.props.onMouseEnter!);\n  }\n\n  private handleMouseLeave(event: React.MouseEvent<HTMLDivElement>): void {\n    this.handleMouseEvent(event, this.props.onMouseLeave!);\n  }\n\n  private handleClick(event: React.MouseEvent<HTMLDivElement>): void {\n    this.handleMouseEvent(event, this.props.onClick!);\n  }\n\n  public render(): JSX.Element | null {\n    const count = addCommas(this.props.count);\n    return (\n      <div\n        ref={(ele: HTMLDivElement) => {\n          this.ele = ele;\n        }}\n        className={\n          styles.counter +\n          ' ' +\n          this.props.containerStyle +\n          ' ' +\n          (this.props.onClick ? styles.clickable : '') +\n          ' ' +\n          (this.props.count > 0 ? styles.visible : '')\n        }\n        onClick={this.handleClick}\n        data-spec=\"counter-outter\"\n      >\n        <div\n          onMouseEnter={this.handleMouseEnter}\n          onMouseLeave={this.handleMouseLeave}\n          className={this.props.countStyle}\n          data-spec=\"counter-inner\"\n        >\n          {count}\n        </div>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { createClickHandler } from 'utils';\n\nimport styles from './TitleBar.module.scss';\nimport { fakePropType } from 'config/ConfigProvider';\nimport i18n from 'config/i18n';\n\nexport interface TitleBarProps {\n  title: string;\n  onRemoval(event: React.MouseEvent<HTMLElement>): any;\n  __className?: string;\n  showRemoval?: boolean;\n  showMove?: boolean;\n  onMoveUp?(event: React.MouseEvent<HTMLElement>): any;\n  shouldCancelClick?: () => boolean;\n}\n\ninterface TitleBarState {\n  confirmingRemoval: boolean;\n}\n\nexport const confirmationTime = 2000;\n\nexport const titlebarContainerSpecId = 'titlebar-container';\nexport const titlebarSpecId = 'titlebar';\nexport const moveIconSpecId = 'move-icon';\nexport const moveSpecId = 'move';\nexport const removeIconSpecId = 'remove-icon';\nexport const confirmationSpecId = 'confirmation';\nexport const confirmRemovalSpecId = 'confirm-removal';\n\n/**\n * Simple title bar with confirmation removal\n */\nexport default class TitleBar extends React.Component<TitleBarProps, TitleBarState> {\n  private confirmationTimeout: number;\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: TitleBarProps) {\n    super(props);\n\n    this.state = {\n      confirmingRemoval: false\n    };\n\n    this.handleConfirmRemoval = this.handleConfirmRemoval.bind(this);\n  }\n\n  public componentWillUnmount(): void {\n    if (this.confirmationTimeout) {\n      window.clearTimeout(this.confirmationTimeout);\n    }\n  }\n\n  public handleMouseUpCapture(event: React.MouseEvent<HTMLElement>): void {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  public handleConfirmRemoval(event: React.MouseEvent<HTMLElement>): void {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    this.setState({\n      confirmingRemoval: true\n    });\n\n    this.confirmationTimeout = window.setTimeout(\n      () =>\n        this.setState({\n          confirmingRemoval: false\n        }),\n      confirmationTime\n    );\n  }\n\n  private getMoveArrow(): JSX.Element {\n    let moveArrow: JSX.Element = null;\n\n    if (this.props.showMove && this.context.config.mutable) {\n      moveArrow = (\n        <div\n          className={styles.up_button}\n          {...createClickHandler(\n            this.props.onMoveUp,\n            this.props.shouldCancelClick,\n            this.handleMouseUpCapture\n          )}\n          data-testid={moveIconSpecId}\n        >\n          <span className=\"fe-arrow-up\" />\n        </div>\n      );\n    } else {\n      moveArrow = <div className={styles.up_button} data-spec={moveSpecId} />;\n    }\n\n    return moveArrow;\n  }\n\n  private getRemove(): JSX.Element {\n    let remove: JSX.Element = null;\n\n    if (this.props.showRemoval && this.context.config.mutable) {\n      remove = (\n        <div\n          className={styles.remove_button}\n          {...createClickHandler(\n            this.handleConfirmRemoval,\n            this.props.shouldCancelClick,\n            this.handleMouseUpCapture\n          )}\n          data-testid={removeIconSpecId}\n        >\n          <span className=\"fe-x\" />\n        </div>\n      );\n    }\n\n    return remove;\n  }\n\n  private getConfirmationEl(): JSX.Element {\n    let confirmation: JSX.Element;\n\n    if (this.state.confirmingRemoval && this.context.config.mutable) {\n      confirmation = (\n        <div className={styles.remove_confirm} data-spec={confirmationSpecId}>\n          <div className={styles.up_button} data-spec={moveSpecId} />\n          <div className={styles.titletext}>{i18n.t('removal_confirmation', 'Remove?')}</div>\n          <div\n            className={styles.remove_button}\n            {...createClickHandler(\n              this.props.onRemoval,\n              this.props.shouldCancelClick,\n              this.handleMouseUpCapture\n            )}\n            data-testid={confirmRemovalSpecId}\n          >\n            <span className=\"fe-x\" />\n          </div>\n        </div>\n      );\n    }\n\n    return confirmation;\n  }\n\n  public render(): JSX.Element {\n    const confirmation: JSX.Element = this.getConfirmationEl();\n    const moveArrow: JSX.Element = this.getMoveArrow();\n    const remove: JSX.Element = this.getRemove();\n    return (\n      <div className={styles.titlebar} data-spec={titlebarContainerSpecId}>\n        <div className={`${this.props.__className} ${styles.normal}`} data-spec={titlebarSpecId}>\n          {moveArrow}\n          <div className={styles.titletext}>{this.props.title}</div>\n          {remove}\n        </div>\n        {confirmation}\n      </div>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport shared from 'components/shared.module.scss';\nimport TitleBar from 'components/titlebar/TitleBar';\nimport { ConfigProviderContext, fakePropType } from 'config/ConfigProvider';\nimport { Types } from 'config/interfaces';\nimport { getTypeConfig } from 'config/typeConfigs';\nimport { Action, AnyAction, Endpoints, LocalizationMap } from 'flowTypes';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Asset, RenderNode } from 'store/flowContext';\nimport AppState from 'store/state';\nimport {\n  ActionAC,\n  DispatchWithState,\n  moveActionUp,\n  OnOpenNodeEditor,\n  onOpenNodeEditor,\n  removeAction\n} from 'store/thunks';\nimport { createClickHandler, getLocalization } from 'utils';\n\nimport styles from './Action.module.scss';\n\nexport interface ActionWrapperPassedProps {\n  first: boolean;\n  action: AnyAction;\n  localization: LocalizationMap;\n  selected: boolean;\n  render: (action: AnyAction, endpoints: Endpoints) => React.ReactNode;\n}\n\nexport interface ActionWrapperStoreProps {\n  renderNode: RenderNode;\n  language: Asset;\n  translating: boolean;\n  onOpenNodeEditor: OnOpenNodeEditor;\n  removeAction: ActionAC;\n  moveActionUp: ActionAC;\n}\n\nexport type ActionWrapperProps = ActionWrapperPassedProps & ActionWrapperStoreProps;\n\nexport const actionContainerSpecId = 'action-container';\nexport const actionOverlaySpecId = 'action-overlay';\nexport const actionInteractiveDivSpecId = 'interactive-div';\nexport const actionBodySpecId = 'action-body';\n\nconst cx: any = classNames.bind({ ...shared, ...styles });\n\n// Note: this needs to be a ComponentClass in order to work w/ react-flip-move\nexport class ActionWrapper extends React.Component<ActionWrapperProps> {\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: ActionWrapperProps, context: ConfigProviderContext) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleActionClicked(event: React.MouseEvent<HTMLElement>): void {\n    const target = event.target as any;\n\n    const showAdvanced =\n      target && target.attributes && target.getAttribute('data-advanced') === 'true';\n\n    this.props.onOpenNodeEditor({\n      originalNode: this.props.renderNode,\n      originalAction: this.props.action,\n      showAdvanced\n    });\n  }\n\n  public handleRemoval(event: React.MouseEvent<HTMLDivElement>): void {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    this.props.removeAction(this.props.renderNode.node.uuid, this.props.action);\n  }\n\n  public handleMoveUp(event: React.MouseEvent<HTMLDivElement>): void {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    this.props.moveActionUp(this.props.renderNode.node.uuid, this.props.action);\n  }\n\n  public getAction(): Action {\n    // if we are translating, us our localized version\n    if (this.props.translating) {\n      const localization = getLocalization(\n        this.props.action,\n        this.props.localization,\n        this.props.language\n      );\n      return localization.getObject() as AnyAction;\n    }\n\n    return this.props.action;\n  }\n\n  private getClasses(): string {\n    const localizedKeys = [];\n    let missingLocalization = false;\n\n    if (this.props.translating) {\n      if (\n        this.props.action.type === Types.send_msg ||\n        this.props.action.type === Types.send_broadcast ||\n        this.props.action.type === Types.say_msg\n      ) {\n        localizedKeys.push('text');\n      }\n\n      if (this.props.action.type === Types.send_email) {\n        localizedKeys.push('subject');\n      }\n\n      if (localizedKeys.length !== 0) {\n        const localization = getLocalization(\n          this.props.action,\n          this.props.localization,\n          this.props.language\n        );\n\n        if (localization.isLocalized()) {\n          for (const key of localizedKeys) {\n            if (!(key in localization.localizedKeys)) {\n              missingLocalization = true;\n              break;\n            }\n          }\n        } else {\n          missingLocalization = true;\n        }\n      }\n    }\n\n    const notLocalizable = this.props.translating && localizedKeys.length === 0;\n\n    return cx({\n      [styles.action]: true,\n      [styles.has_router]:\n        this.props.renderNode.node.hasOwnProperty('router') &&\n        this.props.renderNode.node.router !== null,\n      [styles.translating]: this.props.translating,\n      [styles.not_localizable]: notLocalizable,\n      [styles.missing_localization]: missingLocalization,\n      [styles.localized]: !notLocalizable && !missingLocalization\n    });\n  }\n\n  public render(): JSX.Element {\n    const { name } = getTypeConfig(this.props.action.type);\n    const classes = this.getClasses();\n    const actionToInject = this.getAction();\n    const titleBarClass = (shared as any)[this.props.action.type] || shared.missing;\n    const actionClass = (styles as any)[this.props.action.type] || styles.missing;\n    const showRemoval = !this.props.translating;\n    const showMove = !this.props.first && !this.props.translating;\n\n    const events = this.context.config.mutable\n      ? createClickHandler(this.handleActionClicked, () => this.props.selected)\n      : {};\n\n    return (\n      <div\n        id={`action-${this.props.action.uuid}`}\n        className={classes}\n        data-spec={actionContainerSpecId}\n      >\n        <div className={styles.overlay} data-spec={actionOverlaySpecId} />\n        <div {...events} data-spec={actionInteractiveDivSpecId}>\n          <TitleBar\n            __className={titleBarClass}\n            title={name}\n            onRemoval={this.handleRemoval}\n            showRemoval={showRemoval}\n            showMove={showMove}\n            onMoveUp={this.handleMoveUp}\n            shouldCancelClick={() => this.props.selected}\n          />\n          <div className={styles.body + ' ' + actionClass} data-spec={actionBodySpecId}>\n            {this.props.render(actionToInject, this.context.config.endpoints)}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n/* istanbul ignore next */\nconst mapStateToProps = ({\n  flowContext: {\n    definition: { localization }\n  },\n  editorState: { language, translating }\n}: AppState) => ({\n  language,\n  translating,\n  localization\n});\n\n/* istanbul ignore next */\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators(\n    {\n      onOpenNodeEditor,\n      removeAction,\n      moveActionUp\n    },\n    dispatch\n  );\n\nconst ConnectedActionWrapper = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  null,\n  { forwardRef: true }\n)(ActionWrapper);\n\nexport default ConnectedActionWrapper;\n","import * as React from 'react';\n\nimport styles from './DragHelper.module.scss';\nimport { Trans } from 'react-i18next';\n\ninterface DragHelperState {\n  visible: boolean;\n}\n\nexport default class DragHelper extends React.Component<{}, DragHelperState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      visible: false\n    };\n  }\n\n  public componentDidMount(): void {\n    window.setTimeout(() => {\n      if (!this.state.visible) {\n        this.setState({ visible: true });\n      }\n    }, 100);\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div className={styles.drag_helper + ' ' + (this.state.visible ? styles.visible : '')}>\n        <div className={styles.arrow}>\n          <div className={styles.tail} />\n          <div className={styles.head} />\n        </div>\n        <div className={styles.help_text}>\n          <Trans i18nKey=\"drag_helper\">\n            To connect nodes, <span className={styles.bold}>drag</span> from the red circle.\n          </Trans>\n        </div>\n      </div>\n    );\n  }\n}\n","import { Exit } from 'flowTypes';\n\nexport const getExitActivityKey = (exit: Exit) => {\n  return exit.uuid + ':' + exit.destination_uuid;\n};\n","import * as React from 'react';\nimport { range } from 'utils';\n\nimport styles from './Loading.module.scss';\n\nexport interface LoadingProps {\n  size: number;\n  units: number;\n  color: string;\n  square?: boolean;\n}\n\ninterface Color {\n  r: number;\n  g: number;\n  b: number;\n}\n\ninterface LoadingState {\n  color: Color;\n}\n\nconst hexToRgb = (hex: string): Color => {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result\n    ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16)\n      }\n    : null;\n};\n\nexport default class Loading extends React.Component<LoadingProps, LoadingState> {\n  constructor(props: LoadingProps) {\n    super(props);\n\n    this.state = {\n      color: hexToRgb(props.color)\n    };\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div\n        className={styles.loading}\n        style={{\n          width: this.props.size * this.props.units * 2,\n          height: this.props.size\n        }}\n      >\n        {range(0, this.props.units).map((num: number) => (\n          <div\n            key={`ball_${num}`}\n            style={{\n              borderRadius: this.props.square ? '0' : '50%',\n              width: this.props.size,\n              height: this.props.size,\n              margin: this.props.size / 3,\n              animationDelay: `-${1 - num * (1 / this.props.units)}s`,\n              background: `rgba(${this.state.color.r},${this.state.color.g},${\n                this.state.color.b\n              }, ${1 - num * (1 / this.props.units)})`\n            }}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport Counter from 'components/counter/Counter';\nimport DragHelper from 'components/draghelper/DragHelper';\nimport { getExitActivityKey } from 'components/flow/exit/helpers';\nimport Loading from 'components/loading/Loading';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Cancel, getRecentMessages } from 'external';\nimport { Category, Exit, FlowNode, LocalizationMap } from 'flowTypes';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { RecentMessage } from 'store/editor';\nimport { Asset } from 'store/flowContext';\nimport AppState from 'store/state';\nimport { DisconnectExit, disconnectExit, DispatchWithState } from 'store/thunks';\nimport { createClickHandler, getLocalization, renderIf } from 'utils';\n\nimport styles from './Exit.module.scss';\n\nexport interface ExitPassedProps {\n  exit: Exit;\n  categories: Category[];\n  node: FlowNode;\n  showDragHelper: boolean;\n  plumberMakeSource: (id: string) => void;\n  plumberRemove: (id: string) => void;\n  plumberConnectExit: (node: FlowNode, exit: Exit) => void;\n  plumberUpdateClass: (\n    node: FlowNode,\n    exit: Exit,\n    className: string,\n    confirmDelete: boolean\n  ) => void;\n}\n\nexport interface ExitStoreProps {\n  translating: boolean;\n  dragging: boolean;\n  language: Asset;\n  localization: LocalizationMap;\n  disconnectExit: DisconnectExit;\n  segmentCount: number;\n  recentMessages: RecentMessage[];\n}\n\nexport type ExitProps = ExitPassedProps & ExitStoreProps;\n\nexport interface ExitState {\n  confirmDelete: boolean;\n  recentMessages: RecentMessage[];\n  fetchingRecentMessages: boolean;\n  showDragHelper: boolean;\n}\n\nconst cx: any = classNames.bind(styles);\n\nexport class ExitComp extends React.PureComponent<ExitProps, ExitState> {\n  private timeout: number;\n  private hideDragHelper: number;\n  private pendingMessageFetch: Cancel = {};\n  private ele: HTMLDivElement;\n\n  constructor(props: ExitProps) {\n    super(props);\n\n    this.state = {\n      confirmDelete: false,\n      recentMessages: null,\n      fetchingRecentMessages: false,\n      showDragHelper: props.showDragHelper\n    };\n\n    bindCallbacks(this, {\n      include: [/^on/, /^get/, /^handle/, /^connect/]\n    });\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  public getSourceId(): string {\n    return `${this.props.node.uuid}:${this.props.exit.uuid}`;\n  }\n\n  public handleDisconnect(): void {\n    this.setState({ showDragHelper: false });\n  }\n\n  public componentDidMount(): void {\n    this.props.plumberMakeSource(this.getSourceId());\n\n    if (this.ele) {\n      this.ele.addEventListener('disconnect', this.handleDisconnect);\n    }\n\n    if (this.props.exit.destination_uuid) {\n      this.connect();\n    }\n  }\n\n  public componentDidUpdate(prevProps: ExitProps): void {\n    if (\n      !this.props.exit.destination_uuid ||\n      this.props.exit.destination_uuid !== prevProps.exit.destination_uuid\n    ) {\n      this.connect();\n      if (this.state.confirmDelete) {\n        this.setState({ confirmDelete: false });\n      }\n    }\n\n    if (this.state.showDragHelper && prevProps.showDragHelper && !this.props.showDragHelper) {\n      this.setState({ showDragHelper: false });\n    }\n\n    this.props.plumberUpdateClass(\n      this.props.node,\n      this.props.exit,\n      'confirm-delete',\n      this.state.confirmDelete\n    );\n  }\n\n  public componentWillUnmount(): void {\n    if (this.props.exit.destination_uuid) {\n      this.props.plumberRemove(this.getSourceId());\n    }\n\n    if (this.ele) {\n      this.ele.removeEventListener('disconnect', this.handleDisconnect);\n    }\n  }\n\n  private handleMouseDown(event: React.MouseEvent<HTMLElement>): void {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  private handleClick(event: React.MouseEvent<HTMLElement>): void {\n    if (!this.props.translating) {\n      if (this.props.exit.destination_uuid) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.setState(\n          {\n            confirmDelete: true\n          },\n          () => {\n            this.timeout = window.setTimeout(() => {\n              this.setState({\n                confirmDelete: false\n              });\n            }, 2000);\n          }\n        );\n      } else {\n        event.preventDefault();\n        event.stopPropagation();\n        if (!this.state.showDragHelper) {\n          this.setState({ showDragHelper: true }, () => {\n            if (this.hideDragHelper) {\n              window.clearTimeout(this.hideDragHelper);\n            }\n            this.hideDragHelper = window.setTimeout(() => {\n              this.setState({ showDragHelper: false });\n            }, 3000);\n          });\n        }\n      }\n    }\n  }\n\n  private onDisconnect(event: React.MouseEvent<HTMLElement>): void {\n    if (this.timeout) {\n      window.clearTimeout(this.timeout);\n    }\n\n    if (this.hideDragHelper) {\n      window.clearTimeout(this.hideDragHelper);\n    }\n\n    this.props.disconnectExit(this.props.node.uuid, this.props.exit.uuid);\n  }\n\n  private connect(): void {\n    this.props.plumberConnectExit(this.props.node, this.props.exit);\n  }\n\n  private handleShowRecentMessages(): void {\n    if (this.props.recentMessages) {\n      this.setState({ recentMessages: this.props.recentMessages });\n      return;\n    }\n\n    this.setState({ fetchingRecentMessages: true }, () => {\n      getRecentMessages(\n        this.context.config.endpoints.recents,\n        this.props.exit,\n        this.pendingMessageFetch\n      )\n        .then((recentMessages: RecentMessage[]) => {\n          this.setState({ recentMessages, fetchingRecentMessages: false });\n        })\n        .catch(() => {\n          // we may have been canceled\n        });\n    });\n  }\n\n  private handleHideRecentMessages(): void {\n    if (this.pendingMessageFetch.reject) {\n      this.pendingMessageFetch.reject();\n      this.pendingMessageFetch = {};\n    }\n\n    this.setState({ fetchingRecentMessages: false, recentMessages: null });\n  }\n\n  private getSegmentCount(): JSX.Element {\n    // Only exits with a destination have activity\n    if (this.props.exit.destination_uuid) {\n      const key = `count:${this.props.exit.uuid}:${this.props.exit.destination_uuid}`;\n      return (\n        <div style={{ position: 'relative' }}>\n          <Counter\n            key={key}\n            count={this.props.segmentCount}\n            containerStyle={styles.activity}\n            countStyle={styles.count}\n            keepVisible={false}\n            onMouseEnter={this.handleShowRecentMessages}\n            onMouseLeave={this.handleHideRecentMessages}\n          />\n          {this.getRecentMessages()}\n        </div>\n      );\n    }\n    return null;\n  }\n\n  public getName(): { name: string; localized?: boolean } {\n    if (this.props.translating) {\n      let name: string = '';\n      let delim: string = '';\n\n      let localized: boolean = false;\n\n      this.props.categories.forEach((category: Category) => {\n        const localization = getLocalization(\n          category,\n          this.props.localization,\n          this.props.language\n        );\n\n        localized = localized || 'name' in localization.localizedKeys;\n        const localizedObject = localization.getObject() as Category;\n        name += delim + localizedObject.name;\n        delim = ', ';\n      });\n\n      return { name, localized };\n    } else {\n      return {\n        name: this.props.categories.map((category: Category) => category.name).join(', ')\n      };\n    }\n  }\n\n  private getRecentMessages(): JSX.Element {\n    if (this.state.fetchingRecentMessages || this.state.recentMessages !== null) {\n      const recentMessages = this.state.recentMessages || [];\n      const hasRecents = recentMessages.length !== 0;\n\n      const recentStyles = [styles.recent_messages];\n\n      let title = 'Recent Messages';\n      if (!hasRecents && !this.state.fetchingRecentMessages) {\n        title = 'No Recent Messages';\n        recentStyles.push(styles.no_recents);\n      }\n\n      return (\n        <div className={recentStyles.join(' ')}>\n          <div className={styles.title}>{title}</div>\n          {recentMessages.map((recentMessage: RecentMessage, idx: number) => (\n            <div key={'recent_' + idx} className={styles.message}>\n              <div className={styles.text}>{recentMessage.text}</div>\n              <div className={styles.sent}>{recentMessage.sent.toLocaleString()}</div>\n            </div>\n          ))}\n          {this.state.recentMessages === null ? (\n            <div className={styles.loading}>\n              <Loading size={10} units={6} color=\"#999999\" />\n            </div>\n          ) : null}\n        </div>\n      );\n    }\n    return null;\n  }\n\n  public render(): JSX.Element {\n    const { name, localized } = this.getName();\n\n    const nameStyle = name ? styles.name : '';\n    const connected = this.props.exit.destination_uuid ? ' jtk-connected' : '';\n    const dragNodeClasses = cx(styles.endpoint, connected);\n    const confirmDelete =\n      this.state.confirmDelete && this.props.exit.hasOwnProperty('destination_uuid');\n    const confirm: JSX.Element =\n      confirmDelete && this.context.config.mutable ? (\n        <div\n          className={styles.confirm_x + ' fe-x'}\n          {...createClickHandler(this.onDisconnect, () => this.props.dragging)}\n        />\n      ) : null;\n    const exitClasses: string = cx({\n      [styles.exit]: true,\n      'plumb-exit': true,\n      [styles.translating]: this.props.translating,\n      [styles.unnamed_exit]: name == null,\n      [styles.missing_localization]: name && this.props.translating && !localized,\n      [styles.confirm_delete]: confirmDelete\n    });\n    const activity = this.getSegmentCount();\n\n    const events = this.context.config.mutable\n      ? createClickHandler(\n          this.handleClick,\n          () => {\n            return this.props.dragging;\n          },\n          this.handleMouseDown\n        )\n      : {};\n\n    return (\n      <div className={exitClasses}>\n        {name ? <div className={nameStyle}>{name}</div> : null}\n        <div\n          ref={(ref: HTMLDivElement) => (this.ele = ref)}\n          {...events}\n          id={`${this.props.node.uuid}:${this.props.exit.uuid}`}\n          className={dragNodeClasses}\n        >\n          {confirm}\n        </div>\n        {activity}\n        {renderIf(this.state.showDragHelper)(<DragHelper />)}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (\n  {\n    flowContext: {\n      definition: { localization }\n    },\n    editorState: { translating, language, dragActive, activity }\n  }: AppState,\n  props: ExitPassedProps\n) => {\n  // see if we have some passed in (simulated) messages\n  let recentMessages: RecentMessage[] = null;\n  const key = getExitActivityKey(props.exit);\n  if (key in (activity.recentMessages || {})) {\n    recentMessages = activity.recentMessages[key];\n  }\n\n  const segmentCount = activity.segments[getExitActivityKey(props.exit)] || 0;\n  return {\n    dragging: dragActive,\n    segmentCount,\n    translating,\n    language,\n    localization,\n    recentMessages\n  };\n};\n\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators({ disconnectExit }, dispatch);\n\nconst ConnectedExit = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExitComp);\n\nexport default ConnectedExit;\n","import { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport Counter from 'components/counter/Counter';\nimport ActionWrapper from 'components/flow/actions/action/Action';\nimport ExitComp from 'components/flow/exit/Exit';\nimport { getCategoriesForExit, getResultName } from 'components/flow/node/helpers';\nimport { getSwitchRouter } from 'components/flow/routers/helpers';\nimport shared from 'components/shared.module.scss';\nimport TitleBar from 'components/titlebar/TitleBar';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Types } from 'config/interfaces';\nimport { getOperatorConfig } from 'config/operatorConfigs';\nimport { getType, getTypeConfig } from 'config/typeConfigs';\nimport { AnyAction, Exit, FlowDefinition, FlowNode, SwitchRouter } from 'flowTypes';\nimport * as React from 'react';\nimport FlipMove from 'react-flip-move';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { DebugState } from 'store/editor';\nimport { AssetMap, RenderNode } from 'store/flowContext';\nimport AppState from 'store/state';\nimport {\n  DispatchWithState,\n  MergeEditorState,\n  mergeEditorState,\n  OnAddToNode,\n  onAddToNode,\n  OnOpenNodeEditor,\n  onOpenNodeEditor,\n  RemoveNode,\n  removeNode\n} from 'store/thunks';\nimport { ClickHandler, createClickHandler } from 'utils';\n\nimport styles from './Node.module.scss';\n\nexport interface NodePassedProps {\n  nodeUUID: string;\n  plumberMakeTarget: (id: string) => void;\n  plumberRecalculate: (id: string) => void;\n  plumberMakeSource: (id: string) => void;\n  plumberRemove: (id: string) => void;\n  plumberConnectExit: (node: FlowNode, exit: Exit) => void;\n  plumberUpdateClass: (\n    node: FlowNode,\n    exit: Exit,\n    className: string,\n    confirmDelete: boolean\n  ) => void;\n  startingNode: boolean;\n  onlyNode: boolean;\n  selected: boolean;\n  ghostRef?: any;\n  ghost?: boolean;\n}\n\nexport interface NodeStoreProps {\n  results: AssetMap;\n  languages: AssetMap;\n  activeCount: number;\n  containerOffset: { top: number; left: number };\n  translating: boolean;\n  simulating: boolean;\n  debug: DebugState;\n  renderNode: RenderNode;\n  definition: FlowDefinition;\n  onAddToNode: OnAddToNode;\n  onOpenNodeEditor: OnOpenNodeEditor;\n  removeNode: RemoveNode;\n  mergeEditorState: MergeEditorState;\n}\n\nexport type NodeProps = NodePassedProps & NodeStoreProps;\n\nconst cx: any = classNames.bind({ ...shared, ...styles });\n\n/**\n * A single node in the rendered flow\n */\nexport class NodeComp extends React.Component<NodeProps> {\n  public ele: HTMLDivElement;\n  private firstAction: any;\n  private clicking: boolean;\n  private events: ClickHandler;\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: NodeProps, context: any) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/Ref$/, /^on/, /^get/, /^handle/]\n    });\n\n    this.events = context.config.mutable\n      ? createClickHandler(this.onClick, this.handleShouldCancelClick)\n      : {};\n  }\n\n  private handleShouldCancelClick(): boolean {\n    return this.props.selected;\n  }\n\n  private eleRef(ref: HTMLDivElement): HTMLDivElement {\n    return (this.ele = ref);\n  }\n\n  private getGhostListener(): any {\n    return (e: MouseEvent) => {\n      // move our ghost node into position\n      const width = this.ele.getBoundingClientRect().width;\n      const left = e.pageX - width / 2 - 15;\n      const top = e.pageY + this.ele.scrollTop - (this.props.containerOffset.top + 20);\n      const style = this.ele.style;\n      style.left = left + 'px';\n      style.top = top + 'px';\n\n      // Hide ourselves if there's a drop target\n      style.visibility = document.querySelector('.plumb-drop-hover') ? 'hidden' : 'visible';\n    };\n  }\n\n  public componentDidMount(): void {\n    // Make ourselves a target\n    this.props.plumberMakeTarget(this.props.renderNode.node.uuid);\n\n    // Move our drag node around as necessary\n    if (this.props.ghost) {\n      // We store our listener on the window so flow can remove it\n      // this is a bit hacky but allows us to remove our dependency on jquery\n      // TODO: rework ghost node to manage its location like other nodes\n      const ghostListener: any = this.getGhostListener();\n      (window as any).ghostListener = ghostListener;\n      document.addEventListener('mousemove', ghostListener);\n    }\n  }\n\n  public componentDidUpdate(prevProps: NodeProps): void {\n    // when our exits change, we need to recalculate the endpoints\n    if (!this.props.ghost) {\n      try {\n        this.props.plumberRecalculate(this.props.renderNode.node.uuid);\n        for (const exit of this.props.renderNode.node.exits) {\n          this.props.plumberRecalculate(this.props.renderNode.node.uuid + ':' + exit.uuid);\n        }\n      } catch (error) {\n        // console.log(error);\n      }\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this.props.plumberRemove(this.props.renderNode.node.uuid);\n  }\n\n  /* istanbul ignore next */\n  private handleUUIDClicked(event: React.MouseEvent<HTMLDivElement>): void {\n    const selection = window.getSelection();\n    const range = document.createRange();\n    range.selectNodeContents(event.currentTarget);\n    selection.removeAllRanges();\n    selection.addRange(range);\n    document.execCommand('copy');\n    selection.removeAllRanges();\n    console.log(event.currentTarget.textContent + ' copied to clipboard.');\n  }\n\n  private handleAddToNode(): void {\n    this.props.onAddToNode(this.props.renderNode.node);\n  }\n\n  // Applies only to router nodes;\n  // ./Action/Action handles click logic for Action nodes.\n  private onClick(event: React.MouseEvent<HTMLElement>): void {\n    this.props.onOpenNodeEditor({\n      originalNode: this.props.renderNode\n    });\n  }\n\n  private handleRemoval(event: React.MouseEvent<HTMLElement>): void {\n    event.preventDefault();\n    event.stopPropagation();\n    this.props.removeNode(this.props.renderNode.node);\n  }\n\n  private getExits(): JSX.Element[] {\n    if (this.props.renderNode.node.exits) {\n      return this.props.renderNode.node.exits.map((exit: Exit, idx: number) => (\n        <ExitComp\n          key={exit.uuid}\n          node={this.props.renderNode.node}\n          categories={getCategoriesForExit(this.props.renderNode, exit)}\n          exit={exit}\n          showDragHelper={this.props.onlyNode && idx === 0}\n          plumberMakeSource={this.props.plumberMakeSource}\n          plumberRemove={this.props.plumberRemove}\n          plumberConnectExit={this.props.plumberConnectExit}\n          plumberUpdateClass={this.props.plumberUpdateClass}\n        />\n      ));\n    }\n    return [];\n  }\n\n  private isSelected(): boolean {\n    return this.props.selected;\n  }\n\n  private hasMissing(): boolean {\n    // see if we are splitting on a missing result\n    const type = getType(this.props.renderNode);\n    if (type === Types.split_by_run_result || type === Types.split_by_run_result_delimited) {\n      if (!(this.props.renderNode.ui.config.operand.id in this.props.results)) {\n        return true;\n      }\n    }\n\n    if (this.props.renderNode.node.router) {\n      const kases = (this.props.renderNode.node.router as SwitchRouter).cases || [];\n      for (const kase of kases) {\n        if (!getOperatorConfig(kase.type)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  private isStartNodeVisible(): boolean {\n    return this.props.startingNode;\n  }\n\n  /* istanbul ignore next */\n  private renderDebug(): JSX.Element {\n    if (this.props.debug) {\n      if (this.props.debug.showUUIDs) {\n        return (\n          <span\n            id={`uuid-${this.props.renderNode.node.uuid}`}\n            onClick={this.handleUUIDClicked}\n            className={styles.uuid}\n          >\n            {this.props.renderNode.node.uuid}\n          </span>\n        );\n      }\n    }\n  }\n\n  public render(): JSX.Element {\n    const actions: JSX.Element[] = [];\n\n    let actionList: JSX.Element = null;\n    if (this.props.renderNode.node.actions) {\n      // Save the first reference off to manage our clicks\n      let firstRef: { ref: (ref: any) => any } | {} = {\n        ref: (ref: any) => (this.firstAction = ref)\n      };\n\n      this.props.renderNode.node.actions.forEach((action: AnyAction, idx: number) => {\n        const actionConfig = getTypeConfig(action.type);\n\n        if (actionConfig.hasOwnProperty('component') && actionConfig.component) {\n          const { component: ActionDiv } = actionConfig;\n          actions.push(\n            <ActionWrapper\n              {...firstRef}\n              key={action.uuid}\n              renderNode={this.props.renderNode}\n              selected={this.props.selected}\n              action={action}\n              first={idx === 0}\n              render={(anyAction: AnyAction) => (\n                <ActionDiv {...anyAction} languages={this.props.languages} />\n              )}\n            />\n          );\n        }\n\n        firstRef = {};\n      });\n\n      actionList =\n        actions.length > 0 ? (\n          <FlipMove enterAnimation=\"fade\" leaveAnimation=\"fade\" duration={300} easing=\"ease-out\">\n            {actions}\n          </FlipMove>\n        ) : null;\n    }\n\n    let header: JSX.Element = null;\n    let addActions: JSX.Element = null;\n    let summary: JSX.Element = null;\n\n    // Router node display logic\n    const type = getType(this.props.renderNode);\n    if (type !== Types.execute_actions) {\n      const config = getTypeConfig(type);\n      let title: string = config.name;\n\n      const switchRouter = getSwitchRouter(this.props.renderNode.node);\n      if (switchRouter) {\n        if (type === Types.split_by_contact_field && this.props.renderNode.ui.config.operand.name) {\n          title = `Split by ${this.props.renderNode.ui.config.operand.name}`;\n        }\n      }\n\n      const resultName = getResultName(this.props.renderNode.node);\n      if (resultName) {\n        summary = (\n          <div {...this.events} className={styles.save_result}>\n            <div className={styles.save_as}>Save as </div>\n            <div className={styles.result_name}>{resultName}</div>\n          </div>\n        );\n      }\n\n      if (\n        title === null &&\n        (type === Types.split_by_run_result || type === Types.split_by_run_result_delimited)\n      ) {\n        if (this.props.renderNode.ui.config.operand.id in this.props.results) {\n          title = `Split by ${this.props.results[this.props.renderNode.ui.config.operand.id].name}`;\n        } else {\n          title = `Missing ${this.props.renderNode.ui.config.operand.id}`;\n        }\n      }\n\n      if (title === null) {\n        title = config.name;\n      }\n\n      if (!this.props.renderNode.node.actions || !this.props.renderNode.node.actions.length) {\n        // Router headers are introduced here while action headers are introduced in ./Action/Action\n\n        header = (\n          // Wrap in a relative parent so it honors node clipping\n          <div style={{ position: 'relative' }}>\n            <div {...this.events}>\n              <TitleBar\n                __className={(shared as any)[this.hasMissing() ? 'missing' : config.type]}\n                showRemoval={!this.props.translating}\n                onRemoval={this.handleRemoval}\n                shouldCancelClick={this.handleShouldCancelClick}\n                title={title}\n              />\n            </div>\n          </div>\n        );\n      }\n    } else {\n      // Don't show add actions option if we are translating\n      if (!this.props.translating && this.context.config.mutable) {\n        addActions = (\n          <div\n            className={styles.add}\n            {...createClickHandler(this.handleAddToNode, this.handleShouldCancelClick)}\n          >\n            <span className=\"fe-add\" />\n          </div>\n        );\n      }\n    }\n\n    const exits: JSX.Element[] = this.getExits();\n\n    const classes = cx({\n      'plumb-drag': true,\n      [styles.ghost]: this.props.ghost,\n      [styles.flow_start]: this.isStartNodeVisible(),\n      [styles.selected]: this.isSelected(),\n      [styles.immutable]: !this.context.config.mutable\n    });\n\n    const uuid: JSX.Element = this.renderDebug();\n\n    const renderedNode = (\n      <div\n        id={this.props.renderNode.node.uuid}\n        className={`${styles.node_container} ${classes}`}\n        ref={this.eleRef}\n      >\n        <div className={styles.node}>\n          {this.isStartNodeVisible() ? (\n            <div className={styles.flow_start_message}>Flow Start</div>\n          ) : null}\n\n          {uuid}\n          <Counter\n            count={this.props.activeCount}\n            containerStyle={styles.active}\n            countStyle={''}\n            keepVisible={this.props.simulating}\n            onClick={() => {\n              if (this.context.config.onActivityClicked) {\n                this.context.config.onActivityClicked(this.props.nodeUUID, this.props.activeCount);\n              }\n            }}\n          />\n\n          <div className={styles.cropped}>\n            {header}\n            {actionList}\n            {summary}\n          </div>\n\n          <div className={`${styles.exit_table}`}>\n            <div className={styles.exits} {...this.events}>\n              {exits}\n            </div>\n            {addActions}\n          </div>\n        </div>\n      </div>\n    );\n    return renderedNode;\n  }\n}\n\nconst mapStateToProps = (\n  {\n    flowContext: {\n      nodes,\n      definition,\n      assetStore: {\n        results: { items: results },\n        languages: { items: languages }\n      }\n    },\n    editorState: { translating, debug, ghostNode, simulating, containerOffset, activity }\n  }: AppState,\n  props: NodePassedProps\n) => {\n  let renderNode: RenderNode = null;\n\n  // if we match our ghost node use that\n  if (ghostNode && ghostNode.node.uuid === props.nodeUUID) {\n    renderNode = ghostNode;\n  }\n\n  // otherwise look up our node from the list\n  else if (props.nodeUUID in nodes) {\n    renderNode = nodes[props.nodeUUID];\n  }\n\n  if (!renderNode) {\n    throw Error(\"Couldn't find node for \" + props.nodeUUID);\n  }\n\n  const activeCount = activity.nodes[props.nodeUUID] || 0;\n\n  return {\n    results,\n    languages,\n    activeCount,\n    containerOffset,\n    translating,\n    debug,\n    definition,\n    renderNode,\n    simulating\n  };\n};\n\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators(\n    {\n      onAddToNode,\n      onOpenNodeEditor,\n      removeNode,\n      mergeEditorState\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  null,\n  { forwardRef: true }\n)(NodeComp);\n","import * as React from 'react';\nimport ReactModal from 'react-modal';\n\ninterface CustomStyles {\n  content: { [cssProperty: string]: string | number };\n}\n\nexport interface ModalProps {\n  show: boolean;\n  onClose?(): void;\n\n  onModalOpen?: any;\n  width?: string;\n}\n\n// A base modal for displaying messages or performing single button actions\nexport default class Modal extends React.Component<ModalProps> {\n  public render(): JSX.Element {\n    const customStyles: CustomStyles = {\n      content: {\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        marginTop: '40px',\n        bottom: 'initial',\n        padding: 'none',\n        borderRadius: 'none',\n        outline: 'none',\n        width: this.props.width ? this.props.width : '700px',\n        border: 'none'\n      }\n    };\n    return (\n      <ReactModal\n        ariaHideApp={false}\n        isOpen={this.props.show}\n        onAfterOpen={this.props.onModalOpen}\n        onRequestClose={this.props.onClose}\n        style={customStyles}\n        shouldCloseOnOverlayClick={false}\n        contentLabel=\"Modal\"\n      >\n        {this.props.children}\n      </ReactModal>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport { getDraggedFrom } from 'components/helpers';\nimport Modal from 'components/modal/Modal';\nimport { Type } from 'config/interfaces';\nimport { Action, AnyAction, FlowDefinition } from 'flowTypes';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { UpdateUserAddingAction } from 'store/actionTypes';\nimport { Asset, AssetStore, RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, updateUserAddingAction } from 'store/nodeEditor';\nimport AppState from 'store/state';\nimport {\n  AddAsset,\n  addAsset,\n  DispatchWithState,\n  GetState,\n  HandleTypeConfigChange,\n  handleTypeConfigChange,\n  LocalizationUpdates,\n  MergeEditorState,\n  mergeEditorState,\n  NoParamsAC,\n  onUpdateAction,\n  OnUpdateAction,\n  OnUpdateLocalizations,\n  onUpdateLocalizations,\n  OnUpdateRouter,\n  onUpdateRouter,\n  resetNodeEditingState\n} from 'store/thunks';\nimport { CompletionSchema } from 'utils/completion';\n\nexport type UpdateLocalizations = (language: string, changes: LocalizationUpdates) => void;\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport interface NodeEditorPassedProps {\n  plumberConnectExit: Function;\n  plumberRepaintForDuration: Function;\n}\n\nexport interface NodeEditorStoreProps {\n  assetStore: AssetStore;\n  addAsset: AddAsset;\n  language: Asset;\n  definition: FlowDefinition;\n  translating: boolean;\n  typeConfig: Type;\n  settings: NodeEditorSettings;\n  nodes: { [uuid: string]: RenderNode };\n  handleTypeConfigChange: HandleTypeConfigChange;\n  resetNodeEditingState: NoParamsAC;\n  mergeEditorState: MergeEditorState;\n  onUpdateLocalizations: OnUpdateLocalizations;\n  onUpdateAction: OnUpdateAction;\n  onUpdateRouter: OnUpdateRouter;\n  updateUserAddingAction: UpdateUserAddingAction;\n  completionSchema: CompletionSchema;\n}\n\nexport type NodeEditorProps = NodeEditorPassedProps & NodeEditorStoreProps;\n\nexport interface FormProps {\n  // our two ways of updating\n  updateRouter(renderNode: RenderNode): void;\n  updateAction(action: AnyAction): void;\n\n  addAsset(assetType: string, asset: Asset): void;\n  completionSchema: CompletionSchema;\n\n  assetStore: AssetStore;\n\n  nodeSettings?: NodeEditorSettings;\n  typeConfig?: Type;\n  onTypeChange?(config: Type): void;\n  onClose?(canceled: boolean): void;\n}\n\nexport interface LocalizationProps {\n  nodeSettings?: NodeEditorSettings;\n  typeConfig?: Type;\n  onClose?(canceled: boolean): void;\n\n  updateLocalizations: UpdateLocalizations;\n  language: Asset;\n}\n\nexport class NodeEditor extends React.Component<NodeEditorProps> {\n  constructor(props: NodeEditorProps) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/^close/, /^update/, /^handle/]\n    });\n  }\n\n  private updateLocalizations(language: string, changes: LocalizationUpdates): void {\n    this.props.onUpdateLocalizations(language, changes);\n  }\n\n  public close(canceled: boolean): void {\n    // Make sure we re-wire the old connection\n    if (canceled) {\n      const dragPoint = getDraggedFrom(this.props.settings.originalNode);\n      if (dragPoint) {\n        const renderNode = this.props.nodes[dragPoint.nodeUUID];\n        for (const exit of renderNode.node.exits) {\n          if (exit.uuid === dragPoint.exitUUID) {\n            // TODO: should this just be taking literal uuids instead of objects?\n            this.props.plumberConnectExit(renderNode.node, exit);\n            break;\n          }\n        }\n      }\n    }\n\n    this.props.resetNodeEditingState();\n    this.props.updateUserAddingAction(false);\n  }\n\n  private updateAction(\n    action: Action,\n    onUpdated?: (dispatch: DispatchWithState, getState: GetState) => void\n  ): void {\n    this.props.onUpdateAction(action, onUpdated);\n  }\n\n  private updateRouter(renderNode: RenderNode): void {\n    this.props.onUpdateRouter(renderNode);\n  }\n\n  private handleAddAsset(assetType: string, asset: Asset): void {\n    this.props.addAsset(assetType, asset);\n  }\n\n  public render(): JSX.Element {\n    if (this.props.settings) {\n      const { typeConfig } = this.props;\n\n      // see if we should use the localization form\n      if (this.props.translating) {\n        const { localization: LocalizationForm } = typeConfig;\n\n        if (LocalizationForm) {\n          const localizationProps: LocalizationProps = {\n            updateLocalizations: this.updateLocalizations,\n            nodeSettings: this.props.settings,\n            typeConfig: this.props.typeConfig,\n            onClose: this.close,\n            language: this.props.language\n          };\n\n          return (\n            <Modal width=\"600px\" show={true}>\n              <LocalizationForm {...{ ...localizationProps }} />\n            </Modal>\n          );\n        }\n      }\n\n      const { form: Form } = typeConfig;\n\n      const formProps: FormProps = {\n        assetStore: this.props.assetStore,\n        completionSchema: this.props.completionSchema,\n        addAsset: this.handleAddAsset,\n        updateAction: this.updateAction,\n        updateRouter: this.updateRouter,\n        nodeSettings: this.props.settings,\n        typeConfig: this.props.typeConfig,\n        onTypeChange: this.props.handleTypeConfigChange,\n        onClose: this.close\n      };\n\n      return (\n        <Modal width=\"600px\" show={true}>\n          <Form {...{ ...formProps }} />\n        </Modal>\n      );\n    }\n    return null;\n  }\n}\n\n/* istanbul ignore next */\nconst mapStateToProps = ({\n  flowContext: { definition, nodes, assetStore },\n  editorState: { language, translating, completionSchema },\n  nodeEditor: { typeConfig, settings }\n}: AppState) => ({\n  language,\n  definition,\n  nodes,\n  translating,\n  typeConfig,\n  settings,\n  assetStore,\n  completionSchema\n});\n\n/* istanbul ignore next */\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators(\n    {\n      addAsset,\n      resetNodeEditingState,\n      mergeEditorState,\n      handleTypeConfigChange,\n      onUpdateLocalizations,\n      onUpdateAction,\n      onUpdateRouter,\n      updateUserAddingAction\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NodeEditor);\n","import Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { MediaPlayer } from 'components/mediaplayer/MediaPlayer';\nimport Modal from 'components/modal/Modal';\nimport styles from 'components/simulator/LogEvent.module.scss';\nimport { Types } from 'config/interfaces';\nimport { Flow, Group } from 'flowTypes';\nimport * as React from 'react';\nimport { createUUID, getURNPath } from 'utils';\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\n\nconst MAP_THUMB = require('static/images/map.jpg');\n\ninterface MsgProps {\n  text: string;\n  uuid: string;\n  urn: string;\n  attachments?: string[];\n  quick_replies?: string[];\n}\n\ninterface WebRequestLog {\n  url: string;\n  request: string;\n  response: string;\n}\n\ninterface ClassifierIntent {\n  name: string;\n  confidence: number;\n}\n\ninterface ClassifierEntity {\n  value: string;\n  confidence: number;\n}\n\nexport interface EventProps {\n  step_uuid: string;\n  uuid?: string;\n  created_on?: string;\n  type?: string;\n  field?: { key: string; name: string };\n  field_uuid?: string;\n  result_name?: string;\n  text?: string;\n  name?: string;\n  value?: { text: string };\n  body?: string;\n  addresses?: string[];\n  to?: string[];\n  subject?: string;\n  url?: string;\n  status?: string;\n  status_code?: number;\n  request?: string;\n  response?: string;\n  resthook?: string;\n  base_language?: string;\n  language?: string;\n  translations?: { [lang: string]: { [text: string]: string } };\n  groups?: Group[];\n  flow?: Flow;\n  groups_added?: Group[];\n  groups_removed?: Group[];\n  msg?: MsgProps;\n  http_logs?: WebRequestLog[];\n  extra?: any;\n}\n\ninterface FlowEvent {\n  step_uuid: string;\n  type: string;\n}\n\ninterface AirtimeTransferEvent extends FlowEvent {\n  actual_amount: number;\n  desired_amount: number;\n  currency: string;\n  http_logs: WebRequestLog[];\n  recipient: string;\n  sender: string;\n}\n\ninterface LogEventState {\n  detailsVisible: boolean;\n}\n\nexport enum Direction {\n  MT,\n  MO\n}\n\nconst getStyleForDirection = (direction: Direction): string => {\n  return direction === Direction.MO ? styles.msg_received : styles.send_msg;\n};\n\nconst renderError = (error: string): JSX.Element => {\n  return (\n    <div className={styles.error}>\n      <span>Error: {error}</span>\n    </div>\n  );\n};\n\nconst renderInfo = (info: string): JSX.Element => {\n  return (\n    <div key={info} className={styles.info}>\n      <span>{info}</span>\n    </div>\n  );\n};\n\nconst renderAttachment = (attachment: string): JSX.Element => {\n  const idx = attachment.indexOf(':');\n  if (idx > -1) {\n    const type = attachment.substr(0, idx);\n    const url = attachment.substr(idx + 1);\n    if (type.startsWith('audio')) {\n      return (\n        <div className={styles.audio_attachment}>\n          <div className={styles.media_player}>\n            <MediaPlayer url={url} />\n          </div>\n          <div className={styles.audio_text}>Audio Recording</div>\n        </div>\n      );\n    } else if (type.startsWith('image')) {\n      return <img src={url} alt=\"Attachment\" />;\n    } else if (type.startsWith('geo')) {\n      return <img src={MAP_THUMB} alt=\"Attachment\" />;\n    } else if (type.startsWith('video')) {\n      return (\n        <div className={styles.video_attachment}>\n          <video controls={true} src={url} />\n        </div>\n      );\n    }\n  }\n  return null;\n};\n\nconst renderMessage = (text: string, attachments: string[], direction: Direction): JSX.Element => {\n  const attaches = attachments || [];\n  return (\n    <div className={getStyleForDirection(direction)}>\n      {attaches.map((attachment: string) => (\n        <div key={text + attachment}>{renderAttachment(attachment)}</div>\n      ))}\n      {text\n        ? text.split('\\n').map((item, key) => {\n            return (\n              <div key={createUUID()} className={styles.msg_text}>\n                {item}\n              </div>\n            );\n          })\n        : null}\n    </div>\n  );\n};\n\n/**\n * Viewer for log events\n */\nexport default class LogEvent extends React.Component<EventProps, LogEventState> {\n  constructor(props: EventProps) {\n    super(props);\n    this.state = {\n      detailsVisible: false\n    };\n\n    this.showDetails = this.showDetails.bind(this);\n    this.getButtons = this.getButtons.bind(this);\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: {\n        name: 'Ok',\n        onClick: () => {\n          this.setState({ detailsVisible: false });\n        }\n      }\n    };\n  }\n\n  private showDetails(): void {\n    this.setState({ detailsVisible: true });\n  }\n\n  private renderGroupChange(): JSX.Element {\n    const groups = this.props.groups_added || this.props.groups_removed;\n    let groupText = this.props.groups_added\n      ? i18n.t('simulator.added_to_group', 'Added to ')\n      : i18n.t('simulator.removed_from_group', 'Removed from ');\n    let delim = ' ';\n    groups.forEach(group => {\n      groupText += `${delim}\"${group.name}\"`;\n      delim = ', ';\n    });\n\n    return renderInfo(groupText);\n  }\n\n  private renderEmail(): JSX.Element {\n    const recipients = this.props.to || this.props.addresses;\n    return this.renderClickable(\n      <div className={styles.info + ' ' + styles.email}>\n        <Trans\n          i18nKey=\"simulator.sent_email\"\n          values={{ recipients: recipients.join(', '), subject: this.props.subject }}\n        >\n          Sent email to \"[[recipients]]\" with subject \"[[subject]]\"\n        </Trans>\n      </div>,\n      <Dialog\n        title={i18n.t('simulator.sent_email_dialog', 'Email Details')}\n        headerClass={Types.send_email}\n        buttons={this.getButtons()}\n        noPadding={true}\n      >\n        <div className={styles.email_details}>\n          <div className={styles.to}>\n            {i18n.t('simulator.sent_email.to', 'To')}: {recipients.join(', ')}\n          </div>\n          <div className={styles.subject}>\n            {i18n.t('simulator.sent_email.subject', 'Subject')}: {this.props.subject}\n          </div>\n          <div className={styles.body}>{this.props.body}</div>\n        </div>\n      </Dialog>\n    );\n  }\n\n  private renderHTTPRequest(headerClass: Types, log: WebRequestLog): JSX.Element {\n    return this.renderClickable(\n      <div className={styles.info + ' ' + styles.webhook}>\n        <span>Called {log.url}</span>\n      </div>,\n      <Dialog\n        title={i18n.t('simulator.httplog_dialog', 'HTTP Request Details')}\n        headerClass={headerClass}\n        buttons={this.getButtons()}\n        noPadding={true}\n      >\n        <div className={styles.webhook_details}>\n          <div className={''}>{log.request}</div>\n          <div className={styles.response}>{log.response}</div>\n        </div>\n      </Dialog>\n    );\n  }\n\n  private renderWebhook(headerClass: Types): JSX.Element {\n    if (this.props.http_logs) {\n      return (\n        <>\n          {this.props.http_logs.map((log: WebRequestLog) => {\n            return this.renderHTTPRequest(headerClass, log);\n          })}\n        </>\n      );\n    }\n    if (this.props.url) {\n      return this.renderHTTPRequest(headerClass, this.props as WebRequestLog);\n    }\n  }\n\n  private renderClickable(element: JSX.Element, details: JSX.Element): JSX.Element {\n    return (\n      <div key={this.props.step_uuid}>\n        <div className={styles.has_detail} onClick={this.showDetails}>\n          {element}\n        </div>\n        <Modal show={this.state.detailsVisible}>\n          <div className={styles.event_viewer}>{details}</div>\n        </Modal>\n      </div>\n    );\n  }\n\n  private renderClassification(): JSX.Element {\n    return (\n      <table className={styles.classification}>\n        <tbody>\n          {(this.props.extra.intents || []).map((intent: ClassifierIntent) => (\n            <tr key={intent.name + intent.confidence}>\n              <td>{intent.name}</td>\n              <td>intent</td>\n              <td>{intent.confidence.toFixed(3)}</td>\n            </tr>\n          ))}\n\n          {Object.keys(this.props.extra.entities || []).map((key: string) => {\n            const entities = this.props.extra.entities[key];\n            return entities.map((entity: ClassifierEntity) =>\n              key !== entity.value ? (\n                <tr key={entity.value + entity.confidence}>\n                  <td>{entity.value}</td>\n                  <td>{key}</td>\n                  <td>{entity.confidence.toFixed(3)}</td>\n                </tr>\n              ) : null\n            );\n          })}\n        </tbody>\n      </table>\n    );\n  }\n\n  public renderLogEvent(): JSX.Element {\n    if (this.props.extra && this.props.extra.intents) {\n      return this.renderClassification();\n    }\n\n    switch (this.props.type) {\n      case 'msg_received':\n        return renderMessage(this.props.msg.text, this.props.msg.attachments, Direction.MO);\n      case 'msg_created':\n        return renderMessage(this.props.msg.text, this.props.msg.attachments, Direction.MT);\n      case 'ivr_created':\n        return renderMessage(this.props.msg.text, this.props.msg.attachments, Direction.MT);\n      case 'error':\n        return renderError(this.props.text);\n      case 'failure':\n        return renderError(this.props.text);\n      case 'msg_wait':\n        return renderInfo(i18n.t('simulator.msg_wait', 'Waiting for reply'));\n      case 'contact_groups_changed':\n        return this.renderGroupChange();\n      case 'contact_urns_changed':\n        return renderInfo('Added a URN for the contact');\n      case 'contact_field_changed':\n        return renderInfo(\n          i18n.t('simulator.contact_field_changed', 'Set contact \"[[field]]\" to \"[[value]]\"', {\n            field: this.props.field.name,\n            value: this.props.value.text\n          })\n        );\n      case 'run_result_changed':\n        return renderInfo(\n          i18n.t('simulator.run_result_changed', 'Set result \"[[field]]\" to \"[[value]]\"', {\n            field: this.props.name,\n            value: this.props.value\n          })\n        );\n      case 'contact_name_changed':\n        return renderInfo(\n          i18n.t('simulator.contact_name_changed', 'Set contact name to \"[[name]]\"', {\n            name: this.props.name\n          })\n        );\n      case 'email_created':\n      case 'email_sent':\n        return this.renderEmail();\n      case 'broadcast_created':\n        return renderMessage(\n          this.props.translations[this.props.base_language].text,\n          this.props.msg ? this.props.msg.attachments : [],\n          Direction.MT\n        );\n      case 'resthook_called':\n        return renderInfo(\n          i18n.t('simulator.resthook_called', 'Triggered flow event \"[[resthook]]\"', {\n            resthook: this.props.resthook\n          })\n        );\n      case 'classifier_called':\n        return this.renderWebhook(Types.call_classifier);\n      case 'webhook_called':\n        return this.renderWebhook(Types.call_webhook);\n      case 'flow_entered':\n        return renderInfo(\n          i18n.t('simulator.flow_entered', 'Entered flow \"[[flow]]\"', {\n            flow: this.props.flow.name\n          })\n        );\n      case 'session_triggered':\n        return renderInfo(\n          i18n.t('simulator.session_triggered', 'Started somebody else in \"[[flow]]\"', {\n            flow: this.props.flow.name\n          })\n        );\n      case 'contact_language_changed':\n        return renderInfo(\n          i18n.t('simulator.contact_language_changed', 'Set preferred language to \"[[language]]\"', {\n            language: this.props.language\n          })\n        );\n      case 'info':\n        return renderInfo(this.props.text);\n      case 'environment_refreshed':\n        return null;\n      case 'airtime_transferred':\n        const event = this.props as AirtimeTransferEvent;\n        return (\n          <>\n            {this.renderWebhook(Types.transfer_airtime)}\n\n            {renderInfo(\n              i18n.t(\n                'simulator.airtime_transferred',\n                'Transferred [[amount]] [[currency]] to [[recipient]]',\n                {\n                  amount: event.actual_amount,\n                  currency: event.currency,\n                  recipient: getURNPath(event.recipient)\n                }\n              )\n            )}\n          </>\n        );\n    }\n\n    // should only get here if we are get an unexpected event\n    console.log('Simulator render missing', this.props);\n    return null;\n  }\n\n  public render(): JSX.Element {\n    return <div className={styles.evt}>{this.renderLogEvent()}</div>;\n  }\n}\n","import { EventProps } from 'components/simulator/LogEvent';\nimport { FlowDefinition } from 'flowTypes';\nimport { AssetStore, AssetType } from 'store/flowContext';\nimport { assetMapToList } from 'store/helpers';\nimport { createUUID } from 'utils';\n\nconst SIMULATOR_CHANNEL = {\n  uuid: createUUID(),\n  name: 'Simulator',\n  address: '+12065550000',\n  schemes: ['tel'],\n  roles: ['send', 'receive']\n};\n\ninterface SimAsset {\n  type: AssetType;\n  url: string;\n  content: any;\n}\n\nexport const getTime = (): string => {\n  const now = new Date();\n  const mins = now.getMinutes();\n  let minStr = '' + mins;\n  if (mins < 10) {\n    minStr = '0' + mins;\n  }\n  return Math.abs(12 - now.getHours()) + ':' + minStr;\n};\n\nexport const getSimulationAssets = (assets: AssetStore, flow: FlowDefinition): any => {\n  const simAssets: SimAsset[] = [];\n\n  // our group set asset\n  simAssets.push({\n    type: AssetType.Group,\n    url: assets.groups.endpoint,\n    content: assetMapToList(assets.groups.items)\n  });\n\n  // our fields\n  simAssets.push({\n    type: AssetType.Field,\n    url: assets.fields.endpoint,\n    content: assetMapToList(assets.fields.items)\n  });\n\n  // our labels\n  simAssets.push({\n    type: AssetType.Label,\n    url: assets.labels.endpoint,\n    content: assetMapToList(assets.labels.items)\n  });\n\n  // our channels\n  simAssets.push({\n    type: AssetType.Channel,\n    url: assets.channels.endpoint,\n    content: [SIMULATOR_CHANNEL]\n  });\n\n  simAssets.push({\n    type: AssetType.Flow,\n    url: assets.flows.endpoint + `${flow.uuid}/`,\n    content: flow\n  });\n\n  const payload = {\n    assets: simAssets,\n    asset_server: {\n      type_urls: {\n        [AssetType.Flow]: assets.flows.endpoint,\n        [AssetType.Field]: assets.fields.endpoint,\n        [AssetType.Channel]: assets.channels.endpoint,\n        [AssetType.Group]: assets.groups.endpoint,\n        [AssetType.Label]: assets.labels.endpoint\n      }\n    }\n  };\n\n  return payload;\n};\n\nexport const isMessage = (event: EventProps): boolean => {\n  return !!['msg_created', 'msg_received', 'ivr_created'].find(type => type === event.type);\n};\n\nexport const isMT = (event: EventProps): boolean => {\n  return !!['msg_created', 'ivr_created'].find(type => type === event.type);\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as axios from 'axios';\nimport { getTime, isMessage, isMT } from 'components/simulator/helpers';\nimport LogEvent, { EventProps } from 'components/simulator/LogEvent';\nimport styles from 'components/simulator/Simulator.module.scss';\nimport { ConfigProviderContext, fakePropType } from 'config/ConfigProvider';\nimport { getURL } from 'external';\nimport { FlowDefinition, Group, Wait } from 'flowTypes';\nimport update from 'immutability-helper';\nimport { ReactNode } from 'react';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Activity, RecentMessage } from 'store/editor';\nimport { AssetStore, RenderNodeMap, Asset } from 'store/flowContext';\nimport { getCurrentDefinition } from 'store/helpers';\nimport AppState from 'store/state';\nimport { DispatchWithState, MergeEditorState } from 'store/thunks';\nimport { createUUID } from 'utils';\n\nconst MESSAGE_DELAY_MS = 200;\n\nconst MAP_THUMB = require('static/images/map.jpg');\nconst IMAGE_A = 'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_image_a.jpg';\nconst IMAGE_B = 'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_image_b.jpg';\nconst IMAGE_C = 'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_image_c.jpg';\nconst AUDIO_A = 'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_audio_a.mp3';\nconst VIDEO_A = 'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_video_a.mp4';\n\nconst VIDEO_A_THUMB =\n  'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_video_a_thumb.jpg';\n\ninterface PostMessage {\n  text: string;\n  uuid: string;\n  urn: string;\n  attachments: string[];\n}\n\ninterface Message {\n  text: string;\n  inbound: boolean;\n}\n\nexport interface SimulatorStoreProps {\n  nodes: RenderNodeMap;\n  definition: FlowDefinition;\n  assetStore: AssetStore;\n\n  activity: Activity;\n\n  language: Asset;\n\n  // TODO: take away responsibility of simulator for resetting this\n  liveActivity: Activity;\n}\n\nexport interface SimulatorPassedProps {\n  mergeEditorState: MergeEditorState;\n}\n\nexport type SimulatorProps = SimulatorStoreProps & SimulatorPassedProps;\n\nenum DrawerType {\n  audio = 'audio',\n  images = 'images',\n  videos = 'videos',\n  location = 'location',\n  digit = 'digit',\n  digits = 'digits',\n  quickReplies = 'quickReplies'\n}\n\ninterface SimulatorState {\n  visible: boolean;\n  session?: Session;\n  contact: Contact;\n  channel: string;\n  events: EventProps[];\n  active: boolean;\n  time: string;\n\n  keypadEntry: string;\n\n  quickReplies?: string[];\n\n  // are we currently simulating a sprint\n  sprinting: boolean;\n\n  // is our drawer open\n  drawerOpen: boolean;\n\n  // what type of drawer are we looking at\n  drawerType?: DrawerType;\n\n  // how tall our drawer is\n  drawerHeight: number;\n\n  // is our attachment type selection open\n  attachmentOptionsVisible: boolean;\n\n  // are we at a wait hint, ie, a forced attachment\n  waitingForHint: boolean;\n}\n\ninterface Contact {\n  uuid: string;\n  urns: string[];\n  fields: {};\n  groups: Group[];\n}\n\ninterface Step {\n  arrived_on: Date;\n  uuid: string;\n  exit_uuid: string;\n  node_uuid: string;\n}\n\ninterface Run {\n  path: Step[];\n  flow_uuid: string;\n  status: string;\n  events?: EventProps[];\n  wait?: Wait;\n}\n\ninterface RunContext {\n  contact: Contact;\n  session: Session;\n  events: EventProps[];\n}\n\ninterface Session {\n  runs: Run[];\n  contact: Contact;\n  input?: any;\n  wait?: Wait;\n}\n\n/**\n * Our dev console for simulating or testing expressions\n */\nexport class Simulator extends React.Component<SimulatorProps, SimulatorState> {\n  private debug: Session[] = [];\n  private flows: FlowDefinition[] = [];\n  private currentFlow: string;\n  private inputBox: HTMLInputElement;\n\n  private drawerEle: HTMLDivElement;\n\n  // marks the bottom of our chat\n  private bottom: any;\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: SimulatorProps, context: ConfigProviderContext) {\n    super(props);\n    this.state = {\n      active: false,\n      visible: false,\n      events: [],\n      contact: {\n        uuid: createUUID(),\n        urns: ['tel:+12065551212'],\n        fields: {},\n        groups: []\n      },\n      keypadEntry: '',\n      drawerHeight: 0,\n      channel: createUUID(),\n      time: getTime(),\n      waitingForHint: false,\n      drawerOpen: false,\n      attachmentOptionsVisible: false,\n      sprinting: false\n    };\n    this.bottomRef = this.bottomRef.bind(this);\n    this.inputBoxRef = this.inputBoxRef.bind(this);\n    this.currentFlow = this.props.definition.uuid;\n\n    bindCallbacks(this, {\n      include: [/^on/, /^get/, /^handle/]\n    });\n  }\n\n  private bottomRef(ref: any): void {\n    return (this.bottom = ref);\n  }\n\n  private inputBoxRef(ref: any): void {\n    this.inputBox = ref;\n  }\n\n  private updateActivity(recentMessages: { [key: string]: RecentMessage[] } = {}): void {\n    if (this.state.session) {\n      let lastExit: string = null;\n      const paths: { [key: string]: number } = {};\n      const active: { [nodeUUID: string]: number } = {};\n      let activeFlow: string;\n\n      for (const run of this.state.session.runs) {\n        let finalStep: Step = null;\n\n        for (const step of run.path) {\n          if (lastExit) {\n            const key = lastExit + ':' + step.node_uuid;\n            let pathCount = paths[key];\n            if (!pathCount) {\n              pathCount = 0;\n            }\n            paths[key] = ++pathCount;\n          }\n          lastExit = step.exit_uuid;\n          finalStep = step;\n        }\n\n        if (run.status === 'waiting' && finalStep) {\n          let count = active[finalStep.node_uuid];\n          if (!count) {\n            count = 0;\n          }\n          active[finalStep.node_uuid] = ++count;\n          activeFlow = run.flow_uuid;\n        }\n      }\n\n      const simulatedMessages = this.props.activity.recentMessages || {};\n\n      for (const key in recentMessages) {\n        let messages = simulatedMessages[key] || [];\n        messages = recentMessages[key].concat(messages);\n        simulatedMessages[key] = messages;\n      }\n\n      const activity: Activity = {\n        segments: paths,\n        nodes: active,\n        recentMessages: simulatedMessages\n      };\n\n      this.props.mergeEditorState({ activity });\n\n      if (activeFlow && activeFlow !== this.currentFlow) {\n        this.currentFlow = activeFlow;\n      }\n    }\n  }\n\n  private updateEvents(\n    events: EventProps[],\n    session: Session,\n    recentMessages: { [key: string]: RecentMessage[] },\n    callback: () => void\n  ): void {\n    if (events && events.length > 0) {\n      const toAdd = [];\n\n      let quickReplies: string[] = null;\n\n      let messageFound = false;\n      while (events.length > 0 && !messageFound) {\n        const event = events.shift();\n\n        if (isMessage(event)) {\n          messageFound = true;\n\n          // if it's a message add it to our recent messages\n          let fromUUID = '';\n          let toUUID = '';\n\n          // work backwards, since our events are recent\n          for (let i = session.runs.length - 1; i >= 0; i--) {\n            const path = session.runs[i].path;\n\n            // start at the penultimate node since we have nowhere to render recent messages for the last node\n            for (let j = path.length - 2; j >= 0; j--) {\n              if (path[j].uuid === event.step_uuid) {\n                fromUUID = path[j].exit_uuid;\n                toUUID = path[j + 1].node_uuid;\n                break;\n              }\n            }\n\n            if (fromUUID && toUUID) {\n              const key = `${fromUUID}:${toUUID}`;\n              const msg: RecentMessage = {\n                sent: new Date(event.created_on),\n                text: event.msg.text\n              };\n\n              if (key in recentMessages) {\n                recentMessages[key].unshift(msg);\n              } else {\n                recentMessages[key] = [msg];\n              }\n            }\n          }\n\n          if (isMT(event)) {\n            // save off any quick replies we might have\n            if (event.msg.quick_replies) {\n              quickReplies = event.msg.quick_replies;\n            }\n          }\n        }\n\n        toAdd.push(event);\n      }\n\n      const newEvents = update(this.state.events, {\n        $push: toAdd\n      }) as EventProps[];\n      const newState: Partial<SimulatorState> = { events: newEvents };\n\n      if (quickReplies !== null) {\n        newState.quickReplies = quickReplies;\n      }\n\n      this.scrollToBottom();\n\n      this.setState(newState as SimulatorState, () => {\n        if (events.length === 0) {\n          callback();\n        } else {\n          window.setTimeout(() => {\n            this.updateEvents(events, session, recentMessages, callback);\n          }, MESSAGE_DELAY_MS);\n        }\n      });\n    } else {\n      callback();\n    }\n  }\n\n  private updateRunContext(runContext: RunContext, msg?: PostMessage): void {\n    const wasJustActive = this.state.active || (runContext.events && runContext.events.length > 0);\n    this.setState({ quickReplies: [] }, () => {\n      if (!runContext.events || (runContext.events.length === 0 && msg)) {\n        const runs = runContext.session.runs;\n        const run = runs[runs.length - 1];\n        const step = run.path[run.path.length - 1];\n\n        runContext.events = [\n          {\n            msg: {\n              uuid: createUUID(),\n              urn: this.state.contact.urns[0],\n              text: msg.text,\n              attachments: msg.attachments\n            },\n            type: 'msg_created',\n            created_on: new Date().toISOString(),\n            step_uuid: step.uuid\n          }\n        ];\n      }\n\n      const newlyRecentMessages = {};\n\n      this.updateEvents(runContext.events, runContext.session, newlyRecentMessages, () => {\n        let active = false;\n        for (const run of runContext.session.runs) {\n          if (run.status === 'waiting') {\n            active = true;\n            break;\n          }\n        }\n\n        let newEvents = this.state.events;\n        if (!active && wasJustActive) {\n          newEvents = update(this.state.events, {\n            $push: [\n              {\n                type: 'info',\n                text: 'Exited flow',\n                created_on: new Date()\n              } as any\n            ]\n          }) as EventProps[];\n        }\n\n        const waitingForHint =\n          runContext.session &&\n          runContext.session.wait &&\n          runContext.session.wait.hint !== undefined;\n\n        let drawerType = null;\n        if (waitingForHint) {\n          switch (runContext.session.wait.hint.type) {\n            case 'audio':\n              drawerType = DrawerType.audio;\n              break;\n            case 'video':\n              drawerType = DrawerType.videos;\n              break;\n            case 'image':\n              drawerType = DrawerType.images;\n              break;\n            case 'location':\n              drawerType = DrawerType.location;\n              break;\n            case 'digits':\n              drawerType = DrawerType.digit;\n              if (runContext.session.wait.hint.count !== 1) {\n                drawerType = DrawerType.digits;\n              }\n              break;\n            default:\n              console.log('Unknown hint', runContext.session.wait.hint.type);\n          }\n        }\n\n        let drawerOpen = waitingForHint;\n\n        // if we have quick replies, open our drawe with attachment options\n        if (!drawerType && this.hasQuickReplies()) {\n          drawerType = DrawerType.quickReplies;\n          drawerOpen = true;\n        }\n\n        this.setState(\n          {\n            active,\n            sprinting: false,\n            session: runContext.session,\n            events: newEvents,\n            drawerOpen,\n            drawerType,\n            waitingForHint\n          },\n          () => {\n            this.updateActivity(newlyRecentMessages);\n            this.handleFocusUpdate();\n          }\n        );\n      });\n    });\n  }\n\n  private startFlow(): void {\n    const now = new Date().toISOString();\n    const contact: any = {\n      uuid: createUUID(),\n      urns: ['tel:+12065551212'],\n      fields: {},\n      groups: [],\n      created_on: now\n    };\n\n    // use the current displayed language when simulating\n    if (this.props.language) {\n      contact.language = this.props.language.id;\n    }\n\n    // reset our events and contact\n    this.setState(\n      {\n        sprinting: true,\n        drawerOpen: false,\n        attachmentOptionsVisible: false,\n        events: []\n      },\n      () => {\n        const body: any = {\n          contact: this.state.contact,\n          flow: getCurrentDefinition(this.props.definition, this.props.nodes, false),\n          trigger: {\n            type: 'manual',\n            environment: {\n              date_format: 'DD-MM-YYYY',\n              time_format: 'hh:mm',\n              timezone: 'America/New_York',\n              languages: []\n            },\n            contact,\n            flow: {\n              uuid: this.props.definition.uuid,\n              name: this.props.definition.name\n            },\n            params: {},\n            triggered_on: now\n          }\n        };\n\n        axios.default\n          .post(getURL(this.context.config.endpoints.simulateStart), JSON.stringify(body, null, 2))\n          .then((response: axios.AxiosResponse) => {\n            this.updateRunContext(response.data as RunContext);\n          });\n      }\n    );\n  }\n\n  private resume(text: string, attachment?: string): void {\n    if ((!text || text.trim().length === 0) && !attachment) {\n      return;\n    }\n\n    if (text === '\\\\debug') {\n      console.log(JSON.stringify(this.debug, null, 2));\n      return;\n    }\n\n    if (text === '\\\\recalc') {\n      console.log('recal..');\n      // this.props.plumberRepaint();\n      return;\n    }\n\n    this.setState({ sprinting: true, attachmentOptionsVisible: false, drawerOpen: false }, () => {\n      const now = new Date().toISOString();\n\n      const msg: PostMessage = {\n        text,\n        uuid: createUUID(),\n        urn: this.state.session.contact.urns[0],\n        attachments: attachment ? [attachment] : []\n      };\n\n      const body: any = {\n        flow: getCurrentDefinition(this.props.definition, this.props.nodes, false),\n        session: this.state.session,\n        resume: {\n          type: 'msg',\n          msg,\n          resumed_on: now,\n          contact: this.state.session.contact\n        }\n      };\n\n      axios.default\n        .post(getURL(this.context.config.endpoints.simulateResume), JSON.stringify(body, null, 2))\n        .then((response: axios.AxiosResponse) => {\n          this.updateRunContext(response.data as RunContext, msg);\n        })\n        .catch(error => {\n          if (error.response.status) {\n          }\n          const events = update(this.state.events, {\n            $push: [\n              {\n                type: 'error',\n                text:\n                  error.response.status > 499\n                    ? 'Server error, try again later'\n                    : error.response.data.error\n              } as any\n            ]\n          }) as EventProps[];\n          this.setState({ events });\n        });\n    });\n  }\n\n  private onReset(event: any): void {\n    this.startFlow();\n  }\n\n  private scrollToBottom(delay?: number): void {\n    const wait = delay || 0;\n    if (this.bottom) {\n      window.setTimeout(() => {\n        if (this.bottom) {\n          this.bottom.scrollIntoView(false);\n        }\n      }, wait);\n    }\n  }\n\n  public componentDidUpdate(prevProps: SimulatorProps, prevState: SimulatorState): void {\n    if (this.drawerEle !== null) {\n      if (\n        prevState.drawerHeight !== this.drawerEle.clientHeight ||\n        prevState.drawerOpen !== this.state.drawerOpen\n      ) {\n        this.setState({ drawerHeight: this.drawerEle.clientHeight }, () => {\n          this.scrollToBottom(800);\n        });\n      }\n    }\n  }\n\n  private onKeyUp(event: any): void {\n    if (event.key === 'Enter') {\n      const ele = event.target;\n      const text = ele.value;\n      ele.value = '';\n      this.resume(text);\n    }\n  }\n\n  private onToggle(event: any): void {\n    const newVisible = !this.state.visible;\n\n    this.props.mergeEditorState({ simulating: newVisible });\n\n    this.setState({ visible: newVisible }, () => {\n      // clear our viewing definition\n      if (!this.state.visible) {\n        window.setTimeout(() => {\n          this.props.mergeEditorState({ activity: this.props.liveActivity });\n        }, 500);\n      } else {\n        this.updateActivity();\n\n        // start our flow if we haven't already\n        if (this.state.events.length === 0) {\n          this.startFlow();\n        }\n\n        this.handleFocusUpdate();\n      }\n    });\n  }\n\n  private handleFocusUpdate(): void {\n    if (this.inputBox) {\n      this.inputBox.focus();\n    }\n  }\n\n  private sendAttachment(attachment: string): void {\n    this.setState({ drawerOpen: false, attachmentOptionsVisible: false }, () => {\n      window.setTimeout(() => {\n        this.resume(null, attachment);\n      }, 200);\n    });\n  }\n\n  private getImageDrawer(): JSX.Element {\n    return (\n      <div className={styles.drawer_items}>\n        <div\n          className={styles.drawer_item}\n          onClick={() => {\n            this.sendAttachment('image/jpeg:' + IMAGE_A);\n          }}\n        >\n          <img src={IMAGE_A} alt=\"Attachment\" />\n        </div>\n        <div\n          className={styles.drawer_item}\n          onClick={() => {\n            this.sendAttachment('image/jpeg:' + IMAGE_B);\n          }}\n        >\n          <img src={IMAGE_B} alt=\"Attachment\" />\n        </div>\n        <div\n          className={styles.drawer_item}\n          onClick={() => {\n            this.sendAttachment('image/jpeg:' + IMAGE_C);\n          }}\n        >\n          <img src={IMAGE_C} alt=\"Attachment\" />\n        </div>\n      </div>\n    );\n  }\n\n  public getLocationDrawer(): JSX.Element {\n    return (\n      <div\n        className={styles.map_thumb}\n        onClick={() => {\n          this.sendAttachment('geo:2.904194,-79.003418');\n        }}\n      >\n        <img src={MAP_THUMB} alt=\"Attachment\" />\n      </div>\n    );\n  }\n\n  private getAudioDrawer(): JSX.Element {\n    return (\n      <div\n        className={styles.audio_picker}\n        onClick={() => {\n          this.sendAttachment('audio/mp3:' + AUDIO_A);\n        }}\n      >\n        <div className={styles.audio_icon + ' fe-mic'} />\n        <div className={styles.audio_message}>Upload Audio</div>\n      </div>\n    );\n  }\n\n  private getVideoDrawer(): JSX.Element {\n    return (\n      <div className={styles.drawer_items}>\n        <div\n          className={styles.drawer_item}\n          onClick={() => {\n            this.sendAttachment('video/mp4:' + VIDEO_A);\n          }}\n        >\n          <img src={VIDEO_A_THUMB} alt=\"Attachment\" />\n        </div>\n        <div\n          className={styles.drawer_item}\n          onClick={() => {\n            this.sendAttachment('video/mp4:' + VIDEO_A);\n          }}\n        >\n          <img src={VIDEO_A_THUMB} alt=\"Attachment\" />\n        </div>\n        <div\n          className={styles.drawer_item}\n          onClick={() => {\n            this.sendAttachment('video/mp4:' + VIDEO_A);\n          }}\n        >\n          <img src={VIDEO_A_THUMB} alt=\"Attachment\" />\n        </div>\n      </div>\n    );\n  }\n\n  private getQuickRepliesDrawer(): JSX.Element {\n    return (\n      <div className={styles.quick_replies}>\n        {this.state.quickReplies.map(reply => (\n          <div\n            className={styles.quick_reply}\n            onClick={() => {\n              this.resume(reply);\n            }}\n            key={`reply_${reply}`}\n          >\n            {reply}\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  private handleKeyPress(btn: string, multiple: boolean): void {\n    if (!multiple) {\n      this.resume(btn);\n    } else {\n      if (btn === '#') {\n        this.resume(this.state.keypadEntry);\n        this.setState({ keypadEntry: '' });\n      } else {\n        this.setState((prevState: SimulatorState) => {\n          return { keypadEntry: prevState.keypadEntry += btn };\n        });\n      }\n    }\n  }\n\n  private getKeyRow(keys: string[], multiple: boolean): JSX.Element {\n    return (\n      <div className={styles.row}>\n        {keys.map((key: string) => {\n          return (\n            <div\n              key={'btn_' + key}\n              onClick={() => {\n                this.handleKeyPress(key, multiple);\n              }}\n              className={styles.key}\n            >\n              {key}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  private getKeypadDrawer(multiple: boolean): JSX.Element {\n    return (\n      <div className={styles.keypad}>\n        {multiple ? <div className={styles.keypad_entry}>{this.state.keypadEntry}</div> : null}\n        <div className={styles.keys}>\n          {this.getKeyRow(['1', '2', '3'], multiple)}\n          {this.getKeyRow(['4', '5', '6'], multiple)}\n          {this.getKeyRow(['7', '8', '9'], multiple)}\n          {this.getKeyRow(['*', '0', '#'], multiple)}\n        </div>\n      </div>\n    );\n  }\n\n  private getDrawerContents(): JSX.Element {\n    switch (this.state.drawerType) {\n      case DrawerType.location:\n        return this.getLocationDrawer();\n      case DrawerType.audio:\n        return this.getAudioDrawer();\n      case DrawerType.images:\n        return this.getImageDrawer();\n      case DrawerType.videos:\n        return this.getVideoDrawer();\n      case DrawerType.quickReplies:\n        return this.getQuickRepliesDrawer();\n      case DrawerType.digits:\n      case DrawerType.digit:\n        return this.getKeypadDrawer(this.state.drawerType === DrawerType.digits);\n    }\n    return null;\n  }\n\n  private handleDrawerRef(ref: HTMLDivElement): HTMLDivElement {\n    return (this.drawerEle = ref);\n  }\n\n  public getDrawer(): JSX.Element {\n    const style: any = {};\n\n    if (this.state.drawerOpen) {\n      style.bottom = 50;\n\n      // are we being forced open\n      if (this.state.waitingForHint) {\n        style.bottom = 25;\n        style.zIndex = 150;\n        style.paddingBottom = 10;\n      }\n    } else {\n      style.bottom = -this.state.drawerHeight;\n    }\n\n    return (\n      <div\n        ref={this.handleDrawerRef}\n        style={style}\n        className={\n          styles.drawer +\n          ' ' +\n          (this.state.drawerOpen ? styles.drawer_visible : '') +\n          ' ' +\n          (this.state.attachmentOptionsVisible ? '' : styles.forced)\n        }\n      >\n        {this.getDrawerContents()}\n      </div>\n    );\n  }\n\n  private hasQuickReplies(): boolean {\n    return (this.state.quickReplies || []).length > 0;\n  }\n\n  private handleHideAttachments(): void {\n    this.setState(\n      {\n        attachmentOptionsVisible: false,\n        drawerOpen: false\n      },\n      () => {\n        if (this.hasQuickReplies()) {\n          window.setTimeout(() => {\n            this.showAttachmentDrawer(DrawerType.quickReplies);\n          }, 300);\n        }\n      }\n    );\n  }\n\n  private getAttachmentButton(icon: string, drawerType: DrawerType): JSX.Element {\n    return (\n      <div\n        className={icon}\n        onClick={() => {\n          this.showAttachmentDrawer(drawerType);\n        }}\n      />\n    );\n  }\n\n  private getAttachmentOptions(): JSX.Element {\n    return (\n      <div\n        className={\n          styles.attachment_buttons +\n          ' ' +\n          (this.state.attachmentOptionsVisible ? styles.visible : '')\n        }\n      >\n        <div className=\"fe-x\" onClick={this.handleHideAttachments} />\n        {this.getAttachmentButton('fe-picture2', DrawerType.images)}\n        {this.getAttachmentButton('fe-video', DrawerType.videos)}\n        {this.getAttachmentButton('fe-mic', DrawerType.audio)}\n        {this.getAttachmentButton('fe-map-marker', DrawerType.location)}\n      </div>\n    );\n  }\n\n  private handleHideAttachmentDrawer(): void {\n    this.setState({ drawerOpen: false });\n  }\n\n  private showAttachmentDrawer(drawerType: DrawerType): void {\n    // if we are already open but a different type, hide ourselves and reopen with the new type\n    if (this.state.drawerOpen) {\n      // if that type is already open, its a noop\n      if (drawerType === this.state.drawerType) {\n        return;\n      }\n\n      this.handleHideAttachmentDrawer();\n      window.setTimeout(() => {\n        this.showAttachmentDrawer(drawerType);\n      }, 300);\n    } else {\n      this.setState((prevState: SimulatorState) => {\n        return { drawerOpen: true, drawerType };\n      });\n    }\n  }\n\n  public render(): ReactNode {\n    const messages: JSX.Element[] = [];\n    for (const event of this.state.events) {\n      messages.push(<LogEvent {...event} key={event.type + '_' + String(event.created_on)} />);\n    }\n\n    const simHidden = !this.state.visible ? styles.sim_hidden : '';\n    const tabHidden = this.state.visible ? styles.tab_hidden : '';\n\n    const messagesStyle: any = {\n      height: 366 - (this.state.drawerOpen ? this.state.drawerHeight - 20 : 0)\n    };\n\n    // if attachments are forced open, account for missing attachment choice panel\n    if (this.state.drawerOpen && this.state.waitingForHint) {\n      messagesStyle.height += 25;\n    }\n\n    return (\n      <div className={styles.sim_container}>\n        <div>\n          <div id=\"simulator\" className={styles.simulator + ' ' + simHidden} key={'sim'}>\n            <div className={styles.screen}>\n              <div className={styles.header}>\n                <div className={styles.close + ' fe-x'} onClick={this.onToggle} />\n              </div>\n              <div className={styles.messages} style={messagesStyle}>\n                {messages}\n                <div\n                  id=\"bottom\"\n                  style={{ float: 'left', clear: 'both', marginTop: 20 }}\n                  ref={this.bottomRef}\n                />\n              </div>\n              <div className={styles.controls}>\n                <input\n                  ref={this.inputBoxRef}\n                  type=\"text\"\n                  onKeyUp={this.onKeyUp}\n                  disabled={this.state.sprinting}\n                  placeholder={this.state.active ? 'Enter message' : 'Press home to start again'}\n                />\n                <div className={styles.show_attachments_button}>\n                  <div\n                    className=\"fe-paperclip\"\n                    onClick={() => {\n                      this.setState({\n                        attachmentOptionsVisible: true,\n                        drawerOpen: false\n                      });\n                    }}\n                  />\n                </div>\n              </div>\n              {this.getAttachmentOptions()}\n              {this.getDrawer()}\n              <div className={styles.footer}>\n                <span\n                  className={\n                    styles.reset + ' ' + (this.state.active ? styles.active : styles.inactive)\n                  }\n                  onClick={this.onReset}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={styles.simulator_tab + ' ' + tabHidden} onClick={this.onToggle}>\n          <div className={styles.simulator_tab_icon + ' fe-smartphone'} />\n          <div className={styles.simulator_tab_text}>\n            Run in\n            <br />\n            Simulator\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n/* istanbul ignore next */\nconst mapStateToProps = ({\n  flowContext: { definition, nodes, assetStore },\n  editorState: { liveActivity, activity, language }\n}: AppState) => ({\n  liveActivity,\n  activity,\n  assetStore,\n  definition,\n  nodes,\n  language\n});\n\n/* istanbul ignore next */\nconst mapDispatchToProps = (dispatch: DispatchWithState) => bindActionCreators({}, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Simulator);\n","import { react as bindCallbacks } from 'auto-bind';\nimport { FlowDefinition, StickyNote } from 'flowTypes';\nimport * as React from 'react';\nimport TextareaAutosize from 'react-autosize-textarea/lib';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { DragEvent } from 'services/Plumber';\nimport AppState from 'store/state';\nimport { DispatchWithState, UpdateSticky, updateSticky } from 'store/thunks';\nimport { CONFIRMATION_TIME, QUIET_NOTE, snapToGrid } from 'utils';\n\nimport styles from './Sticky.module.scss';\nimport i18n from 'config/i18n';\n\ntype DragFunction = (event: DragEvent) => void;\nexport const STICKY_SPEC_ID: string = 'sticky-container';\nexport const STICKY_TITLE = i18n.t('sticky.title', 'New Note');\nexport const STICKY_BODY = i18n.t('sticky.body', '...');\n\nexport interface StickyPassedProps {\n  uuid: string;\n  sticky: StickyNote;\n  selected: boolean;\n}\n\nexport interface StickyStoreProps {\n  definition: FlowDefinition;\n  updateSticky: UpdateSticky;\n}\n\nexport type StickyProps = StickyPassedProps & StickyStoreProps;\n\n/**\n * We have internal state to track as the user types so\n * we can debounce updates to the store.\n */\ninterface StickyState {\n  title: string;\n  body: string;\n  color: string;\n  showConfirmation: boolean;\n}\n\nconst COLOR_OPTIONS: any = {\n  yellow: styles.yellow,\n  blue: styles.blue,\n  green: styles.green,\n  purple: styles.purple,\n  gray: styles.gray\n};\n\nexport class Sticky extends React.Component<StickyProps, StickyState> {\n  private dragging = false;\n  private ele: HTMLDivElement;\n  private debounceTextChanges: number;\n  private showConfirmation: number;\n\n  public DEFUALT_TITLE = 'New Note';\n  public DEFUALT_BODY = '...';\n\n  constructor(props: StickyProps & StickyStoreProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^on/, /^get/, /^is/, /^handle/]\n    });\n\n    this.state = {\n      title: this.props.sticky.title,\n      body: this.props.sticky.body,\n      color: this.props.sticky.color,\n      showConfirmation: false\n    };\n  }\n\n  private isSelected(): boolean {\n    return this.props.selected;\n  }\n\n  private onRef(ref: HTMLDivElement): HTMLDivElement {\n    return (this.ele = ref);\n  }\n\n  public componentWillUnmount(): void {\n    if (this.showConfirmation) {\n      window.clearTimeout(this.showConfirmation);\n    }\n\n    if (this.debounceTextChanges) {\n      window.clearTimeout(this.debounceTextChanges);\n    }\n  }\n\n  public handleDrag(event: DragEvent): void {\n    // noop\n  }\n\n  public handleDragStop(event: DragEvent): void {\n    // snap us to the same grid\n    const { left, top } = snapToGrid(event.finalPos[0], event.finalPos[1]);\n    this.ele.style.left = `${left}px`;\n    this.ele.style.top = `${top}px`;\n\n    this.props.sticky.position = { left, top };\n    this.props.updateSticky(this.props.uuid, this.props.sticky);\n  }\n\n  private onUpdateText(): void {\n    if (this.debounceTextChanges) {\n      window.clearTimeout(this.debounceTextChanges);\n    }\n\n    this.debounceTextChanges = window.setTimeout(() => {\n      const updated = { ...this.props.sticky };\n      updated.title = this.state.title;\n      updated.body = this.state.body;\n      this.props.updateSticky(this.props.uuid, updated);\n      this.debounceTextChanges = null;\n    }, QUIET_NOTE);\n  }\n\n  private handleChangeTitle(event: React.FormEvent<HTMLTextAreaElement>): void {\n    this.setState({ title: event.currentTarget.value });\n    this.onUpdateText();\n  }\n\n  private handleChangeBody(event: React.FormEvent<HTMLTextAreaElement>): void {\n    this.setState({ body: event.currentTarget.value });\n    this.onUpdateText();\n  }\n\n  public handleClickRemove(event: React.MouseEvent<HTMLDivElement>): void {\n    if (this.state.showConfirmation) {\n      this.props.updateSticky(this.props.uuid, null);\n    } else {\n      this.setState({ showConfirmation: true });\n      this.showConfirmation = window.setTimeout(() => {\n        this.setState({ showConfirmation: false });\n      }, CONFIRMATION_TIME);\n    }\n  }\n\n  private handleChangeColor(color: string): void {\n    this.props.sticky.color = color;\n    this.props.updateSticky(this.props.uuid, this.props.sticky);\n    this.setState({ color });\n  }\n\n  private handleSelectForValue(element: HTMLTextAreaElement, text: string): void {\n    if (element.value === text) {\n      window.setTimeout(() => {\n        element.select();\n      }, 0);\n    }\n  }\n\n  private handleTitleFocused(e: React.FocusEvent<HTMLTextAreaElement>): void {\n    this.handleSelectForValue(e.currentTarget, STICKY_TITLE);\n  }\n\n  private handleBodyFocused(e: React.FocusEvent<HTMLTextAreaElement>): void {\n    this.handleSelectForValue(e.currentTarget, STICKY_BODY);\n  }\n\n  private getColorChooser(): JSX.Element {\n    return (\n      <div className={styles.color_chooser_container}>\n        <div className={styles.color_chooser}>\n          {Object.keys(COLOR_OPTIONS).map((color: string) => {\n            return (\n              <div\n                key={this.props.uuid + color}\n                onClick={() => {\n                  this.handleChangeColor(color);\n                }}\n                className={styles.color_option + ' ' + COLOR_OPTIONS[color]}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  public render(): JSX.Element {\n    // add our removal class if necessary\n    const titleClasses = [styles.title_wrapper];\n    if (this.state.showConfirmation) {\n      titleClasses.push(styles.removal);\n    }\n\n    const containerClasses = [styles.sticky_container];\n    if (!this.props.sticky.color) {\n      this.props.sticky.color = 'yellow';\n    }\n\n    const stickyClasses = [styles.sticky];\n    if (this.isSelected()) {\n      stickyClasses.push(styles.selected);\n    }\n\n    containerClasses.push(COLOR_OPTIONS[this.props.sticky.color]);\n    const colorChooser = this.getColorChooser();\n\n    return (\n      <div\n        key={this.props.uuid}\n        className={containerClasses.join(' ')}\n        data-spec={STICKY_SPEC_ID}\n        ref={this.onRef}\n        id={this.props.uuid}\n      >\n        <div className={stickyClasses.join(' ')}>\n          <div className={titleClasses.join(' ')}>\n            <div className={styles.remove_button} onClick={this.handleClickRemove}>\n              <span className=\"fe-x\" />\n            </div>\n            <div className={styles.confirmation}>Remove?</div>\n            <TextareaAutosize\n              className={styles.title}\n              value={this.state.title}\n              onChange={this.handleChangeTitle}\n              onFocusCapture={this.handleTitleFocused}\n            />\n          </div>\n          <div className={styles.body_wrapper}>\n            <TextareaAutosize\n              className={styles.body}\n              value={this.state.body}\n              onChange={this.handleChangeBody}\n              onFocusCapture={this.handleBodyFocused}\n            />\n            {colorChooser}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n/* istanbul ignore next */\nconst mapStateToProps = ({ flowContext: { definition } }: AppState) => ({\n  definition\n});\n\n/* istanbul ignore next */\nconst mapDispatchToProps = (dispatch: DispatchWithState) => {\n  return bindActionCreators({ updateSticky }, dispatch);\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  null,\n  { forwardRef: false }\n)(Sticky);\n","import { Exit, FlowNode } from 'flowTypes';\nimport { GRID_SIZE } from 'utils';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nconst {\n  jsPlumb: { importDefaults }\n} = require('../../node_modules/jsplumb/dist/js/jsplumb');\nexport interface DragEvent {\n  el: Element;\n  pos: number[];\n  finalPos: number[];\n  e: MouseEvent;\n  clientX: number;\n  clientY: number;\n  target: Element;\n}\n\nexport interface PendingConnections {\n  [id: string]: {\n    source: string;\n    target: string;\n    className: string;\n    slot: number;\n    totalSlots: number;\n  };\n}\n\nexport const REPAINT_DURATION = 600;\nexport const TARGET_DEFAULTS = {\n  anchor: ['Continuous', { shape: 'Dot', faces: ['top', 'left', 'right'] }],\n  endpoint: [\n    'Dot',\n    {\n      radius: 13,\n      cssClass: 'plumb-endpoint',\n      hoverClass: 'plumb-endpoint-hover'\n    }\n  ],\n  dropOptions: {\n    tolerance: 'touch',\n    hoverClass: 'plumb-drop-hover',\n    isTarget: false\n  },\n  dragAllowedWhenFull: false,\n  deleteEndpointsOnEmpty: true,\n  isTarget: false\n};\n\nexport const SOURCE_DEFAULTS = {\n  anchor: 'BottomCenter',\n  maxConnections: 1,\n  dragAllowedWhenFull: false,\n  deleteEndpointsOnEmpty: true,\n  isSource: true\n};\n\nexport const getAnchor = (sourceEle: any, targetEle: any): any[] => {\n  return [\n    'Continuous',\n    {\n      shape: 'Dot',\n      faces:\n        sourceEle.getBoundingClientRect().bottom + GRID_SIZE / 3 <\n        targetEle.getBoundingClientRect().top\n          ? ['top']\n          : ['right', 'left']\n    }\n  ];\n};\n\nconst defaultConnector = [\n  'Flowchart',\n  {\n    stub: 12,\n    midpoint: 0.75,\n    alwaysRespectStubs: false,\n    gap: [0, 5],\n    cornerRadius: 3\n  }\n];\n\n/* istanbul ignore next */\nexport default class Plumber {\n  public jsPlumb: any;\n\n  // we batch up connections to apply them together\n  private pendingConnections: PendingConnections = {};\n  private pendingConnectionTimeout: any;\n\n  private animateInterval: any = null;\n\n  constructor() {\n    this.jsPlumb = importDefaults({\n      DragOptions: { cursor: 'pointer', zIndex: 1000 },\n      DropOptions: { tolerance: 'touch', hoverClass: 'plumb-hover' },\n      Endpoint: 'Blank',\n      EndpointStyle: { strokeStyle: 'transparent' },\n      PaintStyle: { strokeWidth: 3.5 },\n      ConnectionsDetachable: true,\n      Connector: defaultConnector,\n      ConnectionOverlays: [\n        [\n          'PlainArrow',\n          {\n            location: 0.999,\n            width: 12,\n            length: 12,\n            cssClass: 'jtk-arrow'\n          }\n        ]\n      ],\n      Container: 'editor-container'\n    });\n\n    this.debug = this.debug.bind(this);\n    this.setSourceEnabled = this.setSourceEnabled.bind(this);\n    this.makeSource = this.makeSource.bind(this);\n    this.makeTarget = this.makeTarget.bind(this);\n    this.connectExit = this.connectExit.bind(this);\n    this.setDragSelection = this.setDragSelection.bind(this);\n    this.clearDragSelection = this.clearDragSelection.bind(this);\n    this.removeFromDragSelection = this.removeFromDragSelection.bind(this);\n    this.cancelDurationRepaint = this.cancelDurationRepaint.bind(this);\n    this.remove = this.remove.bind(this);\n    this.repaintForDuration = this.repaintForDuration.bind(this);\n    this.repaintFor = this.repaintFor.bind(this);\n    this.handlePendingConnections = this.handlePendingConnections.bind(this);\n    this.checkForPendingConnections = this.checkForPendingConnections.bind(this);\n    this.connect = this.connect.bind(this);\n    this.bind = this.bind.bind(this);\n    this.repaint = this.repaint.bind(this);\n    this.recalculate = this.recalculate.bind(this);\n    this.recalculateUUIDs = this.recalculateUUIDs.bind(this);\n    this.reset = this.reset.bind(this);\n    this.updateClass = this.updateClass.bind(this);\n\n    // if our browser resizes, make sure to repaint accordingly\n    window.onresize = () => this.jsPlumb.repaintEverything();\n  }\n\n  public debug(): any {\n    return this.jsPlumb;\n  }\n\n  public setSourceEnabled(uuid: string, enabled: boolean): void {\n    this.jsPlumb.setSourceEnabled(uuid, enabled);\n  }\n\n  public makeSource(uuid: string): any {\n    return this.jsPlumb.makeSource(uuid, SOURCE_DEFAULTS);\n  }\n\n  public makeTarget(uuid: string): void {\n    this.jsPlumb.makeTarget(uuid, TARGET_DEFAULTS);\n  }\n\n  public connectExit(node: FlowNode, exit: Exit, className: string = null): void {\n    this.connect(\n      `${node.uuid}:${exit.uuid}`,\n      exit.destination_uuid,\n      className,\n      node.exits.findIndex((e: Exit) => e.uuid === exit.uuid),\n      node.exits.length\n    );\n  }\n\n  public updateClass(node: FlowNode, exit: Exit, className: string, add: boolean): void {\n    const source = `${node.uuid}:${exit.uuid}`;\n    const connection = this.jsPlumb.select({ source });\n    if (add) {\n      connection.addClass(className);\n    } else {\n      connection.removeClass(className);\n    }\n  }\n\n  public removeFromDragSelection(uuid: string): void {\n    this.jsPlumb.removeFromDragSelection(uuid);\n  }\n\n  public setDragSelection(selected: { [uuid: string]: boolean }): void {\n    this.cancelDurationRepaint();\n    this.jsPlumb.clearDragSelection();\n\n    Object.keys(selected).forEach(uuid => this.jsPlumb.addToDragSelection(uuid));\n  }\n\n  public clearDragSelection(): void {\n    this.jsPlumb.clearDragSelection();\n  }\n\n  public cancelDurationRepaint(): void {\n    if (this.animateInterval) {\n      window.clearInterval(this.animateInterval);\n      this.animateInterval = null;\n    }\n  }\n\n  public repaintForDuration(duration: number = REPAINT_DURATION): void {\n    this.cancelDurationRepaint();\n    const pause = 10;\n    const newDuration = duration / pause;\n\n    let cycles = 0;\n    this.animateInterval = window.setInterval(() => {\n      // TODO: optimize this to paint as little as possible\n      // this.revalidate(uuid);\n      this.jsPlumb.repaintEverything();\n\n      if (cycles++ > newDuration) {\n        window.clearInterval(this.animateInterval);\n      }\n    }, pause);\n  }\n\n  public repaintFor(millis: number): void {\n    window.setInterval(() => {\n      this.jsPlumb.repaintEverything();\n    }, 1);\n  }\n\n  private handlePendingConnections(): void {\n    const targets: { [id: string]: boolean } = {};\n\n    this.jsPlumb.batch(() => {\n      const batch = Object.keys(this.pendingConnections).length;\n      if (batch > 1) {\n        console.log('batching ' + batch + ' connections');\n      }\n\n      for (const key in this.pendingConnections) {\n        if (this.pendingConnections.hasOwnProperty(key)) {\n          const connection = this.pendingConnections[key];\n          const { source, target, className, slot, totalSlots } = connection;\n\n          const anchors = target\n            ? [\n                'Bottom',\n                getAnchor(document.getElementById(source), document.getElementById(target))\n              ]\n            : [];\n\n          if (source != null) {\n            // any existing connections for our source need to be deleted\n            this.jsPlumb.select({ source }).delete({ fireEvent: false });\n\n            const start = totalSlots < 5 ? 0.75 : 0.35;\n            let midpoint = start + slot * 0.15;\n            const exitMiddle = totalSlots / 2;\n            if (slot > exitMiddle) {\n              midpoint = start - 0.05 + (totalSlots - slot) * 0.15;\n            }\n\n            // add reasonable boundaries for midpoints\n            midpoint = Math.max(Math.min(0.9, midpoint), 0.1);\n\n            const connector: any = [...defaultConnector];\n            connector[1].midpoint = midpoint;\n\n            // now make our new connection\n            if (target != null) {\n              // don't allow manual detachments if our connection is styled\n              if (className) {\n                this.jsPlumb.connect({\n                  source,\n                  target,\n                  anchors,\n                  fireEvent: false,\n                  cssClass: className,\n                  detachable: false,\n                  connector\n                });\n              } else {\n                this.jsPlumb.connect({\n                  source,\n                  target,\n                  anchors,\n                  fireEvent: false,\n                  cssClass: className,\n                  connector\n                });\n              }\n            }\n          }\n\n          if (target != null) {\n            targets[target] = true;\n          }\n\n          delete this.pendingConnections[key];\n        }\n      }\n    });\n\n    // revalidate the targets that we updated\n    for (const target in targets) {\n      if (targets.hasOwnProperty('target')) {\n        this.recalculate(target);\n      }\n    }\n  }\n\n  private checkForPendingConnections(): void {\n    if (this.pendingConnectionTimeout) {\n      window.clearTimeout(this.pendingConnectionTimeout);\n    }\n\n    this.pendingConnectionTimeout = window.setTimeout(() => {\n      this.handlePendingConnections();\n    }, 0);\n  }\n\n  public connect(\n    source: string,\n    target: string,\n    className: string = null,\n    slot: number = 0,\n    totalSlots: number = 0\n  ): void {\n    this.pendingConnections[`${source}:${target}:${className}`] = {\n      source,\n      target,\n      className,\n      slot,\n      totalSlots\n    };\n    this.checkForPendingConnections();\n  }\n\n  public bind(event: string, onEvent: Function): void {\n    return this.jsPlumb.bind(event, onEvent);\n  }\n\n  public repaint(uuid?: string): void {\n    if (!uuid) {\n      this.jsPlumb.recalculateOffsets();\n      this.jsPlumb.repaintEverything();\n    } else {\n      this.jsPlumb.recalculateOffsets(uuid);\n      this.jsPlumb.repaint(uuid);\n    }\n  }\n\n  public remove(uuid: string): void {\n    if (this.jsPlumb.isSource(uuid)) {\n      this.jsPlumb.unmakeSource(uuid);\n      this.jsPlumb.remove(uuid);\n    } else if (this.jsPlumb.isTarget(uuid)) {\n      this.jsPlumb.deleteConnectionsForElement(uuid);\n    }\n  }\n\n  public recalculateUUIDs(uuids: string[]): void {\n    this.jsPlumb.batch(() => {\n      uuids.forEach((uuid: string) => {\n        const connections = this.jsPlumb\n          .getConnections({ target: uuid })\n          .concat(this.jsPlumb.getConnections({ source: uuid }));\n        for (const c of connections) {\n          c.endpoints[1].setAnchor(getAnchor(c.endpoints[0].element, c.endpoints[1].element));\n        }\n        this.jsPlumb.revalidate(uuid);\n      });\n    });\n  }\n\n  public recalculate(uuid?: string): void {\n    // window.setTimeout(() => {\n    this.jsPlumb.revalidate(uuid);\n    /*if (uuid) {\n            this.jsPlumb.recalculateOffsets(uuid);\n        } else {\n            this.jsPlumb.recalculateOffsets();\n        }\n        this.jsPlumb.repaint(uuid);*/\n    // }, 0);\n  }\n\n  public reset(): void {\n    // console.log(\"resetting plumbing\");\n    this.jsPlumb.reset();\n  }\n}\n","import { FlowStoreProps } from 'components/flow/Flow';\nimport { DebugState } from 'store/editor';\n\nconst mutate = require('immutability-helper');\n\n/* istanbul ignore next */\nexport default class Debug {\n  private props: FlowStoreProps;\n  private state: DebugState;\n\n  constructor(props: FlowStoreProps, initial: DebugState) {\n    this.props = props;\n    this.state = initial || { showUUIDs: false };\n  }\n\n  public showUUIDs(): DebugState {\n    const updated = mutate(this.state, { $merge: { showUUIDs: true } });\n    this.props.mergeEditorState({ debug: updated });\n    return updated;\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Button from 'components/button/Button';\nimport { Canvas } from 'components/canvas/Canvas';\nimport { CanvasDraggableProps } from 'components/canvas/CanvasDraggable';\nimport Node from 'components/flow/node/Node';\nimport { getDraggedFrom } from 'components/helpers';\nimport NodeEditor from 'components/nodeeditor/NodeEditor';\nimport Simulator from 'components/simulator/Simulator';\nimport Sticky, { STICKY_BODY, STICKY_TITLE } from 'components/sticky/Sticky';\nimport { ConfigProviderContext, fakePropType } from 'config/ConfigProvider';\nimport { Exit, FlowDefinition } from 'flowTypes';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Plumber from 'services/Plumber';\nimport { DragSelection, EditorState } from 'store/editor';\nimport { RenderNode } from 'store/flowContext';\nimport { createEmptyNode, detectLoops, getOrderedNodes } from 'store/helpers';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport AppState from 'store/state';\nimport {\n  ConnectionEvent,\n  DispatchWithState,\n  mergeEditorState,\n  MergeEditorState,\n  NoParamsAC,\n  onConnectionDrag,\n  OnConnectionDrag,\n  OnOpenNodeEditor,\n  onOpenNodeEditor,\n  onRemoveNodes,\n  OnRemoveNodes,\n  OnUpdateCanvasPositions,\n  onUpdateCanvasPositions,\n  resetNodeEditingState,\n  UpdateConnection,\n  updateConnection,\n  updateSticky,\n  UpdateSticky\n} from 'store/thunks';\nimport {\n  ACTIVITY_INTERVAL,\n  createUUID,\n  isRealValue,\n  NODE_PADDING,\n  renderIf,\n  snapToGrid,\n  timeEnd,\n  timeStart\n} from 'utils';\nimport Debug from 'utils/debug';\n\nimport styles from './Flow.module.scss';\nimport { Trans } from 'react-i18next';\n\ndeclare global {\n  interface Window {\n    fe: any;\n  }\n}\n\nexport interface FlowStoreProps {\n  editorState: Partial<EditorState>;\n  mergeEditorState: MergeEditorState;\n\n  definition: FlowDefinition;\n  nodes: { [uuid: string]: RenderNode };\n  dependencies: FlowDefinition[];\n  nodeEditorSettings: NodeEditorSettings;\n\n  updateConnection: UpdateConnection;\n  onOpenNodeEditor: OnOpenNodeEditor;\n  onUpdateCanvasPositions: OnUpdateCanvasPositions;\n  onRemoveNodes: OnRemoveNodes;\n  resetNodeEditingState: NoParamsAC;\n  onConnectionDrag: OnConnectionDrag;\n  updateSticky: UpdateSticky;\n}\n\nexport interface Translations {\n  [uuid: string]: any;\n}\n\nexport const DRAG_THRESHOLD = 3;\nexport const REPAINT_TIMEOUT = 500;\nexport const GHOST_POSITION_INITIAL = { left: -1000, top: -1000 };\n\nexport const nodeSpecId = 'node';\nexport const nodesContainerSpecId = 'node-container';\nexport const ghostNodeSpecId = 'ghost-node';\nexport const dragSelectSpecId = 'drag-select';\n\nexport const isDraggingBack = (event: ConnectionEvent) => {\n  return event.suspendedElementId === event.targetId && event.source !== null;\n};\n\nexport const getDragStyle = (drag: DragSelection) => {\n  const left = Math.min(drag.startX, drag.currentX);\n  const top = Math.min(drag.startY, drag.currentY);\n  const width = Math.max(drag.startX, drag.currentX) - left;\n  const height = Math.max(drag.startY, drag.currentY) - top;\n  return {\n    left,\n    top,\n    width,\n    height\n  };\n};\n\nexport class Flow extends React.Component<FlowStoreProps, {}> {\n  private Plumber: Plumber;\n  private ele: HTMLDivElement;\n  private nodeContainerUUID: string;\n\n  // Refs\n  private ghost: any;\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: FlowStoreProps, context: ConfigProviderContext) {\n    super(props, context);\n\n    this.nodeContainerUUID = createUUID();\n\n    this.Plumber = new Plumber();\n\n    /* istanbul ignore next */\n    if (context.config.debug) {\n      window.fe = new Debug(props, this.props.editorState.debug);\n    }\n\n    bindCallbacks(this, {\n      include: [/Ref$/, /^on/, /^is/, /^get/]\n    });\n\n    timeStart('RenderAndPlumb');\n  }\n\n  private onRef(ref: HTMLDivElement): HTMLDivElement {\n    return (this.ele = ref);\n  }\n\n  private ghostRef(ref: any): any {\n    return (this.ghost = ref);\n  }\n\n  public componentDidMount(): void {\n    this.Plumber.bind('connection', (event: ConnectionEvent) =>\n      this.props.updateConnection(event.sourceId, event.targetId)\n    );\n    this.Plumber.bind('beforeDrag', (event: ConnectionEvent) => {\n      this.beforeConnectionDrag(event);\n    });\n\n    this.Plumber.bind('connectionDrag', (event: ConnectionEvent) => {\n      this.props.onConnectionDrag(event, this.context.config.flowType);\n    });\n\n    this.Plumber.bind('connectionDragStop', (event: ConnectionEvent) =>\n      this.onConnectorDrop(event)\n    );\n    this.Plumber.bind(\n      'beforeStartDetach',\n      (event: ConnectionEvent) => !this.props.editorState.translating && this.context.config.mutable\n    );\n    this.Plumber.bind('beforeDetach', (event: ConnectionEvent) => true);\n    this.Plumber.bind('beforeDrop', (event: ConnectionEvent) => this.onBeforeConnectorDrop(event));\n\n    let offset = { left: 0, top: 0 };\n\n    /* istanbul ignore next */\n    if (this.ele) {\n      offset = this.ele.getBoundingClientRect();\n    }\n\n    this.props.mergeEditorState({\n      containerOffset: { left: offset.left, top: offset.top + window.scrollY }\n    });\n\n    timeEnd('RenderAndPlumb');\n\n    // deals with safari load rendering throwing\n    // off the jsplumb offsets\n    window.setTimeout(() => this.Plumber.repaint(), REPAINT_TIMEOUT);\n  }\n\n  public componentWillUnmount(): void {\n    this.Plumber.reset();\n  }\n\n  public UNSAFE_componentWillUpdate(prevProps: FlowStoreProps): void {\n    if (\n      prevProps.editorState.activityInterval === this.props.editorState.activityInterval &&\n      this.props.editorState.activityInterval !== ACTIVITY_INTERVAL\n    ) {\n      this.props.mergeEditorState({ activityInterval: ACTIVITY_INTERVAL });\n    }\n  }\n\n  /**\n   * Called right before a connector is dropped onto a new node\n   */\n  private onBeforeConnectorDrop(event: ConnectionEvent): boolean {\n    this.props.resetNodeEditingState();\n    const fromNodeUUID = event.sourceId.split(':')[0];\n    try {\n      detectLoops(this.props.nodes, fromNodeUUID, event.targetId);\n    } catch {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Called the moment a connector is done dragging, whether it is dropped on an\n   * existing node or on to empty space.\n   */\n  private onConnectorDrop(event: ConnectionEvent): boolean {\n    const { ghostNode } = this.props.editorState;\n\n    // Don't show the node editor if we a dragging back to where we were\n    if (isRealValue(ghostNode) && !isDraggingBack(event)) {\n      // Wire up the drag from to our ghost node\n      this.Plumber.recalculate(ghostNode.node.uuid);\n\n      const dragPoint = getDraggedFrom(ghostNode);\n      this.Plumber.connect(dragPoint.nodeUUID + ':' + dragPoint.exitUUID, ghostNode.node.uuid);\n\n      // Save our position for later\n      const { left, top } = (this.ghost &&\n        snapToGrid(this.ghost.ele.offsetLeft, this.ghost.ele.offsetTop)) || { left: 0, top: 0 };\n\n      this.props.editorState.ghostNode.ui.position = { left, top };\n      let originalAction = null;\n      if (ghostNode.node.actions && ghostNode.node.actions.length === 1) {\n        originalAction = ghostNode.node.actions[0];\n      }\n\n      // Bring up the node editor\n      this.props.onOpenNodeEditor({\n        originalNode: ghostNode,\n        originalAction\n      });\n    }\n\n    /* istanbul ignore next */\n    document.removeEventListener('mousemove', (window as any).ghostListener);\n\n    return true;\n  }\n\n  private beforeConnectionDrag(event: ConnectionEvent): boolean {\n    if (event.source) {\n      event.source.dispatchEvent(new Event('disconnect'));\n    }\n    return !this.props.editorState.translating;\n  }\n\n  private getNodes(): CanvasDraggableProps[] {\n    const onlyNode = Object.keys(this.props.nodes).length === 1;\n    return getOrderedNodes(this.props.nodes).map((renderNode: RenderNode, idx: number) => {\n      return {\n        uuid: renderNode.node.uuid,\n        position: renderNode.ui.position,\n        ele: (selected: boolean) => (\n          <Node\n            onlyNode={onlyNode}\n            startingNode={idx === 0}\n            selected={selected}\n            key={renderNode.node.uuid}\n            data-spec={nodeSpecId}\n            nodeUUID={renderNode.node.uuid}\n            plumberMakeTarget={this.Plumber.makeTarget}\n            plumberRemove={this.Plumber.remove}\n            plumberRecalculate={this.Plumber.recalculate}\n            plumberMakeSource={this.Plumber.makeSource}\n            plumberConnectExit={this.Plumber.connectExit}\n            plumberUpdateClass={this.Plumber.updateClass}\n          />\n        )\n      };\n    });\n  }\n\n  private getStickies(): CanvasDraggableProps[] {\n    const stickyMap = this.props.definition._ui.stickies || {};\n    return Object.keys(stickyMap).map(uuid => {\n      return {\n        uuid,\n        ele: (selected: boolean) => (\n          <Sticky key={uuid} uuid={uuid} sticky={stickyMap[uuid]} selected={selected} />\n        ),\n        position: stickyMap[uuid].position\n      };\n    });\n  }\n\n  private getDragNode(): JSX.Element {\n    return isRealValue(this.props.editorState.ghostNode) ? (\n      <div\n        data-spec={ghostNodeSpecId}\n        key={this.props.editorState.ghostNode.node.uuid}\n        style={{ position: 'absolute', display: 'block', visibility: 'hidden' }}\n      >\n        <Node\n          onlyNode={false}\n          selected={false}\n          startingNode={false}\n          ref={this.ghostRef}\n          ghost={true}\n          nodeUUID={this.props.editorState.ghostNode.node.uuid}\n          plumberMakeTarget={this.Plumber.makeTarget}\n          plumberRemove={this.Plumber.remove}\n          plumberRecalculate={this.Plumber.recalculate}\n          plumberMakeSource={this.Plumber.makeSource}\n          plumberConnectExit={this.Plumber.connectExit}\n          plumberUpdateClass={this.Plumber.updateClass}\n        />\n      </div>\n    ) : null;\n  }\n\n  private getSimulator(): JSX.Element {\n    return renderIf(this.context.config.endpoints && this.context.config.endpoints.simulateStart)(\n      <Simulator key=\"simulator\" mergeEditorState={this.props.mergeEditorState} />\n    );\n  }\n\n  private getNodeEditor(): JSX.Element {\n    return renderIf(this.props.nodeEditorSettings !== null)(\n      <NodeEditor\n        key=\"node-editor\"\n        plumberConnectExit={this.Plumber.connectExit}\n        plumberRepaintForDuration={this.Plumber.repaintForDuration}\n      />\n    );\n  }\n\n  private isClickOnCanvas(event: React.MouseEvent<HTMLDivElement>): boolean {\n    // TODO: not sure the TS-safe way to access id here\n    return (event.target as any).id === this.nodeContainerUUID;\n  }\n\n  private onDoubleClick(event: React.MouseEvent<HTMLDivElement>): void {\n    if (this.isClickOnCanvas(event)) {\n      const { left, top } = snapToGrid(\n        event.pageX - this.props.editorState.containerOffset.left - 100 + NODE_PADDING,\n        event.pageY - this.props.editorState.containerOffset.top - NODE_PADDING * 2 - 40\n      );\n\n      this.props.updateSticky(createUUID(), {\n        position: { left, top },\n        title: STICKY_TITLE,\n        body: STICKY_BODY\n      });\n    }\n  }\n\n  private getEmptyFlow(): JSX.Element {\n    return (\n      <div key=\"create_node\" className={styles.empty_flow}>\n        <Trans i18nKey=\"empty_flow_message\">\n          <h1>Let's get started</h1>\n          <div>\n            We recommend starting your flow by sending a message. This message will be sent to\n            anybody right after they join the flow. This is your chance to send a single message or\n            ask them a question.\n          </div>\n        </Trans>\n\n        <Button\n          name=\"Create Message\"\n          onClick={() => {\n            const emptyNode = createEmptyNode(null, null, 1, this.context.config.flowType);\n            this.props.onOpenNodeEditor({\n              originalNode: emptyNode,\n              originalAction: emptyNode.node.actions[0]\n            });\n          }}\n        />\n      </div>\n    );\n  }\n\n  public render(): JSX.Element {\n    const nodes = this.getNodes();\n\n    let children = [];\n\n    if (nodes.length === 0) {\n      children = [this.getEmptyFlow()];\n    } else {\n      children = [this.getSimulator(), this.getDragNode()];\n    }\n\n    const draggables = this.getStickies().concat(nodes);\n\n    return (\n      <div onDoubleClick={this.onDoubleClick} ref={this.onRef}>\n        <Canvas\n          mutable={this.context.config.mutable}\n          draggingNew={!!this.props.editorState.ghostNode && !this.props.nodeEditorSettings}\n          onDragging={(uuids: string[]) => {\n            uuids.forEach((uuid: string) => {\n              if (uuid in this.props.nodes) {\n                this.props.nodes[uuid].node.exits.forEach((exit: Exit) => {\n                  if (exit.destination_uuid) {\n                    uuids.push(uuid + ':' + exit.uuid);\n                  }\n                });\n              }\n            });\n            this.Plumber.recalculateUUIDs(uuids);\n          }}\n          uuid={this.nodeContainerUUID}\n          dragActive={this.props.editorState.dragActive}\n          mergeEditorState={this.props.mergeEditorState}\n          onRemoveNodes={this.props.onRemoveNodes}\n          draggables={draggables}\n          onUpdatePositions={this.props.onUpdateCanvasPositions}\n        >\n          {children}\n          {this.getNodeEditor()}\n        </Canvas>\n      </div>\n    );\n  }\n}\n\n/* istanbul ignore next */\nconst mapStateToProps = ({\n  flowContext: { definition, dependencies, nodes },\n  // tslint:disable-next-line: no-shadowed-variable\n  editorState,\n  nodeEditor: { settings }\n}: AppState) => {\n  return {\n    nodeEditorSettings: settings,\n    definition,\n    nodes,\n    dependencies,\n    editorState: editorState as Partial<EditorState>\n  };\n};\n\n/* istanbul ignore next */\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators(\n    {\n      mergeEditorState,\n      resetNodeEditingState,\n      onConnectionDrag,\n      onOpenNodeEditor,\n      onUpdateCanvasPositions,\n      onRemoveNodes,\n      updateConnection,\n      updateSticky\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Flow);\n","import { react as bindCallbacks } from 'auto-bind';\nimport { ConfigProviderContext } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Asset, Assets } from 'store/flowContext';\nimport AppState from 'store/state';\nimport { DispatchWithState, HandleLanguageChange, handleLanguageChange } from 'store/thunks';\n\nimport styles from './LanguageSelector.module.scss';\n\nexport interface LanguageSelectorProps {\n  language: Asset;\n  languages: Assets;\n  handleLanguageChange: HandleLanguageChange;\n}\n\nexport const containerClasses = 'language-selector';\n\nexport class LanguageSelector extends React.Component<LanguageSelectorProps> {\n  constructor(props: LanguageSelectorProps, context: ConfigProviderContext) {\n    super(props, context);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public handleLanguageChanged(language: Asset): void {\n    this.props.handleLanguageChange(language);\n  }\n\n  public handleLanguageSort(a: Asset, b: Asset): number {\n    if (a.id === 'base') {\n      return -1;\n    }\n\n    if (b.id === 'base') {\n      return 1;\n    }\n\n    if (a.order !== undefined && b.order !== undefined) {\n      return a.order - b.order;\n    }\n\n    return a.name.localeCompare(b.name);\n  }\n\n  public render(): JSX.Element {\n    if (!this.props.language) {\n      return null;\n    }\n\n    const languages = Object.keys(this.props.languages.items)\n      .map((iso: string) => this.props.languages.items[iso])\n      .sort(this.handleLanguageSort);\n\n    if (languages.length === 1) {\n      return null;\n    }\n\n    return (\n      <div className={containerClasses}>\n        {languages.map((lang: Asset, idx: number) => {\n          return (\n            <div key={'lang_' + lang.id} className={styles.language}>\n              {idx > 0 ? <div className={styles.separator}>|</div> : null}\n              <div\n                className={\n                  styles.language_link +\n                  ' ' +\n                  (this.props.language.id === lang.id ? styles.active : '')\n                }\n                onClick={() => {\n                  this.handleLanguageChanged(lang);\n                }}\n              >\n                {lang.name}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\n/* istanbul ignore next */\nconst mapStateToProps = ({ flowContext: { assetStore }, editorState: { language } }: AppState) => ({\n  languages: assetStore.languages,\n  language\n});\n\n/* istanbul ignore next */\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators(\n    {\n      handleLanguageChange\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LanguageSelector);\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\n\nimport styles from './PopTab.module.scss';\n\nexport interface PopTabProps {\n  color: string;\n  icon: string;\n  label: string;\n  header: string;\n  top: string;\n  visible: boolean;\n  onShow: () => void;\n  onHide: () => void;\n}\n\nexport interface PopTabState {\n  width: number;\n}\n\nexport class PopTab extends React.Component<PopTabProps, PopTabState> {\n  private poppedEle: HTMLDivElement;\n\n  constructor(props: PopTabProps) {\n    super(props);\n    this.state = { width: 400 };\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public componentDidUpdate(): void {\n    if (this.state.width !== this.poppedEle.offsetWidth) {\n      this.setState({ width: this.poppedEle.offsetWidth });\n    }\n  }\n\n  private handlePoppedRef(ref: HTMLDivElement): HTMLDivElement {\n    return (this.poppedEle = ref);\n  }\n\n  private handleTabClick(): void {\n    this.props.onShow();\n  }\n\n  private handleClose(): void {\n    this.props.onHide();\n  }\n  public render(): JSX.Element {\n    return (\n      <div\n        className={styles.pop_wrapper + ' ' + (this.props.visible ? styles.visible : '')}\n        style={{\n          right: -this.state.width,\n          top: this.props.top\n        }}\n      >\n        <div className={styles.tab_wrapper}>\n          <div\n            className={styles.tab}\n            style={{ background: this.props.color }}\n            onClick={this.handleTabClick}\n          >\n            <div className={styles.icon}>\n              <span className={this.props.icon} />\n            </div>\n            <div className={styles.label}>{this.props.label}</div>\n          </div>\n        </div>\n        <div\n          ref={this.handlePoppedRef}\n          className={styles.popped}\n          style={{\n            borderColor: this.props.color,\n            right: this.props.visible ? 15 + this.state.width : 0,\n            top: -100\n          }}\n        >\n          <div className={styles.header} style={{ background: this.props.color }}>\n            <div className={styles.close + ' fe-x'} onClick={this.handleClose} />\n            <div className={styles.header_label}>{this.props.header}</div>\n          </div>\n          <>{this.props.children}</>\n        </div>\n      </div>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport { PopTab } from 'components/poptab/PopTab';\nimport dateFormat from 'dateformat';\nimport { getAssets, getFlowDefinition } from 'external';\nimport { FlowDefinition } from 'flowTypes';\nimport React from 'react';\nimport { Asset, AssetStore } from 'store/flowContext';\nimport { renderIf } from 'utils';\n\nimport styles from './RevisionExplorer.module.scss';\nimport i18n from 'config/i18n';\n\nconst cx: any = classNames.bind(styles);\n\nexport interface User {\n  email: string;\n  name: string;\n}\n\nexport interface Revision {\n  id: number;\n  version: string;\n  revision: number;\n  created_on: string;\n  user: User;\n  current: boolean;\n}\n\nexport interface RevisionExplorerProps {\n  simulating: boolean;\n  assetStore: AssetStore;\n  loadFlowDefinition: (definition: FlowDefinition, assetStore: AssetStore) => void;\n  createNewRevision: () => void;\n  utc?: boolean;\n}\n\nexport interface RevisionExplorerState {\n  revisions: Asset[];\n  revision: Asset;\n  definition: FlowDefinition;\n  visible: boolean;\n}\n\nexport class RevisionExplorer extends React.Component<\n  RevisionExplorerProps,\n  RevisionExplorerState\n> {\n  constructor(props: RevisionExplorerProps) {\n    super(props);\n    this.state = {\n      revisions: [],\n      revision: null,\n      definition: null,\n      visible: false\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public handleUpdateRevisions(): Promise<void> {\n    if (this.props.assetStore !== null) {\n      const assets = this.props.assetStore.revisions;\n      return getAssets(assets.endpoint, assets.type, assets.id || 'id').then(\n        (remoteAssets: Asset[]) => {\n          if (remoteAssets.length > 0) {\n            remoteAssets[0].content.current = true;\n          }\n          this.setState({ revisions: remoteAssets });\n        }\n      );\n    }\n  }\n\n  public handleTabClicked(): void {\n    this.setState(\n      (prevState: RevisionExplorerState) => {\n        return { visible: !prevState.visible };\n      },\n      () => {\n        if (this.state.visible) {\n          this.handleUpdateRevisions();\n        } else {\n          if (this.state.revision && this.state.revision.id !== this.state.revisions[0].id) {\n            getFlowDefinition(this.props.assetStore.revisions, this.state.revisions[0].id).then(\n              (definition: FlowDefinition) => {\n                this.props.loadFlowDefinition(definition, this.props.assetStore);\n                this.setState({ revision: null });\n              }\n            );\n          }\n        }\n      }\n    );\n  }\n\n  public onRevisionClicked = (\n    revision: Asset\n  ): ((event: React.MouseEvent<HTMLDivElement>) => void) => {\n    return (event: React.MouseEvent<HTMLDivElement>) => {\n      event.stopPropagation();\n      event.preventDefault();\n      getFlowDefinition(this.props.assetStore.revisions, revision.id).then(\n        (definition: FlowDefinition) => {\n          this.props.loadFlowDefinition(definition, this.props.assetStore);\n          this.setState({ revision });\n        }\n      );\n    };\n  };\n\n  public onRevertClicked = (\n    revision: Asset\n  ): ((event: React.MouseEvent<HTMLDivElement>) => void) => {\n    return (event: React.MouseEvent<HTMLDivElement>) => {\n      event.stopPropagation();\n      event.preventDefault();\n      this.props.createNewRevision();\n      this.setState({ visible: false, revision: null });\n    };\n  };\n\n  public render(): JSX.Element {\n    const classes = cx({\n      [styles.visible]: this.state.visible,\n      [styles.simulating]: this.props.simulating\n    });\n\n    return (\n      <div className={classes}>\n        <div className={styles.mask} />\n        <PopTab\n          header={i18n.t('revisions.header', 'Revisions')}\n          color=\"#8e5ea7\"\n          icon=\"fe-time\"\n          label={i18n.t('revisions.label', 'Revision History')}\n          top=\"360px\"\n          visible={this.state.visible}\n          onShow={this.handleTabClicked}\n          onHide={this.handleTabClicked}\n        >\n          <div className={styles.explorer_wrapper}>\n            <div className={styles.explorer}>\n              <div className={styles.revisions}>\n                {this.state.revisions.map((asset: Asset) => {\n                  const revision = asset.content as Revision;\n\n                  const isSelected = this.state.revision && asset.id === this.state.revision.id;\n\n                  const selectedClass = revision.current || isSelected ? styles.selected : '';\n\n                  return (\n                    <div\n                      className={styles.revision + ' ' + selectedClass}\n                      key={'revision_' + asset.id}\n                      onClick={this.onRevisionClicked(asset)}\n                    >\n                      {renderIf(revision.current)(\n                        <div className={styles.button + ' ' + styles.current}>current</div>\n                      )}\n                      {renderIf(isSelected && !revision.current)(\n                        <div onClick={this.onRevertClicked(asset)} className={styles.button}>\n                          revert\n                        </div>\n                      )}\n                      <div className={styles.created_on}>\n                        {dateFormat(\n                          new Date(revision.created_on),\n                          'mmmm d, yyyy, h:MM TT',\n                          this.props.utc\n                        )}\n                      </div>\n                      <div className={styles.email}>\n                        {revision.user.name || revision.user.email}\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        </PopTab>\n      </div>\n    );\n  }\n}\n","import { combineReducers } from 'redux';\nimport editorState from 'store/editor';\nimport flowContext from 'store/flowContext';\nimport nodeEditor from 'store/nodeEditor';\n\nexport default combineReducers({\n  flowContext,\n  editorState,\n  nodeEditor\n});\n","import { EditorState, initialState as editorState } from 'store/editor';\nimport { FlowContext, initialState as flowContext } from 'store/flowContext';\nimport { initialState as nodeEditor, NodeEditor } from 'store/nodeEditor';\n\nexport default interface AppState {\n  flowContext: FlowContext;\n  editorState: EditorState;\n  nodeEditor: NodeEditor;\n}\n\nexport const initialState: AppState = {\n  flowContext,\n  editorState,\n  nodeEditor\n};\n","import { applyMiddleware, createStore, Middleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from 'store/rootReducer';\nimport AppState, { initialState } from 'store/state';\n\nconst middlewares: Middleware[] = [thunk];\n\nexport default (state: AppState = initialState) => {\n  const store = createStore(\n    rootReducer,\n    state,\n    composeWithDevTools(applyMiddleware(...middlewares))\n  );\n\n  /* istanbul ignore next */\n  if (module.hot) {\n    module.hot.accept('./rootReducer', () => {\n      const { default: nextRootReducer } = require('./rootReducer');\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Button, { ButtonTypes } from 'components/button/Button';\nimport Dialog from 'components/dialog/Dialog';\nimport { Fixy } from 'components/fixy/Fixy';\nimport ConnectedFlow from 'components/flow/Flow';\nimport styles from 'components/index.module.scss';\nimport ConnectedLanguageSelector from 'components/languageselector/LanguageSelector';\nimport Loading from 'components/loading/Loading';\nimport Modal from 'components/modal/Modal';\nimport { RevisionExplorer } from 'components/revisions/RevisionExplorer';\nimport ConfigProvider from 'config';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { FlowDefinition, FlowEditorConfig } from 'flowTypes';\nimport * as React from 'react';\nimport { connect, Provider as ReduxProvider } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport createStore from 'store/createStore';\nimport { ModalMessage } from 'store/editor';\nimport { Asset, Assets, AssetStore, RenderNodeMap } from 'store/flowContext';\nimport { getCurrentDefinition } from 'store/helpers';\nimport AppState from 'store/state';\nimport {\n  CreateNewRevision,\n  createNewRevision,\n  DispatchWithState,\n  FetchFlow,\n  fetchFlow,\n  LoadFlowDefinition,\n  loadFlowDefinition,\n  MergeEditorState,\n  mergeEditorState\n} from 'store/thunks';\nimport { ACTIVITY_INTERVAL, downloadJSON, renderIf } from 'utils';\n\nconst { default: PageVisibility } = require('react-page-visibility');\n\nexport interface FlowEditorContainerProps {\n  config: FlowEditorConfig;\n}\n\nexport interface FlowEditorStoreProps {\n  assetStore: AssetStore;\n  language: Asset;\n  languages: Assets;\n  simulating: boolean;\n  translating: boolean;\n  fetchingFlow: boolean;\n  definition: FlowDefinition;\n  dependencies: FlowDefinition[];\n  fetchFlow: FetchFlow;\n  loadFlowDefinition: LoadFlowDefinition;\n  createNewRevision: CreateNewRevision;\n  mergeEditorState: MergeEditorState;\n  nodes: RenderNodeMap;\n  modalMessage: ModalMessage;\n  saving: boolean;\n}\n\nconst hotStore = createStore();\n\n// Root container, wires up context-providers\nexport const FlowEditorContainer: React.SFC<FlowEditorContainerProps> = ({ config }) => {\n  return (\n    <ConfigProvider config={{ ...config }}>\n      <ReduxProvider store={hotStore as any}>\n        <ConnectedFlowEditor />\n      </ReduxProvider>\n    </ConfigProvider>\n  );\n};\n\nexport const contextTypes = {\n  config: fakePropType\n};\n\nexport const editorContainerSpecId = 'editor-container';\nexport const editorSpecId = 'editor';\n\n/**\n * The main editor view for editing a flow\n */\nexport class FlowEditor extends React.Component<FlowEditorStoreProps> {\n  public static contextTypes = contextTypes;\n\n  constructor(props: FlowEditorStoreProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public componentDidMount(): void {\n    const { endpoints, flow, onLoad, forceSaveOnLoad } = this.context.config;\n    this.props.fetchFlow(endpoints, flow, onLoad, forceSaveOnLoad);\n  }\n\n  private handleDownloadClicked(): void {\n    downloadJSON(getCurrentDefinition(this.props.definition, this.props.nodes), 'definition');\n  }\n\n  private handleVisibilityChanged(visible: boolean): void {\n    this.props.mergeEditorState({\n      visible,\n      activityInterval: ACTIVITY_INTERVAL\n    });\n  }\n\n  public getAlertModal(): JSX.Element {\n    if (!this.props.modalMessage) {\n      return null;\n    }\n\n    return (\n      <Modal width=\"600px\" show={true}>\n        <Dialog\n          className={styles.alert_modal}\n          title={this.props.modalMessage.title}\n          headerClass=\"alert\"\n          buttons={{\n            primary: {\n              name: 'Ok',\n              onClick: () => {\n                this.props.mergeEditorState({ modalMessage: null });\n              }\n            }\n          }}\n        >\n          <div className={styles.alert_body}>{this.props.modalMessage.body}</div>\n        </Dialog>\n      </Modal>\n    );\n  }\n\n  public getSavingIndicator(): JSX.Element {\n    if (!this.props.saving) {\n      return null;\n    }\n\n    return (\n      <div className={styles.saving}>\n        <Fixy>\n          <Loading units={5} color=\"#3498db\" size={7} />\n        </Fixy>\n      </div>\n    );\n  }\n\n  public getFooter(): JSX.Element {\n    return !this.props.fetchingFlow && this.context.config.showDownload ? (\n      <div className={styles.footer}>\n        <div className={styles.download_button}>\n          <Button name=\"Download\" onClick={this.handleDownloadClicked} type={ButtonTypes.primary} />\n        </div>\n      </div>\n    ) : null;\n  }\n\n  public render(): JSX.Element {\n    return (\n      <PageVisibility onChange={this.handleVisibilityChanged}>\n        <div\n          id={editorContainerSpecId}\n          className={this.props.translating ? styles.translating : undefined}\n          data-spec={editorContainerSpecId}\n        >\n          {this.getFooter()}\n          {this.getAlertModal()}\n          <div className={styles.editor} data-spec={editorSpecId}>\n            {renderIf(this.props.languages && Object.keys(this.props.languages.items).length > 0)(\n              <ConnectedLanguageSelector />\n            )}\n\n            {this.getSavingIndicator()}\n\n            {renderIf(this.props.definition && this.props.language && !this.props.fetchingFlow)(\n              <ConnectedFlow />\n            )}\n\n            <RevisionExplorer\n              simulating={this.props.simulating}\n              loadFlowDefinition={this.props.loadFlowDefinition}\n              createNewRevision={this.props.createNewRevision}\n              assetStore={this.props.assetStore}\n            />\n          </div>\n        </div>\n      </PageVisibility>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  flowContext: { definition, dependencies, nodes, assetStore },\n  editorState: { translating, language, fetchingFlow, simulating, modalMessage, saving }\n}: AppState) => {\n  const languages = assetStore ? assetStore.languages : null;\n\n  return {\n    modalMessage,\n    saving,\n    simulating,\n    assetStore,\n    translating,\n    language,\n    fetchingFlow,\n    definition,\n    dependencies,\n    nodes,\n    languages\n  };\n};\n\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators(\n    {\n      fetchFlow,\n      loadFlowDefinition,\n      createNewRevision,\n      mergeEditorState\n    },\n    dispatch\n  );\n\nexport const ConnectedFlowEditor = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FlowEditor);\n\nexport default FlowEditorContainer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './global.module.scss';\nimport 'static/fonts/floweditor/style.css';\n\nimport FlowEditor from 'components';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nwindow.showFlowEditor = (ele, config) => {\n  ReactDOM.render(<FlowEditor config={config} />, ele);\n};\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"node_container\":\"Node_node_container__2eaRs\",\"uuid\":\"Node_uuid__1gU_w\",\"ghost\":\"Node_ghost__1rJWj\",\"nondragged\":\"Node_nondragged__3odZa\",\"selected\":\"Node_selected__1ck3F\",\"node\":\"Node_node__2ympr\",\"immutable\":\"Node_immutable__2NDYM\",\"save_as\":\"Node_save_as__27Fv-\",\"save_result\":\"Node_save_result__cnC6y\",\"result_name\":\"Node_result_name__1F10Q\",\"cropped\":\"Node_cropped__3mV37\",\"exit_table\":\"Node_exit_table__3NybR\",\"exits\":\"Node_exits__3zABv\",\"add\":\"Node_add__3PamH\",\"drag_group\":\"Node_drag_group__1h4JV\",\"flow_start\":\"Node_flow_start__2ZLmX\",\"flow_start_message\":\"Node_flow_start_message__21Gdu\",\"active\":\"Node_active__31xXM\",\"pulse\":\"Node_pulse__14AYP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"group\":\"CaseElement_group__1fyWB\",\"divider\":\"CaseElement_divider__mkeU9\",\"kase\":\"CaseElement_kase__2vP_O\",\"has_intent\":\"CaseElement_has_intent__z8znp\",\"choice\":\"CaseElement_choice__2RZct\",\"has_top_intent\":\"CaseElement_has_top_intent__3fsYv\",\"multi_operand\":\"CaseElement_multi_operand__eTLuc\",\"form_group\":\"CaseElement_form_group__1PJTx\",\"single_operand\":\"CaseElement_single_operand__o0kaN\",\"categorize_as\":\"CaseElement_categorize_as__XFySp\",\"category\":\"CaseElement_category__2yfW1\",\"remove_icon\":\"CaseElement_remove_icon__1PFzv\",\"dnd_icon\":\"CaseElement_dnd_icon__wjvHF\",\"relative_date\":\"CaseElement_relative_date__DGZXt\",\"empty\":\"CaseElement_empty__35kBB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"action\":\"Action_action__NVQRK\",\"has_router\":\"Action_has_router__1Ad-S\",\"body\":\"Action_body__RtQCZ\",\"add_contact_urn\":\"Action_add_contact_urn__3Z706\",\"add_input_labels\":\"Action_add_input_labels__3IeO3\",\"send_msg\":\"Action_send_msg__1QYPk\",\"set_contact_field\":\"Action_set_contact_field__1HDvu\",\"set_contact_name\":\"Action_set_contact_name__1woBb\",\"call_webhook\":\"Action_call_webhook__2kR_s\",\"call_resthook\":\"Action_call_resthook__2zGlX\",\"set_contact_language\":\"Action_set_contact_language__G9Ko5\",\"set_contact_channel\":\"Action_set_contact_channel__1YEwX\",\"add_contact_groups\":\"Action_add_contact_groups__3H0fU\",\"remove_contact_groups\":\"Action_remove_contact_groups__3h7vs\",\"play_audio\":\"Action_play_audio__ShGHx\",\"say_msg\":\"Action_say_msg__3CqFc\",\"set_run_result\":\"Action_set_run_result__1CLz_\",\"send_email\":\"Action_send_email__2MDnO\",\"send_broadcast\":\"Action_send_broadcast__1SCyf\",\"transfer_airtime\":\"Action_transfer_airtime__2LvoA\",\"missing\":\"Action_missing__1Ghl9\",\"enter_flow\":\"Action_enter_flow__2ogxI\",\"call_classifier\":\"Action_call_classifier__tKBlJ\",\"start_session\":\"Action_start_session__1yM-7\",\"not_localizable\":\"Action_not_localizable__2rKMk\",\"overlay\":\"Action_overlay__ZEDK0\",\"immutable\":\"Action_immutable__qAZdN\",\"translate_from\":\"Action_translate_from__3BID_\",\"translate_to\":\"Action_translate_to__TPeJw\",\"translating\":\"Action_translating__2n0n7\",\"missing_localization\":\"Action_missing_localization__1zslf\",\"localized\":\"Action_localized__3Mwip\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"link\":\"WebhookRouterForm_link__1jXIk\",\"info\":\"WebhookRouterForm_info__qgGFO\",\"method\":\"WebhookRouterForm_method__1IR0U\",\"url\":\"WebhookRouterForm_url__T29iJ\",\"code\":\"WebhookRouterForm_code__3x1A-\",\"instructions\":\"WebhookRouterForm_instructions__3LG_X\",\"headers_title\":\"WebhookRouterForm_headers_title__1GMIG\",\"remove_ico\":\"WebhookRouterForm_remove_ico__l-jUh\",\"example\":\"WebhookRouterForm_example__1ev4D\",\"header\":\"WebhookRouterForm_header__2waYT\",\"header_name\":\"WebhookRouterForm_header_name__3eQVG\",\"header_value\":\"WebhookRouterForm_header_value__1Fxrk\",\"body_form\":\"WebhookRouterForm_body_form__3BHas\",\"req_body\":\"WebhookRouterForm_req_body__1rKz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"simulating\":\"RevisionExplorer_simulating__3ar2x\",\"mask\":\"RevisionExplorer_mask__14GgE\",\"visible\":\"RevisionExplorer_visible__365U6\",\"explorer_wrapper\":\"RevisionExplorer_explorer_wrapper__3FIUU\",\"explorer\":\"RevisionExplorer_explorer__1yYSY\",\"revisions\":\"RevisionExplorer_revisions__1nYCu\",\"revision\":\"RevisionExplorer_revision__3f_kl\",\"selected\":\"RevisionExplorer_selected__2zSg4\",\"button\":\"RevisionExplorer_button__2srjQ\",\"current\":\"RevisionExplorer_current__Zlqcr\",\"created_on\":\"RevisionExplorer_created_on__qKoNX\",\"email\":\"RevisionExplorer_email__Z9xlH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"ele\":\"FormElement_ele__1FpYO\",\"border\":\"FormElement_border__3bx0s\",\"error_list\":\"FormElement_error_list__1SrT3\",\"error\":\"FormElement_error__1Peb9\",\"arrow_up\":\"FormElement_arrow_up__2HvAv\",\"send_msg_error\":\"FormElement_send_msg_error__3LIUw\",\"label\":\"FormElement_label__2dN0p\",\"invalid\":\"FormElement_invalid__1fOa-\",\"help_text\":\"FormElement_help_text__a6EcV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"checkbox\":\"SendMsgForm_checkbox__-JOyy\",\"quick_reply_summary\":\"SendMsgForm_quick_reply_summary__DkA4i\",\"type_choice\":\"SendMsgForm_type_choice__1dciq\",\"url_attachment\":\"SendMsgForm_url_attachment__1Su5F\",\"upload\":\"SendMsgForm_upload__22kwL\",\"remove_upload\":\"SendMsgForm_remove_upload__2qqap\",\"url\":\"SendMsgForm_url__2eR-o\",\"remove\":\"SendMsgForm_remove__20sFL\",\"existing_quick_replies\":\"SendMsgForm_existing_quick_replies__W866I\",\"existing_quick_reply\":\"SendMsgForm_existing_quick_reply__2C65m\",\"add_quick_replies\":\"SendMsgForm_add_quick_replies__3vLIC\",\"template_text\":\"SendMsgForm_template_text__1zkKJ\",\"variable\":\"SendMsgForm_variable__3mVDI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"delimited\":\"ResultRouterForm_delimited__D-_e5\",\"non_delimited\":\"ResultRouterForm_non_delimited__yDNVq\",\"lead_in\":\"ResultRouterForm_lead_in__2myeK\",\"lead_in_sub\":\"ResultRouterForm_lead_in_sub__3oqJC\",\"result_select\":\"ResultRouterForm_result_select__1cu2c\",\"result_select_delimited\":\"ResultRouterForm_result_select_delimited__f-y6Z\",\"should_delimit\":\"ResultRouterForm_should_delimit__1Z8-4\",\"field_number\":\"ResultRouterForm_field_number__2WFxV\",\"delimiter\":\"ResultRouterForm_delimiter__2i5Hr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"titlebar\":\"TitleBar_titlebar__1_zDw\",\"titletext\":\"TitleBar_titletext__3s2we\",\"normal\":\"TitleBar_normal__z0QaD\",\"remove_confirm\":\"TitleBar_remove_confirm__3ywj-\",\"remove_button\":\"TitleBar_remove_button__2lO9D\",\"up_button\":\"TitleBar_up_button__2Imiq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"pop_wrapper\":\"PopTab_pop_wrapper__2kOzQ\",\"visible\":\"PopTab_visible__2udNm\",\"popped\":\"PopTab_popped__2Imlz\",\"tab_wrapper\":\"PopTab_tab_wrapper__3n1QM\",\"tab\":\"PopTab_tab__2Rm5M\",\"label\":\"PopTab_label__nf1JX\",\"icon\":\"PopTab_icon__irClb\",\"header\":\"PopTab_header__1NqmE\",\"header_label\":\"PopTab_header_label__2YD7z\",\"close\":\"PopTab_close__3O5BS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"random\":\"shared_random__URuHQ\",\"wait_for_audio\":\"shared_wait_for_audio__1LjH-\",\"wait_for_image\":\"shared_wait_for_image__3VU9W\",\"wait_for_video\":\"shared_wait_for_video__1nv-a\",\"wait_for_location\":\"shared_wait_for_location__2al5E\",\"wait_for_menu\":\"shared_wait_for_menu__hot7M\",\"wait_for_digits\":\"shared_wait_for_digits__35WPZ\",\"wait_for_response\":\"shared_wait_for_response__ZKUbx\",\"add_contact_groups\":\"shared_add_contact_groups__2dqfS\",\"remove_contact_groups\":\"shared_remove_contact_groups__1dJrQ\",\"send_email\":\"shared_send_email__dY51y\",\"send_broadcast\":\"shared_send_broadcast__3LXs5\",\"msg\":\"shared_msg__28OwU\",\"say_msg\":\"shared_say_msg__2U3R0\",\"send_msg\":\"shared_send_msg__2tEfv\",\"transfer_airtime\":\"shared_transfer_airtime__1H5tV\",\"enter_flow\":\"shared_enter_flow__XHnXb\",\"start_session\":\"shared_start_session__1f3aq\",\"set_run_result\":\"shared_set_run_result__1QltP\",\"add_input_labels\":\"shared_add_input_labels__2pTX0\",\"add_contact_urn\":\"shared_add_contact_urn__3nXG-\",\"set_contact_name\":\"shared_set_contact_name__KV1Re\",\"set_contact_field\":\"shared_set_contact_field__3VSZH\",\"set_contact_language\":\"shared_set_contact_language__4ZBkW\",\"set_contact_channel\":\"shared_set_contact_channel__3NhjI\",\"play_audio\":\"shared_play_audio__2OF7K\",\"missing\":\"shared_missing__2oICX\",\"call_classifier\":\"shared_call_classifier__3zcuw\",\"split_by_random\":\"shared_split_by_random__Zh1SY\",\"split_by_expression\":\"shared_split_by_expression__3k23C\",\"split_by_groups\":\"shared_split_by_groups__5EnH4\",\"split_by_contact_field\":\"shared_split_by_contact_field__1XjX5\",\"split_by_intent\":\"shared_split_by_intent__1H9sN\",\"split_by_run_result\":\"shared_split_by_run_result__X4-Wp\",\"call_resthook\":\"shared_call_resthook__16wqp\",\"call_webhook\":\"shared_call_webhook__1h1Cb\",\"breaks\":\"shared_breaks__2F4AL\",\"url\":\"shared_url__1vtQK\",\"node_asset\":\"shared_node_asset__2MOdQ\",\"node_group\":\"shared_node_group__ju7iK\",\"node_label\":\"shared_node_label__1lQNA\",\"advanced_title\":\"shared_advanced_title__2auaT\",\"alert\":\"shared_alert__1JnkA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"count\":\"CharCount_count__ABAEX\",\"tooltip\":\"CharCount_tooltip__1p2RV\",\"fine_print\":\"CharCount_fine_print__RYzHy\",\"divider\":\"CharCount_divider__3pF0R\",\"tooltip_text\":\"CharCount_tooltip_text__3ruDu\",\"unicode\":\"CharCount_unicode__1nLUL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"MediaPlayer_player__gYGWS\",\"playing\":\"MediaPlayer_playing__2Jrw_\",\"button\":\"MediaPlayer_button__rRXz1\",\"circles\":\"MediaPlayer_circles__1pr_0\",\"circle_background\":\"MediaPlayer_circle_background__OMPcS\",\"circle_foreground\":\"MediaPlayer_circle_foreground__1L6K9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"translating_categories\":\"RouterLocalizationForm_translating_categories__34-3g\",\"translating_category\":\"RouterLocalizationForm_translating_category__1GtBO\",\"translating_from\":\"RouterLocalizationForm_translating_from__1jvjb\",\"translating_to\":\"RouterLocalizationForm_translating_to__1m7uk\",\"translating_operator_title\":\"RouterLocalizationForm_translating_operator_title__3vA3V\",\"translating_operator_instructions\":\"RouterLocalizationForm_translating_operator_instructions___Yv3N\",\"translating_operator_container\":\"RouterLocalizationForm_translating_operator_container__39jsM\",\"translating_operator\":\"RouterLocalizationForm_translating_operator__AgpTS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"drag_helper\":\"DragHelper_drag_helper__a_fFa\",\"visible\":\"DragHelper_visible__1Z4lg\",\"arrow\":\"DragHelper_arrow__YH1ED\",\"tail\":\"DragHelper_tail__12x7O\",\"help_text\":\"DragHelper_help_text__2luNE\",\"head\":\"DragHelper_head__3ViUG\",\"bold\":\"DragHelper_bold__2v--u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"editor\":\"components_editor__36a9s\",\"translating\":\"components_translating__1uBgy\",\"footer\":\"components_footer__1OFgP\",\"download_button\":\"components_download_button__392jz\",\"alert_body\":\"components_alert_body__2Bxt0\",\"alert_modal\":\"components_alert_modal__3xFu-\",\"saving\":\"components_saving__1mebj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"message\":\"AssetSelector_message__1viBV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"CheckboxElement_label__3vFGD\",\"title\":\"CheckboxElement_title__3QShp\",\"description\":\"CheckboxElement_description__3BguK\",\"description_solo\":\"CheckboxElement_description_solo__2o0rh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"quick_replies\":\"SendMsg_quick_replies__2bre8\",\"attachment\":\"SendMsg_attachment__1JoQl\",\"summary\":\"SendMsg_summary__2c05X\",\"whatsapp\":\"SendMsg_whatsapp__2O95I\",\"line\":\"SendMsg_line__LMI4I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_element\":\"CurrencyElement_form_element__F0wio\",\"transfer\":\"CurrencyElement_transfer__1IAVm\",\"currency\":\"CurrencyElement_currency__278L2\",\"amount\":\"CurrencyElement_amount__fJKsJ\",\"remove\":\"CurrencyElement_remove__3D5_y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"btn\":\"Button_btn__1hdG6\",\"disabled\":\"Button_disabled__xk6Qi\",\"primary\":\"Button_primary__3PDu-\",\"active\":\"Button_active__3BxT0\",\"secondary\":\"Button_secondary__1LfJY\",\"tertiary\":\"Button_tertiary__3UJsa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"pill\":\"Pill_pill__3FyMl\",\"clickable\":\"Pill_clickable__24gn3\",\"icon\":\"Pill_icon__QZrb0\",\"large\":\"Pill_large__3mcHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"recipients\":\"SendBroadcast_recipients__1ZSQV\",\"node\":\"SendBroadcast_node__26RLX\",\"to\":\"SendBroadcast_to__25_7K\",\"name\":\"SendBroadcast_name__RNJWu\",\"icon\":\"SendBroadcast_icon__2YfpF\",\"more\":\"SendBroadcast_more__11MJm\",\"message\":\"SendBroadcast_message__6ZIco\",\"line\":\"SendBroadcast_line__3Dm3R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"lead_in\":\"MenuRouterForm_lead_in__253j6\",\"digit\":\"MenuRouterForm_digit__ruJhi\",\"category\":\"MenuRouterForm_category__2Khjv\",\"menu\":\"MenuRouterForm_menu__OrNSa\",\"menu_option\":\"MenuRouterForm_menu_option__2e-jl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"lead_in\":\"RandomRouterForm_lead_in__2iUt2\",\"bucket_select\":\"RandomRouterForm_bucket_select__5jt8Q\",\"bucket_list\":\"RandomRouterForm_bucket_list__14I85\",\"bucket_name\":\"RandomRouterForm_bucket_name__t3I5z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timeout_control_container\":\"TimeoutControl_timeout_control_container__ChGjA\",\"left_section\":\"TimeoutControl_left_section__23W9H\",\"label\":\"TimeoutControl_label__3L-JA\",\"checkbox\":\"TimeoutControl_checkbox__NYV4k\",\"drop_down\":\"TimeoutControl_drop_down__2Yy9r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"language\":\"LanguageSelector_language__3Q3TZ\",\"language_link\":\"LanguageSelector_language_link__32yIO\",\"active\":\"LanguageSelector_active__3RqNy\",\"separator\":\"LanguageSelector_separator__2oanc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ele\":\"SendEmailForm_ele__2CvL5\",\"subject\":\"SendEmailForm_subject__U7jTR\",\"message\":\"SendEmailForm_message__1k6GE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SetRunResultForm_form__HNnt4\",\"name\":\"SetRunResultForm_name__1aW9R\",\"value\":\"SetRunResultForm_value__36pab\",\"category\":\"SetRunResultForm_category__TuHWy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"node\":\"StartSession_node__d1IsL\",\"to\":\"StartSession_to__2uqPY\",\"name\":\"StartSession_name__HfSVl\",\"icon\":\"StartSession_icon__1l-0q\",\"more\":\"StartSession_more__8uoUD\",\"message\":\"StartSession_message__1KRsK\",\"flow\":\"StartSession_flow__zPhXS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"canvas_container\":\"Canvas_canvas_container__oR3SR\",\"canvas\":\"Canvas_canvas__XH7zY\",\"drag_selection\":\"Canvas_drag_selection__3wxA2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"counter\":\"Counter_counter__1_pCt\",\"visible\":\"Counter_visible__3Avdq\",\"clickable\":\"Counter_clickable__3pprF\"};"],"sourceRoot":""}