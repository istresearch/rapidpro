# Generated by Django 2.2.4 on 2020-02-10 21:48

from django.db import migrations, transaction

BATCH_SIZE = 5000


def populate_allow_international(apps, schema_editor):  # pragma: no cover
    Channel = apps.get_model("channels", "Channel")

    num_updated = 0
    max_id = -1
    while True:
        batch = list(
            Channel.objects.filter(id__gt=max_id, is_active=True, schemes__contains=["tel"])
            .only("id", "config")
            .order_by("id")[:BATCH_SIZE]
        )
        if not batch:
            break

        with transaction.atomic():
            for channel in batch:
                channel.config["allow_international"] = True
                channel.save(update_fields=("config",))

                num_updated += 1

        print(f" > Updated {num_updated} channel configs with allow_international=true")

        max_id = batch[-1].id


def reverse(apps, schema_editor):  # pragma: no cover
    pass


class Migration(migrations.Migration):

    dependencies = [("channels", "0121_auto_20191112_1938")]

    operations = [migrations.RunPython(populate_allow_international, reverse)]
