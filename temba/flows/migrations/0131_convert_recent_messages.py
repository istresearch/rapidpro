# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-11-24 18:44
from __future__ import unicode_literals, print_function

from django.db import migrations, transaction
from temba.utils import chunk_list


def convert_recent_messages(Flow, FlowPathRecentMessage):
    """
    Converts old recent message records (rule_uuid/node_uuid -> node_uuid) to be (exit_uuid -> node_uuid)
    """
    flow_ids = list(Flow.objects.filter(is_active=True).values_list('id', flat=True))
    if not flow_ids:
        return

    print("Found %d active flows to convert recent message records for..." % len(flow_ids))

    num_updated = 0
    for id_batch in chunk_list(flow_ids, 1000):
        flows = Flow.objects.filter(id__in=id_batch).prefetch_related('action_sets')

        for flow in flows:
            with transaction.atomic():
                for action_set in flow.action_sets.all():
                    FlowPathRecentMessage.objects.filter(from_uuid=action_set.uuid).update(from_uuid=action_set.exit_uuid)

            num_updated += 1

        print(" > Updated %d of %d flows" % (num_updated, len(flow_ids)))


def apply_manual():
    from temba.flows.models import Flow, FlowPathRecentMessage
    convert_recent_messages(Flow, FlowPathRecentMessage)


def apply_as_migration(apps, schema_editor):
    Flow = apps.get_model('flows', 'Flow')
    FlowPathRecentMessage = apps.get_model('flows', 'FlowPathRecentMessage')
    convert_recent_messages(Flow, FlowPathRecentMessage)


class Migration(migrations.Migration):

    dependencies = [
        ('flows', '0130_auto_20171128_1618'),
    ]

    operations = [
        migrations.RunPython(apply_as_migration)
    ]
