# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-10-19 18:14
from __future__ import unicode_literals

from django.db import migrations
import re
import json


def use_format_date(apps, schema_editor):
    from temba.flows.models import RuleSet, ActionSet, Flow

    # find all rulesets that create a date object
    date_rulesets = RuleSet.objects.filter(value_type='D')
    for dr in date_rulesets:
        # determine our slug
        slug = Flow.label_to_slug(dr.label)
        changed = False

        # find plain references to this field in actionsets, we'll replace them with format_date
        for ac in ActionSet.objects.filter(flow=dr.flow, actions__icontains="@flow." + slug):
            pattern = "@flow\\." + slug + "([^0-9a-zA-Z\\.]|\.[^0-9a-zA-Z\\.])"
            if re.search(pattern, ac.actions, flags=re.UNICODE | re.MULTILINE):
                orig = ac.actions
                try:
                    json_actions = json.loads(ac.actions)
                    for i, json_action in enumerate(json_actions):
                        if json_action['type'] in ['reply', 'send', 'say']:
                            json_actions[i] = json.loads(re.sub(pattern,
                                                                "@(format_date(flow." + slug + "))\\1",
                                                                json.dumps(json_action), flags=re.UNICODE | re.MULTILINE))

                    ac.actions = json.dumps(json_actions)
                    ac.save(update_fields=['actions'])
                    print("actionset(%d) replaced:\n%s\nwith:\n%s" % (ac.id, orig, ac.actions))
                    changed = True

                except:
                    import traceback
                    traceback.print_exc()
                    print("unable to parse actionset(%d): %s" % (ac.id, ac.actions))

        # create a new revision from this definition if things changed
        if changed:
            dr.flow.update(dr.flow.as_json())

    # TODO: do the same for date contact fields


class Migration(migrations.Migration):

    dependencies = [
        ('flows', '0113_backfill_value_type'),
    ]

    operations = [
        migrations.RunPython(use_format_date)
    ]
