# Generated by Django 2.0.8 on 2018-11-16 12:19

from datetime import timedelta

from django.db import migrations
from django.utils import timezone


def update_expiration(run, point_in_time=None):
    """
    Set our expiration according to the flow settings
    """
    if run.flow.expires_after_minutes:
        now = timezone.now()
        run.expires_on = point_in_time + timedelta(minutes=run.flow.expires_after_minutes)

        # if it's in the past, just expire us now
        if run.expires_on < now:
            connection = run.connection.get()
            connection.close()

            run.is_active = False
            run.exited_on = now
            run.exit_type = "E"
            run.modified_on = now
            run.child_context = None
            run.parent_context = None
            run.save(
                update_fields=[
                    "expires_on",
                    "is_active",
                    "exited_on",
                    "exit_type",
                    "modified_on",
                    "child_context",
                    "parent_context",
                ]
            )
        else:
            # save our updated fields
            run.save(update_fields=["expires_on", "modified_on"])

    # parent should always have a later expiration than the children
    if run.parent:
        update_expiration(run.parent, run.expires_on)


def fix_ivr_and_ussd_runs_expiration_date(FlowRun):
    runs = FlowRun.objects.filter(is_active=True, expires_on=None).exclude(connection=None)
    for run in runs:
        max_expiration = run.created_on + timedelta(days=7)
        update_expiration(run, max_expiration)


def apply_migration(apps, schema_editor):
    FlowRun = apps.get_model("flows", "FlowRun")
    fix_ivr_and_ussd_runs_expiration_date(FlowRun)


def apply_manual():
    from temba.flows.models import FlowRun

    fix_ivr_and_ussd_runs_expiration_date(FlowRun)


class Migration(migrations.Migration):

    dependencies = [("flows", "0186_flow_session_indexes")]

    operations = [migrations.RunPython(apply_migration)]
