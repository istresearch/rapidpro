ARG VERSION_TAG
FROM istresearch/p4-engage:code-${VERSION_TAG} as load-files

USER root

COPY --chown=engage:engage docker/overrides/settings-rp.py /opt/code2use/temba/settings.py
COPY --chown=engage:engage docker/overrides/urls.py /opt/code2use/temba/

# 500.html needed to keep the missing template from causing an exception during error handling
COPY --chown=engage:engage docker/overrides/500.html /opt/code2use/templates/

COPY --chown=engage:engage docker/overrides/init_db.sql /opt/code2use/rapidpro/
COPY --chown=engage:engage docker/overrides/clear-compressor-cache.py /opt/code2use/rapidpro/
COPY --chown=engage:engage docker/overrides/Procfile /opt/code2use/rapidpro/
COPY --chown=engage:engage docker/overrides/startup.py /opt/code2use/rapidpro/
COPY --chown=engage:engage docker/overrides/db-init.sh /opt/code2use/rapidpro/
COPY --chown=engage:engage docker/overrides/web-static.py /opt/code2use/rapidpro/

COPY --chown=engage:engage docker/overrides/startup.sh /opt/code2use/root/

# ========================================================================

ARG VERSION_TAG
FROM istresearch/p4-engage:code-${VERSION_TAG}

# Colors! :D
ENV COLOR_NONE=\033[0m \
	COLOR_GREEN=\033[0;32m \
	COLOR_RED=\033[0;31m \
	COLOR_CYAN=\033[0;36m
# Once colors have been defined, we can use them for specific things.
ENV COLOR_MSG=$COLOR_CYAN

# while doing the build, no interaction possible
ENV DEBIAN_FRONTEND noninteractive

# Redeclaring after FROM because we have to in order to get the value
ARG VERSION_TAG
RUN echo $COLOR_MSG-----[ building FROM istresearch/p4-engage:code-${VERSION_TAG} ]-----$COLOR_NONE

WORKDIR /rapidpro

ARG RAPIDPRO_VERSION
ARG RAPIDPRO_REPO
ENV RAPIDPRO_VERSION=${RAPIDPRO_VERSION:-master}
ENV RAPIDPRO_REPO=${RAPIDPRO_REPO:-istresearch/rapidpro}

ENV UWSGI_VIRTUALENV=/venv UWSGI_WSGI_FILE=temba/wsgi.py UWSGI_HTTP=:8000 UWSGI_MASTER=1 UWSGI_WORKERS=8 UWSGI_HARAKIRI=20
# Enable HTTP 1.1 Keep Alive options for uWSGI (http-auto-chunked needed when ConditionalGetMiddleware not installed)
# These options don't appear to be configurable via environment variables, so pass them in here instead
ENV STARTUP_CMD="/venv/bin/uwsgi --http-auto-chunked --http-keepalive"
ENV CELERY_CMD="/venv/bin/celery --beat --app=temba worker --loglevel=INFO --queues=celery,msgs,flows,handler"

USER engage:engage

COPY --from=load-files /opt/code2use/temba /rapidpro/temba/
COPY --from=load-files /opt/code2use/templates /rapidpro/templates/
COPY --from=load-files /opt/code2use/rapidpro /rapidpro/
COPY --from=load-files /opt/code2use/rapidpro/Procfile /
COPY --from=load-files /opt/code2use/root /
# also copy procfile to root
COPY --from=load-files /opt/code2use/rapidpro/Procfile /

CMD ["/startup.sh"]

EXPOSE 8000

LABEL org.label-schema.name="RapidPro" \
      org.label-schema.description="RapidPro allows organizations to visually build scalable interactive messaging applications." \
      org.label-schema.url="https://www.rapidpro.io/" \
      org.label-schema.vcs-url="https://github.com/$RAPIDPRO_REPO" \
      org.label-schema.vendor="Nyaruka, UNICEF, and individual contributors." \
      org.label-schema.version=$RAPIDPRO_VERSION \
      org.label-schema.schema-version="1.0"

RUN mkdir -p /rapidpro/static/sitestatic &&	cp -fr /rapidpro/static/brands /rapidpro/static/sitestatic/brands \
 && REDIS_URL=redis://redis DATABASE_URL=postgres://bla SECRET_KEY=123 /venv/bin/python manage.py collectstatic --noinput --no-post-process \
 && REDIS_URL=redis://redis DATABASE_URL=postgres://bla SECRET_KEY=123 /venv/bin/python manage.py compress --extension='.haml' --force -v0
 