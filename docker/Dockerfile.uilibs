ARG FROM_PYGEOS_TAG
FROM istresearch/p4-engage:${FROM_PYGEOS_TAG} as load-files

COPY pip-freeze.txt /opt/code2use/pip-freeze.txt
COPY pip-add-reqs.txt /opt/code2use/pip-add-reqs.txt
COPY package-lock.json /opt/code2use/package-lock.json
COPY package.json /opt/code2use/package.json

# ========================================================================

ARG FROM_PYGEOS_TAG
FROM istresearch/p4-engage:${FROM_PYGEOS_TAG}

# Colors! :D
ENV COLOR_NONE=\033[0m \
	COLOR_GREEN=\033[0;32m \
	COLOR_RED=\033[0;31m \
	COLOR_CYAN=\033[0;36m
# Once colors have been defined, we can use them for specific things.
ENV COLOR_MSG=$COLOR_CYAN

# while doing the build, no interaction possible
ENV DEBIAN_FRONTEND noninteractive

# Redeclaring after FROM because we have to in order to get the value
ARG FROM_PYGEOS_TAG
RUN echo $COLOR_MSG-----[ building FROM istresearch/p4-engage:${FROM_PYGEOS_TAG} ]-----$COLOR_NONE

USER root

ENV PYTHON=/usr/local/bin/python3 \
    PIP_RETRIES=120 \
    PIP_TIMEOUT=400 \
    PIP_DEFAULT_TIMEOUT=400 \
    C_FORCE_ROOT=1 \
    PIP_EXTRA_INDEX_URL=https://alpine-3.wheelhouse.praekelt.org/simple

WORKDIR /rapidpro

RUN set -ex && apk add --no-cache --virtual .build-deps \
	bash \
	patch \
	git \
	gcc \
	g++ \
	make \
	libc-dev \
	musl-dev \
	linux-headers \
	postgresql-client \
	postgresql-dev \
	libjpeg-turbo-dev \
	libpng-dev \
	freetype-dev \
	libxslt-dev \
	libxml2-dev \
	zlib-dev \
	libffi-dev \
	pcre-dev \
	readline \
	readline-dev \
	ncurses \
	ncurses-dev \
	libzmq \
	libmagic \
	openssl \
	openssl-dev \
	tar
	  
RUN apk add --no-cache nodejs-lts npm

RUN npm install -g coffeescript less bower

RUN addgroup engage; adduser -D -S -s /bin/false -u 1717 engage -g engage

RUN mkdir -p /venv; chown -R engage:engage /rapidpro /venv
COPY --from=load-files --chown=engage:engage /opt/code2use /rapidpro

ENV PATH=/home/engage/.local/bin:$PATH \
    PYTHON=/usr/local/bin/python3 \
    LIBRARY_PATH=/lib:/usr/lib:$LIBRARY_PATH

RUN python3 -m venv /venv && source /venv/bin/activate
RUN pip install setuptools==33.1.1
RUN pip install cffi
RUN pip install -r pip-freeze.txt
RUN pip install -r pip-add-reqs.txt

# install more lib dependencies
USER root
RUN runDeps="$( \
    scanelf --needed --nobanner --recursive /venv \
      | awk '{ gsub(/,/, "\nso:", $2); print "so:" $2 }' \
      | sort -u \
      | xargs -r apk info --installed \
      | sort -u \
    )" \
 && apk --no-cache add --virtual .python-rundeps $runDeps \
 && apk del .build-deps && rm -rf /var/cache/apk/*
 
#RUN npm install --global node-gyp@latest \
# && npm config set node_gyp $(npm prefix -g)/lib/node_modules/node-gyp/bin/node-gyp.js

USER engage:engage

# Run this after switching from root so prepare will run on packages
RUN npm --production install
