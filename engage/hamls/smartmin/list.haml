-extends "smartmin/base.html"
-load smartmin

-block top-form
  - if view.search_fields and object_list
    - block search-form
      %form
        %input.input-medium.search-query{type:'text', placeholder:'Search', name:"search", value:"{{search}}"}

-block content
  -block table-controls
    .row
      .span12.table-buttons
        - block table-buttons
          - if view.add_button
            %a.btn.btn-primary.pull-right{ href:"./create/" } Add
  {% block pjax %}
  #pjax
    -block pre-table
    -block table
      %table.list.lined
        %thead
          %tr
            -for field in fields
              %th{ class:'header-{{field}} {% if view|field_orderable:field %}header {% if field == order %}{% if order_asc %}headerSortUp{% else %}headerSortDown{% endif %}{% endif %}{% endif %}', id:'header-{{field}}' }
                {% get_label field %}

          %tbody
            - for obj in object_list
              %tr{ class:'{% cycle "row2" "row1" %} {% if not obj.is_active and obj|is_smartobject %}inactive{% endif %}'}
                -for field in fields
                  %td{ class:'value-{{field}} {% get_class field obj %}{% if field in link_fields %} clickable{% endif %}'}
                    - if field in link_fields
                      <a {% if pjax %}data-pjax='{{ pjax }}'{% endif %} href="{% get_field_link field obj %}">{% get_value obj field %}</a>
                    - else
                      {% get_value obj field %}

            -empty
              %tr.empty_list
                -for field in fields
                  %td

    -block extra-rows

  -block post-table

  {% block paginator %}
    -include "includes/pagination.haml"

{% endblock pjax %}
{% endblock content %}

{% block extra-script %}
{{ block.super }}
:javascript
  current_label_id = {% if current_label.id %}{{current_label.id}}{% else %}0{% endif %};

  function onClickSelectAll( event ) {
    function setCheckbox( aCheckbox, val ) {
        var row = aCheckbox.parentElement.parentElement;
        var tweak = new Map().set('animateChange', false);
        var icon_el = aCheckbox.shadowRoot.querySelector("temba-icon");
        var save_onclick = aCheckbox.getAttribute('onclick');
        aCheckbox.removeAttribute('onclick');
        aCheckbox.click();
        if ( val ) {
            icon_el.updated(tweak.set('name','check-square'));
            icon_el.update();
            row.classList.add('checked');
        } else {
            icon_el.updated(tweak.set('name','square'));
            icon_el.update();
            row.classList.remove('checked');
        }
        aCheckbox.setAttribute('onclick', save_onclick);
    }

    $(this).toggleClass('checked');
    if ( $(this).hasClass('checked') ) {
      $('tr:not(.checked) > td > temba-checkbox').each(function() {
        setCheckbox($(this)[0], true);
      });
    } else {
      $('tr.checked > td > temba-checkbox').each(function() {
        setCheckbox($(this)[0], false);
      });
    }

    var listButtons = $('.list-buttons-container');
    var pageTitle = $('.page-title');
    if ( $('tr.checked').length ) {
        listButtons.addClass('visible');
        pageTitle.addClass('hidden');
    } else {
        listButtons.removeClass('visible');
        pageTitle.removeClass('hidden');
    }
    updateLabelMenu();
  }

  function onClickSortHeader( e ) {
      // build up our ordering
      var field = e.target.id.substr(e.target.id.indexOf("-")+1)

      {% if order_asc %}
      if (field == "{{order}}"){
        field = "-" + field;
      }
      {% endif %}

      document.location = "{{url_params|urlencode}}_order=" + field;
  }

  function handlePjaxAreaListeners() {
      $('.multiselect-select-all').off("click").on("click", onClickSelectAll);
      $('th.header').off("click").on("click", onClickSortHeader);
  }
  $(document).ready(function() {
    handlePjaxAreaListeners();
    document.addEventListener('temba-pjax-complete', handlePjaxAreaListeners, false);
  });


{% endblock %}
