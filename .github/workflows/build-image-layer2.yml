name: build image layer2

on:
  repository_dispatch:
    types: [build_layer2, build_layer1_error]

env:
  REPO_BRANCH: ${{ github.event.client_payload.repo.branch }}
  REPO_TAG: ${{ github.event.client_payload.repo.tag }}
  IMAGE_STAGE: pylibs
  DOCKERFILE2USE: docker/dfstage-pylibs.dockerfile
  FROM_LAYER: ${{ github.event.client_payload.layer1 }}
  FROM_LAYER_TAG: ${{ github.event.client_payload.layer1tag }}

jobs:
  layer1_error:
    if: github.event.client_payload.error_msg != ''
    runs-on: ubuntu-latest
    steps:
      - name: Display Msg
        run: |-
          echo "${{ github.event.client_payload.error_msg }}"
          exit 1
  #endjob layer1_error

  build_cfg:
    if: github.event.client_payload.error_msg == ''
    runs-on: ubuntu-latest
    environment: default
    outputs:
      IMAGE_NAME: ${{ steps.config_step.outputs.IMAGE_NAME }}
      IMAGE_TAG: ${{ steps.config_step.outputs.IMAGE_TAG }}
    steps:
      - uses: actions/checkout@v3

      - name: "Determine Tag To Use"
        id: config_step
        run: |-
          IMAGE_NAME=${{ github.repository_owner }}/p4-engage
          echo "${FROM_LAYER#**:}" > base_tag.txt
          source scm/utils.sh
          IMAGE_TAG_HASH=$(CalcFileArgsMD5 "${DOCKERFILE2USE}" "base_tag.txt" "poetry.lock" "pyproject.toml" "package-lock.json" "package.json")
          IMAGE_TAG="${IMAGE_STAGE}-${IMAGE_TAG_HASH}"
          echo "::notice::Layer2: ${IMAGE_NAME}:${IMAGE_TAG}"
          echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_OUTPUT
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_OUTPUT
  #endjob build_cfg

  check_image_exist:
    needs: [build_cfg]
    uses: ./.github/workflows/util-docker-image-exists.yml
    secrets: inherit
    with:
      name: ${{ needs.build_cfg.outputs.IMAGE_NAME }}
      tag: ${{ needs.build_cfg.outputs.IMAGE_TAG }}
  #endjob check_image_exist

  check_build_image:
    runs-on: ubuntu-latest
    needs: [check_image_exist]
    environment: default
    env:
      BUILD_ERR_MSG: ${{ needs.check_image_exist.outputs.err_msg }}
    outputs:
      BUILD_STAGE: ${{ steps.is_building.outputs.BUILD_STAGE }}
    steps:
      - name: Set BUILD_STAGE output
        id: is_building
        run: |-
          if [[ -n "${BUILD_ERR_MSG}" ]]; then
            echo "${BUILD_ERR_MSG}"
            exit 1
          fi
          if [[ '${{ needs.check_image_exist.outputs.exists }}' == '0' ]]; then
            BUILD_STAGE=1
          else
            BUILD_STAGE=0
          fi
          echo "::notice::Build Stage?=${BUILD_STAGE}"
          echo "BUILD_STAGE=${BUILD_STAGE}" >> $GITHUB_OUTPUT
  #endjob check_build_image

  trigger-build:
    if: needs.check_build_image.outputs.BUILD_STAGE == 1
    runs-on: ubuntu-latest
    needs: [build_cfg, check_build_image]
    environment: default
    steps:
      - name: Trigger Container Build
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.CI_WEBHOOK_TOKEN }}
          repository: istresearch/ci-docker
          event-type: build-repo
          client-payload: |-
            {
              "repo": {
                "name": "${{ github.repository }}",
                "branch": "${{ env.REPO_BRANCH }}",
                "tag": "${{ env.REPO_TAG }}"
              },
              "image": {
                "dockerfile": "${{ env.DOCKERFILE2USE }}",
                "arch_allowed": "amd64 arm64",
                "name": "${{ needs.build_cfg.outputs.IMAGE_NAME }}",
                "tag": "${{ needs.build_cfg.outputs.IMAGE_TAG }}",
                "build_args": [
                  "FROM_STAGE=${{ env.FROM_LAYER }}"
                ]
              },
              "callback": {
                "repository": "${{ github.repository }}",
                "event_type": "build_layer3",
                "error_type": "build_layer2_error",
                "payload": {
                  "repo": {
                    "branch": "${{ env.REPO_BRANCH }}",
                    "tag": "${{ env.REPO_TAG }}"
                  },
                  "layer2tag": "${{ needs.build_cfg.outputs.IMAGE_TAG }}",
                  "layer2": "${{ needs.build_cfg.outputs.IMAGE_NAME }}:${{ needs.build_cfg.outputs.IMAGE_TAG }}"
                }
              }
            }
  #endjob trigger-build

  trigger-next-stage:
    if: needs.build_cfg.outputs.BUILD_STAGE == 0
    runs-on: ubuntu-latest
    needs: [build_cfg, check_build_image]
    environment: default
    steps:
      - name: Trigger Next Stage
        uses: peter-evans/repository-dispatch@v2
        with:
          event-type: build_layer3
          client-payload: |-
            {
              "repo": {
                "branch": "${{ env.REPO_BRANCH }}",
                "tag": "${{ env.REPO_TAG }}"
              },
              "layer2tag": "${{ needs.build_cfg.outputs.IMAGE_TAG }}",
              "layer2": "${{ needs.build_cfg.outputs.IMAGE_NAME }}:${{ needs.build_cfg.outputs.IMAGE_TAG }}"
            }
  #endjob trigger-next-stage
