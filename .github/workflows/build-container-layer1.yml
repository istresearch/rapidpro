name: build-container

on:
  push:
    branches-ignore:
      - main
      - master
    tags:
      - 'v*'

env:
  IMAGE_NAME: ${{ github.repository_owner }}/p4-engage
  IMAGE_STAGE: base
  DOCKERFILE2USE: docker/dfstage-base.dockerfile

jobs:
  build_cfg:
    runs-on: ubuntu-20.04
    environment: default
    outputs:
      REPO_BRANCH: ${{ steps.config_step.outputs.REPO_BRANCH }}
      REPO_TAG: ${{ steps.config_step.outputs.REPO_TAG }}
      IMAGE_TAG: ${{ steps.config_step.outputs.IMAGE_TAG }}
      BUILD_STAGE: ${{ steps.is_building.outputs.BUILD_STAGE }}
    steps:
      - uses: actions/checkout@v3

      - name: "Determine Tag To Use"
        id: config_step
        run: |-
          source scm/utils-engage.sh; IMAGE_TAG_HASH=$(CalcFileArgsMD5 "${DOCKERFILE2USE}")
          IMAGE_TAG="${IMAGE_STAGE}-${IMAGE_TAG_HASH}"
          echo "::notice::IMAGE_TAG=${IMAGE_TAG}"
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_OUTPUT
          
          if [[ ${{ github.ref_type }} == 'tag' ]]; then
            REPO_BRANCH=
            REPO_TAG=${{ github.ref_name }}
          else
            REPO_BRANCH=${{ github.ref_name }}
            REPO_TAG=
          fi
          echo "::notice::Repo Branch=${REPO_BRANCH}"
          echo "REPO_BRANCH=${REPO_BRANCH}" >> $GITHUB_OUTPUT
          echo "::notice::Repo Tag=${REPO_TAG}"
          echo "REPO_TAG=${REPO_TAG}" >> $GITHUB_OUTPUT
  #endjob build_cfg

  check_image_exist:
    runs-on: ubuntu-20.04
    needs: [build_cfg]
    environment: default
    steps:
      - uses: ./.github/workflows/util-docker-image-exists.yml
        with:
          name: ${{ env.IMAGE_NAME }}
          tag: ${{ steps.build_cfg.outputs.IMAGE_TAG }}
  #endjob check_image_exist

  check_build_image:
    runs-on: ubuntu-20.04
    needs: [check_image_exist]
    environment: default
    outputs:
      BUILD_STAGE: ${{ steps.is_building.outputs.BUILD_STAGE }}
    steps:
      - name: Set BUILD_STAGE output
        id: is_building
        run: |-
          if [[ ${{ needs.check_image_exist.outputs.err_msg }} != '' ]]; then
            echo "${{ needs.check_image_exist.outputs.err_msg }}"
            exit 1
          fi
          if [[ ${{ needs.check_image_exist.outputs.exists }} == 0 ]]; then
            BUILD_STAGE=1
          else
            BUILD_STAGE=0
          fi
          echo "::notice::Build Stage?=${BUILD_STAGE}"
          echo "BUILD_STAGE=${BUILD_STAGE}" >> $GITHUB_OUTPUT
  #endjob check_build_image

  trigger-build:
    if: needs.check_build_image.outputs.BUILD_STAGE == 3
    runs-on: ubuntu-20.04
    needs: [check_build_image]
    environment: default
    steps:
      - name: Trigger Container Build and Deploy
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.CI_WEBHOOK_TOKEN }}
          repository: istresearch/ci-docker
          event-type: build-repo
          client-payload: |-
            {
              "repo": "${{ github.repository }}",
              "branch": "${{ needs.build_cfg.outputs.REPO_BRANCH }}",
              "tag": "${{ needs.build_cfg.outputs.REPO_TAG }}",
              "version": "${{ needs.build_cfg.outputs.IMAGE_TAG }}",
              "dockerfile": "${{ env.DOCKERFILE2USE }}",
              "container_name": "${{ github.repository_owner }}/p4-engage"
            }
  #endjob trigger-build

  trigger-next-stage:
    if: needs.build_cfg.outputs.BUILD_STAGE == 0
    runs-on: ubuntu-20.04
    needs: [check_build_image]
    environment: default
    steps:
      - name: Trigger Next Stage
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.CI_WEBHOOK_TOKEN }}
          repository: ${{ github.repository }}
          event-type: build-layer2
          client-payload: |-
            {
              "layer1": "${{ needs.build_cfg.outputs.VERSION_STR }}"
            }
  #endjob trigger-next-stage
