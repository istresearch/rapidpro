name: "Build Generic Brand (5 of 6)"

on:
  repository_dispatch:
    types: [build_layer_generic, build_layer_generic_files_error]

env:
  VERSION_STR: ${{ github.event.client_payload.image.tag }}
  VER_NUM: ${{ github.event.client_payload.image.ver_num }}
  FROM_LAYER: ${{ github.event.client_payload.image.layer }}

jobs:
  build_result:
    name: "Build Generic Files Layer Result [#${{ github.event.client_payload.run_number }}]"
    runs-on: ubuntu-latest
    env:
      RUN_URL: "[Run #${{ github.event.client_payload.run_number }}](${{ github.event.client_payload.run_url }})"
    steps:
      - name: "Display Error Msg"
        if: github.event.client_payload.error_msg != ''
        run: |-
          echo -e "::error::${RUN_URL}%0A${{ github.event.client_payload.error_msg }}"
          exit 1
      - name: "Display Success Msg"
        if: github.event.client_payload.build_msg != ''
        run: |-
          echo -e "::notice::${RUN_URL}%0A${{ github.event.client_payload.build_msg }}"
  #endjob build_result

  build_cfg:
    needs: [build_result]
    runs-on: ubuntu-latest
    environment: default
    outputs:
      DOCKERFILE2USE: ${{ steps.config_step.outputs.DOCKERFILE2USE }}
      IMAGE_NAME: ${{ steps.config_step.outputs.IMAGE_NAME }}
      IMAGE_TAG: ${{ steps.config_step.outputs.IMAGE_TAG }}
      BUILD_FLAG: ${{ steps.config_step.outputs.BUILD_FLAG }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.client_payload.repo.ref_name }}

      - name: "Config For Generic Build"
        id: config_step
        env:
          REF_NAME: "${{ github.event.client_payload.repo.ref_name }}"
        run: |-
          DOCKERFILE2USE="docker/final-generic.dockerfile"
          echo "DOCKERFILE2USE=${DOCKERFILE2USE}" >> $GITHUB_OUTPUT

          IMAGE_NAME=${{ github.repository_owner }}/rapidpro
          IMAGE_TAG=${VERSION_STR}-generic
          echo "::notice::Build: ${IMAGE_NAME}:${IMAGE_TAG}"
          echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_OUTPUT
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_OUTPUT
          
          if [[ "${{ github.event.client_payload.repo.ref_type }}" == "tag" ]]; then
            BUILD_FLAG=1
          elif [[ "${REF_NAME}" == "develop" ]]; then
            BUILD_FLAG=1
          elif [[ "${REF_NAME}" =~ dev[-\/].* ]]; then
            BUILD_FLAG=0
          else
            BUILD_FLAG=0
          fi
          echo "BUILD_FLAG=${BUILD_FLAG}" >> $GITHUB_OUTPUT
  #endjob build_cfg

  trigger-build:
    if: needs.build_cfg.outputs.BUILD_FLAG == 1
    runs-on: ubuntu-latest
    needs: [build_cfg]
    environment: default
    steps:
      - name: "Trigger Container Build"
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.CI_WEBHOOK_TOKEN }}
          repository: istresearch/ci-docker
          event-type: build-repo
          client-payload: |-
            {
              "repo": {
                "name": "${{ github.repository }}",
                "ref_type": "${{ github.event.client_payload.repo.ref_type }}",
                "ref_name": "${{ github.event.client_payload.repo.ref_name }}"
              },
              "image": {
                "dockerfile": "${{ needs.build_cfg.outputs.DOCKERFILE2USE }}",
                "arch_allowed": "amd64 arm64",
                "name": "${{ needs.build_cfg.outputs.IMAGE_NAME }}",
                "tag": "${{ needs.build_cfg.outputs.IMAGE_TAG }}",
                "build_args": [
                  "FROM_STAGE=${{ env.FROM_LAYER }}",
                  "VERSION_CI=${{ env.VER_NUM }}",
                  "VERSION_TAG=${{ needs.build_cfg.outputs.IMAGE_TAG }}"
                ]
              },
              "callback": {
                "repository": "${{ github.repository }}",
                "event_type": "build_nginx",
                "error_type": "build_generic_error",
                "payload": {
                  "repo": {
                    "ref_type": "${{ github.event.client_payload.repo.ref_type }}",
                    "ref_name": "${{ github.event.client_payload.repo.ref_name }}"
                  },
                  "image": {
                    "name": "${{ needs.build_cfg.outputs.IMAGE_NAME }}",
                    "tag": "${{ needs.build_cfg.outputs.IMAGE_TAG }}",
                    "ver_num": "${{ env.VER_NUM }}",
                    "layer": "${{ needs.build_cfg.outputs.IMAGE_NAME }}:${{ needs.build_cfg.outputs.IMAGE_TAG }}"
                  },
                  "deploy": 0
                }
              }
            }
  #endjob trigger-build
