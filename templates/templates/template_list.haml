-extends "smartmin/list.html"
-load smartmin temba
-load i18n humanize

-block title-icon
  %span.title-icon
    .glyph.icon-template{style:"margin-top:35px"}

-block above-bar
  -block top-form
    %form{method:'get'}
      %input.input-medium.search-query{'type':'text', 'placeholder':'{% trans "Search" %}', 'name':"search", 'value':"{{search}}"}

-block content
  #pjax
    -block pjax
      .row-fluid
        .span3.sidebox

          %div{style:"margin-bottom: 10px"}
            -if org_perms.templates.template_create
              %a#create-template.btn.btn-primary.btn-block
                -trans "Create Template"

          #sidebar-nav
            %ul.nav.nav-list
              %li.nav-header
                -trans "Templates"

              %li
                %a{'href':'arst'}
                  Synced
              %li
                %a{'href':'arst'}
                  Synced
              %li
                %a{'href':'arst'}
                  Archived

        -block template-list
          .span9
            - block buttons

              -if org_perms.templates.template_archive
                .list-buttons-container
                  .list-buttons
                    - if 'archive' in actions
                      %span.btn-group
                        %a.template-btn-archive{'href':'#'}
                          %button.btn
                            .glyph.icon-user-delete
                            -trans "Archive"

            -if search
              .search-details
                -blocktrans with results_count=paginator.count|intcomma count cc=paginator.count
                  Found {{ results_count }} template matching <i>{{search}}</i>.
                -plural
                  Found {{ results_count }} templates matching <i>{{search}}</i>.

            .list-container
              %table.list-table.template_list.table.object-list.table.table-condensed{style: '{% if not org_perms.templates.template_create %}margin-top:10px{% endif %}'}
                %tr.templates
                %tbody
                  -for object in object_list
                    %tr.template.select-row.object-row{'class':'{% cycle row1 row2 %}', 'data-uuid': '{{object.uuid}}', 'data-object-id':'{{object.id}}'}

                      -if org_perms.templates.template_create
                        %td.template.checkbox.object-row-checkbox
                          .glyph.icon-checkbox-unchecked.template-checkbox.object-row-checkbox

                      %td.value-text.field_name
                        {{ object.name }}

                      %td.value-text.field_summary
                        {{ object.summary }}

                      %td.value-text.field_status
                        {{ object.status }}

                      %td.value-created.field_created_on
                        %nobr
                          {% short_datetime object.created_on %}

                  -empty
                    %tr
                      %td{colspan:4}
                        -trans "No matching templates"

            -block paginator
              -if object_list.count
                .paginator
                  -include "smartmin/sidebar_pagination.haml"

-block extra-style
  :css
    tr.templates th a span.icon {
      visibility: hidden;
      text-decoration: none;
      font-size: 14px;
      margin-top: -1px;
    }
    tr.templates th a {
      text-decoration: none;
      font-weight:200;
      color: #aaa;
    }
    tr.templates th:hover a span.icon {
      visibility: visible;
      font-size: 14px;
    }
    tr.templates th a span.icon.visible {
      visibility: visible;
    }
    tr.templates th {
      font-size:11px;
      height:10px;
      padding:0;
      padding-top:10px;
      padding-left:14px;
      font-weight:200;
      color: #aaa;
      border:0px solid;
      text-align:center;
      white-space: nowrap;
    }

    td.field {
      text-align:center;
      min-width:125px;
    }

    .span9 .template_list tr.templates {
      border-top: none;
    }

    .span9 .object-list tbody td.value-text {
      min-width: 30px;
    }

    .modal .modal-body .control-group .control-label {
      display:none;
    }

    .search-error {
      color: #da4f49;
    }


-block extra-script
  {{ block.super }}

  :javascript

    $(document).on('click', '.search-query', function() {
      $(this).animate({ width: '600px'}, 200);
    });

    {% if org_perms.templates.template_create %}
    $(document).on('click', '#create-template', function() {
      showCreateTemplateModal();
    })
    {% endif %}

    // keeps track if we are on a link or not
    var onLink = false;

    {% if org_perms.templates.template_create %}
    function showCreateTemplateModal() {
      var modal = new Modax('{% trans "Create Template" %}', '{% url "templates.template_create" %}')
      modal.setIcon('icon-template')
      modal.setListeners({
        onSuccess: function() {
          location.reload();
        }
      })
      modal.show()
    }
    {% endif %}


    {% if org_perms.templates.template_archive %}
      $(".page-content").on('click', ".object-btn-archive", function() {
	    runActionOnObjectRows("archive");
      });
    {% endif %}

    {% if org_perms.templates.template_restore %}
      $(".page-content").on('click', ".object-btn-restore", function() {
	    runActionOnObjectRows("restore");
      });
    {% endif %}
