-extends 'smartmin/form.html'
-load i18n humanize smartmin

-block fields
  .title
    -trans "Schedule"

  .mb-3
    -trans "Select when you would like the message to be sent"

  -include 'includes/schedule_fields.haml' with form=form

-block summary
  -if object.next_fire
    .flex
      .schedule-summary
        -if object.get_broadcast
          -blocktrans trimmed with when=object.next_fire|naturaltime
            The next message will be sent <b>{{ when }}</b>.

        -if object.repeat_period == 'M'
          -blocktrans trimmed with date=object.repeat_day_of_month|ordinal
            It will repeat every <b>month</b> on the {{ date }}.
        -elif object.repeat_period == 'W'
          -trans "It will repeat every"
          {% for day in object.get_repeat_days_display %}<b>{{ day }}</b>{{ forloop|oxford }}{% endfor %}
          -trans "at around the same time."
        -elif object.repeat_period == 'D'
          -trans "It will repeat <d>daily</b> at around the same time."
        -elif object.repeat_period == 'O'
          -trans "It will <b>not repeat</b>."

      .unschedule.ml-8
        .button-light(onclick="unschedule(event)" href="{% url 'schedules.schedule_update' object.id %}?start_datetime=&repeat_period=O")
          -trans "Unschedule"

  -else
    -trans "Not scheduled"

-block form-buttons
  #form-buttons.mt-4
    %input.button-primary{type:'submit', value:'Schedule'}

-block extra-script
  {{ block.super }}
  :javascript
    function unschedule(event) {
      event.stopPropagation();
      event.preventDefault();
      handlePosterize(event.currentTarget);
    }

    function wireRepeatListener() {
      var repeatPeriod = document.querySelector("#id_repeat_period");
      var repeatDays = document.querySelector(".repeat-days-container");
      if (repeatPeriod) {
        repeatPeriod.addEventListener("change", function(event){
          var currentRepeat = event.currentTarget.values[0].value;
          if (currentRepeat === 'W') {
            repeatDays.classList.remove("hidden");
          } else {
            repeatDays.classList.add("hidden");
          }
        });
      } else {
        // we can't use DOMContentLoaded here since we need it 
        // to invoke after formax submission too
        window.setTimeout(function(){wireRepeatListener()}, 300);
      }
    }

    wireRepeatListener();

