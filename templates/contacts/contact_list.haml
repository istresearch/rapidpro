-extends "smartmin/list.html"
-load smartmin sms contacts temba i18n humanize

-block page-title
  -if current_group
    {{current_group.name}}
  -else
    {{title}}

-block page-top

-block title-icon
  %span.title-icon
    .glyph.icon-users

-block extra-style
   {{block.super}}
   :css
    tr.contacts th a span.icon {
      visibility: hidden;
      text-decoration: none;
      font-size: 14px;
      margin-top: -1px;
    }

    tr.contacts th a {
      text-decoration: none;
      font-weight:500;
      color: #717171;
      font-size: 0.75rem;
    }

    tr.contacts th:hover a span.icon {
      visibility: visible;
      font-size: 14px;
    }
    tr.contacts th a span.icon.visible {
      visibility: visible;
    }

    .span9 .contact_list tr.contacts {
      border-top: none;
    }

    .span9 .object-list tbody td.value-text {
      min-width: 30px;
    }

    .modal .modal-body .control-group .control-label {
      display:none;
    }

    .search-error {
      color: #da4f49;
    }

    .pagination-notification {
      background: #ecf0f1;
      padding: 10px;
    }

-block content
  #pjax
    -block pjax
      -if org_perms.contacts.contact_delete
        %temba-dialog#delete-confirmation.hide(header='{{ _("Delete Selected Contacts")|escapejs }}' primaryButtonName='{{ _("Delete")|escapejs }}' destructive='true')
          .p-6
            -trans "Are you sure you want to delete the selected contacts? This cannot be undone."

        %temba-dialog#delete-all-confirmation.hide(header='{{ _("Delete All Contacts")|escapejs }}' primaryButtonName='{{ _("Delete")|escapejs }}' destructive='true')
          .p-6
            -blocktrans trimmed with count=paginator.count
              Are you sure you want to delete all {{ count }} archived contacts? This cannot be undone.

            -if paginator.count > 50
              %br
              %br
              -blocktrans trimmed
                This operation can take a while to complete. Contacts may remain in this view during the process.

      .lp-frame
        .left
          -if org_perms.contacts.contactimport_create
            .button-primary.block(onclick="goto(event)" href="{% url 'contacts.contactimport_create' %}")
              -trans "Import Contacts"

          .lp-nav.upper
            -for group in system_groups
              .lp-nav-item(onclick="goto(event)" href='{{ group.url }}' class="{% if request.path == group.url %}font-normal selected{% endif %}")
                .name.pointer-events-none
                  {{ group.name }}
                .count.pointer-events-none
                  {{ group.count | intcomma }}
          
          .secondary-buttons.mb-6
            -if org_perms.contacts.contact_create
              %temba-modax#create-label-modal(header='{% trans "Create Contact" %}' endpoint="{% url 'contacts.contact_create' %}")
                .button-light.block.mt-3
                  -trans "Create Contact"

            -if org_perms.contacts.contactgroup_create
              %temba-modax#create-group-modal(header='{% trans "Create Group" %}' endpoint="{% url 'contacts.contactgroup_create' %}" -temba-loaded="handleCreateGroupModalLoaded")
                .button-light.block.mt-3
                  -trans "Create Group"

          .lp-nav.upper
            .font-normal.uppercase.text-xs.pb-1.text-gray-500
              -trans "Smart Groups"
            .inner-scroll
              -for group in smart_groups
                .lp-nav-item(onclick="goto(event)" href='{{ group.url }}' class="{% if request.path == group.url %}font-normal selected{% endif %}")
                  .name.pointer-events-none
                    {{ group.name }}
                  .count.pointer-events-none
                    {{ group.count | intcomma }}

          .lp-nav.lower
            .font-normal.uppercase.text-xs.text-gray-500.pb-1
              -trans "Groups"
            .inner-scroll
              -for group in manual_groups
                .lp-nav-item(onclick="goto(event)" href='{{ group.url }}' class="{% if request.path == group.url %}font-normal selected{% endif %}")
                  .name.pointer-events-none
                    {{ group.name }}
                  .count.pointer-events-none
                    {{ group.count | intcomma }}

          .flex-grow
        .right.overflow-x-hidden.p-2.-mt-1
          -if has_contacts
            -block contacts-list
              .flex.w-full.items-end.flex-wrap.justify-end.mb-4
                -block action-buttons
                  -if org_perms.contacts.contact_update
                    .list-buttons-container.h-full.mr-2.flex-grow
                      .list-buttons.flex.items-center.-mx-2.h-full

                        -if 'restore' in actions
                          .button-action(onclick='runActionOnObjectRows("restore")')
                            .-mt-1.mr-2.glyph.icon-checkmark
                            -trans "Activate"

                        -if 'block' in actions
                          .button-action(onclick='runActionOnObjectRows("block")')
                            .-mt-1.mr-2.glyph.icon-user-block
                            -trans "Block"

                        -if 'archive' in actions
                          .button-action(onclick='runActionOnObjectRows("archive")')
                            .-mt-1.mr-2.glyph.icon-box
                            -trans "Archive"

                        -if 'delete' in actions
                          .button-action(onclick='onDeleteClicked()')
                            .-mt-1.mr-2.glyph.icon-user-delete
                            -trans "Delete"

                        -if 'unlabel' in actions
                          .button-action(onclick="unlabelObjectRows({{current_group.pk}});")
                            .-mt-1.mr-2.glyph.icon-user-remove
                            -trans "Remove From Group"

                        -if 'label' in actions
                          .btn-group
                            .button-action.dropdown-toggle(data-toggle="dropdown" data-delay="800")
                              .-mt-1.mr-2.glyph.icon-users-2(style="width:16px")
                              -trans "Groups"

                            %ul.dropdown-menu.label-menu.rounded-lg.border-none.px-4.py-3
                              -for group in manual_groups
                                %li
                                  .lbl-menu(href='#' onclick='addContactToGroup({{ group.id }})' data-id='{{ group.id }}')
                                    .flex.items-center.py-1.hover-linked
                                      .glyph.message-label.label-checkbox
                                      .name.px-2
                                        {{ group.name }}
                              -if org_perms.contacts.contactgroup_create
                                -if manual_groups
                                  %li.separator.-mx-4.border-b.my-3
                                %li
                                  .lbl-menu.add-group.hover-linked(onclick="handleAddGroupClicked()")
                                    -trans "New Group..."

                        -if org_perms.msgs.broadcast_send and not reply_disabled
                          %temba-modax#send-message-modal(header='{{_("Send Message")|escapejs}}' endpoint="{% url 'msgs.broadcast_send' %}")
                            .button-action.no-loading(onclick="handleSendMessageClicked()")
                              .mr-2.glyph.icon-bubble-3(style="font-size:14px")
                              -trans "Send"

                        -if org_perms.flows.flow_broadcast
                          %temba-modax#start-flow(header='{{_("Start Flow")|escapejs}}' endpoint="{% url 'flows.flow_broadcast' %}")
                            .button-action.no-loading(onclick="handleStartFlowClicked()")
                              .mr-2.glyph.icon-flow(style="font-size:14px")
                              -trans "Start Flow"
      

                  .flex-grow.ml-1.self-end.items-end
                    .flex.flex-col.pr-12
                      .page-title.leading-tight
                        -block title
                          -if current_group
                            {{current_group.name}}
                          -else
                            {{title}}
                  -if view.get_gear_links
                    .gear-links
                      -include "gear_links_include.haml"
                .subtitle.ml-1.w-full
                  -block subtitle


              %form#search-form.mb-4(method="get")
                %temba-textinput.w-full(placeholder='{% trans "Search" %}' name="search" value="{{search}}")

              -if search_error
                .mb-4.ml-2
                  %span.search-error
                    =search_error
              -elif search
                .mb-4.ml-1.text-base.leading-relaxed
                  -blocktrans with results_count=paginator.count|intcomma count cc=paginator.count
                    Found {{ results_count }} contact matching <i>{{search}}</i>.
                    -plural
                      Found {{ results_count }} contacts matching <i>{{search}}</i>.

              .shadow.rounded-lg
                -include "contacts/contact_list_include.haml"

              .flex.flex-col(class="{%if not is_spa%}mb-16 mt-3{%endif%}")
                -include "includes/pagination.haml"

                -if paginator.is_es_search and not page_obj.has_next_page and page_obj.number == paginator.num_pages and paginator.count > 10000
                  .text-gray-400.text-sm.self-end.mt-2
                    -trans "To view more than 10,000 search results, save it as a group."
                
          -else
            -include "contacts/empty_include.haml"


-block extra-script
  {{ block.super }}

  -block spa-script
    :javascript

      {% if org_perms.contacts.contact_delete %}
      function onDeleteClicked(){
        var deleteConfirmation = document.querySelector("#delete-confirmation");
        deleteConfirmation.classList.remove("hide");
        deleteConfirmation.open = true;

        deleteConfirmation.addEventListener("temba-button-clicked", function(event){
          if (!event.detail.button.secondary) {
            runActionOnObjectRows("delete");
          }
          deleteConfirmation.open = false;
        });
      }

      function handleDeleteAllContacts() {
        var deleteAllConfirmation = document.querySelector('#delete-all-confirmation');
        deleteAllConfirmation.classList.remove("hide");
        deleteAllConfirmation.open = true;

        deleteAllConfirmation.addEventListener("temba-button-clicked", function(event){
          if (event.detail.button.attributes.destructive){
            jQuery.ajaxSettings.traditional = true;
            fetchPJAXContent(document.location.href, '#pjax', {
                postData: { action: "delete", all: 'true', pjax: 'true' },
                forceReload: true
            });
          }
          deleteAllConfirmation.classList.add("hide");
          deleteAllConfirmation.open = false;
        });
      }
      
      {% endif %}

      function handleRowClicked(event) {

        if (event.target.tagName == "TEMBA-CHECKBOX") {
          return;
        }

        var row = event.target.closest("tr");
        var uuid = row.getAttribute("data-uuid");

        {% if is_spa %}
        fetchURL("/contact/read/" + uuid + "/");
        {% else %}
        gotoLink("/contact/read/" + uuid + "/");
        {% endif %}
      }

      function handleStartFlowClicked() {
        // when we click send, include any clicked messages in our modax request
        var sendEndpoint = "{% url 'flows.flow_broadcast' %}";
        var startModal = document.querySelector("#start-flow");
        var ids = getCheckedUuids();
        if (ids.length > 0) {
          startModal.setAttribute("endpoint", sendEndpoint + '?c=' + ids);
        } else {
          startModal.setAttribute("endpoint", sendEndpoint);
        }
      }

      function handleSendMessageClicked() {
        // when we click send, include any clicked messages in our modax request
        var sendEndpoint = "{% url 'msgs.broadcast_send' %}";
        var sendModal = document.querySelector("#send-message-modal");
        var ids = getCheckedUuids();
        if (ids.length > 0) {
          sendModal.setAttribute("endpoint", sendEndpoint + '?c=' + ids);
        } else {
          sendModal.setAttribute("endpoint", sendEndpoint);
        }
      }

      // keeps track if we are on a link or not
      var onLink = false;

      {% if org_perms.contacts.contact_update %}
      function addContactToGroup(groupId){
        window.lastChecked = getCheckedIds();
        var groupedIds = getLabeledIds(groupId);

        var addGroup = true;

        // find the intersection of contactIds and groupedIds
        var contactIdsWithGroup = intersect(window.lastChecked, groupedIds);

        // they all belong to the group, so we are actually removing these contacts from the group
        if (contactIdsWithGroup.length == window.lastChecked.length){
          addGroup = false;
        }
        jQuery.ajaxSettings.traditional = true;
        fetchPJAXContent(window.lastFetch || document.location.href, "#pjax", { postData: {objects: window.lastChecked, label: groupId, add: addGroup, action: 'label', pjax: 'true'}, forceReload: true, onSuccess: function(){ recheckIds(); wireTableListeners()}});
      }
      {% endif %}

      {% if org_perms.contacts.contact_block %}
        $(".lp-frame").on('click', ".object-btn-unblock", function() {
          runActionOnObjectRows("unblock");
        });
        $(".lp-frame").on('click', ".object-btn-block", function() {
          runActionOnObjectRows("block");
        });
      {% endif %}

      {% if org_perms.contacts.contact_unstop %}
        $(".lp-frame").on('click', ".object-btn-unstop", function() {
          runActionOnObjectRows("unstop");
        });
      {% endif %}

      function handleCreateGroupModalLoaded(event) {
        window.lastChecked = getCheckedIds();
        var body = event.detail.body;
        body.querySelector("#id_preselected_contacts").value = window.lastChecked.join();
      }

      function handleCreateGroupModalSubmitted(event) {
        refresh(function() { recheckIds(); }, true);
      }

      function handleAddGroupClicked() {
        document.getElementById("create-group-modal").open = true;
      }

